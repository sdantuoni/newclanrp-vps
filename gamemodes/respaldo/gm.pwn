/*
				Montevideo RolePlay
				        En proceso de creación.



GAME MODE COMPLETAMENTE CREADO DE CERO POR:

	- Matias capotte
	- Santi y mati (Tester)
	- santi (Webmaster)






							    includes

						YSI			- Y_Less
						ZCMD		- Zeex
						SSCANF		- Y_Less
						STREAMER	- Incognito
						
*/

// ----------> Includes

#include <a_samp>
#include <a_zones>
#include <yom_buttons>
#include <YSI\y_iterate>
#include <YSI\y_va>
#include <zcmd>
#include <sscanf2>
#include <streamer>
#include <a_mysql>
#include <TSConnector>
#include <core>
#include <foreach>
#include <streamer>
#include <mSelection>
#include <dialogs>
#include <dini>


#pragma tabsize 0
#pragma dynamic 99999

#define PRESSED(%0) \
	(((Newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
	
#define RELEASED(%0) \
	(((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

//----------> Mysql

#define MySQL_Servidor "localhost"
#define MySQL_Usuario "root"
#define MySQL_BD "servidor"
#define MySQL_Clave ""

// ----------> Archivos
#define PATX "/eXtremeROL/conocidos/%s.ini"


//facciones
#define				MAX_BARRICADES 				(20)

// ----------> Dialogs
#define DIALOG_REGISTER 20
#define DIALOG_LOGIN    21
#define DIALOG_EMAIL    22
#define DIALOG_KNOW     23
#define DIALOG_HOUSE    24 
#define DIALOG_COMPRA   27
#define DIALOG_RETIRAR  28
#define DIALOG_DEPOSIT  29
#define DIALOG_BANCO    30
#define DIALOG_RETIRAR2 31
#define DIALOG_DEPOSIT2 32
#define DIALOG_AYUNTA   33
#define DIALOG_BIKE     34
#define DIALOG_DUDAS	35
#define DIALOG_EMAIL2   36
#define DIALOG_CONFIRME 37
#define DIALOG_GROTTI	40
#define DIALOG_INTRO    45
#define DIALOG_LOCALIZA 47
#define DIALOG_SEGUROV  48
#define DIALOG_ACCESORIOS	(50)
#define DIALOG_BOL		(55)
#define DIALOG_MP3		(60)
#define DIALOG_TRANSFERIR (65)
#define DIALOG_GPS		(70)

// Estados
#define STATE_NORMAL    (0)
#define STATE_DEAD1     (1)
#define STATE_DEAD2     (2)
#define STATE_PLAYERCAR (3)
#define STATE_BANNED 	(50)

// ----------> Límites
#define MAX_NPC         45
#define MAX_EVENTS      20
#define MAX_TOYS 		(6)
#define MAX_FACTION     (9)


// ----------> Colores
//faccion
#define 			COLOR_FADE 					0xE6E6E6E6
#define 			COLOR_FADE1 				0xE6E6E6E6
#define 			COLOR_FADE2 				0xC8C8C8C8
#define 			COLOR_FADE3 				0xAAAAAAAA
#define 			COLOR_FADE4 				0x8C8C8C8C
#define 			COLOR_FADE5 				0x6E6E6E6E
#define 			COLOR_WHITE 				0xFFFFFFAA
#define 			COLOR_GREY 					0xAFAFAFAA
#define 			COLOR_PURPLE 				0xC2A2DAAA
#define 			TEAM_RADIO_COLOR 			0x9B9BFFFF
#define 			TEAM_HIT_COLOR 				0xFFFFFF00
#define 			TEAM_BLUE_COLOR 			0x8D8DFF00

// ----- COLORES Nuevos ------
#define RED                             "{FF0000}"
#define GREEN                           "{00FF00}"
#define BLUE                            "{0000FF}"
#define YELLOW                          "{FFFF00}"
#define WHITE               "{FFFFFF}"
#define LIGHTBLUE           "{27BCFF}"

#define BLANCO                          0xFFFFFFFF
#define CELESTE                         0x0091FFFF
#define VIOLETA                         0x3200FC77
#define NARANJA                         0xFF6700B2
#define AMARILLO                        0xFFFF00B4
#define VERDE                           0x0DA000FF
#define AZUL                            0x0000FF98
#define FLUOR                           0xA7FF00FF
#define GRIS                            0xA7A9AAFF
#define ROJO                            0xFF0000FF
#define ROSA                            0xBA5390FF
#define PULPURA                         0xC2A2DAAA
#define AZULCLARO                       0x27BCFFFF
#define TEAM_RADIO_COLOR    0x9B9BFFFF
#define TEAM_FACCION_COLOR 0x9B9BFFFF

//administrador
#define ADMIN_MOD      1
#define ADMIN_MODAV    2
#define ADMIN_ADM      3
#define ADMIN_ADMAV    4
#define ADMIN_DIRF     5
#define ADMIN_SUB      6
#define ADMIN_DUEÑO    7

// FACCIONES
#define FACCION_PLC     1
#define FACCION_SAE     2
#define FACCION_MCN     3
#define FACCION_CNN     4
#define FACCION_SIC     5
#define FACCION_SHE     6
#define FACCION_CAM     7

//trabajos
#define MAX_JOBS            3 //"3" Number of jobs

#define JOBLESS             0 //1
#define CAMIONERO           1 //2
#define TAXI                2 //(3)

// ----- Colores Ya tenia -----

#define 			COLOR_GRAD1 				0xB4B5B7FF
#define 			COLOR_GRAD2 				0xBFC0C2FF
/*#define ROJO     			"{FF0000}"
#define VERDE   			"{00FF00}"
#define AZUL    			"{0000FF}"
#define AMARILLO  			"{FFFF00}"
#define BLANCO              "{FFFFFF}"
#define AZULCLARO           "{27BCFF}"
#define GRIS                "{ACACAC}"
#define RED     			"{FF0000}"
#define GREEN   			"{00FF00}"
#define BLUE    			"{0000FF}"
#define YELLOW  			"{FFFF00}"
#define WHITE               "{FFFFFF}"
#define LIGHTBLUE           "{27BCFF}"
*/
// ----------> Otros
#define DeleteChatForPlayer(%0,%1,%2) for(new %2 = 0; %2 != %1; %2++) SendClientMessage(%0, -1, " ")
#define loop(%0,%1,%2) for(new %2 = %0; %2 < %1; %2++)
#define DELAY 100
#define RGBToHex(%0,%1,%2,%3) %0 << 24 | %1 << 16 | %2 << 8 | %3
#define funcion:%0(%1) forward %0(%1); public %0(%1)
//#define GiveBagForPlayer(%0,%1) SetPlayerAttachedObject(%0,9,1310,1,-0.132999,-0.114999,-0.023000,0.000000,90.0,0.000000,0.731000,0.862999,0.889000, %1, 0x00FFFFFF)

// ----------> Bots
#define SHOP_UNITY  0
#define BITCH_BJ    1
#define SHOP_AYUNT  2
#define SHOP_VINE   3
#define BANK_1      4
#define BANK_2      5
#define BANK_3      6
#define BAR_GROOVE  7
#define BINCO       8
#define BURGERSHOT  9
#define BELLS       10
#define DANCER1     11
#define DANCER2     12
#define BARBER      13
#define PIZZASTACK  14
#define PROLAPS     15
#define SUBURBAN    16
#define VICTIM      17
#define ZIP         18

#define INT_NONE    0
#define INT_GROTTI  1
#define INT_BANCO   2
#define INT_CNN     3
#define INT_VIP     4
#define INT_BITCH   5
#define INT_247U    6
#define INT_ALHAM   7
#define INT_247VIN  8
#define INT_247AYU  9
#define INT_BINCO   10
#define INT_ZIP     11
#define INT_PROLAPS 12
#define INT_SUBURBA 13
#define INT_VICTIM  14
#define INT_BURGER  15
#define INT_PIZZA   16
#define INT_PELU    17
#define INT_TATTO   18
#define INT_PELU2   19
#define INT_BELL    20
#define INT_PIGPEN  21
#define INT_BARGR   22
#define INT_GYMLS   23
#define INT_LSPD    24
#define INT_AYUNT   25
#define INT_RING    26

new CreditObject[MAX_PLAYERS],
    Text:CerrarCreditos;



 // variable global
new Barricade[MAX_BARRICADES];
new OnDuty[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new pTazer[MAX_PLAYERS];
new AdminChat[MAX_PLAYERS];
new TuberiasMySQL;

//todo lo relacionado a la texturas o maps
new AyuntamientoNuevo[3],
    PlayaAyuntamientoNueva[2];

//autos de facciones
new VehiclePoliceST,
	VehiclePoliceEND;
//define de policia y otro cmd reales
new BolsilloID[MAX_PLAYERS][13],
    PlayerKnownPlayer[MAX_PLAYERS][MAX_PLAYERS],
    PlayerMuted[MAX_PLAYERS],
    HaveTaser[MAX_PLAYERS],
    Handcuffed[MAX_PLAYERS],
    Duty[MAX_PLAYERS];

//define parte de los sistemas
new VirtualTimers[20][MAX_PLAYERS],
    Tased[MAX_PLAYERS];

enum BolEnum
{
	iprecio,
	iname[24]
}

enum Spikes
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedAt[MAX_ZONE_NAME]
}

new SpikeStrips[10][Spikes];


new Objetos_Bolsillo[][BolEnum] = {
	{0, "Vacío"},
	{15, "Pizza mixta"},//1
	{20, "Pizza barbacoa"},//2
	{10, "Pizza clásica"},//3
	{10, "Pizza vegetariana"},//4
	{15, "Hamburguesa de pollo"},//5
	{10, "Hamburguesa de pescado"},//6
	{10, "Hamburguesa de ternera"},//7
	{25, "Pollo asado"},//8
	{20, "Alitas de pollo"},//9
	{5, "Donut blanco"},//10
	{6, "Donut de chocolate"},//11
	{6, "Rosquilla"},//12
	{10, "Mechero"},//13
	{10, "Cigarillo"},//14
	{15, "Cerveza"},//15
	{10, "Refresco de naranja"},//16
	{5, "Botella de agua"},//17
	{10, "Perrito caliente"},//18
	{10, "Refresco de limón"},//19
	{15, "Refresco de cola"},//20
	{5, "Chicle"},//21
	{50, "Cable iPhone-coche"},//22
	{10, "Ensalada"},//23
	{5, "Café"},//24
	{150, "GPS"}
};

new gOoc[MAX_PLAYERS];


new VehicleAudio[145][MAX_VEHICLES];

enum EntradasEnum
{
	ID,
    Float:EX,
	Float:EY,
    Float:EZ,
    Float:SX,
    Float:SY,
    Float:SZ,
    Float:EAngle,
    Float:SAngle,
	Apertura,
	Cierre,
	Freeze,
	EInteriorID
}

new Entradas[][EntradasEnum] = {
{INT_NONE, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0}, //NONE
{INT_GROTTI, 545.4426,-1318.3784,1996.5759, 542.3840, -1293.5125,17.2422, 350.0, 350.0, 8, 22, 1, 1}, //GROTTI
{INT_BANCO, 1414.798950, -988.716308, 1639.784301, 1153.948120, -1772.674682, 16.599193, 270.0, 0.0, 8, 22, 1, 1}, //BANCO
{INT_CNN, 646.0635,-1356.4440,4002.5896, 648.8630,-1360.6012,13.5863, 270.0, 70.0, 0, 0, 1, 1}, //CNN
{INT_VIP, 852.8785,-1372.0012,1993.0859, 1654.2700,-1654.8944,22.5156, 90.0, 180.0, 0, 0, 1, 1}, //VIP PLACE
{INT_BITCH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 2}, //BITCH
{INT_247U, -25.7535, -187.7502, 1004.1781, 1833.149780, -1842.485717, 13.578125, 0.0, 90.0, 0, 0, 0, 17}, //24/7UNITY
{INT_ALHAM, 490.257934, -23.031440, 993.276672, 1836.4471,-1682.3042,13.3476, 270.0, 90.0, 0, 0, 1, 17}, //ALHAMBRA
{INT_247VIN, 6.0969,-31.7571,1003.5494, 1315.4854,-897.6839,39.5781, 360.0, 180.0, 0, 0, 0, 10}, //24/7VINEWOOD
{INT_247AYU, -27.2896,-31.7540,1003.5573, 1352.3815,-1759.2286,13.5078, 0.0, 0.0, 0, 0, 0, 4}, //24/7AYUNTA
{INT_BINCO, 207.6649,-110.9614,1005.1328, 2244.3567,-1665.5562,15.4766, 360.0, 360.0, 8, 22, 0, 15}, //BINCO
{INT_ZIP, 161.2850,-97.0387,1001.8047, 1456.4344,-1137.6427,23.9484, 0.0, 220.0, 8, 22, 0, 18}, //ZIP
{INT_PROLAPS, 206.9300,-140.3754,1003.5078, 499.5753,-1360.6145,16.3664, 360.0, 360.0, 8, 22, 0, 3}, //PROLAPS
{INT_SUBURBA, 203.7609,-50.6566,1001.8047, 2112.7739,-1211.6287,23.9631, 360.0, 180.0, 8, 22, 0, 1}, //SUBURBAN
{INT_VICTIM, 227.5633,-8.0725,1002.2109, 461.200073, -1500.823608, 31.059551, 106.0, 30.0, 8, 22, 0, 5}, //VICTIM
{INT_BURGER, 362.8626,-75.1578,1001.5078, 810.6630,-1616.1554,13.5469, 300.0, 270.0, 0, 0, 0, 10}, //BURGER
{INT_PIZZA, 372.2221,-133.5210,1001.4922, 2105.4858,-1806.5336,13.5547, 360.0, 90.0, 0, 0, 0, 5}, //PIZZERÍA
{INT_PELU, 411.9010,-54.4360,1001.8984, 2070.6365,-1793.7847,13.5469, 360.0, 260.0, 8, 22, 0, 12}, //PELUQERÍA 1
{INT_TATTO, -204.4305,-9.0783,1002.2734, 2068.5840,-1779.7758,13.5596, 360.0, 280.0, 8, 22, 0, 17}, //TATTO
{INT_PELU2, 411.5989,-23.1412,1001.8047, 823.9835,-1588.2754,13.5545, 360.0, 140.0, 8, 22, 0, 2}, //PELUQUERÍA 2
{INT_BELL, 364.9832,-11.8308,1001.8516, 928.7275,-1352.9547,13.3438, 0.0, 90.0, 0, 0, 0, 9}, //BELL
{INT_PIGPEN, 1204.7631,-13.8169,1000.9219, 2421.3159,-1219.6179,25.5382, 360.0, 180.0, 0, 0, 0, 2}, //PIGPEN
{INT_BARGR, 501.9994,-67.7072,998.7578, 2310.0977,-1643.5522,14.8270, 180.0, 150.0, 0, 0, 0, 11}, //BAR GROOVE
{INT_GYMLS, 772.4008,-5.5150,1000.7287, 2229.8601,-1721.4545,13.5633, 0.0, 125.0, 8, 22, 0, 5}, //GYMLS
{INT_LSPD, 1557.468750, -1676.613159, 1990.540039, 1555.142822, -1675.475341, 16.195312, 260.0, 90.0, 0, 0, 1, 2}, //LSPD
{INT_AYUNT, 390.414337, 174.018325, 1008.382812, 1481.037597, -1771.786376, 18.795755, 90.0, 0.0, 8, 22, 0, 3}, //AYUNTAMIENTO
{INT_RING, 377.000366, -193.303802, 1000.632812, 1038.286010, -1340.728027, 13.741346, 0.0, 0.0, 0, 0, 0, 17} //Jim Ring
};

enum GruaEnum
{
    GOcupado,
	Float:GPositionX,
	Float:GPositionY,
	Float:GPositionZ,
	Float:GAngle
}

new GruasPosition[][GruaEnum] = {
{-1, 2481.8735, -2099.5569, 13.2865, 0.0000},
{-1, 2486.8682, -2099.5376, 13.2865, 0.0000},
{-1, 2491.8735, -2099.5569, 13.2865, 0.0000},
{-1, 2496.8735, -2099.5569, 13.2865, 0.0000},
{-1, 2501.8735, -2099.5569, 13.2865, 0.0000},
{-1, 2506.8735, -2099.5569, 13.2865, 0.0000},
{-1, 2513.3735, -2106.5569, 13.2865, -90.0000},
{-1, 2526.8735, -2106.5569, 13.2865, -90.0000},
{-1, 2513.3735, -2099.0569, 13.2865, -90.0000},
{-1, 2513.3735, -2114.0569, 13.2865, -90.0000},
{-1, 2513.3735, -2121.5569, 13.2865, -90.0000},
{-1, 2513.3735, -2129.0569, 13.2865, -90.0000},
{-1, 2513.3735, -2136.5569, 13.2865, -90.0000},
{-1, 2513.3735, -2103.0569, 13.2865, -90.0000},
{-1, 2513.3735, -2110.5569, 13.2865, -90.0000},
{-1, 2513.3735, -2118.0569, 13.2865, -90.0000},
{-1, 2513.3735, -2125.5569, 13.2865, -90.0000},
{-1, 2513.3735, -2133.0569, 13.2865, -90.0000},
{-1, 2513.3735, -2140.5569, 13.2865, -90.0000},
{-1, 2526.8735, -2103.0569, 13.2865, -90.0000},
{-1, 2526.8735, -2099.0569, 13.2865, -90.0000},
{-1, 2526.8735, -2110.5569, 13.2865, -90.0000},
{-1, 2526.8735, -2114.0569, 13.2865, -90.0000},
{-1, 2526.8735, -2118.0569, 13.2865, -90.0000},
{-1, 2526.8735, -2121.5569, 13.2865, -90.0000},
{-1, 2526.8735, -2125.5569, 13.2865, -90.0000},
{-1, 2526.8735, -2129.0569, 13.2865, -90.0000},
{-1, 2526.8735, -2133.0569, 13.2865, -90.0000},
{-1, 2526.8735, -2136.5569, 13.2865, -90.0000},
{-1, 2526.8735, -2140.5569, 13.2865, -90.0000},
{-1, 2538.5532, -2125.9163, 13.2865, 0.0000},
{-1, 2481.8735, -2081.0569, 13.2865, 180.0000},
{-1, 2481.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2491.8735, -2081.0569, 13.2865, 180.0000},
{-1, 2501.8735, -2081.0569, 13.2865, 180.0000},
{-1, 2511.8735, -2081.0569, 13.2865, 180.0000},
{-1, 2521.8735, -2081.0569, 13.2865, 180.0000},
{-1, 2531.8735, -2081.0569, 13.2865, 180.0000},
{-1, 2486.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2491.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2496.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2501.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2506.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2511.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2516.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2521.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2526.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2531.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2536.8735, -2070.5569, 13.2865, 180.0000},
{-1, 2538.5532, -2133.4163, 13.2865, 0.0000},
{-1, 2538.5532, -2140.9163, 13.2865, 0.0000}
};

new Float:SPRUNKMachines[][] =
{
    {-14.70,1175.36,18.95},
    {201.02,-107.62,0.90},
    {662.43,-552.16,15.71},
    {-76.03,1227.99,19.13},
    {1154.73,-1460.89,15.16},
    {1277.84,372.52,18.95},
    {1398.84,2222.61,10.42},
    {1520.15,1055.27,10.00},
    {1634.11,-2237.53,12.89},
    {1659.46,1722.86,10.22},
    {1729.79,-1943.05,12.95},
    {1789.21,-1369.27,15.16},
    {1928.73,-1772.45,12.95},
    {2060.12,-1897.64,12.93},
    {2085.77,2071.36,10.45},
    {2139.52,-1161.48,23.36},
    {2153.23,-1016.15,62.23},
    {2271.73,-76.46,25.96},
    {2319.99,2532.85,10.22},
    {2325.98,-1645.13,14.21},
    {2352.18,-1357.16,23.77},
    {2480.86,-1959.27,12.96},
    {2503.14,1243.70,10.22},
    {-253.74,2597.95,62.24},
    {-253.74,2599.76,62.24},
    {2647.70,1129.66,10.22},
    {2845.73,1295.05,10.79},
    {-862.83,1536.61,21.98},
    {-1350.12,492.29,10.59},
    {-1350.12,493.86,10.59},
    {-1455.12,2591.66,55.23},
    {-1980.79,142.66,27.07},
    {-2005.65,-490.05,34.73},
    {-2011.14,-398.34,34.73},
    {-2034.46,-490.05,34.73},
    {-2039.85,-398.34,34.73},
    {-2063.27,-490.05,34.73},
    {-2068.56,-398.34,34.73},
    {-2092.09,-490.05,34.73},
    {-2097.27,-398.34,34.73},
    {-2118.62,-422.41,34.73},
    {-2118.97,-423.65,34.73},
    {-2229.19,286.41,34.70},
    {-2420.18,985.95,44.30},
    {-2420.22,984.58,44.30},
    {2155.84,1607.88,1000.06},
    {2155.91,1606.77,1000.05},
    {2202.45,1617.01,1000.06},
    {2209.24,1621.21,1000.06},
    {2209.91,1607.20,1000.05},
    {2222.20,1606.77,1000.05},
    {2222.37,1602.64,1000.06},
    {2225.20,-1153.42,1025.91},
    {-15.10,-140.23,1003.63},
    {-16.12,-91.64,1003.63},
    {-16.53,-140.30,1003.63},
    {-17.55,-91.71,1003.63},
    {-19.04,-57.84,1003.63},
    {-32.45,-186.70,1003.63},
    {-33.88,-186.77,1003.63},
    {330.68,178.50,1020.07},
    {331.92,178.50,1020.07},
    {-35.73,-140.23,1003.63},
    {350.91,206.09,1008.48},
    {-36.15,-57.88,1003.63},
    {361.56,158.62,1008.48},
    {371.59,178.45,1020.07},
    {373.83,-178.14,1000.73},
    {374.89,188.98,1008.48},
    {379.04,-178.88,1000.73},
    {495.97,-24.32,1000.73},
    {500.56,-1.37,1000.73},
    {501.83,-1.43,1000.73},
    {2576.70,-1284.43,1061.09}
};

new VehicleNames[][] =
{
    "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel",
    "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana", "Infernus",
    "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
    "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection",
    "Hunter", "Premier", "Enforcer", "Securicar", "Banshee", "Predator", "Bus",
    "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach", "Cabbie",
    "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral",
    "Squalo", "Seasparrow", "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder",
    "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair", "Berkley's RC Van",
    "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale",
    "Oceanic","Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy",
    "Hermes", "Sabre", "Rustler", "ZR-350", "Walton", "Regina", "Comet", "BMX",
    "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper",
    "Rancher", "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking",
    "Blista Compact", "Police Maverick", "Boxville", "Benson", "Mesa", "RC Goblin",
    "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher", "Super GT",
    "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt",
    "Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra",
    "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune",
    "Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer",
    "Remington", "Slamvan", "Blade", "Freight", "Streak", "Vortex", "Vincent",
    "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder", "Primo",
    "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite",
    "Windsor", "Monster", "Monster", "Uranus", "Jester", "Sultan", "Stratium",
    "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
    "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper",
    "Broadway", "Tornado", "AT-400", "DFT-30", "Huntley", "Stafford", "BF-400",
    "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
    "Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car",
    "Police Car", "Police Car", "Police Ranger", "Picador", "S.W.A.T", "Alpha",
    "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs", "Boxville",
    "Tiller", "Utility Trailer"
};



native IsValidVehicle(vehicleid);
// ---------->  variables
//policia nuevo
new RadioOn[MAX_PLAYERS];
new gRadio[MAX_PLAYERS];

new Jailed[MAX_PLAYERS];

enum PInfo
{
    jailminutes,
    Viajes,
    rango,
    carcel,
    job,
    rank,
    faccion,
	Float:posx,
	Float:posy,
	Float:posz,
	Float:angle,
	Pinteriorid,
	bankt,
	passtext[33],
	email[64],
	Division,
	pass,
	pRequestingBackup,
	pPot, //gramos de droga o material nose que es
	licArma,
	armas[13],
	lider,
	Estado,
	miembro,
	libretaavion,
	Pasaporte,
	Materiales,
	LicArmas,
	libreta,
	Drogas,
	dinero,
	dinerobank,
	sexo,
	edad,
	skin,
	Float:vida,
	Float:chaleco,
	admlvl,
  	phonenumber,
 	Interior,
 	BankA,
 	Work,
 	VBank,
 	VGrotti,
 	V247,
 	VRopa,
 	VComida,
 	DudeChannel,
 	Plevel,
	PlayerVehicle[4],
	PlayerVehicleKey[4],
	PlayerStatus,
	pToy[MAX_TOYS],
    pToyModelID[MAX_TOYS],
    pToyBone[MAX_TOYS],
    Float:pToyX[MAX_TOYS],
    Float:pToyY[MAX_TOYS],
    Float:pToyZ[MAX_TOYS],
    Float:pToyRX[MAX_TOYS],
    Float:pToyRY[MAX_TOYS],
    Float:pToyRZ[MAX_TOYS],
    Float:pToySX[MAX_TOYS],
    Float:pToySY[MAX_TOYS],
    Float:pToySZ[MAX_TOYS]
};
new PlayerInfo[MAX_PLAYERS][PInfo];

new DestroyVehiclesTimer[MAX_VEHICLES];


enum AttachmentEnum
{
    attachmodel,
	attachprice,
    attachname[64]
}

new RP_CASCOS[][AttachmentEnum] = {
{18936, 250, "Casco de guerrero"},
{18937, 250, "Casco de guerrero"},
{18938, 250, "Casco de guerrero"},
{18976, 199, "Casco de motocross"},
{18977, 150, "Casco rojo"},
{18978, 150, "Casco blanco"},
{18979, 150, "Casco morado"},
{18645, 160, "Casco fuego"}
};

new RP_GORRAS[][AttachmentEnum] = {
{18926, 89, "Gorra 1 hacia adelante"},
{18927, 59, "Gorra 2 hacia adelante"},
{18928, 150, "Gorra 3 hacia adelante"},
{18929, 59, "Gorra 4 hacia adelante"},
{18930, 59, "Gorra 5 hacia adelante"},
{18931, 129, "Gorra 6 hacia adelante"},
{18932, 69, "Gorra 7 hacia adelante"},
{18933, 89, "Gorra 8 hacia adelante"},
{18934, 50, "Gorra 9 hacia adelante"},
{18935, 35, "Gorra 10 hacia adelante"},
{18939, 129, "Gorra 11 hacia atras"},
{18940, 100, "Gorra 12 hacia atras"},
{18941, 199, "Gorra 13 hacia atras"},
{18942, 199, "Gorra 14 hacia atras"},
{18943, 199, "Gorra 15 hacia atras"},
{18961, 59, "Gorra 16 hacia adelante"},
{18925, 80, "Boina 1"},
{18924, 80, "Boina 2"},
{18923, 80, "Boina 3"},
{18922, 80, "Boina 4"},
{18921, 80, "Boina 5"},
{18960, 399, "Gorra 17 hacia adelante"}
};

new RP_GORROS[][AttachmentEnum] = {
{18952, 25, "Gorro de nieve"},
{18953, 10, "Gorro de frio 1"},
{18954, 15, "Gorro de frio 2"},
{18964, 20, "Gorro de frio 3"},
{18966, 23, "Gorro de frio 4"},
{18967, 39, "Gorro de lona 1"},
{18968, 39, "Gorro de lona 2"},
{18969, 39, "Gorro de lona 3"},
//{19064, 150, "Gorro de navidad 1"},
//{19065, 150, "Gorro de navidad 2"},
//{19066, 150, "Gorro de navidad 3"},
{19067, 180, "Gorro gangsta"},
{19068, 50, "Gorro especial 1"},
{19069, 50, "Gorro especial 2"}
};

new RP_SOMBREROS[][AttachmentEnum] = {
{18944, 80, "Sombrero 1"},
{18945, 60, "Sombrero 2"},
{18946, 59, "Sombrero 3"},
{18947, 59, "Sombrero 4"},
{18948, 89, "Sombrero 5"},
{18949, 89, "Sombrero 6"},
{18950, 100, "Sombrero 7"},
{18951, 50, "Sombrero 8"},
{18962, 299, "Sombrero 9"},
{18970, 250, "Sombrero 10"},
{18971, 150, "Sombrero 11"},
{18972, 189, "Sombrero 12"},
{18973, 170, "Sombrero 13"}
};

new RP_BANDANAS[][AttachmentEnum] = {
{18911, 80, "Bandana 1"},
{18912, 95, "Bandana 2"},
{18913, 99, "Bandana 3"},
{18914, 199, "Bandana 4"},
{18915, 99, "Bandana 5"},
{18916, 89, "Bandana 6"},
{18917, 150, "Bandana 7"},
{18918, 89, "Bandana 8"},
{18919, 50, "Bandana 9"},
{18920, 89, "Bandana 10"}
};

new RP_GAFAS[][AttachmentEnum] = {
{19006, 99, "Gafas 1"},
{19007, 99, "Gafas 2"},
{19008, 99, "Gafas 3"},
{19009, 99, "Gafas 4"},
{19010, 99, "Gafas 5"},
{19011, 25, "Gafas 6"},
{19012, 99, "Gafas 7"},
{19013, 25, "Gafas 8"},
{19014, 30, "Gafas 9"},
{19015, 99, "Gafas 10"},
{19016, 50, "Gafas 11"},
{19017, 299, "Gafas 12"},
{19018, 299, "Gafas 13"},
{19019, 299, "Gafas 14"},
{19020, 299, "Gafas 15"},
{19021, 299, "Gafas 16"},
{19022, 499, "Gafas 17"},
{19023, 499, "Gafas 18"},
{19024, 499, "Gafas 19"},
{19025, 499, "Gafas 20"}
};

new RP_MASKS[][AttachmentEnum] = {
{19421, 150, "Mascara blanca"},
{19037, 150, "Mascara roja"},
{19038, 150, "Mascara verde"}
};


/* */

static Float:PosX[300][12] = {
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.15, 0.0, 0.02, 0.028, 0.035, 0.037, 0.055, 0.04, 0.06, 0.07, 0.08, 0.1}, //-0.07
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.12, 0.03, 0.05, 0.058, 0.065, 0.067, 0.085, 0.07, 0.09, 0.1, 0.11, 0.13}, //-0.04
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17}
};


static Float: SkinCaps[300][6] = {
{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
{0.136207, 0.006102, -0.013858, 0.612963, 0.000000, 0.000000}, //Skin - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
{0.167425, -0.006185, -0.004779, 0.612963, 0.000000, 0.000000}, //Skin - 3
{0.188546, -0.006185, -0.011507, 0.612963, 0.000000, 0.000000}, //Skin - 4
{0.188546, -0.006185, -0.011507, 0.612963, 0.000000, 0.000000}, //Skin - 5
{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
{0.157787, 0.012994, -0.014590, 0.612963, 0.000000, 0.000000},  //Skin - 7
{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
{0.139572, -0.003642, -0.002145, 0.612963, 0.000000, 10.335063}, //Skin - 12
{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
{0.104552, -0.015122, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 15
{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
{0.149627, 0.002943, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 17
{0.105319, 0.003517, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 18
{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
{0.154598, -0.003549, -0.013304, 0.000000, 0.000000, 0.000000},  //Skin - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
{0.152029, -0.018331, -0.003139, 0.000000, 358.344604, 348.467559}, //Skin - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
{0.155160, -0.022985, -0.011249, 0.000000, 358.344604, 348.467559}, //Skin - 30
{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
{0.094003, -0.022985, -0.011249, 0.000000, 358.344604, 348.467559}, //Skin - 33
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
{0.133873, -0.019703, -0.000058, 0.000000, 358.344604, 348.467559},//Skin - 40
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
{0.164100, -0.040816, -0.011624, 357.030151, 358.344604, 342.811187},//Skin - 50
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
{0.138485, -0.012405, -0.011567, 357.030151, 358.344604, 342.811187},//Skin - 60
{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
{0.110634, 0.009623, -0.011624, 357.030151, 358.344604, 342.811187},//Skin - 64
{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
{0.117674, 0.014567, -0.011567, 357.030151, 358.344604, 342.811187}, //Skin - 73
{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
{0.134968, -0.020112, -0.003604, 357.030151, 358.344604, 342.811187},//Skin - 76
{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
{0.122285, -0.020112, -0.003604, 357.030151, 358.344604, 342.811187},//Skin - 86
{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
{0.144202, -0.021273, -0.005915, 357.030151, 358.344604, 342.811187},//Skin - 120
{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//skin - 129
{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
{0.140332, -0.013011, -0.004432, 354.106964, 357.498840, 352.802062}, //Skin - 273
{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
{0.189940, -0.004297, 0.001481, 354.106964, 357.498840, 352.802062},//Skin - 285
{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705},//Skin - 299
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};

static Float: SkinBackCaps[301][6] = {
{0.152561, 0.009771, -0.003578, 0.000000, 0.000000, 0.000000}, // CapBack1 - capblack 0
{0.154740, -0.000088, -0.007099, 0.000000, 0.000000, 353.034423}, // CapBack1 - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.171257, -0.000811, -0.001653, 356.842010, 357.498840, 350.228424}, // CapBack1 - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.184302, -0.008025, -0.003483, 356.842010, 357.498840, 350.228424}, // CapBack1 - 5
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.171452, 0.020331, -0.009405, 0.000000, 0.000000, 0.328186}, // CapBack1 - 7
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.165115, -0.006727, -0.005117, 0.000000, 0.000000, 350.829223}, // CapBack1 - 9
{0.139765, -0.006727, -0.008035, 0.000000, 0.000000, 350.829223}, // CapBack1 - 10
{0.164338, 0.010682, -0.006304, 0.000000, 0.000000, 1.317132}, // CapBack5 - 11
{0.168692, -0.012686, -0.006304, 0.000000, 0.000000, 2.620430}, // CapBack5 - 12
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.180397, -0.037633, -0.003055, 0.000000, 0.000000, 334.995819}, // CapBack5 - 14
{0.138529, -0.023847, -0.006882, 0.000000, 0.000000, 349.513183}, // CapBack5 - 15
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.165150, 0.008241, -0.002468, 0.000000, 0.000000, 359.865356}, // CapBack5 - 17
{0.125999, -0.006320, -0.007210, 0.000000, 0.000000, 351.895660}, // CapBack5 - 18
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.178122, -0.005292, -0.007210, 0.000000, 0.000000, 357.589874}, // CapBack5 - 20
{0.171341, -0.012229, -0.009898, 0.000000, 0.000000, 351.194061}, // CapBack5 - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.157626, -0.029724, -0.004464, 0.000000, 0.000000, 331.973846}, // CapBack5 - 25
{0.152022, -0.029724, -0.004464, 0.000000, 0.000000, 331.973846}, // CapBack5 - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.180999, -0.032568, -0.011626, 0.000000, 0.000000, 340.068969}, // CapBack5 - 30
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.127392, -0.045833, -0.011626, 0.000000, 0.000000, 332.066528}, // CapBack5 - 39
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.106016, -0.009698, -0.005557, 0.000000, 0.000000, 352.879241}, // CapBack5 - 43
{0.123384, -0.003855, -0.005557, 0.000000, 0.000000, 339.552703}, // CapBack5 - 44
{0.133027, -0.010028, -0.005557, 0.000000, 0.000000, 351.249084}, // CapBack5 - 45
{0.187303, 0.009308, -0.007567, 0.000000, 0.000000, 354.531066}, // CapBack5 - 46
{0.181427, -0.029691, -0.009906, 0.000000, 0.000000, 340.553741}, // CapBack5 - 47
{0.202131, -0.033994, -0.008840, 0.000000, 0.000000, 349.174133}, // CapBack5 - 48
{0.144064, -0.046047, -0.005176, 0.000000, 0.000000, 327.833953}, // CapBack5 - 49
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.156962, -0.014533, -0.005744, 0.000000, 0.000000, 339.649780}, // CapBack5 - 53
{0.170897, 0.032927, -0.004505, 0.000000, 0.000000, 4.658165}, // CapBack5 - 54
{0.170897, 0.000525, -0.008647, 0.000000, 0.000000, 4.658165}, // CapBack5 - 55
{0.170897, 0.000525, -0.008647, 0.000000, 0.000000, 4.658165}, // CapBack5 - 56
{0.204822, 0.013232, -0.007975, 0.000000, 0.000000, 358.332122}, // CapBack5 - 57
{0.137341, 0.002028, -0.007975, 0.000000, 0.000000, 358.332122}, // CapBack5 - 58
{0.186327, 0.028765, -0.006357, 0.000000, 0.000000, 9.349652}, // CapBack5 - 59
{0.167387, -0.014165, -0.010267, 0.000000, 0.000000, 347.202239}, // CapBack5 - 60
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.153622, 0.026057, 0.001912, 0.000000, 0.000000, 1.657262}, // CapBack5 - 62
{0.180733, 0.004340, -0.005340, 0.000000, 0.000000, 0.000000}, // CapBack1 - 63
{0.135751, 0.000370, -0.005340, 0.000000, 0.000000, 351.369049}, // CapBack1 - 64
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.151557, 0.003149, -0.004474, 0.000000, 0.000000, 343.369781}, // CapBack2 - 66
{0.148032, -0.000815, -0.004474, 0.000000, 0.000000, 347.334899}, // CapBack2 - 67
{0.148032, 0.018842, -0.007647, 0.000000, 0.000000, 355.218048}, // CapBack2 - 68
{0.169898, 0.006962, -0.006380, 0.000000, 0.000000, 4.303595}, // CapBack2 - 69
{0.153013, 0.012083, 0.000254, 0.000000, 0.000000, 348.646881}, // CapBack2 - 70
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.150600, 0.005597, -0.006945, 0.000000, 0.000000, 348.646881}, // CapBack2 - 72
{0.151958, 0.007609, -0.007373, 0.000000, 0.000000, 352.321228}, // CapBack2 - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.164638, -0.009942, -0.007373, 0.000000, 0.000000, 347.293334}, // CapBack2 - 75
{0.174797, -0.027673, -0.002500, 0.000000, 0.000000, 347.293334}, // CapBack2 - 76
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.145512, -0.005392, 0.000265, 0.000000, 0.000000, 349.725921}, // CapBack2 - 79
{0.135133, -0.015628, -0.005431, 0.000000, 0.000000, 349.725921}, // CapBack2 - 80
{0.135133, -0.015628, -0.005431, 0.000000, 0.000000, 349.725921}, // CapBack2 - 81
{0.208755, -0.028677, -0.005431, 0.000000, 0.000000, 335.827545}, // CapBack2 - 82
{0.198342, -0.028677, -0.005431, 0.000000, 0.000000, 335.827545}, // CapBack2 - 83
{0.207749, -0.028677, -0.005431, 0.000000, 0.000000, 335.827545}, // CapBack2 - 84
{0.186061, -0.017886, -0.009003, 0.000000, 0.000000, 342.158477}, // CapBack2 - 85
{0.119761, -0.000590, -0.006898, 356.842010, 357.498840, 350.228424}, // CapBack2 - 86
{0.162129, -0.029754, -0.009792, 0.000000, 0.000000, 335.401397}, // CapBack2 - 87
{0.162129, 0.006584, -0.005103, 0.000000, 0.000000, 350.173980}, // CapBack2 - 88
{0.173523, -0.018237, -0.008053, 0.000000, 0.000000, 1.074956}, // CapBack2 - 89
{0.173523, 0.004939, -0.005089, 0.000000, 0.000000, 1.074956}, // CapBack2 - 90
{0.173523, -0.002368, -0.005089, 0.000000, 0.000000, 1.074956}, // CapBack2 - 91
{0.191579, -0.039141, -0.005089, 0.000000, 0.000000, 353.232330}, // CapBack2 - 92
{0.190105, 0.007120, -0.005089, 0.000000, 0.000000, 8.263933}, // CapBack2 - 93
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.140587, -0.020173, -0.002521, 0.000000, 0.000000, 354.900054}, // CapBack2 - 95
{0.166945, -0.018467, -0.006057, 0.000000, 0.000000, 340.769165}, // CapBack2 - 96
{0.149077, -0.028112, -0.006057, 0.000000, 0.000000, 340.769165}, // CapBack2 - 97
{0.169777, -0.007985, -0.006057, 0.000000, 0.000000, 340.769165}, // CapBack2 - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.196824, -0.009257, -0.006057, 0.000000, 0.000000, 356.336090}, // CapBack2 - 100
{0.177550, -0.027981, -0.006057, 0.000000, 0.000000, 343.939056}, // CapBack2 - 101
{0.174734, 0.009933, -0.009756, 0.000000, 0.000000, 3.055547}, // CapBack2 - 102
{0.188160, -0.013580, -0.004421, 0.000000, 0.000000, 356.492431}, // CapBack2 - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.190762, -0.013580, -0.004421, 0.000000, 0.000000, 356.492431}, // CapBack2 - 105
{0.187602, -0.025435, -0.010075, 0.000000, 0.000000, 346.004516}, // CapBack2 - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.175870, -0.003954, -0.007077, 0.000000, 0.000000, 346.004516}, // CapBack2 - 108
{0.172407, -0.013431, -0.010775, 0.000000, 0.000000, 346.004516}, // CapBack2 - 109
{0.172407, -0.013431, -0.010775, 0.000000, 0.000000, 346.004516}, // CapBack2 - 110
{0.150013, 0.003311, -0.006409, 0.000000, 0.000000, 352.270080}, // CapBack2 - 111
{0.141717, -0.009559, -0.006409, 0.000000, 0.000000, 352.270080}, // CapBack2 - 112
{0.185393, -0.023785, -0.004980, 0.000000, 0.000000, 345.606567}, // CapBack2 - 113
{0.185393, -0.000169, -0.010926, 0.000000, 0.000000, 351.197326}, // CapBack2 - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.182650, 0.004789, -0.010926, 0.000000, 0.000000, 357.257171}, // CapBack2 - 116
{0.134004, 0.017698, -0.005831, 0.000000, 0.000000, 357.257171}, // CapBack2 - 117
{0.134004, 0.017698, -0.005831, 0.000000, 0.000000, 357.257171}, // CapBack2 - 118
{0.156197, 0.006800, -0.005671, 351.351135, 357.498840, 350.228424}, // CapBack2 - 119
{0.178981, -0.028772, -0.004536, 0.000000, 0.000000, 346.605316}, // CapBack2 - 120
{0.183907, -0.011432, -0.004536, 0.000000, 0.000000, 355.820770}, // CapBack2 - 121
{0.165320, -0.005021, -0.004536, 0.000000, 0.000000, 355.820770}, // CapBack2 - 122
{0.200145, -0.002194, -0.008751, 0.000000, 0.000000, 358.896423}, // CapBack2 - 123
{0.182011, 0.001444, -0.002327, 0.000000, 0.000000, 357.818420}, // CapBack2 - 124
{0.151200, 0.008420, -0.005776, 0.000000, 0.000000, 357.818420}, // CapBack2 - 125
{0.187609, 0.001857, -0.004008, 0.000000, 0.000000, 7.271462}, // CapBack2 - 126
{0.188872, -0.010934, -0.006273, 0.000000, 0.000000, 354.714599}, // CapBack2 - 127
{0.187277, -0.010814, -0.012647, 0.000000, 0.000000, 342.365417}, // CapBack2 - 128
{0.133478, 0.005174, -0.012647, 0.000000, 0.000000, 358.076538}, // CapBack2 - 129
{0.096691, -0.040395, -0.006268, 0.000000, 0.000000, 328.075073}, // CapBack2 - 130
{0.159023, -0.001297, -0.003358, 0.000000, 0.000000, 354.126007}, // CapBack2 - 131
{0.052064, -0.014930, -0.003462, 0.000000, 0.000000, 345.376892}, // CapBack2 - 132
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.165563, -0.013992, -0.003462, 0.000000, 0.000000, 356.365600}, // CapBack2 - 134
{0.146837, -0.006449, -0.006697, 0.000000, 0.000000, 349.979614}, // CapBack2 - 135
{0.146837, -0.001257, -0.006697, 0.000000, 0.000000, 353.938903}, // CapBack2 - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.179458, 0.018936, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 138
{0.179458, 0.018936, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 139
{0.182565, 0.010967, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 140
{0.182565, 0.009535, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 141
{0.182565, -0.002640, -0.006697, 0.000000, 0.000000, 359.800872}, // CapBack2 - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.228769, -0.002640, -0.011189, 0.000000, 0.000000, 359.800872}, // CapBack2 - 144
{0.171856, 0.000946, -0.001703, 0.000000, 0.000000, 359.800872}, // CapBack2 - 145
{0.154141, -0.004233, -0.008664, 0.000000, 0.000000, 355.798858}, // CapBack2 - 146
{0.149305, -0.024469, 0.000980, 0.000000, 0.000000, 351.391906}, // CapBack2 - 147
{0.176194, -0.021742, -0.003060, 0.000000, 0.000000, 351.391906}, // CapBack2 - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.187446, -0.014221, -0.003060, 0.000000, 0.000000, 2.834435}, // CapBack2 - 150
{0.197199, 0.001229, -0.003060, 0.000000, 0.000000, 2.834435}, // CapBack2 - 151
{0.172892, -0.015298, -0.003060, 0.000000, 0.000000, 2.834435}, // CapBack2 - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.138590, 0.002724, -0.005538, 0.000000, 0.000000, 2.834435}, // CapBack2 - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.219108, -0.037769, -0.001686, 0.000000, 0.000000, 354.529266}, // CapBack2 - 156
{0.155086, 0.003292, 0.001146, 0.000000, 0.000000, 354.529266}, // CapBack2 - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.145796, -0.011042, -0.004201, 0.000000, 0.000000, 354.529266}, // CapBack2 - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.158876, 0.012828, -0.008527, 0.000000, 0.000000, 354.529266}, // CapBack2 - 162
{0.137763, -0.001837, -0.008527, 0.000000, 0.000000, 345.313812}, // CapBack2 - 163
{0.146060, -0.013492, -0.008527, 0.000000, 0.000000, 345.313812}, // CapBack2 - 164
{0.163246, -0.012942, -0.004973, 0.000000, 0.000000, 344.333374}, // CapBack2 - 165
{0.140111, 0.007943, -0.004973, 0.000000, 0.000000, 349.497924}, // CapBack2 - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.141848, 0.007943, -0.010143, 0.000000, 0.000000, 349.497924}, // CapBack2 - 168
{0.165495, 0.006009, -0.005755, 0.000000, 0.000000, 10.909480}, // CapBack2 - 169
{0.172246, 0.002606, -0.011039, 0.000000, 0.000000, 0.820177}, // CapBack2 - 170
{0.179460, -0.000000, -0.006654, 0.000000, 0.000000, 359.487091}, // CapBack2 - 171
{0.179460, -0.000000, -0.006654, 0.000000, 0.000000, 359.487091}, // CapBack2 - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.208994, -0.007943, -0.006654, 0.000000, 0.000000, 345.862579}, // CapBack2 - 174
{0.178250, -0.007943, -0.009599, 0.000000, 0.000000, 345.862579}, // CapBack2 - 175
{0.188804, -0.008412, -0.010471, 0.000000, 0.000000, 357.926025}, // CapBack2 - 176
{0.215245, -0.046786, -0.010471, 0.000000, 0.000000, 333.935485}, // CapBack2 - 177
{0.196470, 0.024980, -0.006861, 0.000000, 0.000000, 9.335173}, // CapBack2 - 178
{0.170804, 0.017931, -0.009900, 0.000000, 0.000000, 9.335173}, // CapBack2 - 179
{0.202440, -0.022104, -0.009900, 0.000000, 0.000000, 350.458648}, // CapBack2 - 180
{0.170491, -0.001973, -0.004454, 0.000000, 0.000000, 350.458648}, // CapBack2 - 181
{0.139138, 0.009438, -0.007567, 0.000000, 0.000000, 350.458648}, // CapBack2 - 182
{0.144261, 0.006484, -0.005938, 0.000000, 0.000000, 350.458648}, // CapBack2 - 183
{0.173439, 0.008749, -0.009442, 0.000000, 0.000000, 4.531515}, // CapBack2 - 184
{0.178510, -0.005743, -0.003814, 0.000000, 0.000000, 354.167968}, // CapBack2 - 185
{0.182519, -0.013562, -0.003814, 0.000000, 0.000000, 354.167968}, // CapBack2 - 186
{0.146338, -0.063390, -0.001417, 0.000000, 0.000000, 331.099212}, // CapBack2 - 187
{0.149057, -0.028143, -0.001417, 0.000000, 0.000000, 331.099212}, // CapBack2 - 188
{0.190356, -0.030107, -0.001417, 0.000000, 0.000000, 343.327667}, // CapBack2 - 189
{0.202054, -0.040251, -0.001417, 0.000000, 0.000000, 343.327667}, // CapBack2 - 190
{0.197020, -0.033725, -0.006150, 0.000000, 0.000000, 343.327667}, // CapBack2 - 191
{0.193556, -0.001809, -0.006150, 0.000000, 0.000000, 355.718383}, // CapBack2 - 192
{0.196684, -0.004270, -0.006150, 0.000000, 0.000000, 355.718383}, // CapBack2 - 193
{0.196684, -0.004270, -0.006150, 0.000000, 0.000000, 355.718383}, // CapBack2 - 194
{0.206905, 0.000445, -0.006150, 0.000000, 0.000000, 7.253017}, // CapBack2 - 195
{0.134116, 0.009748, -0.006150, 0.000000, 0.000000, 1.506720}, // CapBack2 - 196
{0.179956, -0.001632, -0.006150, 0.000000, 0.000000, 1.506720}, // CapBack2 - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.168909, -0.005808, -0.006150, 0.000000, 0.000000, 1.506720}, // CapBack2 - 199
{0.174613, 0.018596, -0.006150, 0.000000, 0.000000, 8.241870}, // CapBack2 - 200
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.186252, 0.025931, -0.006150, 359.226074, 0.000000, 16.592515}, // CapBack2 - 203
{0.163428, 0.002381, -0.010481, 1.199788, 0.000000, 354.398010}, // CapBack2 - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.163428, 0.008872, -0.010481, 1.199788, 0.000000, 354.398010}, // CapBack2 - 206
{0.112955, 0.013557, -0.004934, 1.199788, 0.000000, 354.398010}, // CapBack2 - 207
{0.155579, 0.006800, -0.001140, 351.351135, 357.498840, 350.228424}, // CapBack2 - 208
{0.160963, 0.002805, -0.004934, 1.199788, 0.000000, 359.006042}, // CapBack2 - 209
{0.128493, -0.003984, -0.004934, 1.199788, 0.000000, 359.006042}, // CapBack2 - 210
{0.176982, 0.023702, -0.004934, 1.199788, 0.000000, 14.166459}, // CapBack2 - 211
{0.128467, -0.008255, -0.004934, 1.199788, 0.000000, 343.645538}, // CapBack2 - 212
{0.185985, -0.003673, -0.005680, 1.199788, 0.000000, 358.541107}, // CapBack2 - 213
{0.176328, -0.009473, -0.004319, 1.199788, 0.000000, 358.541107}, // CapBack2 - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.181434, 0.009004, -0.004319, 1.199788, 0.000000, 10.780131}, // CapBack2 - 216
{0.161066, -0.037283, -0.004319, 1.199788, 0.000000, 328.898590}, // CapBack2 - 217
{0.149989, 0.001034, -0.007441, 1.199788, 0.000000, 352.247955}, // CapBack2 - 218
{0.158134, 0.033803, -0.004034, 1.199788, 0.000000, 23.654287}, // CapBack2 - 219
{0.137110, -0.021979, -0.006172, 1.199788, 0.000000, 336.757873}, // CapBack2 - 220
{0.221894, 0.006963, -0.006172, 1.199788, 0.000000, 7.847995}, // CapBack2 - 221
{0.204477, -0.043676, -0.006172, 1.199788, 0.000000, 350.189361}, // CapBack2 - 222
{0.207657, -0.008146, -0.006172, 1.199788, 0.000000, 350.189361}, // CapBack2 - 223
{0.190393, 0.000228, 0.001606, 1.199788, 0.000000, 11.879378}, // CapBack2 - 224
{0.190393, 0.000228, 0.001606, 1.199788, 0.000000, 11.879378}, // CapBack2 - 225
{0.163592, 0.006964, -0.009153, 1.199788, 0.000000, 11.879378}, // CapBack2 - 226
{0.182670, 0.016327, -0.005560, 1.199788, 0.000000, 359.033477}, // CapBack2 - 227
{0.200009, -0.013580, -0.005560, 1.199788, 0.000000, 347.257019}, // CapBack2 - 228
{0.151536, -0.004985, -0.003730, 1.199788, 0.000000, 1.332237}, // CapBack2 - 229
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.162618, 0.025505, -0.006327, 1.199788, 0.000000, 1.332237}, // CapBack2 - 231
{0.162618, -0.021187, -0.006327, 1.199788, 0.000000, 1.332237}, // CapBack2 - 232
{0.184628, 0.009246, -0.006327, 1.199788, 0.000000, 9.318798}, // CapBack2 - 233
{0.138607, -0.007896, -0.002440, 1.199788, 0.000000, 357.667327}, // CapBack2 - 234
{0.102028, -0.007896, -0.002440, 1.199788, 0.000000, 357.667327}, // CapBack2 - 235
{0.141433, 0.001568, -0.007129, 1.199788, 0.000000, 357.667327}, // CapBack2 - 236
{0.171422, 0.003976, -0.007129, 1.199788, 0.000000, 14.896168}, // CapBack2 - 237
{0.162112, -0.033918, -0.009757, 1.199788, 0.000000, 329.660644}, // CapBack2 - 238
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.195676, -0.000346, -0.009059, 1.199788, 0.000000, 359.219635}, // CapBack2 - 240
{0.225913, -0.093273, -0.009059, 1.199788, 0.000000, 338.582885}, // CapBack2 - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.119849, 0.008509, -0.004875, 1.199788, 0.000000, 351.250366}, // CapBack2 - 243
{0.142359, -0.007982, -0.002139, 1.199788, 0.000000, 338.201110}, // CapBack2 - 244
{0.213636, 0.020328, -0.002139, 1.199788, 0.000000, 9.539301}, // CapBack2 - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.191313, -0.025602, -0.008449, 1.199788, 0.000000, 345.625457}, // CapBack2 - 247
{0.218937, -0.025602, -0.008449, 1.199788, 0.000000, 345.625457}, // CapBack2 - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.171738, -0.008147, -0.009720, 1.199788, 0.000000, 351.946502}, // CapBack2 - 250
{0.171738, -0.008147, -0.004024, 1.199788, 0.000000, 351.946502}, // CapBack2 - 251
{0.191814, -0.018688, -0.001956, 1.199788, 0.000000, 351.946502}, // CapBack2 - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.191814, -0.018688, -0.001956, 1.199788, 0.000000, 349.399566}, // CapBack2 - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.172645, -0.018688, -0.001956, 1.199788, 0.000000, 349.399566}, // CapBack2 - 256
{0.164325, -0.017981, -0.006244, 1.199788, 0.000000, 339.549896}, // CapBack2 - 257
{0.182589, -0.038286, -0.006244, 1.199788, 0.000000, 339.549896}, // CapBack2 - 258
{0.185917, -0.047972, -0.006244, 1.199788, 0.000000, 339.549896}, // CapBack2 - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.128629, 0.020902, -0.006244, 1.199788, 0.000000, 358.125885}, // CapBack2 - 262
{0.179700, 0.011040, 0.000088, 1.199788, 0.000000, 12.603851}, // CapBack2 - 263
{0.216605, -0.099891, 0.000088, 1.199788, 0.000000, 342.666625}, // CapBack2 - 264
{0.147310, -0.000934, -0.005484, 1.199788, 0.000000, 357.229003}, // CapBack2 - 265
{0.158313, -0.000955, -0.006872, 1.199788, 0.000000, 357.229003}, // CapBack2 - 266
{0.166343, -0.003141, -0.006872, 1.199788, 0.000000, 2.876371}, // CapBack2 - 267
{0.171693, -0.050949, -0.009712, 1.199788, 0.000000, 340.129333}, // CapBack2 - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.178678, -0.035822, -0.005613, 1.199788, 0.000000, 334.835510}, // CapBack2 - 272
{0.134644, -0.001463, -0.003339, 351.351135, 357.498840, 350.228424}, // CapBack 2 - 273
{0.143802, -0.005543, -0.005613, 1.199788, 0.000000, 342.616333}, // CapBack2 - 274
{0.143802, -0.002142, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 275
{0.143802, -0.002142, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.154324, 0.004585, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 280
{0.141513, -0.001361, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 281
{0.178879, -0.032552, -0.007550, 1.199788, 0.000000, 339.513275}, // CapBack2 - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.148372, 0.012662, -0.003643, 1.199788, 0.000000, 352.562530}, // CapBack2 - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.169198, -0.008094, -0.004952, 1.199788, 0.000000, 355.882568}, // CapBack2 - 290
{0.197062, -0.010244, -0.008868, 1.199788, 0.000000, 347.195098}, // CapBack2 - 291
{0.129213, -0.005561, -0.008868, 1.199788, 0.000000, 347.195098}, // CapBack2 - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.184856, -0.017724, -0.004568, 1.199788, 0.000000, 340.720977}, // CapBack2 - 294
{0.164693, -0.035874, -0.004568, 1.199788, 0.000000, 338.932373}, // CapBack2 - 295
{0.162584, -0.071738, -0.009352, 1.199788, 0.000000, 324.114501}, // CapBack2 - 296
{0.201801, 0.013063, -0.004067, 1.199788, 0.000000, 11.497174}, // CapBack2 - 297
{0.170668, 0.000798, -0.008211, 1.199788, 0.000000, 0.166477}, // CapBack2 - 298
{0.189388, -0.034348, -0.008211, 1.199788, 0.000000, 338.146575}, // CapBack2 - 299
{0.189388, -0.034348, -0.008211, 1.199788, 0.000000, 338.146575} // CapBack2 - 299
};

new Float:SkinOffSet[301][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968, 1.000000}, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968, 1.000000}, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968, 1.000000}, // - 2
{0.099500, 0.047703, 0.000558, 280.687683, 90.938697, 169.126358, 1.000000}, // - 3
{0.126660, 0.017465, -0.004450, 281.516479, 103.193008, 168.312896, 1.167009}, // - 4
{0.109650, 0.017465, -0.004712, 281.516479, 106.686439, 168.312896, 1.167009}, // - 5
{0.101269, 0.028933, 0.000001, 281.516479, 91.839576, 168.312896, 1.000000}, // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968, 1.000000}, // - 7
{0.087873, 0.038192, -0.003603, 281.516479, 91.839576, 168.312896, 1.020467}, // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968, 1.000000},  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968, 1.000000}, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968, 1.000000}, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968, 1.000000},  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968, 1.000000}, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968, 1.000000}, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968, 1.000000}, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968, 1.000000}, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968, 1.000000}, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968, 1.000000}, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968, 1.000000}, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968, 1.000000}, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968, 1.000000}, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968, 1.000000}, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968, 1.000000}, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968, 1.000000}, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968, 1.000000},  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968, 1.000000}, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968, 1.000000}, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968, 1.000000},// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968, 1.000000}, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968, 1.000000}, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968, 1.000000}, // - 41
{0.087873, 0.037386, -0.003603, 281.516479, 91.839576, 168.312896, 1.093392}, // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968, 1.000000}, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968, 1.000000}, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968, 1.000000}, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968, 1.000000}, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968, 1.000000}, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968, 1.000000}, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968, 1.000000}, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968, 1.000000}, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968, 1.000000}, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968, 1.000000}, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968, 1.000000}, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968, 1.000000}, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968, 1.000000}, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000, 1.000000}, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000, 1.000000},  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000, 1.000000}, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000, 1.000000}, // - 64
{0.087873, 0.032505, -0.003603, 281.516479, 91.839576, 168.312896, 0.965358}, // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000, 1.000000},  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000, 1.000000},  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000, 1.000000}, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000, 1.000000}, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000, 1.000000},  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000, 1.000000},  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000, 1.000000},  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000, 1.000000}, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000, 1.000000}, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 85
{0.025608, -0.003408, 281.516479, 106.686721, 167.551193, 0.965358}, // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000, 1.000000}, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000, 1.000000}, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000, 1.000000}, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000, 1.000000}, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000, 1.000000}, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000, 1.000000}, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000, 1.000000}, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000, 1.000000}, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000, 1.000000}, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000, 1.000000}, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000, 1.000000},  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000, 1.000000}, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000, 1.000000}, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000, 1.000000}, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000, 1.000000}, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000, 1.000000}, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000, 1.000000}, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000, 1.000000}, // - 118
{0.093011, 0.037032, -0.001987, 281.516479, 94.968688, 167.551193, 1.051324}, // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000, 1.000000}, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000, 1.000000}, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000, 1.000000}, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000, 1.000000}, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000, 1.000000},  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000, 1.000000},  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000, 1.000000},  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000, 1.000000}, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000, 1.000000}, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000, 1.000000}, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000, 1.000000}, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000, 1.000000}, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000, 1.000000}, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000, 1.000000}, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000, 1.000000}, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000, 1.000000}, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000, 1.000000}, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000, 1.000000}, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000, 1.000000}, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000, 1.000000}, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000, 1.000000}, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000, 1.000000},  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000, 1.000000}, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000, 1.000000},  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000, 1.000000}, // - 148
{0.099901, 0.011976, 0.001273, 281.516479, 97.607620, 167.551193, 1.190787}, // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000, 1.000000}, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000, 1.000000}, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000, 1.000000}, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000, 1.000000},  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000, 1.000000}, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000, 1.000000}, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000, 1.000000}, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000, 1.000000}, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000, 1.000000}, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000, 1.000000}, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000, 1.000000},  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000, 1.000000}, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000, 1.000000}, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000, 1.000000}, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000, 1.000000},  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000, 1.000000},  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000, 1.000000},  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000, 1.000000}, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000, 1.000000}, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000, 1.000000}, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000, 1.000000}, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000, 1.000000}, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000, 1.000000}, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000, 1.000000}, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000, 1.000000}, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000, 1.000000}, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000, 1.000000}, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000, 1.000000}, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000, 1.000000}, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000, 1.000000}, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000, 1.000000}, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000, 1.000000}, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000, 1.000000}, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000, 1.000000},  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000, 1.000000},  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000, 1.000000}, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000, 1.000000}, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000, 1.000000}, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000, 1.000000}, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000, 1.000000}, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000, 1.000000}, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000, 1.000000}, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000, 1.000000}, // - 207
{0.088610, 0.043561, 0.001273, 281.516479, 89.674781, 167.551193, 1.000000}, // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000, 1.000000}, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000, 1.000000}, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000, 1.000000}, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000, 1.000000},  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000, 1.000000}, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000, 1.000000}, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000, 1.000000}, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000, 1.000000},  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000, 1.000000}, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000, 1.000000}, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000, 1.000000}, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000, 1.000000}, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000, 1.000000}, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000, 1.000000}, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000, 1.000000}, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000, 1.000000}, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000, 1.000000}, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000, 1.000000}, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000, 1.000000}, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000, 1.000000},  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000, 1.000000}, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000, 1.000000},  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000, 1.000000}, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000, 1.000000},  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000, 1.000000}, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000, 1.000000},  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000, 1.000000}, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000, 1.000000}, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000, 1.000000},  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000, 1.000000}, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000, 1.000000}, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000, 1.000000},  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000, 1.000000},  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000, 1.000000}, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000, 1.000000}, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000, 1.000000}, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000, 1.000000},  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000, 1.000000},  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000, 1.000000},  // - 272
{0.080779, 0.028227, -0.001415, 281.516479, 91.776855, 167.551193, 1.061396}, // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000, 1.000000},  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000, 1.000000},  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000, 1.000000}, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000, 1.000000},  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000, 1.000000}, // - 288
{0.081684, 0.015000, 0.001780, 281.516479, 108.106758, 169.790878, 1.042815}, // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000, 1.000000}, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000, 1.000000}, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000, 1.000000}, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000, 1.000000}, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000, 1.000000},  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000, 1.000000}, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000, 1.000000}, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000, 1.000000},  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000, 1.000000}, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000, 1.000000},  // - 299
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000, 1.000000}  // - 299
};


/* */


enum VInfo
{
	VD[24],
	VKEY,
	Float:vposx,
	Float:vposy,
	Float:vposz,
	Float:vangle,
	vmodelid,
	vcolor1,
	vcolor2,
	vpaintjob,
	mod1,
	mod2,
	mod3,
	mod4,
	mod5,
	mod6,
	mod7,
	mod8,
	mod9,
	mod10,
	mod11,
	mod12,
	mod13,
	mod14,
	mod15,
	mod16,
	mod17,
	slot,
	VSTATUS,
	Float:VehicleHealth,
	VPanels,
	VDoors,
	VLights,
	VTires
};
new VehicleInfo[MAX_VEHICLES][VInfo];
new spoiler[20][0] = {
	{1000},
	{1001},
	{1002},
	{1003},
	{1014},
	{1015},
	{1016},
	{1023},
	{1058},
	{1060},
	{1049},
	{1050},
	{1138},
	{1139},
	{1146},
	{1147},
	{1158},
	{1162},
	{1163},
	{1164}
};

new nitro[3][0] = {
    {1008},
    {1009},
    {1010}
};

new fbumper[23][0] = {
    {1117},
    {1152},
    {1153},
    {1155},
    {1157},
    {1160},
    {1165},
    {1167},
    {1169},
    {1170},
    {1171},
    {1172},
    {1173},
    {1174},
    {1175},
    {1179},
    {1181},
    {1182},
    {1185},
    {1188},
    {1189},
    {1192},
    {1193}
};

new rbumper[22][0] = {
    {1140},
    {1141},
    {1148},
    {1149},
    {1150},
    {1151},
    {1154},
    {1156},
    {1159},
    {1161},
    {1166},
    {1168},
    {1176},
    {1177},
    {1178},
    {1180},
    {1183},
    {1184},
    {1186},
    {1187},
    {1190},
    {1191}
};

new exhaust[28][0] = {
    {1018},
    {1019},
    {1020},
    {1021},
    {1022},
    {1028},
    {1029},
    {1037},
    {1043},
    {1044},
    {1045},
    {1046},
    {1059},
    {1064},
    {1065},
    {1066},
    {1089},
    {1092},
    {1104},
    {1105},
    {1113},
    {1114},
    {1126},
    {1127},
    {1129},
    {1132},
    {1135},
    {1136}
};

new bventr[2][0] = {
    {1142},
    {1144}
};

new bventl[2][0] = {
    {1143},
    {1145}
};

new bscoop[4][0] = {
	{1004},
	{1005},
	{1011},
	{1012}
};

new rscoop[17][0] = {
    {1006},
    {1032},
    {1033},
    {1035},
    {1038},
    {1053},
    {1054},
    {1055},
    {1061},
    {1067},
    {1068},
    {1088},
    {1091},
    {1103},
    {1128},
    {1130},
    {1131}
};

new lskirt[21][0] = {
    {1007},
    {1026},
    {1031},
    {1036},
    {1039},
    {1042},
    {1047},
    {1048},
    {1056},
    {1057},
    {1069},
    {1070},
    {1090},
    {1093},
    {1106},
    {1108},
    {1118},
    {1119},
    {1133},
    {1122},
    {1134}
};

new rskirt[21][0] = {
    {1017},
    {1027},
    {1030},
    {1040},
    {1041},
    {1051},
    {1052},
    {1062},
    {1063},
    {1071},
    {1072},
    {1094},
    {1095},
    {1099},
    {1101},
    {1102},
    {1107},
    {1120},
    {1121},
    {1124},
    {1137}
};

new hydraulics[1][0] = {
    {1087}
};

new vbase[1][0] = {
    {1086}
};

new rbbars[4][0] = {
    {1109},
    {1110},
    {1123},
    {1125}
};

new fbbars[2][0] = {
    {1115},
    {1116}
};

new wheels[17][0] = {
    {1025},
    {1073},
    {1074},
    {1075},
    {1076},
    {1077},
    {1078},
    {1079},
    {1080},
    {1081},
    {1082},
    {1083},
    {1084},
    {1085},
    {1096},
    {1097},
    {1098}
};

new lights[2][0] = {
	{1013},
	{1024}
};



/* iPhone S */

new Text:TD_iPhone[26];
new Text:TD_iPhone_Clock[2];
new Text:TD_iPhone_Gallery;
new Text:TD_iPhone_Time[3];
new PlayerText:PTD_iPhone_Gallery[MAX_PLAYERS];
new PlayerText:PTD_iPhone[37][MAX_PLAYERS];
new Text:TD_iPhone_GPS;
new PlayerText:PTD_iPhone_GPS[MAX_PLAYERS];
new Text:TD_iPhone_Radio[2];
new Text:TD_iPhone_Music[2];
new Text:TD_iPhone_Map;
new Text:TD_iPhone_Internet[2];
new Text:TD_iPhone_Call[13];
new PlayerText:PTD_iPhone_Call[MAX_PLAYERS];
new Text:TD_iPhone_CallYesNo[2];
new PlayerText:PTD_iPhone_Info[MAX_PLAYERS][2];
new called[MAX_PLAYERS][11];
new callto[MAX_PLAYERS];
new iPhone_CC[4][MAX_PLAYERS];
new iPhoneStatus[MAX_PLAYERS];
new iPhoneCallStatus[MAX_PLAYERS];
new MenuX[MAX_PLAYERS];
new MenuY[MAX_PLAYERS];

new Gallery[][] =
{
        "loadsc1:loadsc1",
        "loadsc2:loadsc2",
        "loadsc3:loadsc3",
        "loadsc4:loadsc4",
        "loadsc5:loadsc5",
        "loadsc6:loadsc6",
        "loadsc7:loadsc7",
        "loadsc8:loadsc8",
        "loadsc9:loadsc9",
        "loadsc10:loadsc10",
        "loadsc11:loadsc11",
        "loadsc12:loadsc12",
        "loadsc13:loadsc13",
        "loadsc14:loadsc14"

};

new Radio[][] =
{
        "http://somafm.com/tags.pls",
		"http://bbc.co.uk/radio/listen/live/r1.asx",
		"http://www.listenlive.eu/cadenacope.m3u",
		"http://onair-ha1.krone.at/kronehit-dance.mp3.m3u",
		"http://www.m2radio.fr/pls/m2club.m3u",
		"http://mp3.kataweb.it:8000/M2O.m3u",
		"http://www.listenlive.eu/vrtklara-low.m3u",
		"http://icecast4.play.cz/evropa2-64.mp3.m3u",
		"http://broadcast.infomaniak.net/nrj-low.mp3.m3u"

};

new Music[][] =
{
        "https://dl.dropboxusercontent.com/s/nqxrnokp4zspsw5/Basto%20-%20Again%20and%20Again%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/ln10micl32ys6yj/Blasterjaxx%20%26amp%3B%20Badd%20Dimes%20-%20Titan%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/pj21s5kz5ad5k3d/DVBBS%20%26amp%3B%20Tony%20Junior%20-%20Immortal%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/g1iuqoot6z7qfn7/Martin%20Garrix%20-%20Proxy%20%28FREE%20DOWNLOAD%29.mp3",
		"https://dl.dropboxusercontent.com/s/68htnt08uzgceqr/Martin%20Garrix%20-%20Animals%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/nvzyebx9ydow2ow/Starkillers%20%26%20DJ%20BL3ND%20-%20Xception%20%28Official%20Music%20Video%29.mp3",
		"https://dl.dropboxusercontent.com/s/0iof8iei1qxdc4f/Starkillers%20%26amp%3B%20Inpetto%20-%20Game%20Over%20%28Original%20Mix%29.mp3"

};

enum zoneinfo
{
	zone_name[32],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

new zones[][zoneinfo] = {
	{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{ "Tierra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{ "Tierra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{ "Red County",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{ "Flint County",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}
};

/* iPhone S */



new ClotheMaleBinco[][] =
{
	{0, 0},
	{2, 85},
	{3, 60},
	{4, 50},
	{5, 50},
    {7, 75},
    {15, 60},
    {20, 130},
    {21, 100},
    {22, 75},
    {23, 75},
    {26, 65},
    {29, 150},
    {28, 60},
    {30, 100},
    {35, 60},
    {36, 65},
    {44, 45},
    {45, 25},
    {47, 90},
    {48, 95},
    {51, 100},
    {52, 100},
    {59, 220},
    {60, 95},
    {66, 85},
    {67, 90},
    {72, 80},
    {73, 75},
    {78, 15},
    {79, 15},
    {95, 50},
    {96, 60},
    {100, 160},
    {101, 79},
    {119, 80},
    {121, 90},
    {127, 40},
    {135, 20},
    {154, 25},
    {142, 50},
    {161, 55},
    {181, 80},
    {184, 60},
    {185, 80},
    {188, 90},
    {202, 100},
    {206, 100},
    {241, 80},
    {242, 80},
    {250, 100},
    {258, 80},
    {259, 80},
    {261, 75},
    {299, 80}
};

new ClotheMaleZip[][] =
{
	{0, 0},
	{3, 125},
	{17, 150},
	{46, 200},
	{61, 230},
	{82, 299},
	{83, 299},
	{84, 299},
	{98, 150},
	{113, 500},
	{124, 150},
	{147, 350},
	{170, 120},
	{171, 350},
	{187, 200},
	{189, 399},
	{223, 150},
	{227, 299},
	{228, 299},
	{240, 499},
	{249, 699},
	{255, 399}
};

new ClotheFemaleBinco[][] =
{
	{0, 0},
	{10, 55},
	{13, 75},
	{31, 70},
	{39, 60},
	{41, 80},
	{53, 80},
	{54, 65},
	{56, 85},
	{65, 70},
	{69, 75},
	{75, 65},
	{77, 25},
	{85, 150},
	{88, 75},
	{89, 65},
	{90, 85},
	{93, 105},
	{129, 65},
	{130, 65},
	{131, 80},
	{138, 80},
	{139, 80},
	{140, 85},
	{190, 100},
	{191, 100},
	{193, 190},
	{195, 70},
	{196, 65},
	{197, 65},
	{198, 85},
	{201, 85},
	{218, 60},
	{226, 95},
	{231, 80},
	{232, 65},
	{233, 155},
	{298, 95}
};

new ClotheFemaleZip[][] =
{
	{0, 0},
	{11, 370},
	{12, 450},
	{40, 350},
	{55, 350},
	{76, 395},
	{91, 450},
	{141, 310},
	{150, 450},
	{169, 450},
	{172, 305},
	{192, 250},
	{194, 199},
	{214, 599},
	{215, 350},
	{216, 450},
	{219, 499}
};

new Float:VehicleGrottiSpawns[][] =
{
    {1745.5151, -2066.0608, -35.7212, -90.0},
    {1762.0151, -2066.0608, -35.7212, -90.0},
    {1729.0151, -2066.0608, -35.7212, -90.0},
    {1778.5151, -2066.0608, -35.7212, -90.0}
};

new Float:VehicleGruaExt[][] =
{
	{2446.8472, -2108.5610, 13.2865, 180.0000},
	{2442.3472, -2108.5610, 13.2865, 180.0000},
	{2437.3472, -2108.5610, 13.2865, 180.0000},
	{2429.1863, -2118.9634, 13.2865, -90.0000},
	{2429.1863, -2122.4634, 13.2865, -90.0000},
	{2429.1863, -2126.4634, 13.2865, -90.0000},
	{2429.1863, -2130.9634, 13.2865, -90.0000},
	{2437.3472, -2140.0610, 13.2865, 0.0000},
	{2442.3472, -2140.0610, 13.2865, 0.0000},
	{2446.8472, -2140.0610, 13.2865, 0.0000}
};

new 
    DB:Database,
	Text:TD_NN,
	PlayerText:TD_IO[MAX_PLAYERS],
	Text:TD_EY[3],
	Text:TD_BX[2],
	Dude_Object[3],
	ServerTime = 12,
	ServerMinute = 0,
	PlayerText:Background[MAX_PLAYERS],
	PlayerText:Conceptos[7][MAX_PLAYERS],
	ChatLogDisabled[MAX_PLAYERS],
	PlayerText:ErrorCommand[MAX_PLAYERS],
	NPCS[MAX_NPC],
	NPC_USED[MAX_NPC],
	PlayerEvent[MAX_PLAYERS][MAX_EVENTS],
    Text:CircularMenu[24],
    Text:UserBox[4],
    PlayerText:PlayerUserBox[MAX_PLAYERS][2],
	Text:Bank[20],
	PlayerText:PlayerBank[MAX_PLAYERS][2],
	PlayerText:BankCash[MAX_PLAYERS],
	PlayerText:CosasPorHacer[MAX_PLAYERS][4],
	LSPD_Doors[4],
	P_newuser[MAX_PLAYERS]=-1,
	P_bank_state[MAX_PLAYERS]=-1,
	P_circularmenu_active[MAX_PLAYERS]=-1,
	P_player_tutorial[MAX_PLAYERS]=-1,
	P_conocerid[MAX_PLAYERS]=-1,
	P_register_step[MAX_PLAYERS]=-1,
	P_catalogogrotti[MAX_PLAYERS]=-1,
	P_catalogobinco[MAX_PLAYERS]=-1,
	P_catalogozip[MAX_PLAYERS]=-1,
	P_modshop[MAX_PLAYERS]=-1,
	P_transid[MAX_PLAYERS]=-1,
	P_tienda[MAX_PLAYERS]=-1,
	LSPD_OBJECT[27],
	VVehicleGrotti[2],
	VVehicleBike[2],
	AyuntNoBug,
	CarWash[5],
	CarWashUsed,
	CarWashUsedBy[MAX_PLAYERS],
	DudeTime[MAX_PLAYERS],
	DudeMsg[MAX_PLAYERS],
	Area_CarWash,
	Area_Gruas,
	Text:DeadTD[8],
	Text:WelcomeTD[4],
	Text:TD_ST[10],
	PlayerText:PTD_ST[MAX_PLAYERS][2],
	Text:TD_PLAYERDATA[6],
	PlayerText:PTD_PD[MAX_PLAYERS],
	Alhambra,
	Alhambra_Bar,
	Menu:AlhambraMenu,
	Menu:PigPenMenu,
	Menu:BincoMenu,
	Menu:ZipMenu,
	Menu:PizzaStackedMenu,
	Menu:PizzaMenu,
	Menu:BebidasMenu,
	Menu:DonutMenu,
	Menu:ChickBellMenu,
	Menu:ChickMenu,
	Menu:BurgerShotMenu,
	Menu:BurgerMenu,
	Menu:HotdogMenu,
	Menu:ShopMenuN,
	Menu:TabacoMenu,
	Alhambra_Pick,
	Conce_Pick1,
	Conce_Pick2,
	Binco_Pick,
	Victim_Pick1,
	Victim_Pick2,
	Zip_Pick,
	Prolaps_Pick,
	Suburban_Pick,
	PizzaStack_Pick1,
	PizzaStack_Pick2,
	PizzaStack_Pick3,
	BarGR_Pick,
	Donuts_Pick,
	PigPen_Pick,
	ChickBell_Pick1,
	ChickBell_Pick2,
	Burger_Pick,
	Hotdog_Pick,
	AyuntShop_Pick,
	UnityShop_Pick,
	VineShop_Pick,
	VehLocalizado[MAX_PLAYERS][5],
	RecogerVeh_Pick,
	RecogerVehGrua_Pick,
	Text:TD_GrottiCatalogo[9],
	PlayerText:PTD_GrottiCatalogo[MAX_PLAYERS][4],
	Text:TD_Ropa[6],
	PlayerText:PTD_Ropa[MAX_PLAYERS],
	RejaGrua[MAX_PLAYERS],
	Menu:TOYSMENU,
	PlayerText:PTD_Toys[MAX_PLAYERS][7],
	PlayerInMenu[MAX_PLAYERS][3]
;

new RandomMen[] =
{
    60,
    7,
    48,
    59,
	299
};

new RandomWoman[] =
{
    298,
    12,
    55,
    93,
	148
};

new unwashable[89][0] = {
{403},{406},{408},{414},{417},
{423},{424},{425},{430},{431},
{432},{433},{435},{437},{441},
{443},{444},{446},{447},{448},
{452},{453},{454},{455},{456},
{457},{460},{461},{462},{463},
{464},{465},{468},{469},{471},
{472},{473},{476},{481},{484},
{485},{486},{487},{488},{493},
{497},{498},{501},{508},{509},
{510},{511},{512},{513},{514},
{515},{519},{520},{521},{522},
{523},{524},{530},{531},{532},
{539},{544},{548},{553},{556},
{557},{563},{564},{568},{571},
{572},{573},{574},{577},{578},
{581},{583},{586},{588},{592},
{593},{594},{595},{609}
};


new MyTimers[MAX_PLAYERS][50];

new Float:CameraPositions[][] =
{
    {1408.857299, -1632.013916, 135.030731, 1430.333129, -1623.923461, 137.190429, 1410.314453, -1627.295898, 135.816528, 1431.559448, -1619.127685, 137.895111},
    {1423.960693, -790.761047, 97.296607, 1422.713745, -802.571594, 93.713417, 1423.505004, -795.559020, 95.965515, 1422.459472, -807.558715, 93.459938},
    {1468.1969, -1714.5869, 21.8133, 1465.1074, -1716.8134, 21.8133, 1468.7809, -1715.3973, 21.9533, 1465.6914, -1717.6238, 21.9533},
    {1691.775024, -1760.483520, 51.646430, 1685.613769, -1750.009033, 49.212718, 1689.289428, -1756.257690, 50.664569, 1683.128173, -1745.783203, 48.230857},
    {1239.9844, -1312.6952, 61.7067, 1236.2928, -1306.7589, 61.7067, 1239.1367, -1313.2223, 61.2017, 1235.4452, -1307.2860, 61.2017},
    {1694.733764, -2286.287353, 48.846031, 1696.801757, -2286.243408, 72.494438, 1689.767822, -2286.203613, 48.269191, 1691.805175, -2286.213867, 72.678306}, //
    {1141.516235, -2006.309936, 89.270088, 1150.323608, -1998.296875, 92.549591, 1137.950683, -2009.554077, 87.942459, 1146.758056, -2001.541015, 91.221961},
    {1163.4066, -1651.3649, 61.6941, 1164.8997, -1657.4850, 60.0530, 1163.6432, -1652.3344, 61.4342, 1165.1362, -1658.4545, 59.7930},
    {1501.1635, -1735.7188, 52.0382, 1500.5176, -1731.0140, 51.2951, 1501.9237, -1735.0713, 51.7482, 1501.2778, -1730.3666, 51.0051},
    {1818.463012, -1669.808837, 22.066495, 1820.971435, -1673.945068, 21.014766, 1820.996582, -1673.986450, 21.004339, 1823.505004, -1678.122680, 19.952610},
    {1605.174072, -2106.205566, 58.206455, 1605.174072, -2106.205566, 58.206455, 1609.583740, -2104.772460, 56.335178, 1609.632568, -2104.453857, 56.773700}
};

new Float:Exteriors[][] =
{
	{0.0, 0.0, 0.0, 0.0},
	{542.3840,-1293.5125,17.2422,350.0}, //Grotti 1
	{1153.948120, -1772.674682, 16.599193,0.0}, //Banco 2
	{648.8630,-1360.6012,13.5863,70.0}, //CNN 3
	{1654.2700,-1654.8944,22.5156,180.0}, //VIP 4
	{2421.3159,-1219.6179,25.5382, 180.0}, //BITCH 5
	{1833.149780, -1842.485717, 13.578125, 0.0}, //24/7 Unity 6
	{1836.4471,-1682.3042,13.3476,90.0}, //Alhambra 7
	{1315.4854,-897.6839,39.5781,180.0}, //24/7 Vinewood 8
	{1352.3815,-1759.2286,13.5078,0.0}, //24/7 Ayuntamiento 9
	{2244.3567,-1665.5562,15.4766,360.0}, //Binco Grove 10
	{1456.4344,-1137.6427,23.9484,220.0}, //ZIP 11
	{499.5753,-1360.6145,16.3664,360.0}, //ProLaps 12
	{2112.7739,-1211.6287,23.9631,180.0}, //SubUrban 13
	{461.200073, -1500.823608, 31.059551,106.0}, //Victim 14
	{810.6630,-1616.1554,13.5469,270.0}, //BurgerShot 15
	{2105.4858,-1806.5336,13.5547,90.0}, //PizzaStacked 16
	{2070.6365,-1793.7847,13.5469,260.0}, //Peluquería 1 17
	{2068.5840,-1779.7758,13.5596, 280.0}, //Tatto 18
	{823.9835,-1588.2754,13.5545, 140.0}, //Peluquería 2 19
	{928.7275,-1352.9547,13.3438, 90.0}, //Cluckin Bells 20
	{2421.3159,-1219.6179,25.5382, 180.0}, //PigPen 21
	{2310.0977,-1643.5522,14.8270, 150.0}, //Bar grove 22
	{2229.8601,-1721.4545,13.5633, 125.0}, //GymLS 23
	{1555.142822, -1675.475341, 16.195312, 90.0}, //LSPD
	{1481.037597, -1771.786376, 18.795755, 0.0}, //Ayuntamiento
	{1038.286010, -1340.728027, 13.741346, 0.0} //Jim Ring
};

new Float:Cajeros[][] =
{
	{1410.21143, -1228.69971, 13.16360},
	{1224.61646, -1428.50427, 13.07948},
	{1222.61646, -1428.50427, 13.07950},
	{1220.61646, -1428.50427, 13.07950},
	{1218.61646, -1428.50427, 13.07950},
	{1161.02258, -1497.45313, 15.41748},
	{1498.90039, -1847.78955, 13.16123},
	{1380.03198, -1642.76318, 13.17232},
	{538.80273, -1740.98254, 11.93303},
	{1007.77338, -1295.86072, 13.14124},
	{1312.18127, -897.83740, 39.17719},
	{1734.48511, -1907.68274, 13.18131},
	{1763.64221, -2204.38379, 13.15179},
	{1585.76953, -2286.25854, 13.12480},
	{1831.72632, -1308.21704, 13.11254},
	{2043.84473, -1414.96716, 16.76000},
	{818.16, -1360.63, 1992.27},
	{819.09, -1360.63, 1992.27},
	{820.03, -1360.63, 1992.27},
	{821.08, -1360.63, 1992.27},
	{1996.85571, 991.90173, 10.37796},
	{1999.35571, 991.90167, 10.37800},
	{2001.85571, 991.90167, 10.37800},
	{2485.83130, 1324.93884, 10.43051},
	{2033.10327, 1887.10425, 11.63956},
	{2085.66553, 2059.63940, 10.64579},
	{1643.64844, 2250.88745, 10.65640},
	{1641.64844, 2250.88745, 10.65640},
	{-1463.74280, 1873.54175, 32.20494},
	{-2451.76270, 2252.21826, 4.56842},
	{-2449.76270, 2252.21826, 4.56840},
	{-1980.58179, 168.44235, 27.20170},
	{-1980.58179, 166.44240, 27.20170},
	{1417.71362, -980.47516, 1639.36353},
	{1421.21716, -980.44891, 1639.38550},
	{1424.63049, -980.52667, 1639.37146}
};
// ----------> Callbacks

main() {}

forward Guardar_Datos(playerid);
public Guardar_Datos(playerid)
{
new query[200], Float:ha[2];
GetPlayerHealth(playerid, ha[0]);
GetPlayerArmour(playerid, ha[1]);
GetPlayerPos(playerid, PlayerInfo[playerid][posx], PlayerInfo[playerid][posy], PlayerInfo[playerid][posz]);
GetPlayerFacingAngle(playerid, PlayerInfo[playerid][angle]);
new pName[24]; GetPlayerName(playerid, pName, 24);   PlayerInfo[playerid][skin] = GetPlayerSkin(playerid);
    
format(query, 200, "UPDATE `Cuenta` SET `posx`= %f,`posy`= %f,`posz`= %f,`angulo`= %f,`interiorid`=%d,`br`=%d, `dinero`= %d WHERE `nombre`='%s'", PlayerInfo[playerid][posx],
PlayerInfo[playerid][posy], PlayerInfo[playerid][posz], PlayerInfo[playerid][angle],PlayerInfo[playerid][Pinteriorid],PlayerInfo[playerid][bankt],PlayerInfo[playerid][dinero], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);
 
format(query, 200, "UPDATE `Cuenta` SET `dinerobanco`= %d,`sexo`= %d,`edad`= %d,`skin`= %d,`vida`= %f,`chaleco`= %f,`adminlvl`= %d,`telefono`= %d,`interior`= %d  WHERE `nombre`='%s'", PlayerInfo[playerid][dinerobank],
PlayerInfo[playerid][sexo],PlayerInfo[playerid][edad],PlayerInfo[playerid][skin],ha[0],ha[1],
PlayerInfo[playerid][admlvl],PlayerInfo[playerid][phonenumber],PlayerInfo[playerid][Interior], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `banka`= %d,`vbanco`= %d,`vgrotti`= %d,`v247`= %d,`vropa`= %d,`vfood`= %d,`duda`= %d,`mundo`= %d,`lvl`= %d  WHERE `nombre`='%s'",PlayerInfo[playerid][BankA],
PlayerInfo[playerid][VBank],PlayerInfo[playerid][VGrotti],PlayerInfo[playerid][V247],PlayerInfo[playerid][VRopa],PlayerInfo[playerid][VComida],
PlayerInfo[playerid][DudeChannel],PlayerInfo[playerid][Work],PlayerInfo[playerid][Plevel], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `veh0`= %d,`veh1`= %d,`veh2`= %d,`veh3`= %d,`vkey0`= %d,`vkey1`= %d,`vkey2`= %d,`vkey3`= %d,`pstats`= %d WHERE `nombre`='%s'",PlayerInfo[playerid][PlayerVehicle][0],
PlayerInfo[playerid][PlayerVehicle][1],PlayerInfo[playerid][PlayerVehicle][2],PlayerInfo[playerid][PlayerVehicle][3],PlayerInfo[playerid][PlayerVehicleKey][0],PlayerInfo[playerid][PlayerVehicleKey][1],PlayerInfo[playerid][PlayerVehicleKey][2],
PlayerInfo[playerid][PlayerVehicleKey][3],PlayerInfo[playerid][PlayerStatus], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);
return 1;
}



forward CargarDatos(playerid);
public CargarDatos(playerid)
{
     new f[500];
      cache_get_field_content(0,"posx", f);PlayerInfo[playerid][posx] = floatstr(f);
	  cache_get_field_content(0,"posy", f);PlayerInfo[playerid][posy] = floatstr(f);
      cache_get_field_content(0,"posz", f);PlayerInfo[playerid][posz] = floatstr(f);
      cache_get_field_content(0,"angulo", f);PlayerInfo[playerid][angle] = strval(f);
      cache_get_field_content(0,"interiorid", f);PlayerInfo[playerid][Pinteriorid] = strval(f);
      cache_get_field_content(0,"br", f); PlayerInfo[playerid][bankt] = strval(f);
   	  cache_get_field_content(0,"email", PlayerInfo[playerid][email]);
	  cache_get_field_content(0,"dinero", f);PlayerInfo[playerid][dinero] = strval(f);
      cache_get_field_content(0,"dinerobanco", f);PlayerInfo[playerid][dinerobank] = strval(f);
      cache_get_field_content(0,"sexo", f);PlayerInfo[playerid][sexo] = strval(f);
      cache_get_field_content(0,"edad", f);PlayerInfo[playerid][edad] = strval(f);
      cache_get_field_content(0,"skin", f);PlayerInfo[playerid][skin] = strval(f);
   	  cache_get_field_content(0,"vida", f);PlayerInfo[playerid][vida] = floatstr(f);
	  cache_get_field_content(0,"chaleco", f);PlayerInfo[playerid][chaleco] = floatstr(f);
      cache_get_field_content(0,"adminlvl", f);PlayerInfo[playerid][admlvl] = strval(f);
      cache_get_field_content(0,"telefono", f);PlayerInfo[playerid][phonenumber] = strval(f);
       cache_get_field_content(0,"interior", f);PlayerInfo[playerid][Interior] = strval(f);
      cache_get_field_content(0,"banka", f);PlayerInfo[playerid][BankA] = strval(f);
      cache_get_field_content(0,"vbank", f);PlayerInfo[playerid][VBank] = strval(f);
 	  cache_get_field_content(0,"vgrotti", f);PlayerInfo[playerid][VGrotti] = strval(f);
	  cache_get_field_content(0,"v247", f);PlayerInfo[playerid][V247] = strval(f);
      cache_get_field_content(0,"vropa", f);PlayerInfo[playerid][VRopa] = strval(f);
      cache_get_field_content(0,"vfood", f);PlayerInfo[playerid][VComida] = strval(f);
      cache_get_field_content(0,"duda", f);PlayerInfo[playerid][DudeChannel] = strval(f);
      cache_get_field_content(0,"mundo", f);PlayerInfo[playerid][Work] = strval(f);
   	  cache_get_field_content(0,"lvl", f);PlayerInfo[playerid][Plevel] = strval(f);
	  cache_get_field_content(0,"veh0", f);PlayerInfo[playerid][PlayerVehicle][0] = strval(f);
      cache_get_field_content(0,"veh1", f);PlayerInfo[playerid][PlayerVehicle][1] = strval(f);
      cache_get_field_content(0,"veh2", f);PlayerInfo[playerid][PlayerVehicle][2] = strval(f);
      cache_get_field_content(0,"veh3", f);PlayerInfo[playerid][PlayerVehicle][3] = strval(f);
      cache_get_field_content(0,"vkey0", f);PlayerInfo[playerid][PlayerVehicleKey][0] = strval(f);
      cache_get_field_content(0,"vkey1", f);PlayerInfo[playerid][PlayerVehicleKey][1] = strval(f);
	  cache_get_field_content(0,"vkey2", f);PlayerInfo[playerid][PlayerVehicleKey][2] = strval(f);
      cache_get_field_content(0,"vkey3", f);PlayerInfo[playerid][PlayerVehicleKey][3] = strval(f);
      cache_get_field_content(0,"stats", f);PlayerInfo[playerid][PlayerStatus] = strval(f);
      LoadUserData(playerid);
      P_newuser[playerid] = 0;
      return 1;
      }

forward Mysql_Verificar(playerid);
public Mysql_Verificar(playerid)
{
SendClientMessage(playerid, -1,"aRegistro");

    new rows, fields;
    cache_get_data(rows, fields);
    if(!rows)
    {
	loop(1, 4, l) TextDrawShowForPlayer(playerid, TD_ST[l]);
	DeleteChatForPlayer(playerid, 32, remove);
	ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Registro", "No estás registrado en el servidor, para\nhacerlo solo introduce tu contraseña abajo\ny sigue algunos cuantos pasos.\n\n\tNo te llevará mucho tiempo.", "Continuar", "Salir");
		SetPlayerTime(playerid, 12, 0);
		InterpolateCameraPos(playerid, 1346.2476, -928.5945, 114.5656, 1349.3835, -923.1544, 112.7538, 30000);
		InterpolateCameraLookAt(playerid, 1346.7494, -927.7241, 114.2757, 1349.8854, -922.2840, 112.4639, 30000);
		SetPlayerScore(playerid, 0);
		ResetPlayerMoney(playerid);
		ResetPlayerWeapons(playerid);
    }
    else
    {
       	new f[250];
       	cache_get_field_content(0,"pass", f); PlayerInfo[playerid][passtext] = strval(f);
	 SetPlayerTime(playerid, ServerTime, ServerMinute);
        loop(1, 4, l) TextDrawShowForPlayer(playerid, TD_ST[l]);
        DeleteChatForPlayer(playerid, 32, remove);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Montevideo RolePlay", "Bienvenido de nuevo.\n\n\tIngresa tu contraseña para\n\tcomenzar a jugar.", "Ingresar", "Salir");
     }
    return 1;
}

forward UnJail(playerid);
public UnJail(playerid)
{
    // Jailed = false;
    SetPlayerInterior(playerid, 0);
    SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
    SendClientMessage(playerid, 0xAFAFAFFF, "Ya has cumplido tu condena, estás en libertad de nuevo.");
    return 1;
}

public OnGameModeInit()
{
    printf("Iniciando conexión MySQL: (Servidor: '%s', Usuario: '%s', Clave: '%s', Base de Datos: '%s')", MySQL_Servidor, MySQL_Usuario, MySQL_Clave, MySQL_BD);
	TuberiasMySQL = mysql_connect(MySQL_Servidor, MySQL_Usuario, MySQL_BD,MySQL_Clave);
	if(mysql_ping() == 1) //Comprobamos si se conectó
	{
		printf("Conexión a la base de datos realizada correctamente.");
	}
	else //Caso contrario:
	{
	    print("Conexión a la base de datos no realizada.");
		mysql_close(); //Cerramos la conexión
		SendRconCommand("exit"); //Cerramos la consola para evitar bug's
	}
	SetGameModeText("New Clan Roleplay en español");
	SetGameModeText("hola");
	
    ShowPlayerMarkers(0);
    LimitGlobalChatRadius(17.0);
   	ShowNameTags(1);
    DisableInteriorEnterExits();
    EnableStuntBonusForAll(0);
	ManualVehicleEngineAndLights();
	UsePlayerPedAnims();
	AllowInteriorWeapons(1);
    SetTimer("UpdateServerTime", 15000, true);
    //ConnectNPC("NPC_005", "DefaultNPC");
    ConnectNPC("NPC_001", "atraco1_1");
    ConnectNPC("NPC_002", "bitch");
    ConnectNPC("NPC_003", "247ayunta");
    ConnectNPC("NPC_004", "247vinewood");
    ConnectNPC("NPC_005", "banco1");
    ConnectNPC("NPC_006", "banco2");
    ConnectNPC("NPC_007", "banco3");
    ConnectNPC("NPC_008", "bargrove");
    ConnectNPC("NPC_009", "binco1");
    ConnectNPC("NPC_010", "burgershot");
    ConnectNPC("NPC_011", "chuckinbells");
    ConnectNPC("NPC_012", "dancer2");
    ConnectNPC("NPC_013", "dancer3");
    ConnectNPC("NPC_014", "peluqueria");
    ConnectNPC("NPC_015", "pizzastack1");
    ConnectNPC("NPC_016", "prolaps");
    ConnectNPC("NPC_017", "suburban");
    ConnectNPC("NPC_018", "victim");
    ConnectNPC("NPC_019", "zip");
    ConnectNPC("NPC_020", "ayunta");
	ConnectNPC("NPC_021", "lspd1");
	ConnectNPC("NPC_022", "lspd2");
	ConnectNPC("NPC_023", "lspd3");
	ConnectNPC("NPC_024", "grotti1");
	ConnectNPC("NPC_025", "grotti2");
	ConnectNPC("NPC_026", "guarda1");
	ConnectNPC("NPC_027", "guarda2");
	ConnectNPC("NPC_028", "guarda3");
	ConnectNPC("NPC_029", "lineaA");
	ConnectNPC("NPC_030", "dj");
	ConnectNPC("NPC_031", "bar1");
	ConnectNPC("NPC_032", "pizzastack2");
	ConnectNPC("NPC_033", "pizzastack3");
	ConnectNPC("NPC_034", "tatto1");
	ConnectNPC("NPC_035", "binco2");
	ConnectNPC("NPC_036", "zip2");
	ConnectNPC("NPC_037", "chuckinbells2");
	ConnectNPC("NPC_038", "jimring");
	ConnectNPC("NPC_039", "lspdg1");
	ConnectNPC("NPC_040", "lspdg2");
	ConnectNPC("NPC_041", "pigpen");
	ConnectNPC("NPC_042", "hotdog");
	
	//MENUS
	AlhambraMenu = CreateMenu("Alhambra", 1, 15.0, 115.0, 125.0, 0.0);
	AddMenuItem(AlhambraMenu, 0, "Sprunk");
	AddMenuItem(AlhambraMenu, 0, "Cerveza");
	AddMenuItem(AlhambraMenu, 0, "Vodka");
	AddMenuItem(AlhambraMenu, 0, "Whisky");
	
	PigPenMenu = CreateMenu("PigPen", 1, 15.0, 115.0, 125.0, 0.0);
	AddMenuItem(PigPenMenu, 0, "Sprunk");
	AddMenuItem(PigPenMenu, 0, "Cerveza");
	AddMenuItem(PigPenMenu, 0, "Vodka");
	AddMenuItem(PigPenMenu, 0, "Whisky");

    BincoMenu = CreateMenu("Tienda", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(BincoMenu, 0, "Accesorios");
    AddMenuItem(BincoMenu, 0, "Ropas");
    
    ZipMenu = CreateMenu("Tienda", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(ZipMenu, 0, "Accesorios");
    AddMenuItem(ZipMenu, 0, "Ropas");
    
    TOYSMENU = CreateMenu("Accesorios", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(TOYSMENU, 0, "Cascos");
    AddMenuItem(TOYSMENU, 0, "Gorras");
    AddMenuItem(TOYSMENU, 0, "Gorros");
    AddMenuItem(TOYSMENU, 0, "Sombreros");
    AddMenuItem(TOYSMENU, 0, "Bandanas");
    AddMenuItem(TOYSMENU, 0, "Gafas");
    AddMenuItem(TOYSMENU, 0, "Mascaras");
    
    PizzaStackedMenu = CreateMenu("Pizzas", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(PizzaStackedMenu, 0, "Pizzas");
    AddMenuItem(PizzaStackedMenu, 0, "Bebidas");
    
    PizzaMenu = CreateMenu("Pizzas", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(PizzaMenu, 0, "Pizza"); SetMenuColumnHeader(PizzaMenu, 1, "Precio");
    AddMenuItem(PizzaMenu, 0, "Pizza mixta"); AddMenuItem(PizzaMenu, 1, "$15");
    AddMenuItem(PizzaMenu, 0, "Pizza barbacoa"); AddMenuItem(PizzaMenu, 1, "$20");
    AddMenuItem(PizzaMenu, 0, "Pizza clasica"); AddMenuItem(PizzaMenu, 1, "$10");
    AddMenuItem(PizzaMenu, 0, "Pizza vegetariana"); AddMenuItem(PizzaMenu, 1, "$10");
    AddMenuItem(PizzaMenu, 0, "Ensalada"); AddMenuItem(PizzaMenu, 1, "$10");
    
    BebidasMenu = CreateMenu("Bebidas", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(BebidasMenu, 0, "Bebida"); SetMenuColumnHeader(BebidasMenu, 1, "Precio");
    AddMenuItem(BebidasMenu, 0, "Cerveza"); AddMenuItem(BebidasMenu, 1, "$15");
    AddMenuItem(BebidasMenu, 0, "Refresco de naranja"); AddMenuItem(BebidasMenu, 1, "$10");
    AddMenuItem(BebidasMenu, 0, "Refresco de limon"); AddMenuItem(BebidasMenu, 1, "$10");
    AddMenuItem(BebidasMenu, 0, "Refresco de cola"); AddMenuItem(BebidasMenu, 1, "$15");
    AddMenuItem(BebidasMenu, 0, "Cafe"); AddMenuItem(BebidasMenu, 1, "$5");
    AddMenuItem(BebidasMenu, 0, "Botella de agua"); AddMenuItem(BebidasMenu, 1, "$5");

    DonutMenu = CreateMenu("Donuts", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(DonutMenu, 0, "Donut"); SetMenuColumnHeader(DonutMenu, 1, "Precio");
    AddMenuItem(DonutMenu, 0, "Donut blanco"); AddMenuItem(DonutMenu, 1, "$5");
    AddMenuItem(DonutMenu, 0, "Donut chocolate"); AddMenuItem(DonutMenu, 1, "$6");
    AddMenuItem(DonutMenu, 0, "Rosquilla"); AddMenuItem(DonutMenu, 1, "$6");
    AddMenuItem(DonutMenu, 0, "Cafe"); AddMenuItem(DonutMenu, 1, "$5");

	ChickBellMenu = CreateMenu("ChickenBell", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(ChickBellMenu, 0, "Comida");
    AddMenuItem(ChickBellMenu, 0, "Bebidas");
    
    ChickMenu = CreateMenu("ChickenBell", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(ChickMenu, 0, "Comida"); SetMenuColumnHeader(ChickMenu, 1, "Precio");
    AddMenuItem(ChickMenu, 0, "Pollo asado"); AddMenuItem(ChickMenu, 1, "$25");
    AddMenuItem(ChickMenu, 0, "Alitas de pollo"); AddMenuItem(ChickMenu, 1, "$20");
    AddMenuItem(ChickMenu, 0, "Ensalada"); AddMenuItem(ChickMenu, 1, "$10");
    
    BurgerShotMenu = CreateMenu("Burger", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(BurgerShotMenu, 0, "Hamburguesas");
    AddMenuItem(BurgerShotMenu, 0, "Bebidas");
    
    BurgerMenu = CreateMenu("Burger", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(BurgerMenu, 0, "Hamburguesas"); SetMenuColumnHeader(BurgerMenu, 1, "Precio");
    AddMenuItem(BurgerMenu, 0, "Hamburguesa de pollo"); AddMenuItem(BurgerMenu, 1, "$15");
    AddMenuItem(BurgerMenu, 0, "Hamburguesa de pescado"); AddMenuItem(BurgerMenu, 1, "$10");
    AddMenuItem(BurgerMenu, 0, "Hamburguesa de ternera"); AddMenuItem(BurgerMenu, 1, "$10");
    AddMenuItem(BurgerMenu, 0, "Ensalada"); AddMenuItem(BurgerMenu, 1, "$10");
    
    HotdogMenu = CreateMenu("Hotdogs", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(HotdogMenu, 0, "Hotdog $10");
    AddMenuItem(HotdogMenu, 0, "Bebidas");
    
    ShopMenuN = CreateMenu("Tienda", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(ShopMenuN, 0, "Bebidas");
    AddMenuItem(ShopMenuN, 0, "GPS $150");
    AddMenuItem(ShopMenuN, 0, "Tabaco");

	TabacoMenu = CreateMenu("Tabaco", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(TabacoMenu, 0, "Objeto"); SetMenuColumnHeader(TabacoMenu, 1, "Precio");
    AddMenuItem(TabacoMenu, 0, "Cigarrillo"); AddMenuItem(TabacoMenu, 1, "$10");
    AddMenuItem(TabacoMenu, 0, "Mechero"); AddMenuItem(TabacoMenu, 1, "$10");
    
    
    /* iPhone S */

	TD_iPhone[0] = TextDrawCreate(507.000183, 195.792556, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[0], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[0], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[0], 1);
	TextDrawColor(TD_iPhone[0], -2139062017);
	TextDrawSetShadow(TD_iPhone[0], 0);
	TextDrawSetOutline(TD_iPhone[0], 0);
	TextDrawFont(TD_iPhone[0], 4);

	TD_iPhone[1] = TextDrawCreate(506.666839, 404.199951, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[1], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[1], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[1], 1);
	TextDrawColor(TD_iPhone[1], -2139062017);
	TextDrawSetShadow(TD_iPhone[1], 0);
	TextDrawSetOutline(TD_iPhone[1], 0);
	TextDrawFont(TD_iPhone[1], 4);

	TD_iPhone[2] = TextDrawCreate(578.666870, 404.199951, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[2], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[2], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[2], 1);
	TextDrawColor(TD_iPhone[2], -2139062017);
	TextDrawSetShadow(TD_iPhone[2], 0);
	TextDrawSetOutline(TD_iPhone[2], 0);
	TextDrawFont(TD_iPhone[2], 4);

	TD_iPhone[3] = TextDrawCreate(578.666870, 195.792541, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[3], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[3], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[3], 1);
	TextDrawColor(TD_iPhone[3], -2139062017);
	TextDrawSetShadow(TD_iPhone[3], 0);
	TextDrawSetOutline(TD_iPhone[3], 0);
	TextDrawFont(TD_iPhone[3], 4);

	TD_iPhone[4] = TextDrawCreate(507.000061, 202.844375, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[4], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[4], 87.666656, 194.962951);
	TextDrawAlignment(TD_iPhone[4], 1);
	TextDrawColor(TD_iPhone[4], -2139062017);
	TextDrawSetShadow(TD_iPhone[4], 0);
	TextDrawSetOutline(TD_iPhone[4], 0);
	TextDrawFont(TD_iPhone[4], 4);

	TD_iPhone[5] = TextDrawCreate(513.666564, 195.548095, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[5], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[5], 74.666641, 208.651809);
	TextDrawAlignment(TD_iPhone[5], 1);
	TextDrawColor(TD_iPhone[5], -2139062017);
	TextDrawSetShadow(TD_iPhone[5], 0);
	TextDrawSetOutline(TD_iPhone[5], 0);
	TextDrawFont(TD_iPhone[5], 4);

	TD_iPhone[6] = TextDrawCreate(507.333496, 196.377746, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[6], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[6], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[6], 1);
	TextDrawColor(TD_iPhone[6], 255);
	TextDrawSetShadow(TD_iPhone[6], 0);
	TextDrawSetOutline(TD_iPhone[6], 0);
	TextDrawFont(TD_iPhone[6], 4);

	TD_iPhone[7] = TextDrawCreate(507.333496, 403.540649, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[7], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[7], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[7], 1);
	TextDrawColor(TD_iPhone[7], 255);
	TextDrawSetShadow(TD_iPhone[7], 0);
	TextDrawSetOutline(TD_iPhone[7], 0);
	TextDrawFont(TD_iPhone[7], 4);

	TD_iPhone[8] = TextDrawCreate(578.000244, 403.540649, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[8], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[8], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[8], 1);
	TextDrawColor(TD_iPhone[8], 255);
	TextDrawSetShadow(TD_iPhone[8], 0);
	TextDrawSetOutline(TD_iPhone[8], 0);
	TextDrawFont(TD_iPhone[8], 4);

	TD_iPhone[9] = TextDrawCreate(578.000305, 196.377746, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[9], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[9], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[9], 1);
	TextDrawColor(TD_iPhone[9], 255);
	TextDrawSetShadow(TD_iPhone[9], 0);
	TextDrawSetOutline(TD_iPhone[9], 0);
	TextDrawFont(TD_iPhone[9], 4);

	TD_iPhone[10] = TextDrawCreate(514.666809, 196.622222, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[10], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[10], 72.000022, 206.992568);
	TextDrawAlignment(TD_iPhone[10], 1);
	TextDrawColor(TD_iPhone[10], 255);
	TextDrawSetShadow(TD_iPhone[10], 0);
	TextDrawSetOutline(TD_iPhone[10], 0);
	TextDrawFont(TD_iPhone[10], 4);

	TD_iPhone[11] = TextDrawCreate(507.666656, 204.674133, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[11], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[11], 86.333419, 191.229660);
	TextDrawAlignment(TD_iPhone[11], 1);
	TextDrawColor(TD_iPhone[11], 255);
	TextDrawSetShadow(TD_iPhone[11], 0);
	TextDrawSetOutline(TD_iPhone[11], 0);
	TextDrawFont(TD_iPhone[11], 4);

	TD_iPhone[12] = TextDrawCreate(511.333435, 221.925933, "LD_otb:blue");
	TextDrawLetterSize(TD_iPhone[12], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[12], 78.666633, 155.140731);
	TextDrawAlignment(TD_iPhone[12], 1);
	TextDrawColor(TD_iPhone[12], -1768515841);
	TextDrawSetShadow(TD_iPhone[12], 0);
	TextDrawSetOutline(TD_iPhone[12], 0);
	TextDrawFont(TD_iPhone[12], 4);

	TD_iPhone[13] = TextDrawCreate(549.666809, 201.599945, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[13], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[13], 3.333292, 4.148138);
	TextDrawAlignment(TD_iPhone[13], 1);
	TextDrawColor(TD_iPhone[13], -2139062142);
	TextDrawSetShadow(TD_iPhone[13], 0);
	TextDrawSetOutline(TD_iPhone[13], 0);
	TextDrawFont(TD_iPhone[13], 4);

	TD_iPhone[14] = TextDrawCreate(544.999877, 209.896240, "ld_poke:cd1d");
	TextDrawLetterSize(TD_iPhone[14], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[14], 12.333331, 2.074084);
	TextDrawAlignment(TD_iPhone[14], 1);
	TextDrawColor(TD_iPhone[14], -2139062142);
	TextDrawSetShadow(TD_iPhone[14], 0);
	TextDrawSetOutline(TD_iPhone[14], 0);
	TextDrawFont(TD_iPhone[14], 4);

	TD_iPhone[15] = TextDrawCreate(541.000366, 210.066589, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[15], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[15], 1.333292, 1.244433);
	TextDrawAlignment(TD_iPhone[15], 1);
	TextDrawColor(TD_iPhone[15], -2139062142);
	TextDrawSetShadow(TD_iPhone[15], 0);
	TextDrawSetOutline(TD_iPhone[15], 0);
	TextDrawFont(TD_iPhone[15], 4);

	TD_iPhone[16] = TextDrawCreate(543.333618, 380.311004, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[16], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[16], 16.333269, 18.251844);
	TextDrawAlignment(TD_iPhone[16], 1);
	TextDrawColor(TD_iPhone[16], -1061109690);
	TextDrawSetShadow(TD_iPhone[16], 0);
	TextDrawSetOutline(TD_iPhone[16], 0);
	TextDrawFont(TD_iPhone[16], 4);

	TD_iPhone[17] = TextDrawCreate(511.333496, 221.925994, "ld_plan:tvbase");
	TextDrawLetterSize(TD_iPhone[17], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[17], 78.666702, 9.540740);
	TextDrawAlignment(TD_iPhone[17], 1);
	TextDrawColor(TD_iPhone[17], -1);
	TextDrawSetShadow(TD_iPhone[17], 0);
	TextDrawSetOutline(TD_iPhone[17], 0);
	TextDrawFont(TD_iPhone[17], 4);

	TD_iPhone[18] = TextDrawCreate(550.666687, 221.925918, "4G________________00:00");
	TextDrawLetterSize(TD_iPhone[18], 0.194333, 0.865778);
	TextDrawAlignment(TD_iPhone[18], 2);
	TextDrawColor(TD_iPhone[18], -1);
	TextDrawSetShadow(TD_iPhone[18], 0);
	TextDrawSetOutline(TD_iPhone[18], 0);
	TextDrawBackgroundColor(TD_iPhone[18], 51);
	TextDrawFont(TD_iPhone[18], 1);
	TextDrawSetProportional(TD_iPhone[18], 1);

	TD_iPhone[19] = TextDrawCreate(549.999450, 233.125991, "00:00");
	TextDrawLetterSize(TD_iPhone[19], 0.460333, 2.666073);
	TextDrawAlignment(TD_iPhone[19], 2);
	TextDrawColor(TD_iPhone[19], -1);
	TextDrawSetShadow(TD_iPhone[19], 0);
	TextDrawSetOutline(TD_iPhone[19], 0);
	TextDrawBackgroundColor(TD_iPhone[19], 51);
	TextDrawFont(TD_iPhone[19], 2);
	TextDrawSetProportional(TD_iPhone[19], 1);

	TD_iPhone[20] = TextDrawCreate(549.332702, 254.866653, "1 de enero");
	TextDrawLetterSize(TD_iPhone[20], 0.124999, 0.803554);
	TextDrawAlignment(TD_iPhone[20], 2);
	TextDrawColor(TD_iPhone[20], -1);
	TextDrawSetShadow(TD_iPhone[20], 0);
	TextDrawSetOutline(TD_iPhone[20], 0);
	TextDrawBackgroundColor(TD_iPhone[20], 51);
	TextDrawFont(TD_iPhone[20], 1);
	TextDrawSetProportional(TD_iPhone[20], 1);

	TD_iPhone[21] = TextDrawCreate(549.999572, 342.148040, "Presiona ~g~Y ~w~para~n~desbloquear");
	TextDrawLetterSize(TD_iPhone[21], 0.257666, 1.276443);
	TextDrawAlignment(TD_iPhone[21], 2);
	TextDrawColor(TD_iPhone[21], -1);
	TextDrawSetShadow(TD_iPhone[21], 0);
	TextDrawSetOutline(TD_iPhone[21], 0);
	TextDrawBackgroundColor(TD_iPhone[21], 51);
	TextDrawFont(TD_iPhone[21], 1);
	TextDrawSetProportional(TD_iPhone[21], 1);

	TD_iPhone[22] = TextDrawCreate(511.333282, 231.466659, "ld_plan:tvbase");
	TextDrawLetterSize(TD_iPhone[22], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[22], 78.666664, 16.177804);
	TextDrawAlignment(TD_iPhone[22], 1);
	TextDrawColor(TD_iPhone[22], 8388863);
	TextDrawSetShadow(TD_iPhone[22], 0);
	TextDrawSetOutline(TD_iPhone[22], 0);
	TextDrawFont(TD_iPhone[22], 4);

	TD_iPhone[23] = TextDrawCreate(511.333282, 231.466705, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[23], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[23], 78.666656, 1.659255);
	TextDrawAlignment(TD_iPhone[23], 1);
	TextDrawColor(TD_iPhone[23], 16777215);
	TextDrawSetShadow(TD_iPhone[23], 0);
	TextDrawSetOutline(TD_iPhone[23], 0);
	TextDrawFont(TD_iPhone[23], 4);

	TD_iPhone[24] = TextDrawCreate(511.333282, 247.814788, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[24], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[24], 78.666656, 1.659255);
	TextDrawAlignment(TD_iPhone[24], 1);
	TextDrawColor(TD_iPhone[24], 16777215);
	TextDrawSetShadow(TD_iPhone[24], 0);
	TextDrawSetOutline(TD_iPhone[24], 0);
	TextDrawFont(TD_iPhone[24], 4);

	TD_iPhone[25] = TextDrawCreate(511.666900, 344.296508, "ld_plan:tvbase");
	TextDrawLetterSize(TD_iPhone[25], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[25], 78.333389, 33.185237);
	TextDrawAlignment(TD_iPhone[25], 1);
	TextDrawColor(TD_iPhone[25], -1);
	TextDrawSetShadow(TD_iPhone[25], 0);
	TextDrawSetOutline(TD_iPhone[25], 0);
	TextDrawFont(TD_iPhone[25], 4);

	//Clock
	TD_iPhone_Clock[0] = TextDrawCreate(549.633178, 252.551788, "00:00");
	TextDrawLetterSize(TD_iPhone_Clock[0], 0.499667, 2.861037);
	TextDrawAlignment(TD_iPhone_Clock[0], 2);
	TextDrawColor(TD_iPhone_Clock[0], -1);
	TextDrawSetShadow(TD_iPhone_Clock[0], 0);
	TextDrawSetOutline(TD_iPhone_Clock[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Clock[0], 51);
	TextDrawFont(TD_iPhone_Clock[0], 2);
	TextDrawSetProportional(TD_iPhone_Clock[0], 1);

	TD_iPhone_Clock[1] = TextDrawCreate(549.066528, 277.052032, "1 de enero de 1999");
	TextDrawLetterSize(TD_iPhone_Clock[1], 0.124999, 0.803554);
	TextDrawAlignment(TD_iPhone_Clock[1], 2);
	TextDrawColor(TD_iPhone_Clock[1], -1);
	TextDrawSetShadow(TD_iPhone_Clock[1], 0);
	TextDrawSetOutline(TD_iPhone_Clock[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Clock[1], 51);
	TextDrawFont(TD_iPhone_Clock[1], 1);
	TextDrawSetProportional(TD_iPhone_Clock[1], 1);

	//Galeria
	TD_iPhone_Gallery = TextDrawCreate(542.000122, 340.977722, "~<~_Sin titulo.png_~>~");
	TextDrawLetterSize(TD_iPhone_Gallery, 0.202333, 1.069037);
	TextDrawAlignment(TD_iPhone_Gallery, 2);
	TextDrawColor(TD_iPhone_Gallery, -1);
	TextDrawSetShadow(TD_iPhone_Gallery, 0);
	TextDrawSetOutline(TD_iPhone_Gallery, 1);
	TextDrawBackgroundColor(TD_iPhone_Gallery, 255);
	TextDrawFont(TD_iPhone_Gallery, 1);
	TextDrawSetProportional(TD_iPhone_Gallery, 1);

	//Clima
	TD_iPhone_Time[0] = TextDrawCreate(582.999938, 335.585296, "Soleado");
	TextDrawLetterSize(TD_iPhone_Time[0], 0.236999, 0.998518);
	TextDrawAlignment(TD_iPhone_Time[0], 3);
	TextDrawColor(TD_iPhone_Time[0], -1);
	TextDrawSetShadow(TD_iPhone_Time[0], 0);
	TextDrawSetOutline(TD_iPhone_Time[0], 1);
	TextDrawBackgroundColor(TD_iPhone_Time[0], 255);
	TextDrawFont(TD_iPhone_Time[0], 1);
	TextDrawSetProportional(TD_iPhone_Time[0], 1);

	TD_iPhone_Time[1] = TextDrawCreate(518.333312, 258.844390, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone_Time[1], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Time[1], 64.666687, 72.177795);
	TextDrawAlignment(TD_iPhone_Time[1], 1);
	TextDrawColor(TD_iPhone_Time[1], -1);
	TextDrawSetShadow(TD_iPhone_Time[1], 0);
	TextDrawSetOutline(TD_iPhone_Time[1], 0);
	TextDrawFont(TD_iPhone_Time[1], 4);

	TD_iPhone_Time[2] = TextDrawCreate(555.000000, 323.140777, "wheater.com");
	TextDrawLetterSize(TD_iPhone_Time[2], 0.127999, 0.687407);
	TextDrawAlignment(TD_iPhone_Time[2], 1);
	TextDrawColor(TD_iPhone_Time[2], 255);
	TextDrawSetShadow(TD_iPhone_Time[2], 0);
	TextDrawSetOutline(TD_iPhone_Time[2], 0);
	TextDrawBackgroundColor(TD_iPhone_Time[2], 51);
	TextDrawFont(TD_iPhone_Time[2], 1);
	TextDrawSetProportional(TD_iPhone_Time[2], 1);

	//GPS
	TD_iPhone_GPS = TextDrawCreate(547.666870, 253.036956, "Te encuentras en:");
	TextDrawLetterSize(TD_iPhone_GPS, 0.188666, 0.944592);
	TextDrawAlignment(TD_iPhone_GPS, 2);
	TextDrawColor(TD_iPhone_GPS, -1);
	TextDrawSetShadow(TD_iPhone_GPS, 0);
	TextDrawSetOutline(TD_iPhone_GPS, 1);
	TextDrawBackgroundColor(TD_iPhone_GPS, 255);
	TextDrawFont(TD_iPhone_GPS, 1);
	TextDrawSetProportional(TD_iPhone_GPS, 1);

	//Radio
	TD_iPhone_Radio[0] = TextDrawCreate(542.333251, 258.844360, "~<~ EMISORA ~>~");
	TextDrawLetterSize(TD_iPhone_Radio[0], 0.265333, 1.085629);
	TextDrawAlignment(TD_iPhone_Radio[0], 2);
	TextDrawColor(TD_iPhone_Radio[0], -1);
	TextDrawSetShadow(TD_iPhone_Radio[0], 0);
	TextDrawSetOutline(TD_iPhone_Radio[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Radio[0], 51);
	TextDrawFont(TD_iPhone_Radio[0], 1);
	TextDrawSetProportional(TD_iPhone_Radio[0], 1);

	TD_iPhone_Radio[1] = TextDrawCreate(550.999938, 353.592559, "Usa ~g~Y~w~ para apagar");
	TextDrawLetterSize(TD_iPhone_Radio[1], 0.227000, 1.006814);
	TextDrawAlignment(TD_iPhone_Radio[1], 2);
	TextDrawColor(TD_iPhone_Radio[1], -1);
	TextDrawSetShadow(TD_iPhone_Radio[1], 0);
	TextDrawSetOutline(TD_iPhone_Radio[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Radio[1], 51);
	TextDrawFont(TD_iPhone_Radio[1], 1);
	TextDrawSetProportional(TD_iPhone_Radio[1], 1);

	//Musica
	TD_iPhone_Music[0] = TextDrawCreate(542.333251, 258.844360, "~<~ MUSICA ~>~");
	TextDrawLetterSize(TD_iPhone_Music[0], 0.265333, 1.085629);
	TextDrawAlignment(TD_iPhone_Music[0], 2);
	TextDrawColor(TD_iPhone_Music[0], -1);
	TextDrawSetShadow(TD_iPhone_Music[0], 0);
	TextDrawSetOutline(TD_iPhone_Music[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Music[0], 51);
	TextDrawFont(TD_iPhone_Music[0], 1);
	TextDrawSetProportional(TD_iPhone_Music[0], 1);

	TD_iPhone_Music[1] = TextDrawCreate(550.999938, 353.592559, "Usa ~g~Y~w~ para parar");
	TextDrawLetterSize(TD_iPhone_Music[1], 0.227000, 1.006814);
	TextDrawAlignment(TD_iPhone_Music[1], 2);
	TextDrawColor(TD_iPhone_Music[1], -1);
	TextDrawSetShadow(TD_iPhone_Music[1], 0);
	TextDrawSetOutline(TD_iPhone_Music[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Music[1], 51);
	TextDrawFont(TD_iPhone_Music[1], 1);
	TextDrawSetProportional(TD_iPhone_Music[1], 1);

	//Mapa
	TD_iPhone_Map = TextDrawCreate(511.266815, 249.548080, "samaps:map");
	TextDrawLetterSize(TD_iPhone_Map, 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Map, 78.666656, 126.518585);
	TextDrawAlignment(TD_iPhone_Map, 1);
	TextDrawColor(TD_iPhone_Map, -1);
	TextDrawSetShadow(TD_iPhone_Map, 0);
	TextDrawSetOutline(TD_iPhone_Map, 0);
	TextDrawFont(TD_iPhone_Map, 4);

	//Internet
	TD_iPhone_Internet[0] = TextDrawCreate(550.666748, 326.459228, "Servicio en mantenimiento...~n~Disculpe las moletias");
	TextDrawLetterSize(TD_iPhone_Internet[0], 0.151000, 0.836741);
	TextDrawAlignment(TD_iPhone_Internet[0], 2);
	TextDrawColor(TD_iPhone_Internet[0], -1);
	TextDrawSetShadow(TD_iPhone_Internet[0], 0);
	TextDrawSetOutline(TD_iPhone_Internet[0], 1);
	TextDrawBackgroundColor(TD_iPhone_Internet[0], 255);
	TextDrawFont(TD_iPhone_Internet[0], 1);
	TextDrawSetProportional(TD_iPhone_Internet[0], 1);

	TD_iPhone_Internet[1] = TextDrawCreate(515.333374, 261.748046, "404");
	TextDrawLetterSize(TD_iPhone_Internet[1], 0.858666, 7.237334);
	TextDrawAlignment(TD_iPhone_Internet[1], 1);
	TextDrawColor(TD_iPhone_Internet[1], -1);
	TextDrawSetShadow(TD_iPhone_Internet[1], 0);
	TextDrawSetOutline(TD_iPhone_Internet[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Internet[1], 51);
	TextDrawFont(TD_iPhone_Internet[1], 2);
	TextDrawSetProportional(TD_iPhone_Internet[1], 1);
	
	    

	/*Calculadora
	TD_iPhone_Calculator[0] = TextDrawCreate(522.900268, 354.604370, "0");
	TextDrawLetterSize(TD_iPhone_Calculator[0], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[0], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[0], 2);
	TextDrawColor(TD_iPhone_Calculator[0], -1);
	TextDrawUseBox(TD_iPhone_Calculator[0], true);
	TextDrawBoxColor(TD_iPhone_Calculator[0], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[0], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[0], 51);
	TextDrawFont(TD_iPhone_Calculator[0], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[0], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[0], true);

	TD_iPhone_Calculator[1] = TextDrawCreate(549.300354, 354.604370, "=");
	TextDrawLetterSize(TD_iPhone_Calculator[1], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[1], 51.000000, 29.037044);
	TextDrawAlignment(TD_iPhone_Calculator[1], 2);
	TextDrawColor(TD_iPhone_Calculator[1], -1);
	TextDrawUseBox(TD_iPhone_Calculator[1], true);
	TextDrawBoxColor(TD_iPhone_Calculator[1], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[1], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[1], 51);
	TextDrawFont(TD_iPhone_Calculator[1], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[1], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[1], true);

	TD_iPhone_Calculator[2] = TextDrawCreate(522.900268, 333.204071, "1");
	TextDrawLetterSize(TD_iPhone_Calculator[2], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[2], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[2], 2);
	TextDrawColor(TD_iPhone_Calculator[2], -1);
	TextDrawUseBox(TD_iPhone_Calculator[2], true);
	TextDrawBoxColor(TD_iPhone_Calculator[2], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[2], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[2], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[2], 51);
	TextDrawFont(TD_iPhone_Calculator[2], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[2], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[2], true);

	TD_iPhone_Calculator[3] = TextDrawCreate(540.233581, 333.204071, "2");
	TextDrawLetterSize(TD_iPhone_Calculator[3], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[3], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[3], 2);
	TextDrawColor(TD_iPhone_Calculator[3], -1);
	TextDrawUseBox(TD_iPhone_Calculator[3], true);
	TextDrawBoxColor(TD_iPhone_Calculator[3], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[3], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[3], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[3], 51);
	TextDrawFont(TD_iPhone_Calculator[3], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[3], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[3], true);

	TD_iPhone_Calculator[4] = TextDrawCreate(557.900207, 333.204071, "3");
	TextDrawLetterSize(TD_iPhone_Calculator[4], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[4], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[4], 2);
	TextDrawColor(TD_iPhone_Calculator[4], -1);
	TextDrawUseBox(TD_iPhone_Calculator[4], true);
	TextDrawBoxColor(TD_iPhone_Calculator[4], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[4], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[4], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[4], 51);
	TextDrawFont(TD_iPhone_Calculator[4], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[4], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[4], true);

	TD_iPhone_Calculator[5] = TextDrawCreate(522.900268, 311.803771, "4");
	TextDrawLetterSize(TD_iPhone_Calculator[5], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[5], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[5], 2);
	TextDrawColor(TD_iPhone_Calculator[5], -1);
	TextDrawUseBox(TD_iPhone_Calculator[5], true);
	TextDrawBoxColor(TD_iPhone_Calculator[5], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[5], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[5], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[5], 51);
	TextDrawFont(TD_iPhone_Calculator[5], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[5], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[5], true);

	TD_iPhone_Calculator[6] = TextDrawCreate(540.233581, 311.803771, "5");
	TextDrawLetterSize(TD_iPhone_Calculator[6], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[6], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[6], 2);
	TextDrawColor(TD_iPhone_Calculator[6], -1);
	TextDrawUseBox(TD_iPhone_Calculator[6], true);
	TextDrawBoxColor(TD_iPhone_Calculator[6], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[6], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[6], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[6], 51);
	TextDrawFont(TD_iPhone_Calculator[6], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[6], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[6], true);

	TD_iPhone_Calculator[7] = TextDrawCreate(557.900207, 311.803771, "6");
	TextDrawLetterSize(TD_iPhone_Calculator[7], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[7], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[7], 2);
	TextDrawColor(TD_iPhone_Calculator[7], -1);
	TextDrawUseBox(TD_iPhone_Calculator[7], true);
	TextDrawBoxColor(TD_iPhone_Calculator[7], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[7], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[7], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[7], 51);
	TextDrawFont(TD_iPhone_Calculator[7], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[7], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[7], true);

	TD_iPhone_Calculator[8] = TextDrawCreate(522.900268, 290.403472, "7");
	TextDrawLetterSize(TD_iPhone_Calculator[8], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[8], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[8], 2);
	TextDrawColor(TD_iPhone_Calculator[8], -1);
	TextDrawUseBox(TD_iPhone_Calculator[8], true);
	TextDrawBoxColor(TD_iPhone_Calculator[8], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[8], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[8], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[8], 51);
	TextDrawFont(TD_iPhone_Calculator[8], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[8], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[8], true);

	TD_iPhone_Calculator[9] = TextDrawCreate(540.233581, 290.403472, "8");
	TextDrawLetterSize(TD_iPhone_Calculator[9], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[9], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[9], 2);
	TextDrawColor(TD_iPhone_Calculator[9], -1);
	TextDrawUseBox(TD_iPhone_Calculator[9], true);
	TextDrawBoxColor(TD_iPhone_Calculator[9], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[9], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[9], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[9], 51);
	TextDrawFont(TD_iPhone_Calculator[9], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[9], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[9], true);

	TD_iPhone_Calculator[10] = TextDrawCreate(557.900207, 290.403472, "9");
	TextDrawLetterSize(TD_iPhone_Calculator[10], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[10], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[10], 2);
	TextDrawColor(TD_iPhone_Calculator[10], -1);
	TextDrawUseBox(TD_iPhone_Calculator[10], true);
	TextDrawBoxColor(TD_iPhone_Calculator[10], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[10], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[10], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[10], 51);
	TextDrawFont(TD_iPhone_Calculator[10], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[10], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[10], true);

	TD_iPhone_Calculator[11] = TextDrawCreate(577.899597, 290.403472, "/");
	TextDrawLetterSize(TD_iPhone_Calculator[11], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[11], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[11], 2);
	TextDrawColor(TD_iPhone_Calculator[11], -1);
	TextDrawUseBox(TD_iPhone_Calculator[11], true);
	TextDrawBoxColor(TD_iPhone_Calculator[11], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[11], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[11], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[11], 51);
	TextDrawFont(TD_iPhone_Calculator[11], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[11], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[11], true);

	TD_iPhone_Calculator[12] = TextDrawCreate(577.899597, 311.803771, "x");
	TextDrawLetterSize(TD_iPhone_Calculator[12], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[12], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[12], 2);
	TextDrawColor(TD_iPhone_Calculator[12], -1);
	TextDrawUseBox(TD_iPhone_Calculator[12], true);
	TextDrawBoxColor(TD_iPhone_Calculator[12], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[12], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[12], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[12], 51);
	TextDrawFont(TD_iPhone_Calculator[12], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[12], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[12], true);

	TD_iPhone_Calculator[13] = TextDrawCreate(577.899597, 333.204071, "-");
	TextDrawLetterSize(TD_iPhone_Calculator[13], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[13], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[13], 2);
	TextDrawColor(TD_iPhone_Calculator[13], -1);
	TextDrawUseBox(TD_iPhone_Calculator[13], true);
	TextDrawBoxColor(TD_iPhone_Calculator[13], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[13], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[13], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[13], 51);
	TextDrawFont(TD_iPhone_Calculator[13], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[13], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[13], true);

	TD_iPhone_Calculator[14] = TextDrawCreate(577.899597, 354.604370, "+");
	TextDrawLetterSize(TD_iPhone_Calculator[14], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[14], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[14], 2);
	TextDrawColor(TD_iPhone_Calculator[14], -1);
	TextDrawUseBox(TD_iPhone_Calculator[14], true);
	TextDrawBoxColor(TD_iPhone_Calculator[14], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[14], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[14], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[14], 51);
	TextDrawFont(TD_iPhone_Calculator[14], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[14], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[14], true);

	TD_iPhone_Calculator[15] = TextDrawCreate(516.666625, 255.940597, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone_Calculator[15], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Calculator[15], 67.999954, 26.962947);
	TextDrawAlignment(TD_iPhone_Calculator[15], 1);
	TextDrawColor(TD_iPhone_Calculator[15], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[15], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[15], 0);
	TextDrawFont(TD_iPhone_Calculator[15], 4);*/

	//Call
	TD_iPhone_Call[0] = TextDrawCreate(511.333312, 278.755523, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone_Call[0], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Call[0], 78.333259, 98.725921);
	TextDrawAlignment(TD_iPhone_Call[0], 1);
	TextDrawColor(TD_iPhone_Call[0], -2041184257);
	TextDrawSetShadow(TD_iPhone_Call[0], 0);
	TextDrawSetOutline(TD_iPhone_Call[0], 0);
	TextDrawFont(TD_iPhone_Call[0], 4);

	TD_iPhone_Call[1] = TextDrawCreate(524.999877, 282.488739, "1");
	TextDrawLetterSize(TD_iPhone_Call[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[1], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[1], 2);
	TextDrawColor(TD_iPhone_Call[1], -1);
	TextDrawUseBox(TD_iPhone_Call[1], true);
	TextDrawBoxColor(TD_iPhone_Call[1], 0);
	TextDrawSetShadow(TD_iPhone_Call[1], 0);
	TextDrawSetOutline(TD_iPhone_Call[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[1], 51);
	TextDrawFont(TD_iPhone_Call[1], 1);
	TextDrawSetProportional(TD_iPhone_Call[1], 1);
    TextDrawSetSelectable(TD_iPhone_Call[1], true);

	TD_iPhone_Call[2] = TextDrawCreate(549.999328, 282.244262, "2");
	TextDrawLetterSize(TD_iPhone_Call[2], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[2], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[2], 2);
	TextDrawColor(TD_iPhone_Call[2], -1);
	TextDrawUseBox(TD_iPhone_Call[2], true);
	TextDrawBoxColor(TD_iPhone_Call[2], 0);
	TextDrawSetShadow(TD_iPhone_Call[2], 0);
	TextDrawSetOutline(TD_iPhone_Call[2], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[2], 51);
	TextDrawFont(TD_iPhone_Call[2], 1);
	TextDrawSetProportional(TD_iPhone_Call[2], 1);
    TextDrawSetSelectable(TD_iPhone_Call[2], true);

	TD_iPhone_Call[3] = TextDrawCreate(574.999084, 282.414581, "3");
	TextDrawLetterSize(TD_iPhone_Call[3], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[3], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[3], 2);
	TextDrawColor(TD_iPhone_Call[3], -1);
	TextDrawUseBox(TD_iPhone_Call[3], true);
	TextDrawBoxColor(TD_iPhone_Call[3], 0);
	TextDrawSetShadow(TD_iPhone_Call[3], 0);
	TextDrawSetOutline(TD_iPhone_Call[3], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[3], 51);
	TextDrawFont(TD_iPhone_Call[3], 1);
	TextDrawSetProportional(TD_iPhone_Call[3], 1);
    TextDrawSetSelectable(TD_iPhone_Call[3], true);

	TD_iPhone_Call[4] = TextDrawCreate(524.999877, 304.229614, "4");
	TextDrawLetterSize(TD_iPhone_Call[4], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[4], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[4], 2);
	TextDrawColor(TD_iPhone_Call[4], -1);
	TextDrawUseBox(TD_iPhone_Call[4], true);
	TextDrawBoxColor(TD_iPhone_Call[4], 0);
	TextDrawSetShadow(TD_iPhone_Call[4], 0);
	TextDrawSetOutline(TD_iPhone_Call[4], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[4], 51);
	TextDrawFont(TD_iPhone_Call[4], 1);
	TextDrawSetProportional(TD_iPhone_Call[4], 1);
	TextDrawSetSelectable(TD_iPhone_Call[4], true);

	TD_iPhone_Call[5] = TextDrawCreate(549.999328, 304.229614, "5");
	TextDrawLetterSize(TD_iPhone_Call[5], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[5], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[5], 2);
	TextDrawColor(TD_iPhone_Call[5], -1);
	TextDrawUseBox(TD_iPhone_Call[5], true);
	TextDrawBoxColor(TD_iPhone_Call[5], 0);
	TextDrawSetShadow(TD_iPhone_Call[5], 0);
	TextDrawSetOutline(TD_iPhone_Call[5], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[5], 51);
	TextDrawFont(TD_iPhone_Call[5], 1);
	TextDrawSetProportional(TD_iPhone_Call[5], 1);
	TextDrawSetSelectable(TD_iPhone_Call[5], true);

	TD_iPhone_Call[6] = TextDrawCreate(574.999084, 304.229614, "6");
	TextDrawLetterSize(TD_iPhone_Call[6], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[6], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[6], 2);
	TextDrawColor(TD_iPhone_Call[6], -1);
	TextDrawUseBox(TD_iPhone_Call[6], true);
	TextDrawBoxColor(TD_iPhone_Call[6], 0);
	TextDrawSetShadow(TD_iPhone_Call[6], 0);
	TextDrawSetOutline(TD_iPhone_Call[6], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[6], 51);
	TextDrawFont(TD_iPhone_Call[6], 1);
	TextDrawSetProportional(TD_iPhone_Call[6], 1);
	TextDrawSetSelectable(TD_iPhone_Call[6], true);

	TD_iPhone_Call[7] = TextDrawCreate(524.999877, 326.800170, "7");
	TextDrawLetterSize(TD_iPhone_Call[7], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[7], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[7], 2);
	TextDrawColor(TD_iPhone_Call[7], -1);
	TextDrawUseBox(TD_iPhone_Call[7], true);
	TextDrawBoxColor(TD_iPhone_Call[7], 0);
	TextDrawSetShadow(TD_iPhone_Call[7], 0);
	TextDrawSetOutline(TD_iPhone_Call[7], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[7], 51);
	TextDrawFont(TD_iPhone_Call[7], 1);
	TextDrawSetProportional(TD_iPhone_Call[7], 1);
	TextDrawSetSelectable(TD_iPhone_Call[7], true);

	TD_iPhone_Call[8] = TextDrawCreate(549.999328, 326.800170, "8");
	TextDrawLetterSize(TD_iPhone_Call[8], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[8], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[8], 2);
	TextDrawColor(TD_iPhone_Call[8], -1);
	TextDrawUseBox(TD_iPhone_Call[8], true);
	TextDrawBoxColor(TD_iPhone_Call[8], 0);
	TextDrawSetShadow(TD_iPhone_Call[8], 0);
	TextDrawSetOutline(TD_iPhone_Call[8], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[8], 51);
	TextDrawFont(TD_iPhone_Call[8], 1);
	TextDrawSetProportional(TD_iPhone_Call[8], 1);
	TextDrawSetSelectable(TD_iPhone_Call[8], true);

	TD_iPhone_Call[9] = TextDrawCreate(574.999084, 326.800170, "9");
	TextDrawLetterSize(TD_iPhone_Call[9], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[9], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[9], 2);
	TextDrawColor(TD_iPhone_Call[9], -1);
	TextDrawUseBox(TD_iPhone_Call[9], true);
	TextDrawBoxColor(TD_iPhone_Call[9], 0);
	TextDrawSetShadow(TD_iPhone_Call[9], 0);
	TextDrawSetOutline(TD_iPhone_Call[9], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[9], 51);
	TextDrawFont(TD_iPhone_Call[9], 1);
	TextDrawSetProportional(TD_iPhone_Call[9], 1);
	TextDrawSetSelectable(TD_iPhone_Call[9], true);

	TD_iPhone_Call[10] = TextDrawCreate(549.999328, 349.370727, "0");
	TextDrawLetterSize(TD_iPhone_Call[10], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[10], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[10], 2);
	TextDrawColor(TD_iPhone_Call[10], -1);
	TextDrawUseBox(TD_iPhone_Call[10], true);
	TextDrawBoxColor(TD_iPhone_Call[10], 0);
	TextDrawSetShadow(TD_iPhone_Call[10], 0);
	TextDrawSetOutline(TD_iPhone_Call[10], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[10], 51);
	TextDrawFont(TD_iPhone_Call[10], 1);
	TextDrawSetProportional(TD_iPhone_Call[10], 1);
	TextDrawSetSelectable(TD_iPhone_Call[10], true);

	TD_iPhone_Call[11] = TextDrawCreate(524.999877, 349.370727, "C");
	TextDrawLetterSize(TD_iPhone_Call[11], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[11], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[11], 2);
	TextDrawColor(TD_iPhone_Call[11], -1);
	TextDrawUseBox(TD_iPhone_Call[11], true);
	TextDrawBoxColor(TD_iPhone_Call[11], 0);
	TextDrawSetShadow(TD_iPhone_Call[11], 0);
	TextDrawSetOutline(TD_iPhone_Call[11], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[11], 51);
	TextDrawFont(TD_iPhone_Call[11], 1);
	TextDrawSetProportional(TD_iPhone_Call[11], 1);
	TextDrawSetSelectable(TD_iPhone_Call[11], true);

	TD_iPhone_Call[12] = TextDrawCreate(574.999084, 349.370727, "D");
	TextDrawLetterSize(TD_iPhone_Call[12], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[12], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[12], 2);
	TextDrawColor(TD_iPhone_Call[12], -1);
	TextDrawUseBox(TD_iPhone_Call[12], true);
	TextDrawBoxColor(TD_iPhone_Call[12], 0);
	TextDrawSetShadow(TD_iPhone_Call[12], 0);
	TextDrawSetOutline(TD_iPhone_Call[12], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[12], 51);
	TextDrawFont(TD_iPhone_Call[12], 1);
	TextDrawSetProportional(TD_iPhone_Call[12], 1);
	TextDrawSetSelectable(TD_iPhone_Call[12], true);

	//Call YES/NO
	TD_iPhone_CallYesNo[0] = TextDrawCreate(534.333129, 320.651794, "N");
	TextDrawLetterSize(TD_iPhone_CallYesNo[0], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_CallYesNo[0], 5.000000, 20.325927);
	TextDrawAlignment(TD_iPhone_CallYesNo[0], 2);
	TextDrawColor(TD_iPhone_CallYesNo[0], -1);
	TextDrawUseBox(TD_iPhone_CallYesNo[0], true);
	TextDrawBoxColor(TD_iPhone_CallYesNo[0], 2080375039);
	TextDrawSetShadow(TD_iPhone_CallYesNo[0], 0);
	TextDrawSetOutline(TD_iPhone_CallYesNo[0], 0);
	TextDrawBackgroundColor(TD_iPhone_CallYesNo[0], 51);
	TextDrawFont(TD_iPhone_CallYesNo[0], 1);
	TextDrawSetProportional(TD_iPhone_CallYesNo[0], 1);

	TD_iPhone_CallYesNo[1] = TextDrawCreate(563.666198, 320.651794, "Y");
	TextDrawLetterSize(TD_iPhone_CallYesNo[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_CallYesNo[1], 5.000000, 20.325927);
	TextDrawAlignment(TD_iPhone_CallYesNo[1], 2);
	TextDrawColor(TD_iPhone_CallYesNo[1], -1);
	TextDrawUseBox(TD_iPhone_CallYesNo[1], true);
	TextDrawBoxColor(TD_iPhone_CallYesNo[1], 8388863);
	TextDrawSetShadow(TD_iPhone_CallYesNo[1], 0);
	TextDrawSetOutline(TD_iPhone_CallYesNo[1], 0);
	TextDrawBackgroundColor(TD_iPhone_CallYesNo[1], 51);
	TextDrawFont(TD_iPhone_CallYesNo[1], 1);
	TextDrawSetProportional(TD_iPhone_CallYesNo[1], 1);

	/* iPhone S */
	
	//ropa
	TD_Ropa[0] = TextDrawCreate(619.510986, 354.416778, "usebox");
	TextDrawLetterSize(TD_Ropa[0], 0.000000, 7.425183);
	TextDrawTextSize(TD_Ropa[0], 498.380767, 0.000000);
	TextDrawAlignment(TD_Ropa[0], 1);
	TextDrawColor(TD_Ropa[0], 0);
	TextDrawUseBox(TD_Ropa[0], true);
	TextDrawBoxColor(TD_Ropa[0], 102);
	TextDrawSetShadow(TD_Ropa[0], 0);
	TextDrawSetOutline(TD_Ropa[0], 0);
	TextDrawFont(TD_Ropa[0], 0);

	TD_Ropa[1] = TextDrawCreate(504.128875, 342.999877, "Catalogo");
	TextDrawLetterSize(TD_Ropa[1], 0.494978, 1.769167);
	TextDrawAlignment(TD_Ropa[1], 1);
	TextDrawColor(TD_Ropa[1], -1);
	TextDrawSetShadow(TD_Ropa[1], 0);
	TextDrawSetOutline(TD_Ropa[1], 1);
	TextDrawBackgroundColor(TD_Ropa[1], 255);
	TextDrawFont(TD_Ropa[1], 0);
	TextDrawSetProportional(TD_Ropa[1], 1);

	TD_Ropa[2] = TextDrawCreate(521.464111, 373.333190, "<<");
	TextDrawLetterSize(TD_Ropa[2], 0.449999, 1.600000);
	TextDrawTextSize(TD_Ropa[2], 10.811127, 28.583333);
	TextDrawAlignment(TD_Ropa[2], 2);
	TextDrawColor(TD_Ropa[2], -1);
	TextDrawUseBox(TD_Ropa[2], true);
	TextDrawBoxColor(TD_Ropa[2], 7143423);
	TextDrawSetShadow(TD_Ropa[2], 0);
	TextDrawSetOutline(TD_Ropa[2], 0);
	TextDrawBackgroundColor(TD_Ropa[2], 51);
	TextDrawFont(TD_Ropa[2], 1);
	TextDrawSetProportional(TD_Ropa[2], 1);
	TextDrawSetSelectable(TD_Ropa[2], true);

	TD_Ropa[3] = TextDrawCreate(558.540222, 373.333190, "$$");
	TextDrawLetterSize(TD_Ropa[3], 0.449999, 1.600000);
	TextDrawTextSize(TD_Ropa[3], 10.811127, 28.583333);
	TextDrawAlignment(TD_Ropa[3], 2);
	TextDrawColor(TD_Ropa[3], -1);
	TextDrawUseBox(TD_Ropa[3], true);
	TextDrawBoxColor(TD_Ropa[3], 7143423);
	TextDrawSetShadow(TD_Ropa[3], 0);
	TextDrawSetOutline(TD_Ropa[3], 0);
	TextDrawBackgroundColor(TD_Ropa[3], 51);
	TextDrawFont(TD_Ropa[3], 1);
	TextDrawSetProportional(TD_Ropa[3], 1);
	TextDrawSetSelectable(TD_Ropa[3], true);

	TD_Ropa[4] = TextDrawCreate(595.616760, 373.333190, ">>");
	TextDrawLetterSize(TD_Ropa[4], 0.449999, 1.600000);
	TextDrawTextSize(TD_Ropa[4], 10.811127, 28.583333);
	TextDrawAlignment(TD_Ropa[4], 2);
	TextDrawColor(TD_Ropa[4], -1);
	TextDrawUseBox(TD_Ropa[4], true);
	TextDrawBoxColor(TD_Ropa[4], 7143423);
	TextDrawSetShadow(TD_Ropa[4], 0);
	TextDrawSetOutline(TD_Ropa[4], 0);
	TextDrawBackgroundColor(TD_Ropa[4], 51);
	TextDrawFont(TD_Ropa[4], 1);
	TextDrawSetProportional(TD_Ropa[4], 1);
	TextDrawSetSelectable(TD_Ropa[4], true);

	TD_Ropa[5] = TextDrawCreate(506.003143, 399.000244, "precio:");
	TextDrawLetterSize(TD_Ropa[5], 0.449999, 1.600000);
	TextDrawAlignment(TD_Ropa[5], 1);
	TextDrawColor(TD_Ropa[5], 7077887);
	TextDrawSetShadow(TD_Ropa[5], 0);
	TextDrawSetOutline(TD_Ropa[5], 1);
	TextDrawBackgroundColor(TD_Ropa[5], 255);
	TextDrawFont(TD_Ropa[5], 3);
	TextDrawSetProportional(TD_Ropa[5], 1);
	//VehiclesTD
	TD_GrottiCatalogo[0] = TextDrawCreate(610.608764, 340.416931, "usebox");
	TextDrawLetterSize(TD_GrottiCatalogo[0], 0.000000, 7.921101);
	TextDrawTextSize(TD_GrottiCatalogo[0], 496.975219, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[0], 1);
	TextDrawColor(TD_GrottiCatalogo[0], 0);
	TextDrawUseBox(TD_GrottiCatalogo[0], true);
	TextDrawBoxColor(TD_GrottiCatalogo[0], 102);
	TextDrawSetShadow(TD_GrottiCatalogo[0], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[0], 0);
	TextDrawFont(TD_GrottiCatalogo[0], 0);

/*	TD_GrottiCatalogo[1] = TextDrawCreate(504.254547, 349.934082, simbolos("Vel.Máxima~n~~n~Aceleración"));
	TextDrawLetterSize(TD_GrottiCatalogo[1], 0.298667, 1.232499);
	TextDrawAlignment(TD_GrottiCatalogo[1], 1);
	TextDrawColor(TD_GrottiCatalogo[1], -1);
	TextDrawSetShadow(TD_GrottiCatalogo[1], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[1], 0);
	TextDrawBackgroundColor(TD_GrottiCatalogo[1], 51);
	TextDrawFont(TD_GrottiCatalogo[1], 1);
	TextDrawSetProportional(TD_GrottiCatalogo[1], 1);
*/
	TD_GrottiCatalogo[2] = TextDrawCreate(603.112792, 364.916656, "maximocaja");
	TextDrawLetterSize(TD_GrottiCatalogo[2], 0.000000, 0.349445);
	TextDrawTextSize(TD_GrottiCatalogo[2], 502.597320, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[2], 1);
	TextDrawColor(TD_GrottiCatalogo[2], 0);
	TextDrawUseBox(TD_GrottiCatalogo[2], true);
	TextDrawBoxColor(TD_GrottiCatalogo[2], 255);
	TextDrawSetShadow(TD_GrottiCatalogo[2], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[2], 0);
	TextDrawFont(TD_GrottiCatalogo[2], 0);

	TD_GrottiCatalogo[3] = TextDrawCreate(601.770141, 367.083343, "maximobarraatras");
	TextDrawLetterSize(TD_GrottiCatalogo[3], 0.000000, -0.165925);
	TextDrawTextSize(TD_GrottiCatalogo[3], 504.002929, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[3], 1);
	TextDrawColor(TD_GrottiCatalogo[3], 0);
	TextDrawUseBox(TD_GrottiCatalogo[3], true);
	TextDrawBoxColor(TD_GrottiCatalogo[3], -1061109505);
	TextDrawSetShadow(TD_GrottiCatalogo[3], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[3], 0);
	TextDrawFont(TD_GrottiCatalogo[3], 0);

	TD_GrottiCatalogo[4] = TextDrawCreate(604.112915, 386.916839, "acelecaja");
	TextDrawLetterSize(TD_GrottiCatalogo[4], 0.000000, 0.349445);
	TextDrawTextSize(TD_GrottiCatalogo[4], 502.597259, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[4], 1);
	TextDrawColor(TD_GrottiCatalogo[4], 0);
	TextDrawUseBox(TD_GrottiCatalogo[4], true);
	TextDrawBoxColor(TD_GrottiCatalogo[4], 255);
	TextDrawSetShadow(TD_GrottiCatalogo[4], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[4], 0);
	TextDrawFont(TD_GrottiCatalogo[4], 0);

	TD_GrottiCatalogo[5] = TextDrawCreate(601.770141, 389.666687, "acelebarraatras");
	TextDrawLetterSize(TD_GrottiCatalogo[5], 0.000000, -0.165925);
	TextDrawTextSize(TD_GrottiCatalogo[5], 504.002929, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[5], 1);
	TextDrawColor(TD_GrottiCatalogo[5], 0);
	TextDrawUseBox(TD_GrottiCatalogo[5], true);
	TextDrawBoxColor(TD_GrottiCatalogo[5], -1061109505);
	TextDrawSetShadow(TD_GrottiCatalogo[5], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[5], 0);
	TextDrawFont(TD_GrottiCatalogo[5], 0);

	TD_GrottiCatalogo[6] = TextDrawCreate(315.657257, 399.583374, "COMPRAR");
	TextDrawLetterSize(TD_GrottiCatalogo[6], 0.449999, 1.600000);
	TextDrawAlignment(TD_GrottiCatalogo[6], 2);
	TextDrawColor(TD_GrottiCatalogo[6], -5963521);
	TextDrawSetShadow(TD_GrottiCatalogo[6], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[6], 1);
	TextDrawBackgroundColor(TD_GrottiCatalogo[6], 255);
	TextDrawFont(TD_GrottiCatalogo[6], 3);
	TextDrawSetProportional(TD_GrottiCatalogo[6], 1);
	TextDrawTextSize(TD_GrottiCatalogo[6], 20.0, 70.0);
	TextDrawSetSelectable(TD_GrottiCatalogo[6], true);

	TD_GrottiCatalogo[7] = TextDrawCreate(354.670501, 396.466552, "~>~");
	TextDrawLetterSize(TD_GrottiCatalogo[7], 0.465929, 2.049168);
	TextDrawAlignment(TD_GrottiCatalogo[7], 2);
	TextDrawColor(TD_GrottiCatalogo[7], -1);
	TextDrawSetShadow(TD_GrottiCatalogo[7], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[7], 1);
	TextDrawBackgroundColor(TD_GrottiCatalogo[7], 51);
	TextDrawFont(TD_GrottiCatalogo[7], 1);
	TextDrawSetProportional(TD_GrottiCatalogo[7], 1);
    TextDrawTextSize(TD_GrottiCatalogo[7], 40.0, 40.0);
	TextDrawSetSelectable(TD_GrottiCatalogo[7], true);

	TD_GrottiCatalogo[8] = TextDrawCreate(262.333953, 396.466552, "~<~");
	TextDrawLetterSize(TD_GrottiCatalogo[8], 0.465929, 2.049168);
	TextDrawAlignment(TD_GrottiCatalogo[8], 2);
	TextDrawColor(TD_GrottiCatalogo[8], -1);
	TextDrawSetShadow(TD_GrottiCatalogo[8], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[8], 1);
	TextDrawBackgroundColor(TD_GrottiCatalogo[8], 51);
	TextDrawFont(TD_GrottiCatalogo[8], 1);
	TextDrawSetProportional(TD_GrottiCatalogo[8], 1);
	TextDrawTextSize(TD_GrottiCatalogo[8], 40.0, 40.0);
	TextDrawSetSelectable(TD_GrottiCatalogo[8], true);

	WelcomeTD[0] = TextDrawCreate(1153.555419, -37.326667, "usebox");
	TextDrawLetterSize(WelcomeTD[0], 0.000000, 82.072463);
	TextDrawTextSize(WelcomeTD[0], -55.333335, 0.000000);
	TextDrawAlignment(WelcomeTD[0], 1);
	TextDrawColor(WelcomeTD[0], 0);
	TextDrawUseBox(WelcomeTD[0], true);
	TextDrawBoxColor(WelcomeTD[0], 255);
	TextDrawSetShadow(WelcomeTD[0], 0);
	TextDrawSetOutline(WelcomeTD[0], 0);
	TextDrawFont(WelcomeTD[0], 0);
	
	WelcomeTD[1] = TextDrawCreate(108.000000, 102.044509, "bienvenido");
	TextDrawLetterSize(WelcomeTD[1], 0.792666, 4.721067);
	TextDrawAlignment(WelcomeTD[1], 1);
	TextDrawColor(WelcomeTD[1], -1);
	TextDrawSetShadow(WelcomeTD[1], 0);
	TextDrawSetOutline(WelcomeTD[1], 1);
	TextDrawBackgroundColor(WelcomeTD[1], 51);
	TextDrawFont(WelcomeTD[1], 2);
	TextDrawSetProportional(WelcomeTD[1], 1);

	WelcomeTD[2] = TextDrawCreate(109.444427, 138.884536, "Cargando...");
	TextDrawLetterSize(WelcomeTD[2], 0.242889, 1.346132);
	TextDrawAlignment(WelcomeTD[2], 1);
	TextDrawColor(WelcomeTD[2], -1);
	TextDrawSetShadow(WelcomeTD[2], 0);
	TextDrawSetOutline(WelcomeTD[2], 1);
	TextDrawBackgroundColor(WelcomeTD[2], 51);
	TextDrawFont(WelcomeTD[2], 2);
	TextDrawSetProportional(WelcomeTD[2], 1);

	WelcomeTD[3] = TextDrawCreate(222.222274, 416.142211, "Montevideo RolePlay 1.01");
	TextDrawLetterSize(WelcomeTD[3], 0.449999, 1.600000);
	TextDrawAlignment(WelcomeTD[3], 1);
	TextDrawColor(WelcomeTD[3], -2621185);
	TextDrawSetShadow(WelcomeTD[3], 0);
	TextDrawSetOutline(WelcomeTD[3], 1);
	TextDrawBackgroundColor(WelcomeTD[3], 51);
	TextDrawFont(WelcomeTD[3], 3);
	TextDrawSetProportional(WelcomeTD[3], 1);

    TD_ST[0] = TextDrawCreate(637.666442, 5.486647, "_");
	TextDrawLetterSize(TD_ST[0], 0.000000, 48.472476);
	TextDrawTextSize(TD_ST[0], 0.666631, 0.000000);
	TextDrawAlignment(TD_ST[0], 1);
	TextDrawColor(TD_ST[0], 0);
	TextDrawUseBox(TD_ST[0], false);
	TextDrawBoxColor(TD_ST[0], 102);
	TextDrawSetShadow(TD_ST[0], 0);
	TextDrawSetOutline(TD_ST[0], 0);
	TextDrawFont(TD_ST[0], 0);
	
	TD_ST[1] = TextDrawCreate(637.666442, 5.486647, "usebox");
	TextDrawLetterSize(TD_ST[1], 0.000000, 48.472476);
	TextDrawTextSize(TD_ST[1], 0.666631, 0.000000);
	TextDrawAlignment(TD_ST[1], 1);
	TextDrawColor(TD_ST[1], 0);
	TextDrawUseBox(TD_ST[1], true);
	TextDrawBoxColor(TD_ST[1], 102);
	TextDrawSetShadow(TD_ST[1], 0);
	TextDrawSetOutline(TD_ST[1], 0);
	TextDrawFont(TD_ST[1], 0);

	TD_ST[2] = TextDrawCreate(216.444549, 41.315570, "new clan~n~__roleplay");
	TextDrawLetterSize(TD_ST[2], 0.882889, 3.033599);
	TextDrawAlignment(TD_ST[2], 1);
	TextDrawColor(TD_ST[2], -1);
	TextDrawSetShadow(TD_ST[2], 0);
	TextDrawSetOutline(TD_ST[2], 8);
	TextDrawBackgroundColor(TD_ST[2], 51);
	TextDrawFont(TD_ST[2], 3);
	TextDrawSetProportional(TD_ST[2], 1);


	TD_ST[4] = TextDrawCreate(448.666717, 171.740020, "usebox");
	TextDrawLetterSize(TD_ST[4], 0.000000, 11.741603);
	TextDrawTextSize(TD_ST[4], 191.777908, 0.000000);
	TextDrawAlignment(TD_ST[4], 1);
	TextDrawColor(TD_ST[4], 0);
	TextDrawUseBox(TD_ST[4], true);
	TextDrawBoxColor(TD_ST[4], 102);
	TextDrawSetShadow(TD_ST[4], 0);
	TextDrawSetOutline(TD_ST[4], 0);
	TextDrawFont(TD_ST[4], 0);

	TD_ST[5] = TextDrawCreate(197.333511, 184.675552, "~<~");
	TextDrawLetterSize(TD_ST[5], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[5], 2);
	TextDrawColor(TD_ST[5], -1);
	TextDrawSetShadow(TD_ST[5], 0);
	TextDrawSetOutline(TD_ST[5], 1);
	TextDrawBackgroundColor(TD_ST[5], 51);
	TextDrawFont(TD_ST[5], 1);
	TextDrawSetProportional(TD_ST[5], 1);
	TextDrawTextSize(TD_ST[5], 50, 50);
	TextDrawSetSelectable(TD_ST[5], true);

	TD_ST[6] = TextDrawCreate(197.333511, 240.435302, "~<~");
	TextDrawLetterSize(TD_ST[6], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[6], 2);
	TextDrawColor(TD_ST[6], -1);
	TextDrawSetShadow(TD_ST[6], 0);
	TextDrawSetOutline(TD_ST[6], 1);
	TextDrawBackgroundColor(TD_ST[6], 51);
	TextDrawFont(TD_ST[6], 1);
	TextDrawSetProportional(TD_ST[6], 1);
	TextDrawTextSize(TD_ST[6], 50, 50);
	TextDrawSetSelectable(TD_ST[6], true);

	TD_ST[7] = TextDrawCreate(425.555999, 240.435302, "~>~");
	TextDrawLetterSize(TD_ST[7], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[7], 2);
	TextDrawColor(TD_ST[7], -1);
	TextDrawSetShadow(TD_ST[7], 0);
	TextDrawSetOutline(TD_ST[7], 1);
	TextDrawBackgroundColor(TD_ST[7], 51);
	TextDrawFont(TD_ST[7], 1);
	TextDrawSetProportional(TD_ST[7], 1);
	TextDrawTextSize(TD_ST[7], 50, 50);
	TextDrawSetSelectable(TD_ST[7], true);

	TD_ST[8] = TextDrawCreate(425.555999, 184.675552, "~>~");
	TextDrawLetterSize(TD_ST[8], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[8], 2);
	TextDrawColor(TD_ST[8], -1);
	TextDrawSetShadow(TD_ST[8], 0);
	TextDrawSetOutline(TD_ST[8], 1);
	TextDrawBackgroundColor(TD_ST[8], 51);
	TextDrawFont(TD_ST[8], 1);
	TextDrawSetProportional(TD_ST[8], 1);
	TextDrawTextSize(TD_ST[8], 50, 50);
	TextDrawSetSelectable(TD_ST[8], true);

	TD_ST[9] = TextDrawCreate(319.111389, 372.835571, "continuar");
	TextDrawLetterSize(TD_ST[9], 0.564222, 2.067912);
	TextDrawTextSize(TD_ST[9], 21.333337, 125.440010);
	TextDrawAlignment(TD_ST[9], 2);
	TextDrawColor(TD_ST[9], -1);
	TextDrawUseBox(TD_ST[9], true);
	TextDrawBoxColor(TD_ST[9], -1061109760);
	TextDrawSetShadow(TD_ST[9], 0);
	TextDrawSetOutline(TD_ST[9], 1);
	TextDrawBackgroundColor(TD_ST[9], 51);
	TextDrawFont(TD_ST[9], 3);
	TextDrawSetProportional(TD_ST[9], 1);
	TextDrawSetSelectable(TD_ST[9], true);
	
	TD_PLAYERDATA[0] = TextDrawCreate(316.889038, 319.075714, simbolos("¿Son correctos?"));//parte1
	TextDrawLetterSize(TD_PLAYERDATA[0], 0.449999, 1.600000);
	TextDrawAlignment(TD_PLAYERDATA[0], 2);
	TextDrawColor(TD_PLAYERDATA[0], -1);
	TextDrawSetShadow(TD_PLAYERDATA[0], 0);
	TextDrawSetOutline(TD_PLAYERDATA[0], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[0], 51);
	TextDrawFont(TD_PLAYERDATA[0], 1);
	TextDrawSetProportional(TD_PLAYERDATA[0], 1);

	TD_PLAYERDATA[1] = TextDrawCreate(319.111480, 153.813400, "tus datos");
	TextDrawLetterSize(TD_PLAYERDATA[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_PLAYERDATA[1], 48.888877, 252.373260);
	TextDrawAlignment(TD_PLAYERDATA[1], 2);
	TextDrawColor(TD_PLAYERDATA[1], -1507073);
	TextDrawUseBox(TD_PLAYERDATA[1], true);
	TextDrawBoxColor(TD_PLAYERDATA[1], 1162697215);
	TextDrawSetShadow(TD_PLAYERDATA[1], 0);
	TextDrawSetOutline(TD_PLAYERDATA[1], 0);
	TextDrawBackgroundColor(TD_PLAYERDATA[1], 51);
	TextDrawFont(TD_PLAYERDATA[1], 3);
	TextDrawSetProportional(TD_PLAYERDATA[1], 1);

	TD_PLAYERDATA[2] = TextDrawCreate(388.111968, 367.862304, "no");
	TextDrawLetterSize(TD_PLAYERDATA[2], 0.564221, 2.067912);
	TextDrawTextSize(TD_PLAYERDATA[2], 51.111133, 23.893312);
	TextDrawAlignment(TD_PLAYERDATA[2], 2);
	TextDrawColor(TD_PLAYERDATA[2], -1);
	TextDrawUseBox(TD_PLAYERDATA[2], true);
	TextDrawBoxColor(TD_PLAYERDATA[2], 1);
	TextDrawSetShadow(TD_PLAYERDATA[2], 0);
	TextDrawSetOutline(TD_PLAYERDATA[2], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[2], 51);
	TextDrawFont(TD_PLAYERDATA[2], 3);
	TextDrawSetProportional(TD_PLAYERDATA[2], 1);
	TextDrawSetSelectable(TD_PLAYERDATA[2], true);

	TD_PLAYERDATA[3] = TextDrawCreate(255.555541, 367.857849, simbolos("sí"));
	TextDrawLetterSize(TD_PLAYERDATA[3], 0.564221, 2.067912);
	TextDrawTextSize(TD_PLAYERDATA[3], 51.111133, 23.893312);
	TextDrawAlignment(TD_PLAYERDATA[3], 2);
	TextDrawColor(TD_PLAYERDATA[3], -1);
	TextDrawUseBox(TD_PLAYERDATA[3], true);
	TextDrawBoxColor(TD_PLAYERDATA[3], 16711680);
	TextDrawSetShadow(TD_PLAYERDATA[3], 0);
	TextDrawSetOutline(TD_PLAYERDATA[3], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[3], 51);
	TextDrawFont(TD_PLAYERDATA[3], 3);
	TextDrawSetProportional(TD_PLAYERDATA[3], 1);
	TextDrawSetSelectable(TD_PLAYERDATA[3], true);


	TD_PLAYERDATA[4] = TextDrawCreate(449.111145, 172.237686, "usebox");
	TextDrawLetterSize(TD_PLAYERDATA[4], 0.000000, 11.902604);
	TextDrawTextSize(TD_PLAYERDATA[4], 189.555603, 0.000000);
	TextDrawAlignment(TD_PLAYERDATA[4], 1);
	TextDrawColor(TD_PLAYERDATA[4], 0);
	TextDrawUseBox(TD_PLAYERDATA[4], true);
	TextDrawBoxColor(TD_PLAYERDATA[4], 102);
	TextDrawSetShadow(TD_PLAYERDATA[4], 0);
	TextDrawSetOutline(TD_PLAYERDATA[4], 0);
	TextDrawFont(TD_PLAYERDATA[4], 0);

	TD_PLAYERDATA[5] = TextDrawCreate(204.000045, 187.662200, "Nombre~n~~n~Edad~n~~n~Genero");
	TextDrawLetterSize(TD_PLAYERDATA[5], 0.449999, 1.600000);
	TextDrawAlignment(TD_PLAYERDATA[5], 1);
	TextDrawColor(TD_PLAYERDATA[5], -1);
	TextDrawSetShadow(TD_PLAYERDATA[5], 0);
	TextDrawSetOutline(TD_PLAYERDATA[5], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[5], 51);
	TextDrawFont(TD_PLAYERDATA[5], 1);
	TextDrawSetProportional(TD_PLAYERDATA[5], 1);
	
	
	
	// PUestos de info
	CreateDynamicObject(1444, 1714.56897, -1862.00928, 13.40750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 1479.56226, -1620.46985, 13.90706,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 1995.02405, -1452.68469, 13.43710,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1444, 1187.30322, -930.41052, 42.92493,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 615.66272, -1228.28015, 18.19140,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1444, 849.83258, -1796.12292, 13.67352,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 1443.42688, -2286.75879, 13.39686,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 2849.94849, -1967.06055, 10.92459,   0.00000, 0.00000, 0.00000);
	
	//Areas
	Area_CarWash = CreateDynamicRectangle(1909.005737, -1781.180664, 1913.502319, -1784.899291, 0);
	Area_Gruas = CreateDynamicRectangle(2452.293457, -2066.775390, 2702.714843, -2144.088867, 0);
	//

    new ROBJECT = CreateObject(18754, 1745.51514, -2066.06079, -38.52030,   0.00000, 0.00000, 0.00000); //VEHICULOS PERSONALES RECOGIDA
	SetObjectMaterial(ROBJECT, 0, 0, "null", "null");

	LSPD_Doors[0] = CreateDynamicObject(3055, 1588.5118, -1637.83386, 14.59201,   0.00000, 0.00000, 0.00000);
    LSPD_Doors[1] = CreateDynamicObject(1495, 1582.61719, -1637.90515, 12.32990,   0.00000, 0.00000, 0.00000);
    LSPD_Doors[2] = CreateDynamicObject(968, 1544.69897, -1630.83057, 13.13380,   0.00000, 90.00000, 90.00000);
    
    //test
    //portones
    CreateDynamicObject(17951, 2011.56982, -1992.75061, 15.46020,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17951, 2011.62976, -2002.11060, 15.46020,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17951, 2011.62976, -2011.47058, 15.46020,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17951, 2011.62976, -2020.73059, 15.46020,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17951, 2011.62976, -2030.03064, 15.46020,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17951, 2011.62976, -2039.19055, 15.46020,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(17951, 2011.60669, -2048.22900, 15.46020,   0.00000, 0.00000, 0.00000);
    //arboles
    CreateDynamicObject(792, 1967.99744, -1981.40344, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -1991.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2001.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2021.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2011.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2031.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2041.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2051.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2061.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2071.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2081.42334, 12.7813,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(792, 1967.99744, -2091.42334, 12.7813,   0.00000, 0.00000, 0.00000);


    //parte del piso
    CreateDynamicObject(9339, 2024.34180, -1980.18945, 13.22300,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(9339, 2050.44189, -1980.18945, 13.22300,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(9339, 2057.88184, -1980.20947, 13.22300,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(9339, 2070.73096, -1993.10413, 13.22300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(9339, 2070.73096, -2019.10413, 13.22300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(9339, 2070.73096, -2059.10400, 13.22300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(9339, 2070.73096, -2086.90405, 13.22300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2023.70386, -1984.90723, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2034.16394, -1984.90723, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2044.64380, -1984.90723, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2055.14917, -1984.90955, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -1984.91626, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(3578, 2024.17297, -1989.48083, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2034.43298, -1989.48083, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2044.71301, -1989.48083, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2054.99292, -1989.50085, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2060.24512, -1994.39404, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 2065.67065, -1994.53625, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2004.15625, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2013.81628, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2023.43628, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2027.45630, 12.55070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(3578, 2060.24512, -2006.75403, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2016.99402, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2027.09399, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -1996.65405, 11.90680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 2065.67065, -2050.93628, 12.55070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2060.41626, 12.55070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2070.05640, 12.55070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2079.53638, 12.55070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2089.09619, 12.55070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2065.67065, -2095.23633, 12.53070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(9339, 2070.71094, -2084.60400, 13.22300,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2060.24512, -2051.25391, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2061.25391, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2071.25391, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2081.25391, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2091.25391, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2060.24512, -2095.45410, 11.90680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(9339, 2046.93604, -2099.45850, 12.44300,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(9339, 2032.51733, -2099.51074, 12.46300,   0.00000, 90.00000, 90.00000);

    CreateDynamicObject(3578, 2013.89294, -1989.48083, 11.88680,   0.00000, 0.00000, 0.00000);
   // CreateDynamicObject(3578, 2018.60779, -1984.53503, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2013.55298, -1996.10083, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.55298, -1998.92078, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.55298, -2005.44080, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2008.28870, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19362, 2016.92700, -2006.82288, 12.57570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2013.44702, -2006.80286, 12.55570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2013.45996, -1997.50256, 12.55570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2016.92700, -1997.52295, 12.55570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2013.46387, -1984.8872, 12.57070,   0.00000, 90.00000, 0.00000);

    
    CreateDynamicObject(3578, 2013.51685, -2014.66870, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2017.40869, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2026.78870, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2033.22876, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2035.94873, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2024.04871, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19362, 2016.92700, -2016.02295, 12.57570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2016.92700, -2025.42285, 12.57570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2016.92700, -2034.58289, 12.57570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2013.44702, -2016.02295, 12.55570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2013.44702, -2025.40295, 12.55570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2013.44702, -2034.58289, 12.55570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(3578, 2019.45325, -2056.65527, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2014.23767, -2051.77441, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2014.14294, -2056.54956, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2042.40869, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3578, 2013.51685, -2045.12866, 11.88680,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19362, 2016.86865, -2043.75903, 12.57570,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19362, 2013.44702, -2043.75903, 12.55570,   0.00000, 90.00000, 0.00000);

    CreateDynamicObject(19377, 2011.82800, -2059.32910, 16.51070,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2013.46387, -1984.52722, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2014.14294, -2066.16968, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2014.08691, -2075.79102, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2014.14294, -2085.42944, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(19377, 2014.14294, -2095.08960, 12.57070,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(3578, 2019.45325, -2066.47510, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2019.47461, -2076.52051, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2019.47986, -2086.69678, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(3578, 2019.46057, -2094.93628, 11.88680,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(8661, 1991.59692, -1990.09790, 27.82010,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(8661, 1991.59692, -2010.01794, 27.82010,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(8661, 1991.48254, -2030.76294, 21.48010,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(8661, 1991.46741, -2070.59595, 21.48010,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(8661, 1991.45801, -2090.09521, 21.48010,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(8661, 1991.46741, -2050.59595, 21.48010,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1536, 1989.67957, -2100.18652, 12.55640,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1536, 1992.67957, -2100.18652, 12.55640,   0.00000, 0.00000, 900.00000);
    CreateDynamicObject(948, 1993.16016, -2100.46851, 12.49940,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(948, 1989.24011, -2100.46851, 12.49940,   0.00000, 0.00000, 0.00000);

    CreateDynamicObject(3578, 2014.23767, -2051.77441, 11.88680,   0.00000, 0.00000, 0.00000);
    
    //interior
    CreateDynamicObject(1726, 1995.96252, -1972.10034, 1012.53448,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1726, 1993.78247, -1972.10034, 1012.53448,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1726, 1991.58252, -1972.10034, 1012.53448,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1726, 1989.30249, -1972.10034, 1012.53448,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1726, 1988.75818, -1974.67883, 1012.53448,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1726, 1988.75818, -1976.79883, 1012.53448,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1726, 1988.75818, -1979.09875, 1012.53448,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1726, 1988.75818, -1981.37878, 1012.53448,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(646, 1988.72778, -1971.92358, 1013.97638,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1817, 1993.72900, -1977.71301, 1012.55469,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1817, 1992.02307, -1977.74060, 1012.55469,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1551, 1992.52588, -1977.23926, 1013.26361,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1546, 1994.13184, -1977.31165, 1013.12329,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1546, 1994.50195, -1977.07239, 1013.12329,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1546, 1994.49829, -1977.45459, 1013.12329,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1543, 1992.38977, -1977.04297, 1013.02191,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1544, 1992.99268, -1977.19629, 1013.00647,   0.00000, 0.00000, 0.00000);

    CreateDynamicObject(19379, 2015.15417, -2043.51025, 2003.89355,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19443, 1995.76685, -1960.09827, 99.42597,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19379, 1985.20996, -1987.07898, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1975.65820, -1987.11353, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1994.76318, -1987.04590, 1012.55298,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 2004.30835, -1987.02209, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 2004.29321, -1976.75073, 1012.51300,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1994.79028, -1976.65442, 1012.51300,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1985.16504, -1976.62781, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1975.62708, -1976.63000, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1975.65173, -1966.30457, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1985.27441, -1966.30554, 1012.55298,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1994.81482, -1966.29822, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 2004.37976, -1966.31201, 1012.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2004.38330, -1961.57996, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19362, 2007.59143, -1961.59192, 1016.09058,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 2004.38330, -1961.57996, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 2004.37097, -1956.40906, 1014.60413,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2004.37097, -1956.38904, 1017.84412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19362, 2006.03149, -1959.95959, 1016.09058,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19379, 2004.56116, -1960.66357, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2258, 2002.43481, -1961.26465, 1015.96130,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1994.86328, -1961.57996, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1985.24341, -1961.57996, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1975.70337, -1961.58032, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 1994.93323, -1960.66357, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19362, 1972.55139, -1961.59192, 1016.09058,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 1985.42102, -1960.66357, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 1977.78101, -1960.64355, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1994.89099, -1956.40906, 1014.60413,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1985.47095, -1956.40906, 1014.60413,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.99084, -1956.40906, 1014.60413,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19362, 1974.08203, -1959.96497, 1016.09058,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1994.97095, -1956.38904, 1017.84412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1985.47095, -1956.38904, 1017.84412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.87097, -1956.38904, 1017.84412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1994.86328, -1961.57996, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1985.24341, -1961.57996, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1975.70337, -1961.58032, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2254, 1996.58789, -1960.78455, 1016.02301,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2256, 1990.59094, -1960.78455, 1015.96368,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2257, 1985.02441, -1960.78455, 1016.23297,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2259, 1979.83545, -1961.12317, 1016.62457,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1971.20361, -1964.40784, 1017.38409,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1971.18970, -1973.91089, 1017.38409,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1971.20801, -1992.98645, 1017.38409,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1971.19092, -1983.41809, 1017.38409,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2259, 1977.79822, -1961.22461, 1015.44910,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19362, 1972.09729, -1992.04248, 1016.09058,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1975.70337, -1991.99194, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1975.70337, -1992.01184, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1985.24341, -1992.01184, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1994.86328, -1992.01184, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 2004.38330, -1992.01184, 1023.02411,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19362, 2007.59143, -1992.01184, 1016.09058,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 2004.30334, -1992.01184, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1994.86328, -1991.99194, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19377, 1985.24341, -1992.01184, 1009.44409,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 1985.42102, -1992.95203, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 1977.75183, -1993.01099, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 1994.96350, -1992.93689, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19379, 2004.58105, -1992.95203, 1012.53302,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(19362, 2005.97937, -1993.68896, 1016.09058,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19362, 1973.74951, -1993.81482, 1016.09058,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 1978.41040, -1997.18982, 1014.66412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1987.65259, -1997.19824, 1014.66412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1997.11353, -1997.19873, 1014.66412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2001.47937, -1997.21277, 1014.68408,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2001.49451, -1997.19971, 1017.82410,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1997.11353, -1997.19873, 1017.84412,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1987.65259, -1997.19824, 1017.82410,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1978.41040, -1997.18982, 1017.82410,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2004.34326, -1966.51282, 1020.48407,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1990.18335, -1966.53284, 1020.48407,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.18335, -1966.61279, 1020.46411,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.18335, -1977.01294, 1020.46411,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.18335, -1987.49292, 1020.46411,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1990.19446, -1977.02954, 1020.48407,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2004.36938, -1977.00195, 1020.48407,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.18335, -1977.01294, 1020.46411,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1975.18335, -1987.49292, 1020.46411,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 1990.19446, -1987.49292, 1020.48407,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19377, 2004.36938, -1987.49292, 1020.48407,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1997.04919, -1966.46606, 1020.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1997.05286, -1976.90674, 1020.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1997.03394, -1987.19800, 1020.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1982.64148, -1966.55322, 1020.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1982.66162, -1976.96387, 1020.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(19379, 1982.64233, -1987.34998, 1020.53302,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(2740, 1997.13306, -1988.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1991.37280, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1985.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1982.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1979.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.14380, -1976.69128, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1973.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1970.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1967.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, -1963.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18070, 1979.59070, -1980.39905, 1012.98889,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18070, 1979.30188, -1970.60718, 1012.98889,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(2260, 2004.00525, -1992.38562, 1015.95941,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2261, 2000.44958, -1992.34814, 1015.81958,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(14455, 1971.33459, -1978.13501, 1014.14819,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(14455, 1971.34619, -1969.45459, 1014.14819,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2266, 1996.84924, -1992.47522, 1016.30261,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2266, 1996.96545, -1992.33447, 1015.93707,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2740, 1982.41309, -1991.37280, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1988.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1985.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1982.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, 1982.41309, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1997.13306, 1982.37305, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1976.69128, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1979.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1973.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1970.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1967.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2740, 1982.41309, -1963.65271, 1020.25763,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2008.99036, -1990.88855, 1017.48407,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2008.99487, -1977.78455, 1017.48407,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2009.01038, -1971.76953, 1017.48407,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19377, 2008.99036, -1959.46082, 1017.48407,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1536, 2008.85974, -1976.23145, 1012.56592,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1536, 2008.85974, -1973.21155, 1012.56592,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(646, 2007.88953, -1965.59778, 1013.89178,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(646, 2008.15857, -1983.94543, 1013.89178,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19379, 2009.10583, -1963.68567, 1016.61298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19379, 2009.09851, -1983.54041, 1016.61298,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(640, 2008.41760, -1970.11108, 1013.23560,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(640, 2008.38098, -1979.52820, 1013.23560,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2008, 1981.15662, -1978.71802, 1012.65747,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2008, 1981.27893, -1981.10559, 1012.65747,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2008, 1980.99841, -1971.15356, 1012.65747,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2008, 1981.01575, -1968.84973, 1012.65747,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(2273, 1993.18677, -1992.36560, 1016.09967,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2274, 1989.53662, -1992.20081, 1016.13361,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2276, 1984.72778, -1992.33130, 1015.97913,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2281, 1978.93665, -1992.42175, 1015.93280,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(2253, 1981.34558, -1973.63904, 1013.77350,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2253, 1981.33997, -1967.71289, 1013.77350,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2253, 1981.44934, -1977.50049, 1013.77350,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2253, 1981.24951, -1983.13696, 1013.77350,   0.00000, 0.00000, 0.00000);

    

    //empresa de camiones
    new camiones[100];
    camiones[15] = CreateDynamicObject(8661, 1976.67529, -2079.88892, 12.58010,   0.00000, 0.00000, 90.00000);
    camiones[16] = CreateDynamicObject(8661, 1976.67529, -2040.09229, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[17] = CreateDynamicObject(8661, 1976.67529, -2000.12354, 12.56010,   0.00000, 0.00000, 90.00000);

    camiones[11] = CreateDynamicObject(8661, 1991.5416, -2019.98694, 17.84010,   90.00000, 0.00000, 0.00000);//vidrio
    camiones[1] = CreateDynamicObject(8661, 2011.55811, -2000.05835, 17.74010,   90.00000, 0.00000, 90.00000);//no es
    camiones[2] = CreateDynamicObject(8661, 1971.5571, -2039.96204, 11.60010,   90.00000, 0.00000, -90.00000);
    camiones[3] = CreateDynamicObject(8661, 1991.51953, -2100.03174, 11.76010,   90.00000, 0.00000, 0.00000); //vidrio
    camiones[7] = CreateDynamicObject(19435, 1986.80115, -2100.07202, 17.37080,   90.00000, 0.00000, 90.00000);
    camiones[8] = CreateDynamicObject(19435, 1989.06116, -2100.05200, 17.37080,   90.00000, 0.00000, 90.00000);
    camiones[9] = CreateDynamicObject(19435, 1992.52124, -2100.05200, 17.37080,   90.00000, 0.00000, 90.00000);
    camiones[10] = CreateDynamicObject(19435, 1995.88110, -2100.07202, 11.6001,   90.00000, 0.00000, 90.00000);

    //lo que tiene los lomas de burro
    camiones[25] = CreateDynamicObject(18763, 2010.12280, -1992.15906, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[26] = CreateDynamicObject(18763, 2010.10278, -2001.53894, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[27] = CreateDynamicObject(18763, 2010.12280, -2002.71899, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[28] = CreateDynamicObject(18763, 2010.12280, -2012.01904, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[29] = CreateDynamicObject(18763, 2010.10278, -2010.89905, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[30] = CreateDynamicObject(18763, 2010.12280, -2020.15906, 12.22080,   90.00000, 0.00000, 0.00000);//bamos bien
    camiones[31] = CreateDynamicObject(18763, 2010.14282, -2021.33899, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[32] = CreateDynamicObject(18763, 2010.14282, -2029.47900, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[33] = CreateDynamicObject(18763, 2010.12280, -2030.61902, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[34] = CreateDynamicObject(18763, 2010.12280, -2038.61902, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[35] = CreateDynamicObject(18763, 2010.14282, -2039.79895, 12.22080,   90.00000, 0.00000, 0.00000);
    camiones[36] = CreateDynamicObject(18763, 2010.16284, -2047.81897, 12.18080,   90.00000, 0.00000, 0.00000);
    camiones[37] = CreateDynamicObject(18763, 2010.14282, -2048.83911, 12.20080,   90.00000, 0.00000, 0.00000);
    camiones[38] = CreateDynamicObject(18763, 2010.10278, -1993.31897, 12.22080,   90.00000, 0.00000, 0.00000);
    
    
    //paredes
    camiones[40] = CreateDynamicObject(8661, 1991.5577, -1980.0665, 17.80010,   90.00000, 0.00000, 180.00000);
    camiones[50] = CreateDynamicObject(8661, 1971.5571, -2000.03870, 17.84010,   90.00000, 0.00000, -90.00000);
    camiones[41] = CreateDynamicObject(8661, 2021.34082, -2000.05408, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[42] = CreateDynamicObject(8661, 2021.26172, -2039.95520, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[22] = CreateDynamicObject(8661, 2011.51807, -2034.54614, 11.6001,   90.00000, 0.00000, 90.00000);
    
    //piso
    camiones[12] = CreateDynamicObject(19435, 1995.88110, -2100.07202, 17.37080,   90.00000, 0.00000, 90.00000);
    camiones[43] = CreateDynamicObject(8661, 2021.31372, -2079.85474, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[44] = CreateDynamicObject(8661, 2041.08655, -2079.77051, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[45] = CreateDynamicObject(8661, 2061.00513, -2079.76904, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[46] = CreateDynamicObject(8661, 2061.01440, -2039.81934, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[47] = CreateDynamicObject(8661, 2041.10217, -2039.78772, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[48] = CreateDynamicObject(8661, 2041.17603, -1999.87756, 12.56010,   0.00000, 0.00000, 90.00000);
    camiones[49] = CreateDynamicObject(8661, 2060.96289, -1999.82690, 12.56010,   0.00000, 0.00000, 90.00000);
    
    
    //oficiona
    camiones[13] =  CreateDynamicObject(19377, 1991.26147, -2100.09106, 11.43070,   0.00000, 0.00000, 90.00000);
    camiones[64] = CreateDynamicObject(19377, 2009.04260, -2054.57251, 16.51070,   0.00000, 0.00000, 90.00000);
    camiones[52] = CreateDynamicObject(19377, 2013.78577, -2059.46826, 16.51070,   0.00000, 0.00000, 0.00000);
    camiones[53] = CreateDynamicObject(19435, 2013.81250, -2065.92920, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[54] = CreateDynamicObject(19435, 2013.80066, -2069.43530, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[55] = CreateDynamicObject(19435, 2013.78064, -2072.55493, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[56] = CreateDynamicObject(19377, 2013.68469, -2069.01318, 9.41070,   0.00000, 0.00000, 0.00000);
    camiones[57] = CreateDynamicObject(19377, 2013.75757, -2077.01074, 16.51070,   0.00000, 0.00000, 0.00000);
    camiones[58] = CreateDynamicObject(19377, 2013.64307, -2086.37695, 9.41070,   0.00000, 0.00000, 0.00000);
    camiones[59] = CreateDynamicObject(19377, 2013.78577, -2095.18823, 16.51070,   0.00000, 0.00000, 0.00000);
    camiones[60] = CreateDynamicObject(19435, 2013.78064, -2083.53516, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[61] = CreateDynamicObject(19435, 2013.78064, -2087.01514, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[62] = CreateDynamicObject(19435, 2013.78064, -2088.89502, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[63] = CreateDynamicObject(8661, 2013.69580, -2076.88135, 11.40010,   90.00000, 0.00000, 90.00000);
    camiones[65] = CreateDynamicObject(19377, 2008.95898, -2099.99219, 16.51070,   0.00000, 0.00000, 90.00000);
    camiones[66] = CreateDynamicObject(19377, 1976.37903, -2099.99219, 16.51070,   0.00000, 0.00000, 90.00000);
    camiones[67] = CreateDynamicObject(19377, 2002.41895, -2100.01221, 16.51070,   0.00000, 0.00000, 90.00000);
    camiones[68] = CreateDynamicObject(19377, 1980.37903, -2099.99219, 16.51070,   0.00000, 0.00000, 90.00000);
    camiones[69] = CreateDynamicObject(19377, 1971.58582, -2095.18823, 16.51070,   0.00000, 0.00000, 0.00000);
    camiones[70] = CreateDynamicObject(19435, 1971.57043, -2088.90771, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[71] = CreateDynamicObject(19435, 1971.56580, -2087.01514, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[72] = CreateDynamicObject(19435, 1971.58582, -2083.53516, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[73] = CreateDynamicObject(19377, 1971.56580, -2086.37695, 9.41070,   0.00000, 0.00000, 0.00000);
    camiones[74] = CreateDynamicObject(19377, 1971.58582, -2077.01074, 16.51070,   0.00000, 0.00000, 0.00000);
    camiones[75] = CreateDynamicObject(19377, 1971.58582, -2069.01318, 9.41070,   0.00000, 0.00000, 0.00000);
    camiones[76] = CreateDynamicObject(19435, 1971.56580, -2072.55493, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[77] = CreateDynamicObject(19435, 1971.58582, -2069.43530, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[78] = CreateDynamicObject(19435, 1971.56580, -2065.92920, 20.95080,   90.00000, 0.00000, 0.00000);
    camiones[79] = CreateDynamicObject(19377, 1971.58582, -2059.46826, 16.51070,   0.00000, 0.00000, 0.00000);
    camiones[80] = CreateDynamicObject(8661, 1971.68274, -2079.86206, 11.60010,   90.00000, 0.00000, -90.00000);








    //texturas
    SetDynamicObjectMaterial(camiones[15], 0, 8497, "vgseland", "ab_tileDiamond", 0);
    SetDynamicObjectMaterial(camiones[16], 0, 8497, "vgseland", "ab_tileDiamond", 0);
    SetDynamicObjectMaterial(camiones[17], 0, 8497, "vgseland", "ab_tileDiamond", 0);
    
    SetDynamicObjectMaterial(camiones[0], 0, 4101, "stapl", "sl_flagstone1", 0);
    SetDynamicObjectMaterial(camiones[1], 0, 4101, "stapl", "sl_flagstone1", 0);
    SetDynamicObjectMaterial(camiones[2], 0, 4101, "stapl", "sl_flagstone1", 0);
    SetDynamicObjectMaterial(camiones[40], 0, 4101, "stapl", "sl_flagstone1", 0);
    SetDynamicObjectMaterial(camiones[50], 0, 4101, "stapl", "sl_flagstone1", 0);
    SetDynamicObjectMaterial(camiones[22], 0, 4101, "stapl", "sl_flagstone1", 0);
    SetDynamicObjectMaterial(camiones[11], 0, 4015, "civic01_lan", "sl_laglasswall2", 0);//vidrios
    
    //el que tiene la textura de lomo de burro
    SetDynamicObjectMaterial(camiones[25], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[26], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[27], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[28], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[29], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[30], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[31], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[32], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[33], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[34], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[35], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[36], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[37], 0, 19425, "speed_bumps", "speed_bump01", 0);
    SetDynamicObjectMaterial(camiones[38], 0, 19425, "speed_bumps", "speed_bump01", 0);
    
    //calle
    SetDynamicObjectMaterial(camiones[41], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[42], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[43], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[44], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[45], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[46], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[47], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[48], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);
    SetDynamicObjectMaterial(camiones[49], 0, 4712, "skyscr1_lan2", "sl_plazatile01", 0);


	//oficina
	SetDynamicObjectMaterial(camiones[3], 0, 4015, "civic01_lan", "sl_laglasswall2", 0);//vidrios
    SetDynamicObjectMaterial(camiones[63], 0, 4015, "civic01_lan", "sl_laglasswall2", 0);//vidrios
    SetDynamicObjectMaterial(camiones[80], 0, 4015, "civic01_lan", "sl_laglasswall2", 0);//vidrios
    SetDynamicObjectMaterial(camiones[4], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[12], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[13], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[5], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[6], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[7], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[8], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[9], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[10], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[52], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[53], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[54], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[55], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[56], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[57], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[58], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[59], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[60], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[61], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[62], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[64], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[65], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[66], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[67], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[68], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[69], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[70], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[71], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[72], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[73], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[74], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[75], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[76], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[77], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[78], 0, 4028, "lanbloki", "churchwall1", 0);
    SetDynamicObjectMaterial(camiones[79], 0, 4028, "lanbloki", "churchwall1", 0);
    
    //Ayuntamiento by Otacon
    AyuntamientoNuevo[0] = CreateDynamicObject(3980, 1481.18750, -1785.07031, 22.38281,   0.00000, 0.00000, 0.00000);
    AyuntamientoNuevo[1] = CreateDynamicObject(4002, 1479.86719, -1790.39844, 56.02344,   0.00000, 0.00000, 0.00000);
    AyuntamientoNuevo[2] = CreateDynamicObject(3997, 1479.33594, -1802.28906, 12.54688,   0.00000, 0.00000, 0.00000);
    //plaza ayunta by otacon
    PlayaAyuntamientoNueva[0] = CreateDynamicObject(4186, 1479.55469, -1693.14063, 19.57813,   0.00000, 0.00000, 0.00000);
    PlayaAyuntamientoNueva[1] = CreateDynamicObject(3985, 1479.56250, -1631.45313, 12.07813,   0.00000, 0.00000, 0.00000);
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 0, 8486, "ballys02", "Grass_128HV", 0); //Cespel
    
    
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 2, 8497, "vgseland", "greyground256", 0); //Bordes
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 4, 3985, "pershingsq", "duskyred_64", 0); //Bola Roja
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 0, 8486, "ballys02", "Grass_128HV", 0); //Cespel
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 2, 8497, "vgseland", "greyground256", 0); //Bordes
    //SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 3, 6322, "law2_roadsb", "nicepavegras_LA", 0);  //Piso Generalral

    //Abajo
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 0, 1557, "dave_door_2b", "miragedoor1_256", 0); //Puertas Entrada
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 1, 8497, "vgseland", "greyground256", 0); //Techo General
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 2, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 3, 8497, "vgseland", "luxorwall01_128", 0); //Paredes Generales
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 4, 8497, "vgseland", "luxorwall01_128", 0); //Paredes Columnas Bordes
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 5, 8497, "vgseland", "greyground256", 0); //Techo Entrada
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 6, 5033, "union_las", "lasunion95", 0); //Ventanas Costados
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 8, 8497, "vgseland", "greyground256", 0); //Borde Abajo
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 9, 5033, "union_las", "lasunion95", 0); //Ventanas General
    SetDynamicObjectMaterial(AyuntamientoNuevo[0], 10, 8497, "vgseland", "greyground256", 0); //Ventanas Borde
    //Arriba
    SetDynamicObjectMaterial(AyuntamientoNuevo[1], 0, 8497, "vgseland", "luxorwall01_128", 0); //Paredes Generales
    SetDynamicObjectMaterial(AyuntamientoNuevo[1], 1, 4016, "pershingsq", "posh_eagle12_sfe", 0); //Ventanas General Frente
    SetDynamicObjectMaterial(AyuntamientoNuevo[1], 2, 8497, "vgseland", "greyground256", 0); //Techo Punta
    SetDynamicObjectMaterial(AyuntamientoNuevo[1], 3, 8497, "vgseland", "luxorwall01_128", 0); //Ventanas Punta
    SetDynamicObjectMaterial(AyuntamientoNuevo[1], 4, 8497, "vgseland", "greyground256", 0); //Techo Torre
    SetDynamicObjectMaterial(AyuntamientoNuevo[1], 5, 4016, "pershingsq", "posh_eagle12_sfe", 0); //Ventanas General Costado
    //Piso
    SetDynamicObjectMaterial(AyuntamientoNuevo[2], 0, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General Atras Debajo de Los edificios
    SetDynamicObjectMaterial(AyuntamientoNuevo[2], 1, 8486, "ballys02", "Grass_128HV", 0); //Tierra Plantas
    SetDynamicObjectMaterial(AyuntamientoNuevo[2], 2, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General Delante
    SetDynamicObjectMaterial(AyuntamientoNuevo[2], 3, 9931, "churchsfe", "church_sfe3", 0); //Borde Platas
    SetDynamicObjectMaterial(AyuntamientoNuevo[2], 4, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General Atras
    
    
    //playa de sville
    CreateDynamicObject(642, 435.48541, -1758.33521, 8.56080,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 435.52429, -1758.28076, 7.61246,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 484.49457, -1755.31274, 14.40088,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 490.21307, -1756.06543, 14.40088,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 490.21310, -1756.06543, 13.55653,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 482.64169, -1767.27808, 13.59520,   0.00000, 0.00000, 23.00390);
    CreateDynamicObject(643, 484.49460, -1755.31274, 13.55552,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 486.62201, -1767.40393, 13.59520,   0.00000, 0.00000, 4.00460);
    CreateDynamicObject(643, 491.13239, -1767.22144, 13.59520,   0.00000, 0.00000, 36.32980);
    CreateDynamicObject(643, 491.38559, -1763.52026, 13.59524,   0.00000, 0.00000, 71.70818);
    CreateDynamicObject(643, 487.26181, -1764.12280, 13.59520,   0.00000, 0.00000, 103.19940);
    CreateDynamicObject(643, 483.24341, -1763.90820, 13.59520,   0.00000, 0.00000, 98.60420);
    CreateDynamicObject(621, 478.79108, -1772.46936, 3.04402,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 495.79111, -1772.46936, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 512.18408, -1772.85535, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 531.97382, -1775.11963, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 549.01074, -1776.60120, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 567.08905, -1778.59949, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 582.43604, -1781.80298, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 598.71124, -1784.72119, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 615.89313, -1787.43115, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(621, 636.68756, -1791.86572, 3.04400,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 512.45929, -1767.79858, 13.70017,   0.00000, 0.00000, 75.18667);
    CreateDynamicObject(643, 516.33716, -1768.35571, 13.70020,   0.00000, 0.00000, 67.37768);
    CreateDynamicObject(643, 519.97717, -1768.66528, 13.70020,   0.00000, 0.00000, 96.85519);
    CreateDynamicObject(643, 516.13556, -1759.48474, 13.70020,   0.00000, 0.00000, 96.85519);
    CreateDynamicObject(643, 522.00458, -1760.21533, 13.70020,   0.00000, 0.00000, 96.85519);
    CreateDynamicObject(14537, 429.66989, -1838.59802, 4.94671,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 424.06384, -1849.89417, 2.99733,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 430.95273, -1850.05505, 2.99730,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 437.56381, -1849.89417, 2.99730,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 424.09595, -1855.48877, 2.99733,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 424.22107, -1860.20007, 2.75612,   0.00000, 0.00000, 339.52145);
    CreateDynamicObject(643, 430.00314, -1855.21545, 2.90998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 436.65204, -1854.70898, 2.90998,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(643, 434.86807, -1860.54578, 2.76264,   0.00000, 0.00000, 30.67370);
    CreateDynamicObject(643, 429.68179, -1859.25244, 2.79713,   0.00000, 0.00000, 30.67370);
    CreateDynamicObject(1481, 410.46729, -1854.52600, 3.35250,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(642, 424.06381, -1849.89417, 3.90719,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 430.95270, -1850.05505, 3.76657,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 437.56381, -1849.89417, 3.87357,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 411.52243, -1852.59229, 3.98283,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1810, 412.47687, -1852.39795, 2.60321,   0.00000, 0.00000, 33.63224);
    CreateDynamicObject(3467, 410.84744, -1853.09839, 3.34434,   0.00000, 0.00000, 43.25486);
    CreateDynamicObject(1639, 468.84259, -1849.07605, 2.91361,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(1639, 468.86139, -1842.97021, 2.91360,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(1640, 479.92822, -1874.66760, 2.23533,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1641, 474.14276, -1876.00171, 2.19657,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1642, 510.82010, -1884.53613, 2.31510,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 458.87878, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 460.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 462.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 464.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 466.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 468.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1646, 470.37881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 459.85571, -1880.20410, 3.13128,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 463.85571, -1880.20410, 3.13130,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 467.85571, -1880.20410, 3.13130,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(642, 471.85571, -1880.20410, 3.13130,   0.00000, 0.00000, 0.00000);
    
    //ceda el paso
    //unity station
    CreateDynamicObject(4853, 1736.97656, -1955.90356, 15.05470,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(4853, 1828.47656, -1955.90356, 15.05470,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(4882, 1705.95056, -1956.13428, 17.37777,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8657, 1764.46680, -1942.05298, 13.59360,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(8657, 1795.49719, -1942.05298, 13.59360,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(4853, 1644.97656, -1955.90356, 15.05470,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(4028, 1740.63208, -1897.06543, 25.26094,   0.00000, 0.00000, -90.00000);
    new replace = CreateDynamicObject(18981, 1738.36084, -1912.93152, 12.06021,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(18981, 1728.34167, -1931.65637, 12.06020,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(18981, 1774.06299, -1872.48413, 12.00300,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(18981, 1799.06299, -1872.48413, 12.00300,   0.00000, 90.00000, 0.00000);
    CreateDynamicObject(18981, 1753.34167, -1931.65637, 12.06020,   0.00000, 90.00000, 0.00000);
    SetDynamicObjectMaterial(replace, 0, 4821, "union_las", "lasunion994");
    SetDynamicObjectMaterial(replace+1, 0, 4821, "union_las", "lasunion994");
    SetDynamicObjectMaterial(replace+2, 0, 4821, "union_las", "lasunion994");
    SetDynamicObjectMaterial(replace+3, 0, 4821, "union_las", "lasunion994");
    SetDynamicObjectMaterial(replace+4, 0, 4821, "union_las", "lasunion994");
    CreateDynamicObject(5409, 1794.78894, -1917.65906, 16.90874,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(620, 1769.42358, -1867.23376, 11.17810,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(620, 1786.42358, -1867.23376, 11.17810,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1676, 1796.80310, -1894.82898, 14.11156,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1676, 1793.04065, -1894.79004, 14.11160,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1676, 1789.42261, -1894.81946, 14.11160,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1676, 1786.18628, -1894.77539, 14.11039,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(8843, 1794.79700, -1889.19104, 12.43569,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(8843, 1794.79700, -1902.19104, 12.43570,   0.00000, 0.00000, -90.00000);
    CreateDynamicObject(18980, 1735.14917, -1935.04553, 3.11624,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18980, 1736.14917, -1935.04553, 3.11620,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(948, 1811.36877, -1884.20703, 12.59253,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(948, 1811.36877, -1895.70703, 12.59250,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(19467, 1810.91992, -1852.46362, 12.39670,   -60.00000, 0.00000, 90.00000);
    
    //ALHAMBRE EXTERIOR
    new AL_OB;
    CreateDynamicObject(1424, 1828.16931, -1685.06201, 13.06750,   0.00000, 0.00000, 0.00000);
	AL_OB = CreateDynamicObject(18763, 1828.17322, -1682.49536, 10.11220,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFFFF0000);
	AL_OB = CreateDynamicObject(18763, 1831.17322, -1682.49536, 10.10262,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFFFF0000);
	AL_OB = CreateDynamicObject(18763, 1834.17322, -1682.49536, 10.11220,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFFFF0000);
	AL_OB = CreateDynamicObject(18763, 1837.17322, -1682.49536, 10.11220,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFFFF0000);
	
	AL_OB = CreateDynamicObject(18764, 1829.17322, -1680.42566, 10.05260,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFF000000);
	AL_OB = CreateDynamicObject(18764, 1834.17322, -1680.42566, 10.05260,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFF000000);
	AL_OB = CreateDynamicObject(18764, 1839.17322, -1680.42566, 10.05260,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFF000000);
	AL_OB = CreateDynamicObject(18764, 1839.17322, -1684.40564, 10.05260,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFF000000);
	AL_OB = CreateDynamicObject(18764, 1834.17322, -1684.40564, 10.05260,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFF000000);
	AL_OB = CreateDynamicObject(18764, 1829.17322, -1684.40564, 10.05260,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(AL_OB, 0, 18763, "concretebits", "StoneWallTile1-3", 0xFF000000);
	CreateDynamicObject(2773, 1826.92590, -1679.77649, 13.06849,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1826.92590, -1685.27649, 13.06850,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1830.16931, -1685.06201, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1832.16931, -1685.06201, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1834.16931, -1685.06201, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1835.16309, -1685.94470, 13.06750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1424, 1835.16309, -1687.94470, 13.06750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1424, 1828.16931, -1679.89490, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1830.16931, -1679.89490, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1832.16931, -1679.89490, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1834.16931, -1679.89490, 13.06750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1424, 1835.16309, -1678.94470, 13.06750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1424, 1835.16309, -1676.94470, 13.06750,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19279, 1829.14746, -1680.41418, 12.73210,   0.00000, 0.00000, 130.00000);
    CreateDynamicObject(19279, 1829.14746, -1684.48157, 12.73210,   0.00000, 0.00000, 30.00000);
    
	//Ayunt bot no bug
	AyuntNoBug = CreateDynamicObject(8356, 360.0919, 176.36160, 918.97968,   90.00000, 90.00000, 180.00000);
	SetDynamicObjectMaterial(AyuntNoBug, 0, 0, "none", "none");
	SetDynamicObjectMaterial(AyuntNoBug, 1, 0, "none", "none");
	SetDynamicObjectMaterial(AyuntNoBug, 2, 0, "none", "none");
	
	//Pizzería LS decoración
	CreateDynamicObject(869, 2101.31055, -1764.80432, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2097.70898, -1826.98950, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.70190, -1781.71997, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2097.55249, -1778.33838, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2098.18286, -1775.02026, 12.92670,   0.00000, 0.00000, -14.76000);
	CreateDynamicObject(869, 2098.74561, -1771.57117, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2099.96265, -1768.30505, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2103.37500, -1765.97290, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.99243, -1780.81067, 12.92670,   0.00000, 0.00000, 79.55999);
	CreateDynamicObject(700, 2123.48169, -1828.98572, 12.00450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.00928, -1787.91956, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2122.64453, -1782.45398, 12.37966,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2115.13062, -1782.50110, 12.37966,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2097.57544, -1788.09973, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.89063, -1824.18262, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2094.34717, -1827.91101, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2094.25586, -1830.05859, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2122.58569, -1829.02393, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2094.08984, -1824.42468, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2098.21240, -1829.72461, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2102.02222, -1829.56689, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2105.62354, -1829.61755, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2109.76929, -1829.51746, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2113.96924, -1829.33948, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2118.25342, -1829.11938, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 2092.58203, -1824.44373, 12.00450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 2092.52148, -1830.33594, 12.00450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 2099.11304, -1829.10107, 12.00450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 2107.78442, -1829.10132, 12.00450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(700, 2115.78784, -1829.38757, 12.00450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2099.73438, -1766.86438, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2096.64575, -1823.47363, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2095.21826, -1789.43591, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2095.93286, -1781.89307, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2098.19312, -1773.90625, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2098.82520, -1806.94543, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2092.53174, -1828.09692, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(646, 2099.69482, -1810.59326, 13.81640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(646, 2093.46069, -1806.86072, 13.81640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(646, 2097.12598, -1806.86072, 13.81640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(646, 2099.65747, -1802.55261, 13.81640,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1231, 2091.78467, -1806.89758, 13.91170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2118.83643, -1782.63538, 12.37966,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2111.60962, -1782.56494, 12.37966,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2108.03735, -1782.74146, 12.37966,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2104.51367, -1782.84546, 12.37966,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.99243, -1789.20215, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2095.60620, -1786.21753, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.24512, -1783.67529, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2094.87695, -1789.08691, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2095.10840, -1788.19604, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2095.79004, -1785.64526, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2095.79004, -1785.64526, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2096.59985, -1783.00708, 12.92670,   0.00000, 0.00000, 79.55999);
	CreateDynamicObject(869, 2096.59985, -1783.00708, 12.92670,   0.00000, 0.00000, 79.55999);
	CreateDynamicObject(869, 2095.88721, -1785.81958, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2097.89819, -1776.62878, 12.92670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2098.47852, -1774.17212, 12.92670,   0.00000, 0.00000, -114.42003);
	CreateDynamicObject(869, 2099.40063, -1770.19751, 12.92670,   0.00000, 0.00000, -114.42003);
	CreateDynamicObject(1408, 2096.74609, -1802.67493, 13.10160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 2094.34155, -1802.67493, 13.10160,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 2096.54346, -1810.54773, 13.11720,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1408, 2094.56226, -1810.54773, 13.11720,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3666, 2095.36597, -1806.96765, 13.00000,   0.00000, 0.00000, 0.00000);
	//HOUSE
	CreateDynamicObjectEx(4586, 1405.11719, -1191.40625, 85.03130,   0.00000, 0.00000, 0.00000, 20000.0, 20000.0);
	new rojoescalera1 = CreateDynamicObject(18766, 1421.38794, -1184.1919, 137.13000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(rojoescalera1, 0, 18787, "matramps", "redrailing");
	new rojoescalera2 = CreateDynamicObject(18766, 1416.39001, -1184.1939, 137.13000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(rojoescalera2, 0, 18787, "matramps", "redrailing");
	new pared1 = CreateDynamicObject(18766, 1410.70862, -1186.18945, 131.62529,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(pared1, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(18762, 1404.71997, -1184.18994, 136.32080,   90.00000, 0.00000, 90.00000);
	new pared2 = CreateDynamicObject(18766, 1403.18005, -1203.66003, 141.75999,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared2, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared3 = CreateDynamicObject(18766, 1396.11011, -1203.66003, 141.69000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared3, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared4 = CreateDynamicObject(18766, 1414.80273, -1197.03748, 141.56000,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(pared4, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared5 = CreateDynamicObject(18766, 1412.75000, -1195.09998, 141.56000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared5, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared6 = CreateDynamicObject(18766, 1412.59998, -1203.55005, 141.75999,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared6, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared7 = CreateDynamicObject(18766, 1394.10999, -1195.58997, 141.81400,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(pared7, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(18762, 1394.10999, -1185.96997, 136.32080,   90.00000, 0.00000, 0.00000);
	new pared8 = CreateDynamicObject(18766, 1399.93994, -1184.18994, 141.78999,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared8, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared9 = CreateDynamicObject(18766, 1396.11011, -1184.18591, 141.78999,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared9, 0, 19325, "lsmall_shops", "ws_stationfloor");
	//CreateDynamicObject(6959, 1423.80005, -1203.28003, 142.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19448, 1423.81177, -1188.43274, 138.35391,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1423.81177, -1188.43274, 134.85530,   0.00000, 0.00000, 0.00000);

	new pared10 = CreateDynamicObject(18766, 1421.30627, -1192.77112, 133.61000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared10, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(18762, 1411.39404, -1184.18787, 131.04401,   90.00000, 0.00000, 90.00000);
	new escaleras1 = CreateDynamicObject(14407, 1415.90833, -1186.45776, 133.62801,   0.00000, 0.00000, 270.00000);
	SetDynamicObjectMaterial(escaleras1, 0, 19379, "all_walls", "mp_shop_floor2");
	new escaleras2 = CreateDynamicObject(14407, 1415.79004, -1190.38000, 130.91000,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(escaleras2, 0, 19379, "all_walls", "mp_shop_floor2");
	new techo1 = CreateDynamicObject(6959, 1414.28162, -1203.70239, 142.12000,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(techo1, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(6959, 1411.56006, -1205.18005, 131.57001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19356, 1415.59998, -1188.48999, 130.38000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19356, 1417.82007, -1188.50000, 136.89450,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1423.15002, -1189.20996, 140.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1413.98608, -1186.82996, 131.99001,   90.00000, 90.00000, 90.00000);
	CreateDynamicObject(19448, 1413.98206, -1186.34204, 131.89000,   90.00000, 90.00000, 90.00000);
	CreateDynamicObject(19448, 1407.46191, -1203.42871, 138.52368,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1407.46936, -1203.43762, 141.91000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1419.33997, -1202.18005, 140.39000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1423.13000, -1198.71997, 140.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19356, 1410.51001, -1199.28394, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19429, 1407.27197, -1194.55188, 137.07069,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1401.80005, -1193.17004, 133.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1405.54004, -1199.17004, 133.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19429, 1406.56995, -1193.97998, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19429, 1406.56995, -1198.31995, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19429, 1410.51001, -1193.68005, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6959, 1411.56006, -1205.18005, 131.57001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19443, 1417.20996, -1190.26001, 138.21001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.65002, -1190.26001, 137.89999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.95996, -1190.26001, 137.62399,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.39001, -1190.26001, 137.28000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1190.26001, 136.92999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1417.48999, -1190.26001, 138.39000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.32996, -1190.26001, 137.74001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.64001, -1190.26001, 137.45200,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.06995, -1190.26001, 137.11000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.89001, -1190.26001, 138.05000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1723, 1398.88000, -1190.77002, 136.81000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1723, 1400.78003, -1187.40002, 136.81000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2315, 1397.78003, -1188.88000, 136.87000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1828, 1397.89001, -1187.96997, 136.85001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2315, 1406.62842, -1187.72229, 136.81000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1724, 1404.50000, -1185.44312, 136.81000,   0.00000, 0.00000, 30.00000);
	CreateDynamicObject(1724, 1405.07593, -1188.31006, 136.81000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1724, 1407.74451, -1188.60120, 136.81000,   0.00000, 0.00000, 211.96001);
	CreateDynamicObject(19379, 1422.23889, -1189.66589, 138.56000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1420.44995, -1199.30005, 138.56000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1423.06995, -1189.26001, 134.03999,   0.08000, 90.00000, 0.00000);
	CreateDynamicObject(3850, 1417.08667, -1186.58887, 139.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1415.22998, -1194.55396, 141.39000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1411.96997, -1194.55005, 141.39999,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1399.85132, -1198.48987, 136.73000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2774, 1400.21997, -1203.77002, 148.05330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1399.95996, -1188.52002, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1401.84998, -1193.14001, 133.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1400.66003, -1197.87000, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19386, 1410.51001, -1196.07996, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1415.17395, -1199.17004, 133.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1415.30005, -1197.91003, 133.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1415.30005, -1194.17004, 133.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 1399.40710, -1183.32092, 139.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2123, 1397.74146, -1195.92322, 137.47000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2123, 1397.74146, -1200.32886, 137.47000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2123, 1399.10364, -1199.06995, 137.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2123, 1399.10364, -1197.45239, 137.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2123, 1396.34265, -1197.45239, 137.47000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2123, 1396.34265, -1199.06995, 137.47000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2315, 1408.25000, -1195.01196, 137.36800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 1406.05005, -1195.01196, 137.36600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 1406.04004, -1195.01196, 137.39790,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(1668, 1406.07092, -1195.00854, 138.02998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1409.38757, -1193.72559, 137.16190,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85510, -1197.97595, 136.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85620, -1196.98792, 136.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2016, 1413.85791, -1196.02539, 136.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2011, 1409.84998, -1202.97998, 136.82001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2013, 1411.79065, -1196.07324, 136.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2016, 1410.79285, -1196.07336, 136.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 1405.76001, -1202.84998, 136.82001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 1402.65601, -1202.68994, 136.87000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 1401.06006, -1202.59998, 136.82001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2256, 1403.40002, -1203.14001, 138.75000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19386, 1421.46997, -1195.21997, 140.38000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2774, 1401.29834, -1194.15466, 148.05330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1502, 1410.46997, -1195.29004, 131.52000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1502, 1422.20996, -1195.19995, 138.64000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2125, 1407.88757, -1193.72559, 137.16190,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2125, 1406.38757, -1193.72559, 137.16190,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85510, -1198.97595, 136.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85510, -1199.97595, 136.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(18762, 1409.71997, -1184.18994, 136.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1414.71997, -1184.18994, 136.32080,   90.00000, 0.00000, 90.00000);
	new pared11 = CreateDynamicObject(18766, 1400.61011, -1203.67004, 141.69000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared11, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(18762, 1394.10999, -1190.96997, 136.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1394.10999, -1195.96997, 136.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1394.10999, -1200.96997, 136.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1399.71997, -1184.18994, 136.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1396.21997, -1184.18994, 136.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1393.61548, -1199.80566, 139.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1393.61548, -1186.05566, 139.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1393.61548, -1190.18164, 139.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1404.26306, -1183.70117, 139.43159,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1408.38916, -1183.70117, 139.43159,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1412.51123, -1183.70117, 139.43159,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1410.35132, -1198.48987, 136.73000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1399.85132, -1188.85986, 136.73000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1408.79932, -1188.85986, 136.72600,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19356, 1415.62012, -1188.50195, 136.89450,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19356, 1417.82007, -1188.50000, 133.39529,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2232, 1396.24255, -1184.82117, 140.15836,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19356, 1418.26404, -1195.21997, 140.38000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19443, 1417.48999, -1193.75842, 138.39000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1417.20996, -1193.75842, 138.21001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.89001, -1193.75842, 138.05000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.65002, -1193.75842, 137.89999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.32996, -1193.75842, 137.74001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.95996, -1193.75842, 137.62399,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.64001, -1193.75842, 137.45200,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.39001, -1193.75842, 137.28000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.06995, -1193.75842, 137.11000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1193.75842, 136.92999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1190.26001, 136.75600,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1193.75842, 136.75600,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1422.23889, -1187.66589, 138.39999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19356, 1415.61450, -1188.48279, 133.39529,   0.00000, 0.00000, 90.00000);
	new pared12 = CreateDynamicObject(18766, 1416.39001, -1184.18787, 127.13210,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared12, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(18762, 1406.39404, -1184.18787, 131.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1401.39404, -1184.18787, 131.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1396.39404, -1184.18787, 131.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1408.64148, -1188.50696, 134.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18762, 1417.83948, -1190.92175, 137.87553,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1416.99548, -1190.92175, 137.38750,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1416.13745, -1190.92175, 136.88750,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1415.27747, -1190.92175, 136.39149,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1414.44751, -1190.92175, 135.91150,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1413.94751, -1190.92175, 135.19470,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1418.05945, -1190.92175, 137.87550,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1398.14148, -1188.50696, 134.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1408.64148, -1198.13904, 134.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1398.14148, -1198.13904, 134.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1419.14148, -1198.13904, 134.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19325, 1403.26306, -1183.70117, 132.82410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1409.90515, -1183.70117, 132.82410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1416.54321, -1183.70117, 132.82410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11665, 1418.77820, -1196.85010, 139.31570,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2267, 1418.74512, -1195.34534, 140.79210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2071, 1399.78162, -1190.26172, 138.25261,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2563, 1402.49927, -1190.41687, 131.60580,   0.00000, 0.00000, 90.00000);
	new pared13 = CreateDynamicObject(18766, 1414.80273, -1202.03552, 141.56000,   0.00000, 90.00000, 90.00000);
	SetDynamicObjectMaterial(pared13, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(2014, 1413.85510, -1200.97595, 136.64999,   0.00000, 0.00000, 270.00000);
	new pared14 = CreateDynamicObject(18766, 1415.80957, -1202.63525, 141.75999,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared14, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(19325, 1393.61548, -1194.30554, 139.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2014, 1413.85510, -1201.97595, 136.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19429, 1416.89099, -1195.44666, 140.34230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1393.61511, -1203.93152, 139.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2016, 1413.70264, -1196.07935, 136.64999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, 1422.23889, -1187.66589, 138.55460,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19448, 1416.89771, -1200.06506, 140.39000,   0.00000, 0.00000, 0.00000);
	new pared15 = CreateDynamicObject(18766, 1419.80627, -1192.77307, 133.61000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared15, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared16 = CreateDynamicObject(18766, 1416.80225, -1192.76709, 132.11000,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared16, 0, 19325, "lsmall_shops", "ws_stationfloor");
	new pared17 = CreateDynamicObject(18766, 1412.92224, -1192.77112, 129.84010,   0.00000, 90.00000, 0.00000);
	SetDynamicObjectMaterial(pared17, 0, 19325, "lsmall_shops", "ws_stationfloor");
	CreateDynamicObject(19429, 1408.46997, -1194.54785, 137.06870,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19429, 1408.46997, -1195.50793, 137.06870,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19429, 1407.27197, -1195.50391, 137.07069,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(1535, 1423.09009, -1187.31958, 138.60612,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1398.38806, -1184.61963, 139.35889,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 1398.38806, -1184.61755, 139.73390,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(2232, 1396.24255, -1184.82117, 138.96207,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1400.48865, -1184.82117, 140.15840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1400.48865, -1184.82117, 138.96210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 1397.39221, -1199.39282, 136.77913,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 1397.39221, -1197.68677, 136.77910,   0.00000, 0.00000, 0.00000);
	new pared = CreateDynamicObject(18766, 1409.56055, -1186.20813, 141.56000,   0.00000, 90.00000, 90.00000);
    SetDynamicObjectMaterial(pared, 0, 19325, "lsmall_shops", "ws_stationfloor");
	/*CreateDynamicObject(18766, 1421.38794, -1184.18994, 162.13000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1410.70862, -1186.18945, 156.62529,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1404.71997, -1184.18994, 161.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 1403.18005, -1203.66003, 166.75999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1396.11011, -1203.66003, 166.69000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1414.80273, -1197.03748, 166.56000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18766, 1412.75000, -1195.09998, 166.56000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1412.59998, -1203.55005, 166.75999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1394.10999, -1195.58997, 166.81400,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1394.10999, -1185.96997, 161.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 1399.93994, -1184.18994, 166.78999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1396.11011, -1184.18591, 166.78999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(6959, 1423.80005, -1203.28003, 167.14000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1421.30627, -1192.77112, 158.61000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18762, 1411.39404, -1184.18787, 156.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(14407, 1415.90833, -1186.45776, 158.62801,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14407, 1415.79004, -1190.38000, 155.91000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(6959, 1414.28162, -1203.70239, 167.12000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6959, 1411.56006, -1205.18005, 156.57001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19357, 1415.59998, -1188.48999, 155.38000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19357, 1417.82007, -1188.50000, 161.89450,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1423.15002, -1189.20996, 165.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19449, 1413.98608, -1186.82996, 156.99001,   90.00000, 90.00000, 90.00000);
	CreateDynamicObject(19449, 1413.98206, -1186.34204, 156.89000,   90.00000, 90.00000, 90.00000);
	CreateDynamicObject(19449, 1407.46191, -1203.42871, 163.52368,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1407.46936, -1203.43762, 166.91000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1419.33997, -1202.18005, 165.39000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1423.13000, -1198.71997, 165.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19357, 1410.51001, -1199.28394, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19430, 1407.27197, -1194.55188, 162.07069,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1401.80005, -1193.17004, 158.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1405.54004, -1199.17004, 158.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19430, 1406.56995, -1193.97998, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19430, 1406.56995, -1198.31995, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19430, 1410.51001, -1193.68005, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6959, 1411.56006, -1205.18005, 156.57001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19443, 1417.20996, -1190.26001, 163.21001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.65002, -1190.26001, 162.89999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.95996, -1190.26001, 162.62399,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.39001, -1190.26001, 162.28000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1190.26001, 161.92999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1417.48999, -1190.26001, 163.39000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.32996, -1190.26001, 162.74001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.64001, -1190.26001, 162.45200,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.06995, -1190.26001, 162.11000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.89001, -1190.26001, 163.05000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1723, 1398.88000, -1190.77002, 161.81000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1723, 1400.78003, -1187.40002, 161.81000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2315, 1397.78003, -1188.88000, 161.87000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1828, 1397.89001, -1187.96997, 161.85001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2315, 1406.62842, -1187.72229, 161.81000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1724, 1404.50000, -1185.44312, 161.81000,   0.00000, 0.00000, 30.00000);
	CreateDynamicObject(1724, 1405.07593, -1188.31006, 161.81000,   0.00000, 0.00000, 120.00000);
	CreateDynamicObject(1724, 1407.74451, -1188.60120, 161.81000,   0.00000, 0.00000, 211.96001);
	CreateDynamicObject(2314, 1397.60999, -1197.59998, 161.85001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1422.23889, -1189.66589, 163.56000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1420.44995, -1199.30005, 163.56000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1423.06995, -1189.26001, 159.03999,   0.08000, 90.00000, 0.00000);
	CreateDynamicObject(3850, 1417.08667, -1186.58887, 164.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1415.22998, -1194.55396, 166.39000,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1411.96997, -1194.55005, 166.39999,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1399.85132, -1198.48987, 161.73000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2774, 1400.21997, -1203.77002, 173.05330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1399.95996, -1188.52002, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19448, 1401.84998, -1193.14001, 158.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19448, 1400.66003, -1197.87000, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19387, 1410.51001, -1196.07996, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19449, 1415.17395, -1199.17004, 158.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 1415.30005, -1197.91003, 158.28000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19449, 1415.30005, -1194.17004, 158.28000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1649, 1398.47998, -1184.79004, 164.39000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1649, 1398.43994, -1184.80005, 164.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1396.06995, -1184.60999, 163.22473,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2314, 1397.61121, -1199.31006, 161.87000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2123, 1397.60779, -1195.18384, 162.47000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2123, 1397.61243, -1200.29028, 162.47000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2123, 1398.71545, -1199.33789, 162.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2123, 1398.68958, -1197.89661, 162.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2123, 1398.74988, -1196.43811, 162.47000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2123, 1396.62036, -1196.24463, 162.47000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2123, 1396.63867, -1197.77661, 162.47000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2123, 1396.64111, -1199.30981, 162.47000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2315, 1408.25000, -1195.01196, 162.36800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 1406.05005, -1195.01196, 162.36600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 1406.04004, -1195.01196, 162.39790,   0.00000, 90.00000, 180.00000);
	CreateDynamicObject(1668, 1406.07092, -1195.00854, 163.02998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 1409.38757, -1193.72559, 162.16190,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85510, -1197.97595, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85620, -1196.98792, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2016, 1413.85791, -1196.02539, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2011, 1409.84998, -1202.97998, 161.82001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2013, 1411.79065, -1196.07324, 161.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2016, 1410.79285, -1196.07336, 161.66000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 1405.76001, -1202.84998, 161.82001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 1402.65601, -1202.68994, 161.87000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 1401.06006, -1202.59998, 161.82001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2256, 1403.40002, -1203.14001, 163.75000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19386, 1421.46997, -1195.21997, 165.38000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2774, 1401.29834, -1194.15466, 173.05330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1502, 1410.46997, -1195.29004, 156.52000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1502, 1422.20996, -1195.19995, 163.64000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2125, 1407.88757, -1193.72559, 162.16190,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2125, 1406.38757, -1193.72559, 162.16190,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85510, -1198.97595, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2014, 1413.85510, -1199.97595, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(18762, 1409.71997, -1184.18994, 161.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1414.71997, -1184.18994, 161.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 1400.61011, -1203.67004, 166.69000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18762, 1394.10999, -1190.96997, 161.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1394.10999, -1195.96997, 161.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1394.10999, -1200.96997, 161.32080,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, 1399.71997, -1184.18994, 161.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1396.21997, -1184.18994, 161.32080,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1393.61548, -1199.80566, 164.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1393.61548, -1186.05566, 164.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1393.61548, -1190.18164, 164.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1404.26306, -1183.70117, 164.43159,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1408.38916, -1183.70117, 164.43159,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1412.38916, -1183.70117, 164.43159,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1410.35132, -1198.48987, 161.73000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1399.85132, -1188.85986, 161.73000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1408.79932, -1188.85986, 161.72600,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19357, 1415.62012, -1188.50195, 161.89450,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19357, 1417.82007, -1188.50000, 158.39529,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2232, 1396.06995, -1184.60999, 164.42844,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1396.06995, -1184.60999, 165.60600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1400.66016, -1184.60999, 163.22470,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1400.66016, -1184.60999, 164.42841,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2232, 1400.66016, -1184.60999, 165.60605,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19356, 1418.26404, -1195.21997, 165.38000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19443, 1417.48999, -1193.75842, 163.39000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1417.20996, -1193.75842, 163.21001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.89001, -1193.75842, 163.05000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.65002, -1193.75842, 162.89999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1416.32996, -1193.75842, 162.74001,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.95996, -1193.75842, 162.62399,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.64001, -1193.75842, 162.45200,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.39001, -1193.75842, 162.28000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1415.06995, -1193.75842, 162.11000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1193.75842, 161.92999,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1190.26001, 161.75600,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 1414.81995, -1193.75842, 161.75600,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1422.23889, -1187.66589, 163.39999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19357, 1415.61450, -1188.48279, 158.39529,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 1416.39001, -1184.18787, 152.13210,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18762, 1406.39404, -1184.18787, 156.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1401.39404, -1184.18787, 156.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, 1396.39404, -1184.18787, 156.04401,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, 1416.39001, -1184.18787, 162.13000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1408.64148, -1188.50696, 159.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18762, 1417.83948, -1190.92175, 162.87553,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1416.99548, -1190.92175, 162.38750,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1416.13745, -1190.92175, 161.88750,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1415.27747, -1190.92175, 161.39149,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1414.44751, -1190.92175, 160.91150,   -30.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1413.94751, -1190.92175, 160.19470,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18762, 1418.05945, -1190.92175, 162.87550,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1398.14148, -1188.50696, 159.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1408.64148, -1198.13904, 159.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1398.14148, -1198.13904, 159.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1419.14148, -1198.13904, 159.77431,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19325, 1403.26306, -1183.70117, 157.82410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1409.90515, -1183.70117, 157.82410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1416.54321, -1183.70117, 157.82410,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11665, 1418.77820, -1196.85010, 164.31570,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2267, 1418.74512, -1195.34534, 165.79210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2071, 1399.78162, -1190.26172, 163.25261,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2563, 1402.49927, -1190.41687, 156.60580,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2774, 1409.76965, -1184.53894, 173.05331,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1409.76965, -1186.18494, 173.05330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1409.77368, -1187.68494, 173.05330,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 1414.80273, -1202.03552, 166.56000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(2014, 1413.85510, -1200.97595, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(18766, 1415.80957, -1202.63525, 166.75999,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19325, 1393.61548, -1194.30554, 164.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2014, 1413.85510, -1201.97595, 161.64999,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19429, 1416.89099, -1195.44666, 165.34230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1393.60706, -1203.93152, 164.43159,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(2016, 1413.70264, -1196.07935, 161.64999,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, 1422.23889, -1187.66589, 163.55460,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 1416.89771, -1200.06506, 165.39000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, 1419.80627, -1192.77307, 158.61000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1416.80225, -1192.76709, 157.11000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18766, 1412.92224, -1192.77112, 154.84010,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19430, 1408.46997, -1194.54785, 162.06870,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19430, 1408.46997, -1195.50793, 162.06870,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19430, 1407.27197, -1195.50391, 162.07069,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(1535, 1423.09009, -1187.31958, 163.60612,   0.00000, 0.00000, 90.00000);
*/

	//Taller LS y Groove decoración
	CreateDynamicObject(9220, 2365.60010, -1711.68994, 15.20000,   0.00000, 0.00000, -180.02000);
	CreateDynamicObject(641, 2352.32007, -1702.01001, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2373.59009, -1721.73999, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2360.35010, -1722.26001, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2352.91992, -1722.28003, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2352.04004, -1716.44995, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2352.16992, -1711.70996, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2352.27002, -1707.14001, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2368.00000, -1722.21997, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2395.55005, -1742.58997, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2401.55005, -1742.33997, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2382.16992, -1742.39001, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2375.31006, -1742.22998, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2363.54004, -1742.27002, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2357.05005, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2342.33008, -1742.64001, 9.80000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2323.25000, -1742.03003, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 2388.82080, -1742.07813, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2267.32397, -1742.09094, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2348.63892, -1742.02771, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2388.74731, -1742.72925, 12.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, 2267.36011, -1742.79004, 12.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, 2348.60376, -1742.68481, 12.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1215, 2321.93335, -1737.93994, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2322.01050, -1746.76306, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2319.34082, -1740.57251, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2305.48438, -1746.77234, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2318.95581, -1742.29907, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2319.31250, -1744.09253, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2320.39917, -1745.70642, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2298.51001, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2333.58008, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2236.06689, -1738.06897, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2353.04004, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2393.92822, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2380.96997, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2393.94189, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2380.36011, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2352.79004, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2333.55005, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2293.89795, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2262.98999, -1738.06897, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2236.08984, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2293.63354, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2263.02979, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2320.39502, -1738.99023, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2305.52002, -1737.84998, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2307.09888, -1739.01074, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2308.14258, -1740.46606, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2308.54077, -1742.22876, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2308.14673, -1744.07068, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2307.06763, -1745.69690, 13.04000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2335.78003, -1742.37000, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2227.92114, -1742.34351, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2304.46997, -1742.29004, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2289.95996, -1742.26001, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2283.90991, -1742.12000, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2276.30005, -1742.25000, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2270.82007, -1742.38000, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2264.37012, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 2328.96973, -1742.06641, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2328.90454, -1742.71094, 12.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, 2294.10010, -1741.65002, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2279.38989, -1741.83997, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2294.18994, -1742.31995, 12.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, 2279.46997, -1742.43005, 12.84000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(641, 2258.70996, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2243.40991, -1742.34998, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(641, 2235.19067, -1742.52759, 9.90000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1181.29004, -1311.82996, 12.87000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1182.60999, -1311.82996, 12.87000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 1184.15002, -1311.82996, 12.87000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2274.37036, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2281.49219, -1738.06897, 14.35000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 2231.30933, -1741.93433, 12.83000,   0.00000, 0.00000, 990.00000);
	CreateDynamicObject(1280, 2231.34009, -1742.61340, 12.83000,   0.00000, 0.00000, 810.60004);
	CreateDynamicObject(11614, 2491.52466, -2134.10474, 15.56080,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(12943, 2456.37036, -2136.05127, 12.59000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3660, 2433.84277, -2095.10718, 14.80410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3660, 2433.84277, -2082.53613, 14.80410,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2429.10547, -2128.63550, 12.66580,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 2429.12549, -2124.51538, 12.66580,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 2429.12549, -2120.65552, 12.66580,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 2429.12549, -2117.05542, 12.66580,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 2429.10547, -2133.09546, 12.66580,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1251, 2434.96582, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2439.95264, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2444.47266, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2448.17261, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2435.51270, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2435.45264, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2440.08594, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2444.74585, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1251, 2448.82568, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(987, 2424.10010, -2071.73462, 12.24770,   0.00000, 0.00000, 9990.00000);
	CreateDynamicObject(1215, 2419.38354, -2098.26367, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2422.73511, -2084.01953, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2421.39355, -2083.32813, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2420.04980, -2082.44580, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2418.95581, -2079.96753, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2423.54834, -2094.86816, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2421.93262, -2095.15259, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2420.59277, -2095.92358, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2419.85620, -2097.08179, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2419.28442, -2081.31543, 12.98260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(987, 2424.16333, -2095.07495, 12.02775,   0.00000, 0.00000, 9990.00000);
	CreateDynamicObject(3096, 2456.38916, -2143.85400, 15.08540,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2450.07910, -2109.92212, 13.05090,   -0.04000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2450.07910, -2105.92212, 13.05090,   -0.04000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2448.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2444.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2440.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2436.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2432.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2428.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2426.01318, -2103.86035, 13.05090,   -0.04000, 0.00000, 0.00000);
	CreateDynamicObject(970, 2450.07910, -2127.92212, 13.05090,   -0.04000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2450.07910, -2131.92212, 13.05090,   -0.04000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2450.07910, -2135.92212, 13.05090,   -0.04000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2450.07910, -2139.92212, 13.05090,   -0.04000, 0.00000, 90.00000);
	CreateDynamicObject(970, 2450.07910, -2141.92212, 13.05090,   -0.04000, 0.00000, 90.00000);

	CreateDynamicObject(638, 2447.83228, -2121.08838, 13.12100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(638, 2450.33984, -2121.10547, 13.12100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1215, 2452.09644, -2125.54834, 13.10100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2450.07153, -2116.11084, 13.10100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2451.64014, -2116.20068, 13.10100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 2450.48218, -2125.61768, 13.10100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2431.18579, -2136.04956, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2429.71411, -2105.83545, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2426.31348, -2109.49438, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2426.30908, -2106.46655, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2429.87915, -2109.17188, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2426.89624, -2112.03711, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2427.57593, -2136.08423, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2427.91968, -2138.54956, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2428.17773, -2141.78052, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2431.92407, -2141.79321, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(869, 2431.41895, -2138.71167, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 2428.36963, -2108.85815, 11.73580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 2429.91431, -2139.33447, 11.73580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3462, 2433.29834, -2136.21362, 13.69980,   0.00000, 0.00000, -150.02000);
	CreateDynamicObject(3462, 2432.49316, -2113.36841, 13.69980,   0.00000, 0.00000, 150.00000);
	CreateDynamicObject(869, 2430.54517, -2111.94653, 12.96380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3242, 2464.97729, -2070.22900, 14.55020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3242, 2438.86816, -2070.22900, 14.55020,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 2439.31030, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 2465.99536, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 2469.57788, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, 2443.27075, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3761, 2453.26245, -2135.68750, 14.54412,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 2478.51904, -2071.49097, 14.02883,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2478.51904, -2099.78491, 14.02880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2478.51294, -2080.56494, 14.02880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2483.66357, -2104.95361, 14.02880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 2494.08862, -2104.95361, 14.02880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 2504.51367, -2104.95361, 14.02880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11614, 2472.75977, -2134.10474, 15.56080,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2509.65894, -2110.13965, 14.02880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2509.65894, -2120.56470, 14.02880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2509.65894, -2130.98950, 14.02880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, 2509.65894, -2139.74658, 14.02880,   0.00000, 0.00000, 90.00000);

	//prisión fortcarson exterior
	CreateDynamicObject(3749, 288.14139, 1411.57861, 14.56882,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8149, 110.56751, 1406.39197, 12.48510,   0.00000, 0.00000, 0.50000);
	CreateDynamicObject(8148, 191.81569, 1485.24390, 12.48510,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8152, 208.32149, 1455.58911, 12.48510,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(987, 160.86678, 1432.89941, 9.42527,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(987, 288.85178, 1401.91943, 9.42530,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8155, 268.55685, 1363.50305, 12.48510,   0.00000, 0.00000, 179.50000);
	CreateDynamicObject(8148, 192.69859, 1336.32190, 12.48510,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8150, 225.65190, 1403.21338, 11.76890,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(8150, 225.65190, 1419.87341, 11.76890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, 245.64140, 1411.57861, 14.56880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3749, 203.48140, 1411.57861, 14.56880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3749, 162.68140, 1411.57861, 14.56880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 288.29187, 1431.50024, 9.42527,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(987, 150.32680, 1420.99939, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1409.09937, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1397.19934, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.41547, 1403.17761, 9.42530,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(987, 150.32680, 1385.29932, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1373.39929, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1361.49927, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3749, 150.64270, 1353.89209, 14.56880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1335.99927, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3749, 150.64270, 1464.39209, 14.56880,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1432.89941, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1444.79944, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 150.32680, 1473.01941, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(4079, 253.94090, 1453.85669, 21.73030,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4079, 204.54510, 1448.91235, 21.73030,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(16480, 260.32025, 1447.58826, 20.49623,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16482, 199.95773, 1455.19604, 20.49620,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(16480, 260.32025, 1447.58826, 20.49623,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16480, 199.95770, 1455.19604, 20.49620,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(980, 288.65009, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);//p1
	CreateDynamicObject(980, 246.15010, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);//p2
	CreateDynamicObject(980, 204.33009, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);//p3
	CreateDynamicObject(980, 162.85010, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 160.86681, 1444.79944, 9.42530,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(987, 160.86681, 1456.69934, 9.42530,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(987, 219.34413, 1484.93176, 9.42530,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(13367, 114.36054, 1480.31946, 20.24940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13367, 114.36050, 1340.57947, 20.24940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13367, 284.36050, 1340.57947, 20.24940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13367, 284.36050, 1428.29956, 20.24940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2627, 117.79669, 1456.40564, 9.58588,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2627, 119.09175, 1448.58215, 9.58590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2627, 116.25794, 1443.84302, 9.58590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2627, 116.25909, 1435.36230, 9.58590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2627, 116.12229, 1439.01270, 9.58590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2628, 131.76711, 1451.42712, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2628, 131.76711, 1448.36707, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2629, 131.76711, 1443.94714, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 131.76711, 1439.86707, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 131.76711, 1436.12708, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 131.76711, 1433.06702, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 131.76711, 1425.58716, 9.63530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2631, 126.86128, 1418.94861, 9.62230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2631, 118.70130, 1418.94861, 9.62230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2631, 118.70130, 1413.16858, 9.62230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2632, 118.70130, 1407.04858, 9.62230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2632, 126.86130, 1408.40857, 9.62230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6959, 196.19568, 1368.28088, 9.66584,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6960, 196.19569, 1368.28088, 11.79846,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3496, 216.22052, 1378.06055, 9.68207,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3496, 216.22050, 1358.00049, 9.68210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3496, 177.80051, 1358.00049, 9.68210,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3496, 177.80051, 1378.40051, 9.68210,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(987, 225.46680, 1335.99927, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 225.46680, 1347.89929, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 225.46680, 1359.79932, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3749, 226.07671, 1381.25085, 14.58370,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(987, 225.46680, 1391.07935, 9.42530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(980, 225.66748, 1381.26550, 11.88040,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3268, 267.43716, 1386.58337, 9.24311,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3268, 267.43719, 1353.60339, 9.24310,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3050, 177.98509, 1423.18958, 12.73825,   0.00000, 0.00000, 315.58606);
	CreateDynamicObject(3050, 180.19136, 1420.97217, 12.73820,   0.00000, 0.00000, 315.58609);
	CreateDynamicObject(3050, 180.19136, 1420.97217, 9.70918,   0.00000, 0.00000, 315.58609);
	CreateDynamicObject(3050, 177.98511, 1423.18958, 9.70920,   0.00000, 0.00000, 315.58609);
	CreateDynamicObject(691, 298.16101, 1398.69861, 8.32853,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 299.57538, 1425.55774, 8.32853,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 310.41223, 1399.06860, 6.89011,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 321.60385, 1398.19263, 5.50702,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 311.19989, 1425.66565, 7.20362,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(691, 321.44418, 1425.23682, 6.55817,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(13367, 284.36050, 1397.35962, 20.24940,   0.00000, 0.00000, 0.00000);
	//Spraycans
	/*CreateDynamicObject(5422, 2071.47656, -1831.42188, 14.56250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(6400, 488.28131, -1734.69531, 12.39060,   0.00000, 0.00000, 81.00000);
	CreateDynamicObject(5856, 1024.98438, -1029.35156, 33.19530,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(5779, 1041.35156, -1025.92969, 32.67190,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(5340, 2644.85938, -2039.23438, 14.03910,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(13028, 720.01563, -462.52341, 16.85940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11313, -1935.85938, 239.53130, 35.35160,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11319, -1904.53125, 277.89841, 42.95310,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10575, -2716.35156, 217.47659, 5.38280,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(9625, -2425.72656, 1027.99219, 52.28130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(10182, -1786.81250, 1209.42188, 25.83590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3294, -1420.54688, 2591.15625, 57.74220,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3294, -100.00000, 1111.41406, 21.64060,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9093, 2386.65625, 1043.60156, 11.59380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(7891, 1968.74219, 2162.49219, 12.09380,   0.00000, 0.00000, 0.00000);*/
	//Alhambra
	Alhambra = CreateDynamicObject(18018, 493.35941, -14.89840, 999.67188-7.403,   0.00000, 0.00000, 180.00000);
	SetDynamicObjectMaterial(Alhambra, 0, 19449, "all_walls", "cj_white_wall2");
	SetDynamicObjectMaterial(Alhambra, 1, 19128, "dancefloors", "DanceFloor1");
	SetDynamicObjectMaterial(Alhambra, 2, 4724, "skyscr1_lan2", "sl_librarywall1");
	SetDynamicObjectMaterial(Alhambra, 3, 4724, "skyscr1_lan2", "sl_librarywall1");
	SetDynamicObjectMaterial(Alhambra, 4, 4724, "skyscr1_lan2", "sl_librarywall1");
	CreateDynamicObject(19128, 489.82819, -12.15030, 999.64099-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 489.82819, -16.12030, 999.64099-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 485.82819, -16.12030, 999.64099-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 485.82819, -12.15030, 999.64099-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 485.91699, -1.67260, 1001.33350-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 489.12100, -1.67260, 1001.32953-7.403,   0.00000, 0.00000, 0.00000);
		//Arriba
	CreateDynamicObject(19128, 487.16385, -23.14099, 1002.06549-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 487.16379, -27.14100, 1002.06549-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 483.16379, -23.14100, 1002.06549-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 481.27979, -23.14100, 1002.06152-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 483.16379, -27.14100, 1002.06549-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 481.27979, -27.14100, 1002.06152-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19370, 478.95279, -24.52480, 1002.02753-7.403,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 478.95279, -27.73480, 1002.02753-7.403,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 475.45221, -22.81710, 1002.02753-7.403,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 475.45221, -26.01710, 1002.02753-7.403,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 471.95221, -26.01710, 1002.02753-7.403,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 471.95221, -22.81710, 1002.02753-7.403,   0.00000, 90.00000, 0.00000);
		//Humo
    CreateDynamicObject(2780, 487.92630, -14.27980, 992.67328-7.403,   0.00000, 0.00000, 0.00000);
    //Flashh
    CreateDynamicObject(345, 487.8518, -13.6801, 1003.5559-7.403,   0.00000, 0.00000, 0.00000);
    
	new rp1 = CreateDynamicObject(19464, 487.4775, -0.2203, 1003.0283-7.403, 0.0000, 0.0000, 90.0);
	SetDynamicObjectMaterialText(rp1, 0, "Montevideo RolePlay", 140, "Arial", 60, 1, -16776961, 0, 1);
	//new ex2 = CreateDynamicObject(19353, 485.4350, -20.9671, 1001.5, 0.0000, 0.0000, 90.0);
	//SetDynamicObjectMaterialText(ex2, 0, "Alhambra - MUSIC", 140, "Franklin Gothic Medium", 70, 1, -16776961, 0, 1);
	CreateDynamicObject(2773, 479.60956, -22.44417, 1002.62671-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 501.08069, -13.54530, 999.67578-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 503.03867, -16.51109, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1723, 501.11157, -19.83668, 999.67578-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 503.13370, -23.22323, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2315, 501.36566, -15.07765, 999.67773-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 501.36569, -21.57760, 999.67767-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 488.93503, -20.37638, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1723, 485.43500, -20.37640, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1723, 481.93500, -20.37640, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1723, 496.58069, -13.54530, 999.67578-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 498.53870, -16.51110, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2315, 496.86569, -15.07760, 999.67767-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 496.61160, -19.83670, 999.67578-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2315, 496.86569, -21.57760, 999.67767-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 498.63370, -23.22320, 999.67578-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1670, 497.55798, -14.99923, 1000.18555-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 502.25339, -14.97345, 1000.18555-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 497.54715, -21.48342, 1000.18555-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1670, 502.03802, -21.51635, 1000.18555-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2321, 488.43237, -5.16120, 1001.33154-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14820, 487.70255, -5.20942, 1001.92041-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2321, 488.43237, -5.16120, 1000.85852-7.403,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2232, 478.03122, -2.58967, 1004.73108-7.403,   30.00000, 0.00000, 45.00000);
	CreateDynamicObject(2232, 483.35071, -0.98835, 1004.73108-7.403,   30.00000, 0.00000, 45.00000);
	CreateDynamicObject(2232, 491.81039, -0.61982, 1004.73108-7.403,   30.00000, 0.00000, -45.00000);
	CreateDynamicObject(2232, 499.01279, -2.34857, 1004.73108-7.403,   30.00000, 0.00000, -45.00000);
	CreateDynamicObject(2232, 488.23129, -5.52460, 1001.45367-7.403,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2232, 487.06329, -5.52460, 1001.43768-7.403,   0.00000, -90.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -10.18162, 1004.71277-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -12.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -15.18160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -17.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -20.18160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -22.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -24.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -10.18160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -10.18160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -10.18160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 503.62030, -10.18160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -12.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -15.18160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -17.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -20.18160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -22.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 501.12030, -24.68160, 1004.71283-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -12.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -15.18160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -17.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -20.18160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -22.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 498.62030, -24.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -12.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -15.18160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -17.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -20.18160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -22.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 496.12030, -24.68160, 1005.45880-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18643, 477.21643, -6.47648, 1001.08051-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18646, 488.74466, -5.53492, 1001.90936-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18646, 486.60504, -5.55718, 1001.90942-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18655, 483.64883, -5.88202, 998.61652-7.403,   0.00000, 0.00000, 117.50000);
	CreateDynamicObject(18655, 491.31070, -5.97206, 998.61652-7.403,   0.00000, 0.00000, 55.00000);
	Alhambra_Bar = CreateDynamicObject(18090, 479.13095, -11.04733, 1002.23102-7.403,   0.00000, 0.00000, 180.00000);
	//SetDynamicObjectMaterial(Alhambra_Bar, 0, 19449, "all_walls", "cj_white_wall2");
	SetDynamicObjectMaterial(Alhambra_Bar, 2, 19449, "all_walls", "cj_white_wall2");
	SetDynamicObjectMaterial(Alhambra_Bar, 3, 18646, "matcolours", "white");
	SetDynamicObjectMaterial(Alhambra_Bar, 5, 0, "null", "null");
	SetDynamicObjectMaterial(Alhambra_Bar, 6, 0, "null", "null");
	CreateDynamicObject(19464, 478.13184, -6.29586, 1002.12537-7.403,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2125, 481.15588, -14.08824, 999.97687-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 481.15591, -12.08820, 999.97693-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 481.15591, -10.08820, 999.97693-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 481.15591, -8.08820, 999.97693-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2125, 477.87485, -15.80164, 999.97687-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 477.23871, -13.92360, 1002.50391-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2176, 503.71820, -4.64323, 1002.47101-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1537, 473.82312, -21.31648, 1002.68042-7.403,   0.00000, 0.00000, 180.00000);
	//CreateDynamicObject(18708, 484.26685, -0.59231, 1004.37402,   0.00000, 0.00000, 0.00000);//pompas
	CreateDynamicObject(18708, 485.2, -0.54790, 1001.7-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18708, 487.69751, -0.54790, 1001.7-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18708, 489.69751, -0.54790, 1001.7-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18728, 484.36285, -6.07611, 999.42529-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18728, 490.86292, -6.07610, 999.42529-7.403,   0.00000, 0.00000, 0.00000);
	//CreateDynamicObject(19289, 483.20093, -0.33785, 1004.10431,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 483.20093, -0.33785, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 484.70090, -0.33790, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 486.20090, -0.33790, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 487.70090, -0.33790, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 489.20090, -0.33790, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 490.70090, -0.33790, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 492.20090, -0.33790, 1004.10431-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 483.20090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 484.70090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 486.20090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 487.70090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 489.20090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 490.70090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 492.20090, -0.33790, 1002.1043-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 483.20090, -0.33790, 1003.2107-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19289, 492.20090, -0.33790, 1003.2107-7.403,   0.00000, 0.00000, 0.00000);
	//Regalos
	CreateDynamicObject(19056, 483.66119, -17.14150, 1003.61047-7.403,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(19087, 483.64963, -17.18654, 1005.60065-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19057, 490.95050, -15.96320, 1003.47723-7.403,   0.00000, 0.00000, -30.00000);
	CreateDynamicObject(19087, 490.95117, -15.97180, 1005.60065-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19055, 490.54459, -11.29980, 1003.75708-7.403,   0.00000, 0.00000, -130.00000);
	CreateDynamicObject(19087, 490.49725, -11.27329, 1005.60065-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19054, 484.24710, -11.21110, 1003.11462-7.403,   0.00000, 0.00000, -26.00000);
	CreateDynamicObject(19087, 484.24438, -11.20873, 1005.60065-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1541, 478.12482, -12.86644, 1001.46960-7.403,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1543, 477.75262, -13.73249, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1544, 477.73889, -13.53200, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1543, 477.73889, -12.03200, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1544, 477.73889, -11.53200, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1544, 477.73889, -11.03200, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1543, 477.73889, -10.53200, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1543, 477.73889, -10.03200, 1001.32068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1543, 477.73889, -12.03200, 1001.82068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1543, 477.73889, -11.53200, 1001.82068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1544, 477.73889, -10.53200, 1001.82068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1543, 477.73889, -10.03200, 1001.82068-7.403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1546, 480.73688, -13.44233, 1000.78174-7.403,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1546, 480.61685, -13.08849, 1000.78174-7.403,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1549, 477.72546, -17.58126, 999.64783-7.403,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(18102, 477.26559, -18.17190, 1001.64838-7.403,   90.00000, 90.00000, 180.00000);
    CreateDynamicObject(1533, 489.39911, -22.86130, 992.23749,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1533, 489.39911, -24.35130, 992.23749,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18755, 493.45871, -26.90600, 994.21472,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18756, 493.45871, -26.90600, 994.21472,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18757, 493.45871, -26.90600, 994.21472,   0.00000, 0.00000, -90.00000);


   // Cargar_Camion = CreatePickup(0, 1, 2014.0082, -2020.7400, 12.5468, 0);
  //   = CreatePickup(0, 1, 1841.8890, -1856.3550, 12.3726, 0);

/*     ----> Pickups
    CreatePickup(19133, 1, 1654.2700, -1654.8944, 22.5156, 0); // Vip
    CreatePickup(19133, 1, 648.8630, -1360.6012, 13.5863, 0); // CNN
    CreatePickup(19133, 1, 1464.851318, -1010.793090, 26.843750, 0); // Banco
    CreatePickup(19133, 1, 542.3840, -1293.5125, 17.2422, 0); // Grotti
    
    CreatePickup(19133, 1, 1833.149780, -1842.485717, 13.578125, 0); // 24/7 Unity
    CreatePickup(19133, 1, 1836.4471, -1682.3042, 13.3476, 0); // Alhambra
    CreatePickup(19133, 1, 1315.4854, -897.6839, 39.5781, 0); // 24/7 Vinewood
    CreatePickup(19133, 1, 1352.3815, -1759.2286, 13.5078, 0); // 24/7 Ayuntamiento
    CreatePickup(19133, 1, 2244.3567, -1665.5562, 15.4766, 0); // Binco
    CreatePickup(19133, 1, 1456.4344, -1137.6427, 23.9484, 0); // Zip
    CreatePickup(19133, 1, 499.5753, -1360.6145, 16.3664, 0); // ProLaps
    CreatePickup(19133, 1, 2112.7739, -1211.6287, 23.9631, 0); // SubUrban
    CreatePickup(19133, 1, 597.2778, -1249.4883, 18.3021, 0); // Victim
    CreatePickup(19133, 1, 810.6630, -1616.1554, 13.5469, 0); // Burger Shot
    CreatePickup(19133, 1, 2105.4858, -1806.5336, 13.5547, 0); // Pizzeria
    CreatePickup(19133, 1, 2070.6365, -1793.7847, 13.5469, 0); // Peluquería
    CreatePickup(19133, 1, 2068.5840, -1779.7758, 13.5596, 0); // Tattoo studio
    CreatePickup(19133, 1, 823.9835, -1588.2754, 13.5545, 0); // Peluquería 2
    CreatePickup(19133, 1, 928.7275, -1352.9547, 13.3438, 0); // Clukin' Bells
    CreatePickup(19133, 1, 2421.3159, -1219.6179, 25.5382, 0); // Pig Pen (Prostíbulo)
    CreatePickup(19133, 1, 2310.0977, -1643.5522, 14.8270, 0); // Groove Bar
    CreatePickup(19133, 1, 2229.8601, -1721.4545, 13.5633, 0); // Cantos Gym

    CreatePickup(19133, 1, 1555.142822, -1675.475341, 16.195312, 0); // LSPD
    CreatePickup(19133, 1, 1481.037597, -1771.786376, 18.795755, 0); //Ayuntamiento
     //Alhambra*/
	CreatePickup(19133, 1, 1204.8596, 12.2682, 1000.9991, 0); // Bitch
	CreatePickup(1212, 1, 1437.143798, -997.824829, 1639.791137, 0); // Banco 1
    CreatePickup(1212, 1, 1433.200439, -997.829040, 1639.791137, 0); // Banco 2
    CreatePickup(1212, 1, 1429.596923, -997.829467, 1639.784301, 0); // Banco 3
    Alhambra_Pick = CreatePickup(0, 1, 481.611053, -10.849586, 1000.679687-7.403, 0);//Alahambra
    CreatePickup(1239, 1, 361.829895, 173.562728, 1008.0, 0);//InfoAyunta
    Conce_Pick1 = CreatePickup(0, 1, 560.660095, -1310.996093, 1996.575927, 0); //Concesionario 1
    Conce_Pick2 = CreatePickup(0, 1, 560.660095, -1313.875244, 1996.575927, 0); //Concesionario 2
    Binco_Pick = CreatePickup(0, 1, 217.469360, -98.421447, 1005.257812, 0); //Binco 1
    Victim_Pick1 = CreatePickup(0, 1, 206.654342, -3.857390, 1001.210937, 0); //Victim1
    Victim_Pick2 = CreatePickup(0, 1, 206.305984, -12.398782, 1001.217773, 0); //Victim2
	Zip_Pick = CreatePickup(0, 1, 181.209182, -87.911384, 1002.030700, 0); //ZIP
	Prolaps_Pick = CreatePickup(0, 1, 199.650726, -127.131729, 1003.515197, 0); //Prolaps
	Suburban_Pick = CreatePickup(0, 1, 214.175384, -41.355842, 1002.023437, 0); //Suburban
	RecogerVeh_Pick = CreatePickup(0, 1, 1751.54309, -2054.41772, 13.52704, 0); //Recogervehiculo
	RecogerVehGrua_Pick = CreatePickup(0, 1, 2467.223388, -2073.973632, 13.761137, 0); //Recogervehiculo grua
    PizzaStack_Pick1 = CreatePickup(0, 1, 377.228118, -118.802841, 1001.499511, 0); //Pizza stacked pick 1
    PizzaStack_Pick2 = CreatePickup(0, 1, 375.244934, -118.804130, 1001.499511, 0); //Pizza stacked pick 2
    PizzaStack_Pick3 = CreatePickup(0, 1, 373.237823, -118.803184, 1001.492187, 0); //Pizza stacked pick 3
    BarGR_Pick =  CreatePickup(0, 1, 497.719116, -76.040863, 998.757812, 0); //Bar Groove
    PigPen_Pick =  CreatePickup(0, 1, 1215.061279, -13.353262, 1000.921875, 0); //PigPen
    Donuts_Pick =  CreatePickup(0, 1, 379.239440, -187.924850, 1000.632812, 0); //Donuts
    ChickBell_Pick1 = CreatePickup(0, 1, 368.798034, -6.018355, 1001.851562, 0); //ChickenBell1
    ChickBell_Pick2 = CreatePickup(0, 1, 371.651885, -6.016441, 1001.858886, 0); //ChickenBell1
    Burger_Pick = CreatePickup(0, 1, 377.137695, -67.435173, 1001.507812, 0); //Burger
    Hotdog_Pick = CreatePickup(0, 1, 1000.164672, -1850.040405, 12.814621, 0); //Hotdog
    AyuntShop_Pick = CreatePickup(0, 1, -30.552667, -28.992704, 1003.557250, 0); //24/7Ayunta
    UnityShop_Pick = CreatePickup(0, 1, -28.767684, -185.135284, 1003.546875, 0); //24/7Unity
    VineShop_Pick = CreatePickup(0, 1, 2.580548, -29.013784, 1003.549438, 0); //24/7Vine

    
    CarWash[0] = CreateDynamicObject(18747, 0, 0, -100, 0, 0, 90);
    CarWash[1] = CreateDynamicObject(18747, 0, 0, -100, 0, 0, 90);
	CarWash[2] = CreateDynamicObject(18687, 0, 0, -100, 0, 0, -90);
    CarWash[3] = CreateDynamicObject(18687, 0, 0, -100, 0, 0, 90);
    CarWash[4] = CreateObject(18707, 0, 0, -100, 0, 0, 0);
    CreateDynamicObject(1250, 1908.84998, -1783.68945, 13.40625,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1239, 1909.45374, -1783.84558, 13.91913,   0.00000, 0.00000, 90.00000);

    
	// ----> Labels
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}job camionero", 0xFFFFFFFF, 1991.5011, -2100.8479, 13.059551, 5.0, 0, 0); // camioneros
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Victim", 0xFFFFFFFF, 461.200073, -1500.823608, 31.059551, 5.0, 0, 0); // Victim
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Burger Shot", 0xFFFFFFFF, 810.6630, -1616.1554, 13.5469, 5.0, 0, 0); // Burger Shot
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Pizzeria", 0xFFFFFFFF, 2105.4858, -1806.5336, 13.5547, 5.0, 0, 0); // Pizzeria
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Peluquería", 0xFFFFFFFF, 2070.6365, -1793.7847, 13.5469, 5.0, 0, 0); // Peluquería
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Tattoo studio", 0xFFFFFFFF, 2068.5840, -1779.7758, 13.5596, 5.0, 0, 0); // Tattoo studio
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Peluquería 2", 0xFFFFFFFF, 823.9835, -1588.2754, 13.5545, 5.0, 0, 0); // Peluquería 2
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Clukin' Bells", 0xFFFFFFFF, 928.7275, -1352.9547, 13.3438, 5.0, 0, 0); // Clukin' Bells
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Pig Pen (Prostíbulo)", 0xFFFFFFFF, 2421.3159, -1219.6179, 25.5382, 5.0, 0, 0); // Pig Pen (Prostíbulo)
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Groove Bar", 0xFFFFFFFF, 2310.0977, -1643.5522, 14.8270, 5.0, 0, 0); // Groove Bar
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Cantos Gym", 0xFFFFFFFF, 2229.8601, -1721.4545, 13.5633, 5.0, 0, 0); // Cantos Gym
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Lugar V.I.P", 0xFFFFFFFF, 1654.2700, -1654.8944, 22.5156, 5.0, 0, 0); // Vip
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Dept. Noticias", 0xFFFFFFFF, 648.8630, -1360.6012, 13.5863, 5.0, 0, 0); // CNN
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Banco de Los Santos", 0xFFFFFFFF, 1153.948120, -1772.674682, 16.599193, 5.0, 0, 0); // Banco
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Grotti", 0xFFFFFFFF, 542.3840, -1293.5125, 17.2422, 5.0, 0, 0); // Grotti
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Baile privado", 0xFFFFFFFF, 1204.8596, 12.2682, 1000.9991, 5.0, 0, 0); // Bitch
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}24/7 Unity", 0xFFFFFFFF, 1833.149780, -1842.485717, 13.578125, 5.0, 0, 0); // 24/7 Unity
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Alhambra", 0xFFFFFFFF, 1836.4471, -1682.3042, 13.3476, 5.0, 0, 0); // Alhambra
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}24/7 Vinewood", 0xFFFFFFFF, 1315.4854, -897.6839, 39.5781, 5.0, 0, 0); // 24/7 Vinewood
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}24/7 Ayuntamiento", 0xFFFFFFFF, 1352.3815, -1759.2286, 13.5078, 5.0, 0, 0); // 24/7 Ayuntamiento
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Binco", 0xFFFFFFFF, 2244.3567, -1665.5562, 15.4766, 5.0, 0, 0); // Binco
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Zip", 0xFFFFFFFF, 1456.4344, -1137.6427, 23.9484, 5.0, 0, 0); // Zip
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}ProLaps", 0xFFFFFFFF, 499.5753, -1360.6145, 16.3664, 5.0, 0, 0); // ProLaps
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}SubUrban", 0xFFFFFFFF, 2112.7739, -1211.6287, 23.9631, 5.0, 0, 0); // SubUrban
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Jims Ring", 0xFFFFFFFF, 1038.286010, -1340.728027, 13.741346, 5.0, 0, 0); // JimRing
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1714.56897, -1862.00928, 13.40750, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1479.56226, -1620.46985, 13.90706, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1995.02405, -1452.68469, 13.43710, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1187.30322, -930.41052, 42.92493, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 615.66272, -1228.28015, 18.19140, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 849.83258, -1796.12292, 13.67352, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1443.42688, -2286.75879, 13.39686, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 2849.94849, -1967.06055, 10.92459, 5.0, 0, 0); // INFO



    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 1437.143798, -997.824829, 1639.791137, 1.5, 0, 0); // Banco1
    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 1433.200439, -997.829040, 1639.791137, 1.5, 0, 0); // Banco2
    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 1429.596923, -997.829467, 1639.784301, 1.5, 0, 0); // Banco3
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}LSPD", 0xFFFFFFFF, 1555.142822, -1675.475341, 16.195312, 5.0, 0, 0); // LSPD
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Ayuntamiento", 0xFFFFFFFF, 1481.037597, -1771.786376, 18.795755, 5.0, 0, 0); //Ayuntamiento
    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 361.829895, 173.562728, 1008.382812, 1.5, 0, 0); // Info ayunta
    
/*    InventarioTD[0] = TextDrawCreate(486.888549, 109.517761, "usebox");
	TextDrawLetterSize(InventarioTD[0], 0.000000, 22.857652);
	TextDrawTextSize(InventarioTD[0], 162.000076, 0.000000);
	TextDrawAlignment(InventarioTD[0], 1);
	TextDrawColor(InventarioTD[0], 0);
	TextDrawUseBox(InventarioTD[0], true);
	TextDrawBoxColor(InventarioTD[0], 255);
	TextDrawSetShadow(InventarioTD[0], 0);
	TextDrawSetOutline(InventarioTD[0], 0);
	TextDrawFont(InventarioTD[0], 0);

	InventarioTD[1] = TextDrawCreate(483.888458, 112.508880, "usebox");
	TextDrawLetterSize(InventarioTD[1], 0.000000, 22.102088);
	TextDrawTextSize(InventarioTD[1], 164.222290, 0.000000);
	TextDrawAlignment(InventarioTD[1], 1);
	TextDrawColor(InventarioTD[1], 0);
	TextDrawUseBox(InventarioTD[1], true);
	TextDrawBoxColor(InventarioTD[1], -2139062017);
	TextDrawSetShadow(InventarioTD[1], 0);
	TextDrawSetOutline(InventarioTD[1], 0);
	TextDrawFont(InventarioTD[1], 0);

	InventarioTD[2] = TextDrawCreate(179.111099, 121.457748, "Inventario");
	TextDrawLetterSize(InventarioTD[2], 0.449999, 1.600000);
	TextDrawAlignment(InventarioTD[2], 1);
	TextDrawColor(InventarioTD[2], -1);
	TextDrawSetShadow(InventarioTD[2], 0);
	TextDrawSetOutline(InventarioTD[2], 1);
	TextDrawBackgroundColor(InventarioTD[2], 51);
	TextDrawFont(InventarioTD[2], 3);
	TextDrawSetProportional(InventarioTD[2], 1);

	InventarioTD[3] = TextDrawCreate(485.111206, 146.353332, "usebox");
	TextDrawLetterSize(InventarioTD[3], 0.000000, -0.064813);
	TextDrawTextSize(InventarioTD[3], 163.333343, 0.000000);
	TextDrawAlignment(InventarioTD[3], 1);
	TextDrawColor(InventarioTD[3], 0);
	TextDrawUseBox(InventarioTD[3], true);
	TextDrawBoxColor(InventarioTD[3], 255);
	TextDrawSetShadow(InventarioTD[3], 0);
	TextDrawSetOutline(InventarioTD[3], 0);
	TextDrawFont(InventarioTD[3], 0);

	InventarioTD[4] = TextDrawCreate(280.778076, 146.855529, "usebox");
	TextDrawLetterSize(InventarioTD[4], 0.000000, 18.512973);
	TextDrawTextSize(InventarioTD[4], 274.889129, 0.000000);
	TextDrawAlignment(InventarioTD[4], 1);
	TextDrawColor(InventarioTD[4], 0);
	TextDrawUseBox(InventarioTD[4], true);
	TextDrawBoxColor(InventarioTD[4], 255);
	TextDrawSetShadow(InventarioTD[4], 0);
	TextDrawSetOutline(InventarioTD[4], 0);
	TextDrawFont(InventarioTD[4], 0);*/

    //Bank LS
 	Bank[0] = TextDrawCreate(1033.555541, -37.326667, "usebox");
	TextDrawLetterSize(Bank[0], 0.000000, 80.116912);
	TextDrawTextSize(Bank[0], -57.555557, 0.000000);
	TextDrawAlignment(Bank[0], 1);
	TextDrawColor(Bank[0], 0);
	TextDrawUseBox(Bank[0], true);
	TextDrawBoxColor(Bank[0], -1061109505);
	TextDrawSetShadow(Bank[0], 0);
	TextDrawSetOutline(Bank[0], 0);
	TextDrawFont(Bank[0], 0);

	Bank[1] = TextDrawCreate(139.555541, 26.880022, "ld_spac:dark");
	TextDrawLetterSize(Bank[1], 0.000000, 0.000000);
	TextDrawTextSize(Bank[1], 17.333339, 19.413330);
	TextDrawAlignment(Bank[1], 1);
	TextDrawColor(Bank[1], -1);
	TextDrawSetShadow(Bank[1], 0);
	TextDrawSetOutline(Bank[1], 0);
	TextDrawBackgroundColor(Bank[1], -16776961);
	TextDrawFont(Bank[1], 4);

	Bank[2] = TextDrawCreate(160.888946, 24.391101, "BANCO");
	TextDrawLetterSize(Bank[2], 0.459777, 1.659733);
	TextDrawAlignment(Bank[2], 1);
	TextDrawColor(Bank[2], 255);
	TextDrawSetShadow(Bank[2], 0);
	TextDrawSetOutline(Bank[2], 0);
	TextDrawBackgroundColor(Bank[2], 255);
	TextDrawFont(Bank[2], 1);
	TextDrawSetProportional(Bank[2], 1);

	Bank[3] = TextDrawCreate(161.333312, 37.831119, "Los Santos");
	TextDrawLetterSize(Bank[3], 0.281555, 1.127111);
	TextDrawAlignment(Bank[3], 1);
	TextDrawColor(Bank[3], 255);
	TextDrawSetShadow(Bank[3], 0);
	TextDrawSetOutline(Bank[3], 0);
	TextDrawBackgroundColor(Bank[3], 51);
	TextDrawFont(Bank[3], 1);
	TextDrawSetProportional(Bank[3], 1);

	Bank[4] = TextDrawCreate(886.444396, 69.695564, "usebox");
	TextDrawLetterSize(Bank[4], 0.000000, 2.908025);
	TextDrawTextSize(Bank[4], -46.000007, 0.000000);
	TextDrawAlignment(Bank[4], 1);
	TextDrawColor(Bank[4], 0);
	TextDrawUseBox(Bank[4], true);
	TextDrawBoxColor(Bank[4], 255);
	TextDrawSetShadow(Bank[4], 0);
	TextDrawSetOutline(Bank[4], 0);
	TextDrawFont(Bank[4], 0);

	Bank[5] = TextDrawCreate(888.777770, 70.197784, "usebox");
	TextDrawLetterSize(Bank[5], 0.000000, 2.596913);
	TextDrawTextSize(Bank[5], -46.444450, 0.000000);
	TextDrawAlignment(Bank[5], 1);
	TextDrawColor(Bank[5], 0);
	TextDrawUseBox(Bank[5], true);
	TextDrawBoxColor(Bank[5], -1088603905);
	TextDrawSetShadow(Bank[5], 0);
	TextDrawSetOutline(Bank[5], 0);
	TextDrawFont(Bank[5], 0);

	Bank[6] = TextDrawCreate(1236.222045, 99.064437, "usebox");
	TextDrawLetterSize(Bank[6], 0.000000, 70.465545);
	TextDrawTextSize(Bank[6], -47.777774, 0.000000);
	TextDrawAlignment(Bank[6], 1);
	TextDrawColor(Bank[6], 0);
	TextDrawUseBox(Bank[6], true);
	TextDrawBoxColor(Bank[6], 102);
	TextDrawSetShadow(Bank[6], 0);
	TextDrawSetOutline(Bank[6], 0);
	TextDrawFont(Bank[6], 0);

	Bank[7] = TextDrawCreate(518.888793, 100.059989, "usebox");
	TextDrawLetterSize(Bank[7], 0.000000, 49.272464);
	TextDrawTextSize(Bank[7], 121.555618, 0.000000);
	TextDrawAlignment(Bank[7], 1);
	TextDrawColor(Bank[7], 0);
	TextDrawUseBox(Bank[7], true);
	TextDrawBoxColor(Bank[7], -1);
	TextDrawSetShadow(Bank[7], 0);
	TextDrawSetOutline(Bank[7], 0);
	TextDrawFont(Bank[7], 0);

	Bank[8] = TextDrawCreate(506.666778, 115.002258, "usebox");
	TextDrawLetterSize(Bank[8], 0.000000, 22.552461);
	TextDrawTextSize(Bank[8], 134.000091, 0.000000);
	TextDrawAlignment(Bank[8], 1);
	TextDrawColor(Bank[8], 0);
	TextDrawUseBox(Bank[8], true);
	TextDrawBoxColor(Bank[8], -1088603905);
	TextDrawSetShadow(Bank[8], 0);
	TextDrawSetOutline(Bank[8], 0);
	TextDrawFont(Bank[8], 0);

	Bank[9] = TextDrawCreate(409.999664, 190.157760, "usebox");
	TextDrawLetterSize(Bank[9], 0.000000, 8.200865);
	TextDrawTextSize(Bank[9], 227.333374, 0.000000);
	TextDrawAlignment(Bank[9], 1);
	TextDrawColor(Bank[9], 0);
	TextDrawUseBox(Bank[9], true);
	TextDrawBoxColor(Bank[9], -1);
	TextDrawSetShadow(Bank[9], 0);
	TextDrawSetOutline(Bank[9], 0);
	TextDrawFont(Bank[9], 0);

	Bank[10] = TextDrawCreate(163.111129, 139.377822, "Por favor, introduzca su numero de identificacion personal");
	TextDrawLetterSize(Bank[10], 0.317111, 1.286398);
	TextDrawAlignment(Bank[10], 1);
	TextDrawColor(Bank[10], -1);
	TextDrawSetShadow(Bank[10], 0);
	TextDrawSetOutline(Bank[10], 0);
	TextDrawBackgroundColor(Bank[10], 51);
	TextDrawFont(Bank[10], 1);
	TextDrawSetProportional(Bank[10], 1);

	Bank[11] = TextDrawCreate(238.777770, 212.057785, "ld_spac:dark");
	TextDrawLetterSize(Bank[11], 0.000000, 0.000000);
	TextDrawTextSize(Bank[11], 26.222229, 31.857786);
	TextDrawAlignment(Bank[11], 1);
	TextDrawColor(Bank[11], -1);
	TextDrawSetShadow(Bank[11], 0);
	TextDrawSetOutline(Bank[11], 0);
	TextDrawBackgroundColor(Bank[11], -16776961);
	TextDrawFont(Bank[11], 4);

	Bank[12] = TextDrawCreate(278.889068, 212.062240, "ld_spac:dark");
	TextDrawLetterSize(Bank[12], 0.000000, 0.000000);
	TextDrawTextSize(Bank[12], 26.222229, 31.857786);
	TextDrawAlignment(Bank[12], 1);
	TextDrawColor(Bank[12], -1);
	TextDrawSetShadow(Bank[12], 0);
	TextDrawSetOutline(Bank[12], 0);
	TextDrawBackgroundColor(Bank[12], -16776961);
	TextDrawFont(Bank[12], 4);

	Bank[13] = TextDrawCreate(321.666809, 213.062240, "ld_spac:dark");
	TextDrawLetterSize(Bank[13], 0.000000, 0.000000);
	TextDrawTextSize(Bank[13], 26.222229, 31.857786);
	TextDrawAlignment(Bank[13], 1);
	TextDrawColor(Bank[13], -1);
	TextDrawSetShadow(Bank[13], 0);
	TextDrawSetOutline(Bank[13], 0);
	TextDrawBackgroundColor(Bank[13], -16776961);
	TextDrawFont(Bank[13], 4);

	Bank[14] = TextDrawCreate(364.000122, 212.568908, "ld_spac:dark");
	TextDrawLetterSize(Bank[14], 0.000000, 0.000000);
	TextDrawTextSize(Bank[14], 26.222229, 31.857786);
	TextDrawAlignment(Bank[14], 1);
	TextDrawColor(Bank[14], -1);
	TextDrawSetShadow(Bank[14], 0);
	TextDrawSetOutline(Bank[14], 0);
	TextDrawBackgroundColor(Bank[14], -16776961);
	TextDrawFont(Bank[14], 4);

	Bank[15] = TextDrawCreate(259.111083, 117.475532, "Elija un servicio");
	TextDrawLetterSize(Bank[15], 0.449999, 1.600000);
	TextDrawAlignment(Bank[15], 1);
	TextDrawColor(Bank[15], 255);
	TextDrawSetShadow(Bank[15], 0);
	TextDrawSetOutline(Bank[15], 0);
	TextDrawBackgroundColor(Bank[15], 51);
	TextDrawFont(Bank[15], 1);
	TextDrawSetProportional(Bank[15], 1);

	Bank[16] = TextDrawCreate(315.0, 145.357772, "usebox");
	TextDrawLetterSize(Bank[16], 0.000000, 4.381600);
	TextDrawTextSize(Bank[16], 50.0, 175.0);
	TextDrawAlignment(Bank[16], 2);
	TextDrawColor(Bank[16], 0);
	TextDrawUseBox(Bank[16], true);
	TextDrawBoxColor(Bank[16], -1205847297);
	TextDrawSetShadow(Bank[16], 0);
	TextDrawSetOutline(Bank[16], 0);
	TextDrawFont(Bank[16], 0);
	TextDrawSetSelectable(Bank[16], true);

	Bank[17] = TextDrawCreate(315.0, 201.113067, "usebox");
	TextDrawLetterSize(Bank[17], 0.000000, 4.381600);
	TextDrawTextSize(Bank[17], 50.0, 175.0);
	TextDrawAlignment(Bank[17], 2);
	TextDrawColor(Bank[17], 0);
	TextDrawUseBox(Bank[17], true);
	TextDrawBoxColor(Bank[17], -1205847297);
	TextDrawSetShadow(Bank[17], 0);
	TextDrawSetOutline(Bank[17], 0);
	TextDrawFont(Bank[17], 0);
	TextDrawSetSelectable(Bank[17], true);

	Bank[18] = TextDrawCreate(315.0, 257.863952, "usebox");
	TextDrawLetterSize(Bank[18], 0.000000, 4.381600);
	TextDrawTextSize(Bank[18], 50.0, 175.0);
	TextDrawAlignment(Bank[18], 2);
	TextDrawColor(Bank[18], 0);
	TextDrawUseBox(Bank[18], true);
	TextDrawBoxColor(Bank[18], -1205847297);
	TextDrawSetShadow(Bank[18], 0);
	TextDrawSetOutline(Bank[18], 0);
	TextDrawFont(Bank[18], 0);
	TextDrawSetSelectable(Bank[18], true);

	Bank[19] = TextDrawCreate(314.666900, 155.306671, "Retirar~n~~n~~n~~n~Depositar~n~~n~~n~~n~Salir");
	TextDrawLetterSize(Bank[19], 0.449999, 1.600000);
	TextDrawAlignment(Bank[19], 2);
	TextDrawColor(Bank[19], -1);
	TextDrawSetShadow(Bank[19], 0);
	TextDrawSetOutline(Bank[19], 0);
	TextDrawBackgroundColor(Bank[19], 51);
	TextDrawFont(Bank[19], 1);
	TextDrawSetProportional(Bank[19], 1);
    //UserBox
	UserBox[0] = TextDrawCreate(513.999816, 118.975563, "usebox");
	TextDrawLetterSize(UserBox[0], 0.000000, 23.797899);
	TextDrawTextSize(UserBox[0], 125.111122, 0.000000);
	TextDrawAlignment(UserBox[0], 1);
	TextDrawColor(UserBox[0], 0);
	TextDrawUseBox(UserBox[0], true);
	TextDrawBoxColor(UserBox[0], -2139062142);
	TextDrawSetShadow(UserBox[0], 0);
	TextDrawSetOutline(UserBox[0], 0);
	TextDrawFont(UserBox[0], 0);

	UserBox[1] = TextDrawCreate(508.777557, 124.953330, "usebox");
	TextDrawLetterSize(UserBox[1], 0.000000, 22.420114);
	TextDrawTextSize(UserBox[1], 130.000015, 0.000000);
	TextDrawAlignment(UserBox[1], 1);
	TextDrawColor(UserBox[1], 0);
	TextDrawUseBox(UserBox[1], true);
	TextDrawBoxColor(UserBox[1], 20223);
	TextDrawSetShadow(UserBox[1], 0);
	TextDrawSetOutline(UserBox[1], 0);
	TextDrawFont(UserBox[1], 0);

	UserBox[2] = TextDrawCreate(507.777770, 160.291107, "usebox");
	TextDrawLetterSize(UserBox[2], 0.000000, 18.333211);
	TextDrawTextSize(UserBox[2], 130.888885, 0.000000);
	TextDrawAlignment(UserBox[2], 1);
	TextDrawColor(UserBox[2], 0);
	TextDrawUseBox(UserBox[2], true);
	TextDrawBoxColor(UserBox[2], -1378294167);
	TextDrawSetShadow(UserBox[2], 0);
	TextDrawSetOutline(UserBox[2], 0);
	TextDrawFont(UserBox[2], 0);

	UserBox[3] = TextDrawCreate(276.000030, 297.671142, "Montevideo Roleplay");
	TextDrawLetterSize(UserBox[3], 0.449999, 1.600000);
	TextDrawAlignment(UserBox[3], 1);
	TextDrawColor(UserBox[3], -1);
	TextDrawSetShadow(UserBox[3], 0);
	TextDrawSetOutline(UserBox[3], 1);
	TextDrawBackgroundColor(UserBox[3], 51);
	TextDrawFont(UserBox[3], 0);
	TextDrawSetProportional(UserBox[3], 1);
    //Circular menu

    CircularMenu[0] = TextDrawCreate(239.882873, 123.666664, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[0], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[0], 79.180084, 97.416824);
	TextDrawAlignment(CircularMenu[0], 1);
	TextDrawColor(CircularMenu[0], -65436);
	TextDrawSetShadow(CircularMenu[0], 0);
	TextDrawSetOutline(CircularMenu[0], 0);
	TextDrawFont(CircularMenu[0], 4);
	TextDrawSetProportional(CircularMenu[0], 1);

	CircularMenu[1] = TextDrawCreate(239.477310, 314.833221, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[1], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[1], 77.774520, -97.999885);
	TextDrawAlignment(CircularMenu[1], 1);
	TextDrawColor(CircularMenu[1], -156);
	TextDrawSetShadow(CircularMenu[1], 0);
	TextDrawSetOutline(CircularMenu[1], 0);
	TextDrawFont(CircularMenu[1], 4);

	CircularMenu[2] = TextDrawCreate(392.746978, 315.249847, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[2], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[2], -78.243026, -97.999839);
	TextDrawAlignment(CircularMenu[2], 1);
	TextDrawColor(CircularMenu[2], -156);
	TextDrawSetShadow(CircularMenu[2], 0);
	TextDrawSetOutline(CircularMenu[2], 0);
	TextDrawFont(CircularMenu[2], 4);

	CircularMenu[3] = TextDrawCreate(392.341339, 123.749847, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[3], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[3], -74.026344, 96.250259);
	TextDrawAlignment(CircularMenu[3], 1);
	TextDrawColor(CircularMenu[3], -156);
	TextDrawSetShadow(CircularMenu[3], 0);
	TextDrawSetOutline(CircularMenu[3], 0);
	TextDrawFont(CircularMenu[3], 4);

	CircularMenu[4] = TextDrawCreate(303.133666, 114.333343, "hud:radar_gangB");
	TextDrawLetterSize(CircularMenu[4], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[4], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[4], 1);
	TextDrawColor(CircularMenu[4], -1);
	TextDrawSetShadow(CircularMenu[4], 0);
	TextDrawSetOutline(CircularMenu[4], 0);
	TextDrawFont(CircularMenu[4], 4);

	CircularMenu[5] = TextDrawCreate(353.797363, 144.499923, "hud:radar_LocoSyndicate");
	TextDrawLetterSize(CircularMenu[5], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[5], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[5], 1);
	TextDrawColor(CircularMenu[5], -1);
	TextDrawSetShadow(CircularMenu[5], 0);
	TextDrawSetOutline(CircularMenu[5], 0);
	TextDrawFont(CircularMenu[5], 4);

	CircularMenu[6] = TextDrawCreate(373.538146, 203.249771, "hud:radar_CATALINAPINK");
	TextDrawLetterSize(CircularMenu[6], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[6], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[6], 1);
	TextDrawColor(CircularMenu[6], -1);
	TextDrawSetShadow(CircularMenu[6], 0);
	TextDrawSetOutline(CircularMenu[6], 0);
	TextDrawFont(CircularMenu[6], 4);

	CircularMenu[7] = TextDrawCreate(353.922851, 267.249816, "hud:radar_modGarage");
	TextDrawLetterSize(CircularMenu[7], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[7], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[7], 1);
	TextDrawColor(CircularMenu[7], -1);
	TextDrawSetShadow(CircularMenu[7], 0);
	TextDrawSetOutline(CircularMenu[7], 0);
	TextDrawFont(CircularMenu[7], 4);

	CircularMenu[8] = TextDrawCreate(303.385620, 293.916442, "hud:radar_qmark");
	TextDrawLetterSize(CircularMenu[8], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[8], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[8], 1);
	TextDrawColor(CircularMenu[8], -1);
	TextDrawSetShadow(CircularMenu[8], 0);
	TextDrawSetOutline(CircularMenu[8], 0);
	TextDrawFont(CircularMenu[8], 4);

	CircularMenu[9] = TextDrawCreate(248.163009, 268.082946, "hud:radar_enemyAttack");
	TextDrawLetterSize(CircularMenu[9], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[9], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[9], 1);
	TextDrawColor(CircularMenu[9], -1);
	TextDrawSetShadow(CircularMenu[9], 0);
	TextDrawSetOutline(CircularMenu[9], 0);
	TextDrawFont(CircularMenu[9], 4);

	CircularMenu[10] = TextDrawCreate(229.953643, 201.999679, "hud:radar_dateFood");
	TextDrawLetterSize(CircularMenu[10], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[10], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[10], 1);
	TextDrawColor(CircularMenu[10], -1);
	TextDrawSetShadow(CircularMenu[10], 0);
	TextDrawSetOutline(CircularMenu[10], 0);
	TextDrawFont(CircularMenu[10], 4);

	CircularMenu[11] = TextDrawCreate(249.694488, 142.333053, "hud:radar_truck");
	TextDrawLetterSize(CircularMenu[11], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[11], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[11], 1);
	TextDrawColor(CircularMenu[11], -1);
	TextDrawSetShadow(CircularMenu[11], 0);
	TextDrawSetOutline(CircularMenu[11], 0);
	TextDrawFont(CircularMenu[11], 4);

	CircularMenu[12] = TextDrawCreate(292.825469, 184.916641, "LD_BEAT:chit");
	TextDrawLetterSize(CircularMenu[12], 0.000000, -6.184477);
	TextDrawTextSize(CircularMenu[12], 54.816955, 68.250015);
	TextDrawAlignment(CircularMenu[12], 1);
	TextDrawColor(CircularMenu[12], -16777016);
	TextDrawUseBox(CircularMenu[12], true);
	TextDrawBoxColor(CircularMenu[12], 255);
	TextDrawSetShadow(CircularMenu[12], 0);
	TextDrawSetOutline(CircularMenu[12], 0);
	TextDrawFont(CircularMenu[12], 4);

	CircularMenu[13] = TextDrawCreate(320.468566, 190.750000, "O");
	TextDrawLetterSize(CircularMenu[13], 1.182299, 5.531667);
	TextDrawAlignment(CircularMenu[13], 2);
	TextDrawColor(CircularMenu[13], -1);
	TextDrawSetShadow(CircularMenu[13], 0);
	TextDrawSetOutline(CircularMenu[13], 0);
	TextDrawBackgroundColor(CircularMenu[13], 51);
	TextDrawFont(CircularMenu[13], 1);
	TextDrawSetProportional(CircularMenu[13], 1);

	CircularMenu[14] = TextDrawCreate(319.594696, 189.999969, "I");
	TextDrawLetterSize(CircularMenu[14], 1.100307, 3.169169);
	TextDrawAlignment(CircularMenu[14], 2);
	TextDrawColor(CircularMenu[14], -1);
	TextDrawSetShadow(CircularMenu[14], 0);
	TextDrawSetOutline(CircularMenu[14], 0);
	TextDrawBackgroundColor(CircularMenu[14], 51);
	TextDrawFont(CircularMenu[14], 1);
	TextDrawSetProportional(CircularMenu[14], 1);

	CircularMenu[15] = TextDrawCreate(318.594940, 128.333297, "_~n~cuenta");
	TextDrawLetterSize(CircularMenu[15], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[15], 2);
	TextDrawColor(CircularMenu[15], -256);
	TextDrawSetShadow(CircularMenu[15], 0);
	TextDrawSetOutline(CircularMenu[15], 0);
	TextDrawBackgroundColor(CircularMenu[15], 51);
	TextDrawFont(CircularMenu[15], 3);
	TextDrawSetProportional(CircularMenu[15], 1);
	TextDrawTextSize(CircularMenu[15], 10, 25);
	TextDrawSetSelectable(CircularMenu[15], true);

	CircularMenu[16] = TextDrawCreate(368.321472, 158.499969, "_~n~dni");
	TextDrawLetterSize(CircularMenu[16], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[16], 2);
	TextDrawColor(CircularMenu[16], -256);
	TextDrawSetShadow(CircularMenu[16], 0);
	TextDrawSetOutline(CircularMenu[16], 0);
	TextDrawBackgroundColor(CircularMenu[16], 51);
	TextDrawFont(CircularMenu[16], 3);
	TextDrawSetProportional(CircularMenu[16], 1);
	TextDrawTextSize(CircularMenu[16], 10, 25);
	TextDrawSetSelectable(CircularMenu[16], true);

	CircularMenu[17] = TextDrawCreate(387.593963, 216.666610, "_~n~localizacion");
	TextDrawLetterSize(CircularMenu[17], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[17], 2);
	TextDrawColor(CircularMenu[17], -256);
	TextDrawSetShadow(CircularMenu[17], 0);
	TextDrawSetOutline(CircularMenu[17], 0);
	TextDrawBackgroundColor(CircularMenu[17], 51);
	TextDrawFont(CircularMenu[17], 3);
	TextDrawSetProportional(CircularMenu[17], 1);
	TextDrawTextSize(CircularMenu[17], 10, 25);
	TextDrawSetSelectable(CircularMenu[17], true);

	CircularMenu[18] = TextDrawCreate(367.978881, 279.499938, "_~n~ajustes");
	TextDrawLetterSize(CircularMenu[18], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[18], 2);
	TextDrawColor(CircularMenu[18], -256);
	TextDrawSetShadow(CircularMenu[18], 0);
	TextDrawSetOutline(CircularMenu[18], 0);
	TextDrawBackgroundColor(CircularMenu[18], 51);
	TextDrawFont(CircularMenu[18], 3);
	TextDrawSetProportional(CircularMenu[18], 1);
	TextDrawTextSize(CircularMenu[18], 10, 25);
	TextDrawSetSelectable(CircularMenu[18], true);

	CircularMenu[19] = TextDrawCreate(316.972747, 305.583251, "_~n~info");
	TextDrawLetterSize(CircularMenu[19], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[19], 2);
	TextDrawColor(CircularMenu[19], -256);
	TextDrawSetShadow(CircularMenu[19], 0);
	TextDrawSetOutline(CircularMenu[19], 0);
	TextDrawBackgroundColor(CircularMenu[19], 51);
	TextDrawFont(CircularMenu[19], 3);
	TextDrawSetProportional(CircularMenu[19], 1);
	TextDrawTextSize(CircularMenu[19], 10, 25);
	TextDrawSetSelectable(CircularMenu[19], true);

    CerrarCreditos = TextDrawCreate(32.796592, 424.666778, "Cerrar");
    TextDrawLetterSize(CerrarCreditos, 0.449999, 1.600000);
    TextDrawAlignment(CerrarCreditos, 2);
    TextDrawColor(CerrarCreditos, -1);
    TextDrawSetShadow(CerrarCreditos, 0);
    TextDrawSetOutline(CerrarCreditos, 1);
    TextDrawBackgroundColor(CerrarCreditos, 51);
    TextDrawFont(CerrarCreditos, 1);
    TextDrawSetProportional(CerrarCreditos, 1);
    TextDrawTextSize(CerrarCreditos, 5, 20);
    TextDrawSetSelectable(CerrarCreditos, true);

	CircularMenu[20] = TextDrawCreate(262.687164, 279.166534, "_~n~creditos");
	TextDrawLetterSize(CircularMenu[20], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[20], 2);
	TextDrawColor(CircularMenu[20], -256);
	TextDrawSetShadow(CircularMenu[20], 0);
	TextDrawSetOutline(CircularMenu[20], 0);
	TextDrawBackgroundColor(CircularMenu[20], 51);
	TextDrawFont(CircularMenu[20], 3);
	TextDrawSetProportional(CircularMenu[20], 1);
	TextDrawTextSize(CircularMenu[20], 10, 25);
	TextDrawSetSelectable(CircularMenu[20], true);

	CircularMenu[21] = TextDrawCreate(245.414825, 215.999923, "_~n~lugares");
	TextDrawLetterSize(CircularMenu[21], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[21], 2);
	TextDrawColor(CircularMenu[21], -256);
	TextDrawSetShadow(CircularMenu[21], 0);
	TextDrawSetOutline(CircularMenu[21], 0);
	TextDrawBackgroundColor(CircularMenu[21], 51);
	TextDrawFont(CircularMenu[21], 3);
	TextDrawSetProportional(CircularMenu[21], 1);
	TextDrawTextSize(CircularMenu[21], 10, 25);
	TextDrawSetSelectable(CircularMenu[21], true);

	CircularMenu[22] = TextDrawCreate(261.876098, 155.749923, "_~n~premios");
	TextDrawLetterSize(CircularMenu[22], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[22], 2);
	TextDrawColor(CircularMenu[22], -256);
	TextDrawSetShadow(CircularMenu[22], 0);
	TextDrawSetOutline(CircularMenu[22], 0);
	TextDrawBackgroundColor(CircularMenu[22], 51);
	TextDrawFont(CircularMenu[22], 3);
	TextDrawSetProportional(CircularMenu[22], 1);
	TextDrawTextSize(CircularMenu[22], 10, 25);
	TextDrawSetSelectable(CircularMenu[22], true);

	CircularMenu[23] = TextDrawCreate(320.504364, 213.333221, "_~n~_~n~cerrar");
	TextDrawLetterSize(CircularMenu[23], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[23], 2);
	TextDrawColor(CircularMenu[23], -256);
	TextDrawSetShadow(CircularMenu[23], 0);
	TextDrawSetOutline(CircularMenu[23], 0);
	TextDrawBackgroundColor(CircularMenu[23], 51);
	TextDrawFont(CircularMenu[23], 3);
	TextDrawSetProportional(CircularMenu[23], 1);
	TextDrawTextSize(CircularMenu[23], 10, 25);
	TextDrawSetSelectable(CircularMenu[23], true);
	
	//big logo
	TD_EY[0] = TextDrawCreate(129.333374, 70.142257, "e__treme~n~___Roleplay");
	TextDrawLetterSize(TD_EY[0], 1.964222, 7.279643);
	TextDrawAlignment(TD_EY[0], 1);
	TextDrawColor(TD_EY[0], 0x00CCFFFF);
	TextDrawSetShadow(TD_EY[0], 0);
	TextDrawSetOutline(TD_EY[0], 3);
	TextDrawBackgroundColor(TD_EY[0], 255);
	TextDrawFont(TD_EY[0], 3);
	TextDrawSetProportional(TD_EY[0], 1);

	TD_EY[1] = TextDrawCreate(173.000076, 15.888900, "X");
	TextDrawLetterSize(TD_EY[1], 3.931333, 13.850309);
	TextDrawAlignment(TD_EY[1], 1);
	TextDrawColor(TD_EY[1], 0x00CCFFFF);
	TextDrawSetShadow(TD_EY[1], 0);
	TextDrawSetOutline(TD_EY[1], 3);
	TextDrawBackgroundColor(TD_EY[1], 255);
	TextDrawFont(TD_EY[1], 3);
	TextDrawSetProportional(TD_EY[1], 1);
	
	TD_EY[2] = TextDrawCreate(173.000076, 15.888900, "_");
	TextDrawLetterSize(TD_EY[2], 3.931333, 13.850309);
	TextDrawAlignment(TD_EY[2], 1);
	TextDrawColor(TD_EY[2], -1);
	TextDrawSetShadow(TD_EY[2], 0);
	TextDrawSetOutline(TD_EY[2], 3);
	TextDrawBackgroundColor(TD_EY[2], 255);
	TextDrawFont(TD_EY[2], 3);
	TextDrawSetProportional(TD_EY[2], 1);
	
	//NotificationTD
	TD_NN = TextDrawCreate(158.444503, 36.344409, "usebox");
	TextDrawLetterSize(TD_NN, 0.000000, 7.737652);
	TextDrawTextSize(TD_NN, 9.999992, 0.000000);
	TextDrawAlignment(TD_NN, 1);
	TextDrawColor(TD_NN, 0);
	TextDrawUseBox(TD_NN, true);
	TextDrawBoxColor(TD_NN, 160);
	TextDrawSetShadow(TD_NN, 0);
	TextDrawSetOutline(TD_NN, 0);
	TextDrawFont(TD_NN, 0);
	
	/*RegistroTD
	TD_RO[0] = TextDrawCreate(399.5, 83.139968, "usebox");
	TextDrawLetterSize(TD_RO[0], 0.000000, 32.4);
	TextDrawTextSize(TD_RO[0], 230.888916, 0.000000);
	TextDrawAlignment(TD_RO[0], 1);
	TextDrawColor(TD_RO[0], 0);
	TextDrawUseBox(TD_RO[0], true);
	TextDrawBoxColor(TD_RO[0], -2139062017);
	TextDrawSetShadow(TD_RO[0], 0);
	TextDrawSetOutline(TD_RO[0], 0);
	TextDrawFont(TD_RO[0], 0);

	TD_RO[1] = TextDrawCreate(396.666717, 85.624435, "usebox");
	TextDrawLetterSize(TD_RO[1], 0.000000, 31.817655);
	TextDrawTextSize(TD_RO[1], 233.555572, 0.000000);
	TextDrawAlignment(TD_RO[1], 1);
	TextDrawColor(TD_RO[1], 0);
	TextDrawUseBox(TD_RO[1], true);
	TextDrawBoxColor(TD_RO[1], 255);
	TextDrawSetShadow(TD_RO[1], 0);
	TextDrawSetOutline(TD_RO[1], 0);
	TextDrawFont(TD_RO[1], 0);

	TD_RO[2] = TextDrawCreate(248.000015, 104.035499, "nombre y apellido");
	TextDrawLetterSize(TD_RO[2], 0.344666, 1.331199);
	TextDrawAlignment(TD_RO[2], 1);
	TextDrawColor(TD_RO[2], -5963521);
	TextDrawSetShadow(TD_RO[2], 0);
	TextDrawSetOutline(TD_RO[2], 1);
	TextDrawBackgroundColor(TD_RO[2], 51);
	TextDrawFont(TD_RO[2], 3);
	TextDrawSetProportional(TD_RO[2], 1);

	TD_RO[3] = TextDrawCreate(248.111129, 160.786544, "correo electronico");
	TextDrawLetterSize(TD_RO[3], 0.344666, 1.331199);
	TextDrawAlignment(TD_RO[3], 1);
	TextDrawColor(TD_RO[3], -5963521);
	TextDrawSetShadow(TD_RO[3], 0);
	TextDrawSetOutline(TD_RO[3], 1);
	TextDrawBackgroundColor(TD_RO[3], 51);
	TextDrawFont(TD_RO[3], 3);
	TextDrawSetProportional(TD_RO[3], 1);

	TD_RO[4] = TextDrawCreate(248.222244, 216.541976, "genero");
	TextDrawLetterSize(TD_RO[4], 0.344666, 1.331199);
	TextDrawAlignment(TD_RO[4], 1);
	TextDrawColor(TD_RO[4], -5963521);
	TextDrawSetShadow(TD_RO[4], 0);
	TextDrawSetOutline(TD_RO[4], 1);
	TextDrawBackgroundColor(TD_RO[4], 51);
	TextDrawFont(TD_RO[4], 3);
	TextDrawSetProportional(TD_RO[4], 1);

	TD_RO[5] = TextDrawCreate(248.777801, 273.293090, "edad");
	TextDrawLetterSize(TD_RO[5], 0.344666, 1.331199);
	TextDrawAlignment(TD_RO[5], 1);
	TextDrawColor(TD_RO[5], -5963521);
	TextDrawSetShadow(TD_RO[5], 0);
	TextDrawSetOutline(TD_RO[5], 1);
	TextDrawBackgroundColor(TD_RO[5], 51);
	TextDrawFont(TD_RO[5], 3);
	TextDrawSetProportional(TD_RO[5], 1);

	TD_RO[6] = TextDrawCreate(368.0, 332.024444, "usebox");
	TextDrawLetterSize(TD_RO[6], 0.000000, 2.2);
	TextDrawTextSize(TD_RO[6], 261.555511, 0.000000);
	TextDrawAlignment(TD_RO[6], 1);
	TextDrawColor(TD_RO[6], 0);
	TextDrawUseBox(TD_RO[6], true);
	TextDrawBoxColor(TD_RO[6], -2139062017);
	TextDrawSetShadow(TD_RO[6], 0);
	TextDrawSetOutline(TD_RO[6], 0);
	TextDrawFont(TD_RO[6], 0);

	TD_RO[7] = TextDrawCreate(315.000061, 333.026641, "continuar");
	TextDrawLetterSize(TD_RO[7], 0.576663, 1.968353);
	TextDrawTextSize(TD_RO[7], 20.0, 97.0);
	TextDrawAlignment(TD_RO[7], 2);
	TextDrawColor(TD_RO[7], -5963521);
	TextDrawUseBox(TD_RO[7], true);
	TextDrawBoxColor(TD_RO[7], 255);
	TextDrawSetShadow(TD_RO[7], 0);
	TextDrawSetOutline(TD_RO[7], 0);
	TextDrawBackgroundColor(TD_RO[7], -65281);
	TextDrawFont(TD_RO[7], 3);
	TextDrawSetProportional(TD_RO[7], 1);
	TextDrawSetSelectable(TD_RO[7], true);
	
	TD_RO[8] = TextDrawCreate(292.888397, 271.289093, "+");
	TextDrawLetterSize(TD_RO[8], 0.449999, 1.600000);
	TextDrawAlignment(TD_RO[8], 2);
	TextDrawColor(TD_RO[8], -1);
	TextDrawSetShadow(TD_RO[8], 0);
	TextDrawSetOutline(TD_RO[8], 1);
	TextDrawBackgroundColor(TD_RO[8], 51);
	TextDrawFont(TD_RO[8], 1);
	TextDrawSetProportional(TD_RO[8], 1);
	TextDrawTextSize(TD_RO[8], 15, 15);
	TextDrawSetSelectable(TD_RO[8], true);

	TD_RO[12] = TextDrawCreate(280.999633, 269.800170, "-");
	TextDrawLetterSize(TD_RO[12], 0.449999, 1.600000);
	TextDrawAlignment(TD_RO[12], 2);
	TextDrawColor(TD_RO[12], -1);
	TextDrawSetShadow(TD_RO[12], 0);
	TextDrawSetOutline(TD_RO[12], 1);
	TextDrawBackgroundColor(TD_RO[12], 51);
	TextDrawFont(TD_RO[12], 1);
	TextDrawSetProportional(TD_RO[12], 1);
	TextDrawTextSize(TD_RO[12], 15, 15);
	TextDrawSetSelectable(TD_RO[12], true);


	TD_RO[9] = TextDrawCreate(314.777770, 174.226654, "_");
	TextDrawLetterSize(TD_RO[9], 0.458888, 3.128177);
	TextDrawTextSize(TD_RO[9], 19.111114, 142.862075);
	TextDrawAlignment(TD_RO[9], 2);
	TextDrawColor(TD_RO[9], -1);
	TextDrawUseBox(TD_RO[9], true);
	TextDrawBoxColor(TD_RO[9], 255);
	TextDrawSetShadow(TD_RO[9], 0);
	TextDrawSetOutline(TD_RO[9], 1);
	TextDrawBackgroundColor(TD_RO[9], 51);
	TextDrawFont(TD_RO[9], 1);
	TextDrawSetProportional(TD_RO[9], 1);
	TextDrawSetSelectable(TD_RO[9], true);

	TD_RO[10] = TextDrawCreate(313.555572, 230.977691, "_");
	TextDrawLetterSize(TD_RO[10], 0.458888, 3.128177);
	TextDrawTextSize(TD_RO[10], 19.111114, 142.862075);
	TextDrawAlignment(TD_RO[10], 2);
	TextDrawColor(TD_RO[10], -1);
	TextDrawUseBox(TD_RO[10], true);
	TextDrawBoxColor(TD_RO[10], 255);
	TextDrawSetShadow(TD_RO[10], 0);
	TextDrawSetOutline(TD_RO[10], 1);
	TextDrawBackgroundColor(TD_RO[10], 51);
	TextDrawFont(TD_RO[10], 1);
	TextDrawSetProportional(TD_RO[10], 1);
	TextDrawSetSelectable(TD_RO[10], true);

	TD_RO[11] = TextDrawCreate(314.111053, 288.724304, "_");
	TextDrawLetterSize(TD_RO[11], 0.458888, 3.128177);
	TextDrawTextSize(TD_RO[11], 19.111114, 142.862075);
	TextDrawAlignment(TD_RO[11], 2);
	TextDrawColor(TD_RO[11], -1);
	TextDrawUseBox(TD_RO[11], true);
	TextDrawBoxColor(TD_RO[11], 255);
	TextDrawSetShadow(TD_RO[11], 0);
	TextDrawSetOutline(TD_RO[11], 1);
	TextDrawBackgroundColor(TD_RO[11], 51);
	TextDrawFont(TD_RO[11], 1);
	TextDrawSetProportional(TD_RO[11], 1);
	TextDrawSetSelectable(TD_RO[11], true);*/
	
	// Box
	TD_BX[0] = TextDrawCreate(1086.000488, -26.375560, "usebox");
	TextDrawLetterSize(TD_BX[0], 0.000000, 15.096668);
	TextDrawTextSize(TD_BX[0], -69.555564, 0.000000);
	TextDrawAlignment(TD_BX[0], 1);
	TextDrawColor(TD_BX[0], 0);
	TextDrawUseBox(TD_BX[0], true);
	TextDrawBoxColor(TD_BX[0], 255);
	TextDrawSetShadow(TD_BX[0], 0);
	TextDrawSetOutline(TD_BX[0], 0);
	TextDrawFont(TD_BX[0], 0);

	TD_BX[1] = TextDrawCreate(1076.778076, 336.508941, "usebox");
	TextDrawLetterSize(TD_BX[1], 0.000000, 15.096668);
	TextDrawTextSize(TD_BX[1], -79.777755, 0.000000);
	TextDrawAlignment(TD_BX[1], 1);
	TextDrawColor(TD_BX[1], 0);
	TextDrawUseBox(TD_BX[1], true);
	TextDrawBoxColor(TD_BX[1], 255);
	TextDrawSetShadow(TD_BX[1], 0);
	TextDrawSetOutline(TD_BX[1], 0);
	TextDrawFont(TD_BX[1], 0);
	
	
	DeadTD[0] = TextDrawCreate(-2.000000, -1.000000, "ld_dual:tvcorn");
	TextDrawBackgroundColor(DeadTD[0], 255);
	TextDrawFont(DeadTD[0], 4);
	TextDrawLetterSize(DeadTD[0], 0.500000, 1.000000);
	TextDrawColor(DeadTD[0], -16776961);
	TextDrawSetOutline(DeadTD[0], 0);
	TextDrawSetProportional(DeadTD[0], 1);
	TextDrawSetShadow(DeadTD[0], 1);
	TextDrawUseBox(DeadTD[0], 1);
	TextDrawBoxColor(DeadTD[0], 255);
	TextDrawTextSize(DeadTD[0], 50.000000, 50.000000);
	TextDrawSetSelectable(DeadTD[0], 0);

	DeadTD[1] = TextDrawCreate(-2.000000, 449.000000, "ld_dual:tvcorn");
	TextDrawBackgroundColor(DeadTD[1], 255);
	TextDrawFont(DeadTD[1], 4);
	TextDrawLetterSize(DeadTD[1], 0.500000, 1.000000);
	TextDrawColor(DeadTD[1], -16776961);
	TextDrawSetOutline(DeadTD[1], 0);
	TextDrawSetProportional(DeadTD[1], 1);
	TextDrawSetShadow(DeadTD[1], 1);
	TextDrawUseBox(DeadTD[1], 1);
	TextDrawBoxColor(DeadTD[1], 255);
	TextDrawTextSize(DeadTD[1], 50.000000, -50.000000);
	TextDrawSetSelectable(DeadTD[1], 0);

	DeadTD[2] = TextDrawCreate(643.000000, 450.000000, "ld_dual:tvcorn");
	TextDrawBackgroundColor(DeadTD[2], 255);
	TextDrawFont(DeadTD[2], 4);
	TextDrawLetterSize(DeadTD[2], 0.500000, 1.000000);
	TextDrawColor(DeadTD[2], -16776961);
	TextDrawSetOutline(DeadTD[2], 0);
	TextDrawSetProportional(DeadTD[2], 1);
	TextDrawSetShadow(DeadTD[2], 1);
	TextDrawUseBox(DeadTD[2], 1);
	TextDrawBoxColor(DeadTD[2], 255);
	TextDrawTextSize(DeadTD[2], -50.000000, -50.000000);
	TextDrawSetSelectable(DeadTD[2], 0);

	DeadTD[3] = TextDrawCreate(641.000000, -2.000000, "ld_dual:tvcorn");
	TextDrawBackgroundColor(DeadTD[3], 255);
	TextDrawFont(DeadTD[3], 4);
	TextDrawLetterSize(DeadTD[3], 0.500000, 1.000000);
	TextDrawColor(DeadTD[3], -16776961);
	TextDrawSetOutline(DeadTD[3], 0);
	TextDrawSetProportional(DeadTD[3], 1);
	TextDrawSetShadow(DeadTD[3], 1);
	TextDrawUseBox(DeadTD[3], 1);
	TextDrawBoxColor(DeadTD[3], 255);
	TextDrawTextSize(DeadTD[3], -50.000000, 50.000000);
	TextDrawSetSelectable(DeadTD[3], 0);

	DeadTD[4] = TextDrawCreate(-48.000000, 39.000000, "ld_dual:health");
	TextDrawBackgroundColor(DeadTD[4], 255);
	TextDrawFont(DeadTD[4], 4);
	TextDrawLetterSize(DeadTD[4], 0.500000, 1.000000);
	TextDrawColor(DeadTD[4], 1259936255);
	TextDrawSetOutline(DeadTD[4], 0);
	TextDrawSetProportional(DeadTD[4], 1);
	TextDrawSetShadow(DeadTD[4], 1);
	TextDrawUseBox(DeadTD[4], 1);
	TextDrawBoxColor(DeadTD[4], 255);
	TextDrawTextSize(DeadTD[4], 50.000000, 460.000000);
	TextDrawSetSelectable(DeadTD[4], 0);

	DeadTD[5] = TextDrawCreate(44.000000, -21.000000, "ld_dual:health");
	TextDrawBackgroundColor(DeadTD[5], 255);
	TextDrawFont(DeadTD[5], 4);
	TextDrawLetterSize(DeadTD[5], 0.500000, 1.000000);
	TextDrawColor(DeadTD[5], 1259936255);
	TextDrawSetOutline(DeadTD[5], 0);
	TextDrawSetProportional(DeadTD[5], 1);
	TextDrawSetShadow(DeadTD[5], 1);
	TextDrawUseBox(DeadTD[5], 1);
	TextDrawBoxColor(DeadTD[5], 255);
	TextDrawTextSize(DeadTD[5], 578.000000, 24.000000);
	TextDrawSetSelectable(DeadTD[5], 0);

	DeadTD[6] = TextDrawCreate(44.000000, 445.000000, "ld_dual:health");
	TextDrawBackgroundColor(DeadTD[6], 255);
	TextDrawFont(DeadTD[6], 4);
	TextDrawLetterSize(DeadTD[6], 0.500000, 1.000000);
	TextDrawColor(DeadTD[6], 1259936255);
	TextDrawSetOutline(DeadTD[6], 0);
	TextDrawSetProportional(DeadTD[6], 1);
	TextDrawSetShadow(DeadTD[6], 1);
	TextDrawUseBox(DeadTD[6], 1);
	TextDrawBoxColor(DeadTD[6], 255);
	TextDrawTextSize(DeadTD[6], 578.000000, 24.000000);
	TextDrawSetSelectable(DeadTD[6], 0);

	DeadTD[7] = TextDrawCreate(637.000000, 39.000000, "ld_dual:health");
	TextDrawBackgroundColor(DeadTD[7], 255);
	TextDrawFont(DeadTD[7], 4);
	TextDrawLetterSize(DeadTD[7], 0.500000, 1.000000);
	TextDrawColor(DeadTD[7], 1259936255);
	TextDrawSetOutline(DeadTD[7], 0);
	TextDrawSetProportional(DeadTD[7], 1);
	TextDrawSetShadow(DeadTD[7], 1);
	TextDrawUseBox(DeadTD[7], 1);
	TextDrawBoxColor(DeadTD[7], 255);
	TextDrawTextSize(DeadTD[7], 50.000000, 460.000000);
	TextDrawSetSelectable(DeadTD[7], 0);
	
	// ------------> Objetos
	Dude_Object[0] = CreateObject(1378, -1723.57813, 188.92191, 27.03130,   0.00000, 0.00000, -90.00000);
	Dude_Object[1] = CreateObject(1376, -1728.91406, 188.90630, 22.51560,   0.00000, 0.00000, -90.00000);
	Dude_Object[2] = CreateObject(1386, -1728.91406, 188.90630, 35.74220,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2932, -1730.94312, 173.99323, 5.21877,   0.00000, 0.00000, 0.00000);

	//SAPD
	LSPD_OBJECT[26] = CreateObject(19370, 1576.6994, -1677.4489, 1995.7229, 0.0000, 0.0000, 180.0);
	SetObjectMaterialText(LSPD_OBJECT[26], "LSPD", 0, 140, "Verdana", 215, 1, -1, 0, 1);
	
	LSPD_OBJECT[0] = CreateObject(18981, 1556.44995, -1663.09998, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[1] = CreateObject(18981, 1556.46997, -1688.09998, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[2] = CreateObject(18981, 1577.12000, -1701.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[3] = CreateObject(18981, 1577.12000, -1676.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[4] = CreateObject(18981, 1576.95996, -1651.87000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[5] = CreateObject(18981, 1565.05005, -1637.39001, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[6] = CreateObject(18981, 1543.07996, -1642.81006, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[7] = CreateObject(18981, 1544.05005, -1651.09998, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[8] = CreateObject(18981, 1543.98999, -1700.06006, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[9] = CreateObject(18981, 1564.21997, -1713.90002, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[10] = CreateObject(18981, 1539.21997, -1713.90002, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[11] = CreateObject(18981, 1576.95996, -1626.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[12] = CreateObject(18981, 1540.05005, -1637.39001, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[13] = CreateObject(18981, 1544.54004, -1708.34998, 2000.00000,   0.00000, 0.00000, 0.00000);

	LSPD_OBJECT[14] = CreateObject(18981, 1567.47998, -1696.09998, 1989.04004,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[15] = CreateObject(18981, 1567.50000, -1671.16003, 1989.04004,   0.00000, 90.00000, 0.00000);

	LSPD_OBJECT[16] = CreateObject(18981, 1569.22998, -1701.79004, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[17] = CreateObject(18981, 1569.22998, -1715.64001, 1993.92004,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[18] = CreateObject(18981, 1569.35999, -1651.18994, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[19] = CreateObject(18981, 1569.35999, -1626.18994, 1993.90002,   0.00000, 90.00000, 0.00000);
	CreateObject(18981, 1569.35999, -1651.19995, 1983.71997,   0.00000, 90.00000, 0.00000);
	CreateObject(18981, 1569.35999, -1651.19995, 1988.20996,   0.00000, 90.00000, 0.00000);

	LSPD_OBJECT[20] = CreateObject(18981, 1569.31006, -1701.75000, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[21] = CreateObject(18981, 1544.40002, -1702.84998, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[22] = CreateObject(18981, 1568.62000, -1676.88000, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[23] = CreateObject(18981, 1568.02002, -1627.33997, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[24] = CreateObject(18981, 1544.33997, -1643.18005, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[25] = CreateObject(18981, 1569.41003, -1651.93005, 1999.97998,   0.00000, 90.00000, 0.00000);

	/*SAPD Map Interior por Raul Lara*/
	//Piso segundas plantas
	SetObjectMaterial(LSPD_OBJECT[16], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[17], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[18], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[19], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	//Paredes
	SetObjectMaterial(LSPD_OBJECT[0], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[1], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[2], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[3], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[4], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[5], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[6], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[7], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[8], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[9], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[10], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[11], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[12], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[13], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	//Techo
	SetObjectMaterial(LSPD_OBJECT[20], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[21], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[22], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[23], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[24], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[25], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	//Piso Lobby
	SetObjectMaterial(LSPD_OBJECT[14], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);
	SetObjectMaterial(LSPD_OBJECT[15], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);

	CreateDynamicObject(1536, 1557.04004, -1678.10999, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1536, 1557.04004, -1675.10999, 1989.57996,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19375, 1560.00000, -1689.21997, 1994.31006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1560.00000, -1663.72998, 1994.31006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1574.04004, -1689.33997, 1994.31006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1573.97998, -1663.75000, 1994.31006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2191, 1576.10999, -1665.15002, 1989.52002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2191, 1576.10999, -1667.15002, 1989.52002,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19379, 1571.97998, -1694.51001, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(6099, 1512.85999, -1670.81006, 1990.56006,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, 1562.34998, -1694.51001, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1571.81006, -1705.01001, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1562.18994, -1705.01001, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1552.71997, -1694.52002, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1552.56006, -1705.01001, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1542.97998, -1705.75000, 1989.47998,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1571.81006, -1715.51001, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1562.18994, -1715.50000, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1552.58997, -1715.50000, 1989.52002,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1542.97998, -1716.21997, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18755, 1554.70996, -1709.53003, 1991.56006,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1553.75000, -1703.18994, 1991.87695,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18758, 1554.68005, -1709.51001, 1991.29004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1548.01001, -1705.67004, 1996.94995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14407, 1554.01001, -1705.10999, 1991.21997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1547.92004, -1705.67004, 1992.13000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1553.78003, -1705.67004, 1996.94995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18758, 1554.68005, -1709.55005, 1996.34998,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1553.69995, -1705.68994, 1992.13000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18758, 1554.68005, -1701.52002, 1991.29004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1559.80005, -1700.45996, 1996.94995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19465, 1565.70996, -1700.45996, 1996.94995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1571.64001, -1700.45996, 1996.94995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1577.48999, -1700.45996, 1996.94995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1568.53003, -1703.48999, 1996.94995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 1568.53003, -1709.40002, 1996.94995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1568.53003, -1715.26001, 1996.94995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1569.67004, -1692.27002, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 1569.67004, -1698.02002, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1569.67004, -1709.77002, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1569.67004, -1715.62000, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, 1571.81995, -1658.44995, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1562.18994, -1658.45996, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1552.56995, -1658.43994, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1562.18005, -1647.96997, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1571.81006, -1647.94995, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1571.81995, -1637.45996, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1562.18994, -1637.46997, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1552.54004, -1640.68994, 1989.50000,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19379, 1561.78003, -1651.16003, 1989.47998,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19464, 1570.55005, -1654.77002, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 1570.54004, -1660.70996, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1573.63000, -1651.92004, 1988.16003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19465, 1570.55005, -1648.87000, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1573.56995, -1646.04004, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19465, 1570.54004, -1643.02002, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1570.55005, -1637.21997, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 1562.70996, -1660.68005, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1562.70996, -1654.79004, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1559.88000, -1650.69995, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1562.72998, -1653.55005, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18758, 1554.80005, -1648.23999, 1991.29004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1553.83997, -1641.69995, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1550.72998, -1641.70996, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14407, 1553.98999, -1643.82996, 1991.16003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18758, 1554.80005, -1640.27002, 1991.29004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18755, 1554.90002, -1648.12000, 1991.50000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1550.72998, -1644.35999, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1553.87000, -1644.35999, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1544.89001, -1644.35999, 1991.81006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1543.08997, -1641.81995, 1989.52002,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19464, 1553.91003, -1644.35999, 1996.91003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1550.72998, -1644.35999, 1996.91003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1544.89001, -1644.35999, 1996.91003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19464, 1559.68005, -1651.77002, 1996.91003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19465, 1562.50000, -1654.83997, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1562.50000, -1660.78003, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 1570.42004, -1642.96997, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19465, 1570.42004, -1654.81006, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1570.43005, -1637.05005, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1573.50000, -1651.72998, 1996.91003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1560.67004, -1691.62000, 1994.79004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1558.80005, -1690.81995, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1560.67004, -1697.69995, 1994.79004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1564.19995, -1697.69995, 1994.79004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1564.19995, -1691.62000, 1994.79004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1568.92004, -1691.62000, 1994.79004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1568.92004, -1697.69995, 1994.79004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2607, 1572.90002, -1695.53003, 1994.81006,   0.00000, 0.00000, 9270.00000);
	CreateDynamicObject(1671, 1558.76001, -1692.56995, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1562.27002, -1690.78003, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1562.26001, -1692.40002, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1566.91003, -1690.92004, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1566.89001, -1692.53003, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1567.07996, -1696.87000, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1567.05005, -1698.78003, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1562.31006, -1698.78003, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1562.26001, -1696.45996, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1558.70996, -1698.84998, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1558.62000, -1696.63000, 1994.84998,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 1574.44995, -1695.26001, 1994.40002,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2611, 1576.53003, -1695.51001, 1995.93005,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2611, 1576.54004, -1692.85999, 1995.93005,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2607, 1572.89001, -1693.60999, 1994.81006,   0.00000, 0.00000, 9270.00000);
	CreateDynamicObject(1714, 1574.34998, -1693.31995, 1994.40002,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2166, 1573.27002, -1705.13000, 1994.42004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2165, 1573.28003, -1707.08997, 1994.42004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2186, 1573.38000, -1709.03003, 1994.48999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1704, 1571.07996, -1704.94995, 1994.42004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1704, 1571.07996, -1707.14001, 1994.42004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2611, 1576.51001, -1708.02002, 1996.34998,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1714, 1574.76001, -1706.39001, 1994.42004,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19464, 1569.67004, -1703.94995, 1991.81006,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2357, 1574.04004, -1698.39001, 1989.98999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1572.72998, -1698.40002, 1989.98999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1572.70996, -1702.64001, 1989.98999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1574.03003, -1702.64001, 1989.98999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1572.71997, -1706.90002, 1989.98999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1574.02002, -1706.90002, 1989.98999,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 1573.45996, -1710.59998, 1989.58997,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1714, 1573.37000, -1694.38000, 1989.58997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1671, 1571.06995, -1706.92004, 1990.06006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1571.06006, -1704.85999, 1990.06006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1571.05005, -1702.57996, 1990.06006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1571.09998, -1700.43005, 1990.06006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1575.76001, -1697.82996, 1990.06006,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1671, 1575.79004, -1700.42004, 1990.06006,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1671, 1575.81006, -1703.03003, 1990.06006,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1671, 1575.77002, -1705.69995, 1990.06006,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1671, 1575.70996, -1708.01001, 1990.06006,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14532, 1571.56995, -1692.39001, 1990.56995,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14532, 1577.10999, -1695.20996, 1990.56995,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14532, 1574.92004, -1712.08997, 1990.56995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2172, 1560.04004, -1697.93994, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1714, 1558.21997, -1698.53003, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1560.04004, -1694.29004, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1714, 1558.27002, -1694.56006, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1560.04004, -1690.70996, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1563.18994, -1690.70996, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1563.18994, -1694.29004, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1563.18994, -1697.93994, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1714, 1558.21997, -1691.18994, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 1561.34998, -1691.26001, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 1561.37000, -1694.85999, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 1561.43005, -1698.08997, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1572.98999, -1684.84998, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1565.44995, -1669.54004, 1989.93994,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1565.45996, -1673.81995, 1989.93994,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1565.46997, -1678.06995, 1989.93994,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1565.47998, -1682.32996, 1989.93994,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1564.77002, -1681.10999, 1985.19995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2357, 1565.45996, -1683.76001, 1989.95996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3857, 1564.73999, -1685.17004, 1990.84985,   0.00000, 0.00000, 135.00000);
	CreateDynamicObject(2172, 1572.97998, -1682.94995, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1572.95996, -1678.90002, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1572.96997, -1677.01001, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1573.03003, -1672.89001, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1573.03003, -1670.98999, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1573.07996, -1667.18994, 1989.57996,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2172, 1572.05005, -1683.82996, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1572.04004, -1681.93005, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1572.06995, -1677.90002, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1572.06995, -1675.98999, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1572.10999, -1671.89001, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1572.12000, -1669.95996, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2172, 1572.17004, -1666.18005, 1989.57996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19375, 1566.05005, -1681.06006, 1985.07996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 1566.08997, -1672.21997, 1985.07996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 1564.76001, -1671.78003, 1985.19995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19356, 1564.73999, -1687.53003, 1991.29004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3857, 1564.73999, -1670.25195, 1990.84985,   0.00000, 0.00000, 135.00000);
	CreateDynamicObject(3857, 1566.97998, -1663.76001, 1995.37000,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3857, 1566.97998, -1663.68994, 2001.18005,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3857, 1567.32996, -1689.26001, 1995.37000,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3857, 1567.32996, -1689.26001, 2001.17004,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(3850, 1556.72998, -1701.34998, 1994.92004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3850, 1556.88000, -1640.09998, 1994.94995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3850, 1556.88000, -1636.67004, 1994.94995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1570.41003, -1648.89001, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19464, 1570.42004, -1660.72998, 1996.91003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18758, 1554.81995, -1640.03003, 1991.29004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18758, 1554.80005, -1648.23999, 1996.30005,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18755, 1554.90002, -1648.12000, 1986.14001,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18758, 1554.90002, -1648.22998, 1986.15002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19385, 1558.55005, -1652.27002, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1561.72998, -1652.26001, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1564.93005, -1652.27002, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1568.12000, -1652.26001, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1558.56995, -1644.17004, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1561.75000, -1644.16003, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1564.94995, -1644.17004, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1568.16003, -1644.17004, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19385, 1569.78003, -1650.60999, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19385, 1569.79004, -1645.88000, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1569.80005, -1648.20996, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1556.90002, -1642.48999, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1560.13000, -1642.46997, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1563.33997, -1642.46997, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1566.60999, -1642.46997, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1569.71997, -1642.50000, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1571.48999, -1644.23999, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1571.48999, -1648.33997, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1571.44995, -1651.85999, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1569.73999, -1653.96997, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1566.28003, -1653.96997, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1563.31006, -1653.94995, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1560.00000, -1653.95996, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1556.91003, -1653.94995, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1558.42004, -1655.47998, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1561.68005, -1655.54004, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1564.83997, -1655.56995, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1568.06995, -1655.54004, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1572.98999, -1650.34998, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1573.02002, -1647.22998, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1573.02002, -1644.07996, 1985.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19355, 1568.18994, -1640.96997, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1564.94995, -1640.93994, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1561.72998, -1640.95996, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19355, 1558.58997, -1640.96997, 1985.96997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1811, 1570.77002, -1672.39001, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1570.82996, -1670.39001, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1570.83997, -1676.12000, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1570.68005, -1678.58997, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1574.30005, -1676.31995, 1990.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1811, 1574.34998, -1678.42004, 1990.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1811, 1574.54004, -1682.63000, 1990.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1811, 1574.51001, -1684.89001, 1990.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1811, 1570.51001, -1682.45996, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1570.41003, -1684.81006, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1570.56995, -1666.48999, 1990.13000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1811, 1574.31006, -1666.66003, 1990.13000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2356, 1567.30005, -1669.58997, 1989.54004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2356, 1567.37000, -1673.48999, 1989.54004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2356, 1567.30005, -1677.37000, 1989.54004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2356, 1567.43005, -1680.33997, 1989.54004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2356, 1567.42004, -1683.97998, 1989.54004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1558.77002, -1664.20996, 1989.53003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1557.47998, -1667.57996, 1989.53003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1557.43005, -1672.27002, 1989.53003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1560.94995, -1688.63000, 1989.53003,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1557.47998, -1687.56006, 1989.53003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1557.47998, -1682.52002, 1989.53003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19302, 1558.45996, -1644.19995, 1985.45996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 1561.62000, -1644.17004, 1985.45996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 1564.82996, -1644.20996, 1985.45996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 1567.98999, -1644.18994, 1985.45996,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 1569.73999, -1645.71997, 1985.45996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19302, 1569.73999, -1650.47998, 1985.45996,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(19302, 1568.22998, -1652.22998, 1985.45996,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 1565.01001, -1652.23999, 1985.45996,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 1561.81995, -1652.22998, 1985.45996,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19302, 1558.63000, -1652.23999, 1985.45996,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1771, 1557.66003, -1642.34998, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1560.87000, -1642.35999, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1564.07996, -1642.31995, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1567.38000, -1642.38000, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1571.65002, -1647.59998, 1984.83997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1571.60999, -1649.14001, 1984.83997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1771, 1568.96997, -1654.18005, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1565.48999, -1654.18994, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1562.51001, -1654.16003, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1771, 1559.13000, -1654.09998, 1984.83997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8169, 1575.33997, -1652.01001, 1990.58997,   15.00000, 90.00000, 270.00000);
	CreateDynamicObject(8169, 1572.81995, -1652.02002, 1990.58997,   15.00000, 90.00000, 270.00000);
	CreateDynamicObject(3857, 1574.18994, -1651.80005, 1990.58997,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(14782, 1562.18994, -1655.39001, 1990.56006,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(14782, 1557.32996, -1654.44995, 1990.56006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14782, 1557.35999, -1660.54004, 1990.56006,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2063, 1560.20996, -1651.18005, 1990.47998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2063, 1560.03003, -1663.33997, 1990.47998,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1573.29004, -1663.18005, 1989.53003,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1575.75000, -1663.15002, 1989.53003,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1571.19995, -1656.72998, 1989.53003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1575.97998, -1654.71997, 1989.53003,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1502, 1570.52002, -1661.46997, 1989.43005,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1570.52002, -1649.65002, 1989.43005,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1570.53003, -1643.78003, 1989.43005,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1562.76001, -1661.45996, 1989.43005,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2606, 1576.68005, -1643.09998, 1991.30005,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2606, 1576.68005, -1641.13000, 1991.30005,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2606, 1576.68005, -1641.13000, 1990.65002,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2606, 1576.68005, -1643.13000, 1990.65002,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1715, 1572.92004, -1641.02002, 1989.56995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1715, 1572.93994, -1642.68005, 1989.56995,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2206, 1574.68005, -1642.76001, 1989.58997,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1569.87000, -1639.39001, 1989.53003,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 1566.98999, -1638.39001, 1989.53003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1563.21997, -1638.39001, 1989.53003,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2206, 1574.35999, -1643.02002, 1994.39001,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 1576.12000, -1641.70996, 1994.40002,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2204, 1575.13000, -1647.16003, 1994.38000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19464, 1573.50000, -1647.42004, 1996.91003,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2206, 1572.93994, -1659.52002, 1994.39001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, 1573.76001, -1661.31995, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1571.41003, -1652.35999, 1994.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1573.93005, -1652.33997, 1994.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1811, 1572.89001, -1657.65002, 1995.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1811, 1574.46997, -1657.59998, 1995.00000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1703, 1571.06006, -1641.37000, 1994.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(16662, 1558.93005, -1662.60999, 2004.23999,   63.00000, 90.00000, 90.00000);
	CreateDynamicObject(1722, 1561.58997, -1656.70996, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1560.76001, -1656.67004, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1557.57996, -1656.67004, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1558.18005, -1656.66003, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1558.82996, -1656.65002, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1558.82996, -1654.88000, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1558.18005, -1654.87000, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1557.56006, -1654.87000, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1557.56995, -1653.22998, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1558.18994, -1653.21997, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1558.85999, -1653.20996, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1560.72998, -1653.14001, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1722, 1561.48999, -1653.10999, 1994.40002,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1502, 1570.41003, -1655.56995, 1994.37000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1570.40002, -1643.73999, 1994.37000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1562.50000, -1654.06006, 1994.37000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 1566.22998, -1638.44995, 1994.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1569.78003, -1639.25000, 1994.40002,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 1562.79004, -1638.41003, 1994.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1559.28003, -1638.37000, 1994.40002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1557.44995, -1641.52002, 1994.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(630, 1557.93005, -1638.51001, 1995.43005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1562.23999, -1638.34998, 1995.43005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1565.64001, -1638.34998, 1995.43005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1569.47998, -1638.46997, 1995.43005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2357, 1561.73999, -1640.66003, 1994.79004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2357, 1565.93994, -1640.66003, 1994.77002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1569.90002, -1638.56995, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1566.27002, -1638.35999, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2030, 1567.10999, -1640.51001, 1989.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2030, 1564.05005, -1640.33997, 1989.96997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1569.05005, -1705.68994, 1989.53003,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 1569.03003, -1709.23999, 1989.53003,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(1703, 1568.07996, -1712.85999, 1989.53003,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1564.62000, -1712.84998, 1989.53003,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(630, 1569.06006, -1712.75000, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1569.23999, -1708.54004, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1565.45996, -1712.81006, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2030, 1566.81006, -1710.39001, 1989.97998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1561.32996, -1712.85999, 1994.42004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 1565.56995, -1712.90002, 1994.42004,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(630, 1562.39001, -1712.80005, 1995.43005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1566.70996, -1713.05005, 1995.43005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19370, 1560.66003, -1662.05005, 1994.40002,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 1557.16003, -1662.04004, 1994.40002,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19370, 1559.54004, -1660.43994, 1994.33997,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(18755, 1554.90002, -1648.12000, 1996.34998,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(18755, 1554.70996, -1709.53003, 1996.31995,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2198, 1566.43994, -1705.90002, 1994.40002,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1806, 1567.98999, -1704.96997, 1994.42004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(630, 1557.67004, -1669.32996, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1557.50000, -1664.46997, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1557.68994, -1684.01001, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(630, 1557.91003, -1688.57996, 1990.59998,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2357, 1559.82996, -1668.50000, 1989.92004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2357, 1559.77002, -1684.43994, 1989.92004,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1569.64001, -1698.79004, 1989.43005,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1568.54004, -1710.15002, 1994.37000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1502, 1566.47998, -1700.46997, 1994.37000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1715, 1572.43994, -1648.60999, 1989.56995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1715, 1574.06995, -1648.53003, 1989.56995,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2206, 1574.25000, -1650.35999, 1989.58997,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19356, 1564.74402, -1687.53003, 1992.01855,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19356, 1564.73999, -1665.43005, 1991.29004,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19356, 1564.74402, -1665.43005, 1992.01855,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3857, 1564.73999, -1677.70996, 1990.84985,   0.00000, 0.00000, 135.00000);
	CreateDynamicObject(19464, 1552.07996, -1703.18994, 1991.87695,   0.00000, 0.00000, 90.00000);

    //Banco Los Santos 
	CreateDynamicObject(14789, 1424.69031, -1004.06616, 1643.01868,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(2774, 1433.02625, -1004.64392, 1635.81982,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1429.29700, -1004.61865, 1641.28113,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1443.60449, -979.68213, 1640.29773,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1429.33716, -979.54529, 1639.72339,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1449.31409, -984.50500, 1648.02319,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1413.91406, -984.51538, 1643.07349,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 1448.51013, -1003.64294, 1647.09399,   19.76704, 0.00000, -136.64162);
	CreateDynamicObject(1886, 1414.70654, -980.60443, 1647.06165,   19.76704, 0.00000, -316.64163);
	CreateDynamicObject(2774, 1430.41687, -999.01727, 1638.72241,   0.00000, -90.24080, 0.00000);
	CreateDynamicObject(2774, 1408.14929, -998.99683, 1638.72241,   0.00000, -90.24080, -179.99997);
	CreateDynamicObject(2774, 1443.57727, -986.63464, 1638.72339,   0.00000, -90.24080, -89.99998);
	CreateDynamicObject(2774, 1443.60449, -998.99817, 1647.79749,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11359, 1414.35620, -988.98535, 1639.79590,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(2774, 1413.92737, -986.01172, 1643.04700,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2774, 1413.76367, -992.08539, 1643.67334,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(626, 1427.55457, -997.32300, 1640.76648,   0.00000, 0.00000, 134.99997);
	CreateDynamicObject(626, 1427.48828, -990.75250, 1640.84155,   0.00000, 0.00000, 134.99997);
	CreateDynamicObject(2773, 1427.75671, -995.78119, 1639.31018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1427.69495, -992.84143, 1639.31018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1427.59692, -989.12860, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1429.86316, -982.92737, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(626, 1427.66528, -983.12860, 1640.84155,   0.00000, 0.00000, 236.24998);
	CreateDynamicObject(2773, 1432.75586, -982.99078, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(626, 1434.64832, -983.18890, 1640.84155,   0.00000, 0.00000, 236.24998);
	CreateDynamicObject(2773, 1437.09143, -983.05499, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(2773, 1440.04028, -983.01276, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3462, 1448.46692, -993.01447, 1640.29797,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3462, 1448.51208, -982.99261, 1640.18152,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(626, 1441.63623, -997.04773, 1640.74146,   0.00000, 0.00000, -213.74998);
	CreateDynamicObject(14632, 1443.64868, -995.93463, 1638.66772,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(14632, 1432.15637, -1018.01526, 1639.98816,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2773, 1435.18384, -996.75928, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1435.15247, -993.93256, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1439.33862, -996.65869, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1439.28894, -994.00067, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 1426.28015, -994.86359, 1638.70728,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1723, 1426.24463, -991.15045, 1638.73230,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1723, 1422.27747, -996.93506, 1638.68225,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(1723, 1422.27930, -993.21002, 1638.65723,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(2637, 1424.23242, -992.17358, 1638.83875,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2637, 1424.22852, -995.70416, 1638.83875,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3657, 1432.63330, -987.73901, 1639.20239,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3657, 1432.63110, -986.97723, 1639.20239,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(3657, 1438.11157, -986.97754, 1639.20239,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(3657, 1438.08630, -987.73071, 1639.22742,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(2961, 1439.02832, -999.82666, 1639.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2961, 1433.50562, -999.82764, 1639.30139,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2946, 1414.35522, -990.51349, 1638.75562,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2946, 1414.38025, -987.39252, 1638.75500,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(2963, 1424.16528, -1004.81567, 1640.78113,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2963, 1426.80676, -1004.83252, 1640.82690,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1886, 1414.73059, -993.52301, 1646.90857,   17.18873, 0.00000, 67.49998);
	CreateDynamicObject(2773, 1431.41455, -996.84583, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1431.47339, -994.01709, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(632, 1434.73535, -987.75751, 1639.13123,   0.00000, 0.00000, -146.25000);
	CreateDynamicObject(2773, 1441.22864, -993.04297, 1639.30151,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2824, 1424.29724, -992.05493, 1639.24768,   0.00000, 0.00000, 78.75002);
	CreateDynamicObject(19325, 1443.32288, -983.22131, 1641.53308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1443.57727, -986.63464, 1644.36646,   0.00000, -90.24080, -89.99998);
	CreateDynamicObject(2774, 1443.57727, -986.63464, 1645.98853,   0.00000, -90.24080, -89.99998);
	CreateDynamicObject(19325, 1443.32288, -989.85730, 1641.53308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1443.32288, -996.49731, 1641.53308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1430.41687, -999.01727, 1644.36646,   0.00000, -90.24080, 0.00000);
	CreateDynamicObject(2774, 1430.41687, -999.01727, 1645.98853,   0.00000, -90.24080, 0.00000);
	CreateDynamicObject(2774, 1408.14929, -998.99683, 1644.36646,   0.00000, -90.24080, -180.00000);
	CreateDynamicObject(2774, 1408.14929, -998.99683, 1645.98853,   0.00000, -90.24080, -180.00000);
	CreateDynamicObject(19325, 1439.60913, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1432.98413, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1426.35913, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1419.73413, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1413.10913, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);


	//Cajeros
	CreateDynamicObject(2942, 1417.71362, -980.47516, 1639.36353,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1421.21716, -980.44891, 1639.38550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1424.63049, -980.52667, 1639.37146,   0.00000, 0.00000, 0.00000);
	
	CreateDynamicObject(2942, 1410.21143, -1228.69971, 13.16360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1224.61646, -1428.50427, 13.07948,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1222.61646, -1428.50427, 13.07950,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1220.61646, -1428.50427, 13.07950,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1218.61646, -1428.50427, 13.07950,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1161.02258, -1497.45313, 15.41748,   0.00000, 0.00000, 247.50285);
	CreateDynamicObject(2942, 1498.90039, -1847.78955, 13.16123,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1380.03198, -1642.76318, 13.17232,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, 538.80273, -1740.98254, 11.93303,   0.00000, 0.00000, 172.75285);
	CreateDynamicObject(2942, 1007.77338, -1295.86072, 13.14124,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1312.18127, -897.83740, 39.17719,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1734.48511, -1907.68274, 13.18131,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, 1763.64221, -2204.38379, 13.15179,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1585.76953, -2286.25854, 13.12480,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, 1831.72632, -1308.21704, 13.11254,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2942, 2043.84473, -1414.96716, 16.76000,   0.00000, 0.00000, -90.00000);

	CreateDynamicObject(2942, 818.16, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 819.09, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 820.03, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 821.08, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 1996.85571, 991.90173, 10.37796,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1999.35571, 991.90167, 10.37800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 2001.85571, 991.90167, 10.37800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 2485.83130, 1324.93884, 10.43051,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 2033.10327, 1887.10425, 11.63956,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2942, 2085.66553, 2059.63940, 10.64579,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2942, 1643.64844, 2250.88745, 10.65640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1641.64844, 2250.88745, 10.65640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, -1463.74280, 1873.54175, 32.20494,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, -2451.76270, 2252.21826, 4.56842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, -2449.76270, 2252.21826, 4.56840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, -1980.58179, 168.44235, 27.20170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, -1980.58179, 166.44240, 27.20170,   0.00000, 0.00000, -90.00000);

	
	new Cr_Object = CreateDynamicObject(8661, 1152.53723, -2087.92334, -37.27034,   0.00000, 90.00000, -90.00000);
    CreateDynamicObject(8661, 1152.53723, -2087.92334, 42.33425,   0.00000, 90.00000, -90.00000);
    CreateDynamicObject(8661, 1152.53723, -2087.92334, 2.50363,   0.00000, 90.00000, -90.00000);
    SetObjectMaterial(Cr_Object, 0, 18646, "matcolours", "black", 0);
    SetObjectMaterial(Cr_Object+1, 0, 18646, "matcolours", "black", 0);
    SetObjectMaterial(Cr_Object+2, 0, 18646, "matcolours", "black", 0);
    
	new yeaa = CreateObject(19353, 1153.1020, -2087.8754, 54.6938, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa, "{FF6600}Montevideo Role Play 2014", 0, 140, "Arial", 32, 1, -16468988, 0, 1);

	CreateObject(19353, 1153.1020, -2087.8754, 53.1084, 0.0000, 0.0000, -90.000);           //grande = -1.5854*x
    SetObjectMaterialText(yeaa+1, "{FF6600}Programación", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.6200, 0.0000, 0.0000, -90.000);               //pequeño = -0.22*x
    SetObjectMaterialText(yeaa+2, "{FFFFFF}Ma-Ti", 0, 140, "Arial", 32, 0, -16468988, 0, 1);    //apar to name = -0.4884*x
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+3, "{FFFFFF}Santi", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+4, "{FF6600}Mapas", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+5, "{FFFFFF}Ma-Ti", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+6, "{FF6600}Otros", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+7, "{FFFFFF}-vacío-", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754,  52.4000-1-0.4884*1-1-0.4884*1-1, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+8, "{FF6600}Testing", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+9, "{FFFFFF}Ma-Ti", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+10, "{FFFFFF}Snti", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+11, "{FFFFFF}", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754,  52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+12, "{FF6600}Agradecimientos", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1-0.4884, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+13, "{FFFFFF}SA-MP Forums", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1-0.4884-0.22, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+14, "{FFFFFF}SAMP Script", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
    CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1-0.4884-0.22-1.5, 0.0000, 0.0000, -90.000);
    SetObjectMaterialText(yeaa+15, "Gracias por jugar en\nSheedow Role Play 2013\n\n\nFIN", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
	
    //Lounge Vip, Creditos: Raul Lara.
	CreateDynamicObject(5709, 873.51, -1370.82, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(5709, 871.51, -1355.40, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(5709, 833.14, -1332.32, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(5709, 864.38, -1385.89, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(5709, 871.48, -1371.95, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(5709, 848.56, -1342.05, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(5709, 791.15, -1348.77, 2000.00,   0.00, 0.00, 180.00);
	CreateDynamicObject(5709, 798.71, -1350.63, 2000.00,   0.00, 0.00, 180.00);
	CreateDynamicObject(5709, 798.23, -1361.08, 2000.00,   0.00, 0.00, 180.00);
	CreateDynamicObject(5709, 798.22, -1382.40, 2000.00,   0.00, 0.00, 180.00);
	CreateDynamicObject(5709, 844.33, -1410.77, 2000.00,   0.00, 0.00, 270.00);
	CreateDynamicObject(5709, 827.91, -1410.70, 2000.00,   0.00, 0.00, 270.00);
	CreateDynamicObject(5709, 828.47, -1403.72, 2000.00,   0.00, 0.00, 300.67);
	CreateDynamicObject(5709, 820.38, -1401.41, 2000.00,   0.00, 0.00, 270.00);
	CreateDynamicObject(5709, 839.23, -1339.63, 2000.00,   0.00, 0.00, 126.68);
	CreateDynamicObject(5709, 821.55, -1332.29, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(5709, 805.14, -1357.55, 2000.00,   0.00, 0.00, 180.00);
	CreateDynamicObject(3851, 843.02, -1383.25, 1992.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 828.73, -1383.22, 1992.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(1536, 837.29, -1383.32, 1991.67,   0.00, 0.00, 35.02);
	CreateDynamicObject(1536, 834.38, -1383.24, 1991.61,   0.00, 0.00, 131.09);
	CreateDynamicObject(3851, 843.05, -1383.25, 1995.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 831.75, -1383.24, 1995.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 820.45, -1383.23, 1995.99,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 843.05, -1383.25, 1999.96,   0.00, 0.00, 90.00);
	CreateDynamicObject(19379, 851.44, -1378.41, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 819.94, -1378.44, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 828.34, -1388.02, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 838.79, -1387.77, 1991.54,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 849.25, -1387.71, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 848.07, -1368.81, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 848.08, -1359.17, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 848.08, -1349.56, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 837.60, -1359.17, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 837.59, -1349.55, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 827.09, -1349.59, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 827.13, -1359.21, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 821.54, -1359.33, 1991.54,   0.00, 90.00, 0.00);
	CreateDynamicObject(3851, 831.75, -1383.24, 1999.96,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 820.45, -1383.23, 1999.96,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 831.75, -1383.24, 2003.95,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 820.45, -1383.23, 2003.95,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 843.05, -1383.25, 2003.95,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 840.35, -1360.17, 1992.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(1536, 834.63, -1360.14, 1991.67,   0.00, 0.00, 327.75);
	CreateDynamicObject(1536, 831.69, -1360.11, 1991.67,   0.00, 0.00, 207.82);
	CreateDynamicObject(3851, 826.04, -1360.17, 1992.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 828.86, -1360.17, 1996.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 840.15, -1360.17, 1996.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 828.86, -1360.17, 2000.15,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 840.15, -1360.17, 2000.15,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 840.15, -1360.17, 2004.15,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 828.86, -1360.17, 2004.15,   0.00, 0.00, 90.00);
	CreateDynamicObject(18762, 815.96, -1368.74, 1994.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 815.96, -1368.68, 1999.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 815.96, -1368.68, 2004.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 816.00, -1363.33, 1994.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 815.99, -1363.33, 1999.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 815.99, -1363.33, 2004.11,   0.00, 0.00, 0.00);
	CreateDynamicObject(3851, 816.43, -1365.55, 1996.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(3851, 816.37, -1365.54, 1999.28,   0.00, 0.00, 0.00);
	CreateDynamicObject(18755, 814.31, -1366.05, 2010.88,   0.00, 0.00, 180.00);
	CreateDynamicObject(3851, 816.41, -1365.55, 2006.41,   0.00, 0.00, 0.00);
	CreateDynamicObject(5709, 793.93, -1366.57, 2000.00,   0.00, 0.00, 180.00);
	CreateDynamicObject(5709, 801.78, -1363.90, 2000.00,   0.00, 0.00, 270.00);
	CreateDynamicObject(18981, 847.75, -1354.69, 1979.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(18981, 853.46, -1371.47, 1979.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 853.29, -1372.00, 1992.00,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 852.29, -1372.00, 1991.82,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 851.81, -1372.00, 1991.71,   0.00, 90.00, 0.00);
	CreateDynamicObject(10444, 854.80, -1375.27, 1992.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(10444, 854.75, -1375.34, 1991.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 816.63, -1377.97, 1994.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 816.63, -1377.97, 1998.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 816.63, -1371.73, 1994.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 816.62, -1371.72, 1998.71,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 822.70, -1380.63, 2000.74,   0.02, 90.00, 90.00);
	CreateDynamicObject(18762, 822.74, -1375.65, 2000.74,   0.02, 90.00, 90.00);
	CreateDynamicObject(18762, 822.74, -1370.70, 2000.74,   0.02, 90.00, 90.00);
	CreateDynamicObject(18762, 822.74, -1365.75, 2000.74,   0.02, 90.00, 90.00);
	CreateDynamicObject(18762, 822.74, -1362.84, 2000.74,   0.02, 90.00, 90.00);
	CreateDynamicObject(19129, 812.69, -1380.57, 1994.99,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 848.10, -1378.44, 1991.54,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 827.01, -1385.25, 1991.54,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 820.74, -1375.76, 1991.38,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 831.23, -1360.01, 1991.36,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 841.72, -1360.01, 1991.36,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 847.21, -1369.64, 1991.36,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 847.19, -1379.25, 1991.36,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 836.69, -1384.38, 1991.36,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 826.19, -1384.36, 1991.36,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 821.34, -1375.54, 1991.20,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 821.35, -1366.02, 1991.20,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 831.73, -1360.80, 1991.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 842.19, -1360.77, 1991.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 846.33, -1379.98, 1991.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 835.89, -1383.58, 1991.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 825.42, -1383.52, 1991.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(18981, 860.63, -1376.44, 1979.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(18981, 859.73, -1383.58, 1979.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(18981, 860.57, -1367.64, 1979.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(18981, 860.39, -1360.16, 1979.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(19462, 818.15, -1378.41, 2000.35,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 818.15, -1368.80, 2000.35,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 818.15, -1359.16, 2000.35,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 821.41, -1378.41, 2000.35,   -0.02, 90.00, 0.00);
	CreateDynamicObject(19462, 821.40, -1368.81, 2000.35,   -0.02, 90.00, 0.00);
	CreateDynamicObject(19462, 821.05, -1359.14, 2000.35,   -0.02, 90.00, 0.00);
	CreateDynamicObject(19462, 821.33, -1378.39, 2001.17,   -0.02, 90.00, 0.00);
	CreateDynamicObject(19462, 818.15, -1378.41, 2001.17,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 821.34, -1368.79, 2001.17,   -0.02, 90.00, 0.00);
	CreateDynamicObject(19462, 818.12, -1368.80, 2001.17,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 821.38, -1359.22, 2001.17,   -0.02, 90.00, 0.00);
	CreateDynamicObject(19462, 818.15, -1359.16, 2001.17,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, -1372.01, 1991.92, 1991.92,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 852.81, -1372.00, 1991.92,   0.00, 90.00, 0.00);
	CreateDynamicObject(18981, 847.75, -1389.31, 1979.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 822.71, -1380.71, 2000.74,   0.02, 90.00, 90.00);
	CreateDynamicObject(2773, 822.85, -1382.06, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.84, -1379.73, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.85, -1377.41, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.86, -1375.09, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.84, -1372.77, 2001.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.87, -1370.43, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.87, -1368.10, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.82, -1365.76, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.86, -1363.46, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.86, -1361.55, 2001.77,   0.00, 0.00, 0.00);
	CreateDynamicObject(1723, 816.91, -1382.75, 2001.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(1723, 816.88, -1379.24, 2001.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(1723, 816.88, -1375.76, 2001.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(1723, 816.80, -1372.30, 2001.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(1723, 820.16, -1360.89, 2001.25,   0.00, 0.00, 0.00);
	CreateDynamicObject(1723, 817.03, -1360.95, 2001.25,   0.00, 0.00, 0.00);
	CreateDynamicObject(4141, 800.30, -1364.47, 1969.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(14391, 820.19, -1376.94, 1995.99,   0.00, 0.00, 180.00);
	CreateDynamicObject(2395, 823.07, -1382.72, 1995.12,   270.00, 0.00, 90.00);
	CreateDynamicObject(2395, 823.07, -1379.02, 1995.12,   270.00, 0.00, 90.00);
	CreateDynamicObject(2395, 823.07, -1375.30, 1995.12,   270.00, 0.00, 90.00);
	CreateDynamicObject(2395, 823.05, -1373.42, 1995.14,   270.00, 0.00, 90.00);
	CreateDynamicObject(2395, 819.82, -1370.18, 1995.12,   270.00, 0.00, 180.00);
	CreateDynamicObject(2395, 816.08, -1370.18, 1995.12,   270.00, 0.00, 180.00);
	CreateDynamicObject(19129, 831.19, -1371.61, 1991.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2395, 821.18, -1377.52, 1993.44,   0.00, 0.00, 90.00);
	CreateDynamicObject(2395, 821.18, -1379.24, 1993.44,   0.00, 0.00, 90.00);
	CreateDynamicObject(16088, 821.89, -1378.81, 1991.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(16088, 821.94, -1389.05, 1991.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(16088, 821.96, -1390.58, 1991.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.75, -1371.38, 1995.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.83, -1374.11, 1995.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.83, -1377.32, 1995.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.86, -1380.10, 1995.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2773, 822.86, -1382.00, 1995.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(1723, 821.25, -1382.69, 2001.25,   0.00, 0.00, 180.00);
	CreateDynamicObject(8572, 820.33, -1369.25, 1993.82,   0.00, 0.00, 180.00);
	CreateDynamicObject(3851, 817.55, -1368.30, 1998.43,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 817.55, -1368.30, 1994.47,   0.00, 0.00, 90.00);
	CreateDynamicObject(3851, 817.55, -1368.30, 1990.48,   0.00, 0.00, 90.00);
	CreateDynamicObject(18762, 822.76, -1367.81, 1994.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 822.76, -1367.81, 1997.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(948, 822.33, -1382.61, 2001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(948, 816.93, -1380.03, 2001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(948, 816.97, -1376.52, 2001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(948, 816.88, -1373.04, 2001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(948, 816.89, -1369.54, 2001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(948, 816.69, -1362.61, 2001.21,   0.00, 0.00, 0.00);
	CreateDynamicObject(3515, 850.44, -1364.03, 1990.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(3515, 850.52, -1380.11, 1990.75,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 846.32, -1370.43, 1991.18,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 821.62, -1369.08, 1991.54,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 823.44, -1369.01, 1991.56,   0.00, 90.00, 0.00);
	CreateDynamicObject(19462, 824.23, -1366.15, 1991.38,   0.00, 90.00, 0.00);
	CreateDynamicObject(14560, 834.21, -1350.31, 1996.12,   0.00, 0.00, 90.00);
	CreateDynamicObject(2785, 823.88, -1357.12, 1992.49,   0.00, 0.00, 90.00);
	CreateDynamicObject(2098, 823.49, -1357.24, 1993.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(2785, 845.18, -1357.23, 1992.49,   0.00, 0.00, 270.00);
	CreateDynamicObject(2098, 845.78, -1357.17, 1993.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(1978, 836.76, -1357.27, 1992.70,   0.00, 0.00, 270.00);
	CreateDynamicObject(1978, 841.48, -1357.33, 1992.70,   0.00, 0.00, 270.00);
	CreateDynamicObject(2188, 830.30, -1357.09, 1992.64,   0.00, 0.00, 90.00);
	CreateDynamicObject(2188, 828.37, -1357.09, 1992.64,   0.00, 0.00, 270.00);
	CreateDynamicObject(2773, 829.34, -1355.87, 1992.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(2773, 829.35, -1358.36, 1992.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(2785, 829.20, -1359.65, 1992.49,   0.00, 0.00, 180.00);
	CreateDynamicObject(2785, 826.64, -1359.69, 1992.49,   0.00, 0.00, 180.00);
	CreateDynamicObject(14565, 834.26, -1350.25, 1993.60,   0.00, 0.00, 90.00);
	CreateDynamicObject(18758, 814.34, -1366.11, 1993.11,   0.00, 0.00, 180.00);
	CreateDynamicObject(18758, 814.34, -1366.11, 2003.11,   0.00, 0.00, 180.00);
	CreateDynamicObject(18762, 822.94, -1360.69, 1994.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 822.94, -1360.69, 1997.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(2780, 838.24, -1368.42, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(19462, 818.11, -1368.91, 1991.52,   0.00, 90.00, 0.00);
	CreateDynamicObject(2780, 837.39, -1374.90, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(2780, 833.43, -1371.86, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(2780, 831.40, -1375.33, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(2780, 828.65, -1372.39, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(2780, 830.10, -1368.48, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(2780, 834.09, -1368.72, 1984.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(10782, 845.17, -1339.93, 2012.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(18758, 814.30, -1366.11, 2010.86,   0.00, 0.00, 180.00);
	CreateDynamicObject(18758, 814.30, -1373.80, 2010.86,   0.00, 0.00, 180.00);
	CreateDynamicObject(3851, 816.37, -1373.85, 2010.14,   0.00, 0.00, 0.00);
	CreateDynamicObject(3851, 816.37, -1358.27, 2010.08,   0.00, 0.00, 0.00);
	CreateDynamicObject(18758, 814.31, -1366.10, 2012.91,   0.00, 0.00, 180.00);
	CreateDynamicObject(18758, 814.30, -1373.63, 2012.91,   0.00, 0.00, 180.00);
	CreateDynamicObject(3851, 816.37, -1366.39, 2014.08,   0.00, 0.00, 0.00);
	CreateDynamicObject(2439, 845.67, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 844.68, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 843.69, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 842.71, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 841.71, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 840.71, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 839.71, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 838.72, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 837.73, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 836.75, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 835.75, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 834.74, -1389.23, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2439, 834.57, -1389.38, 1991.65,   0.00, 0.00, 270.00);
	CreateDynamicObject(2439, 834.56, -1390.37, 1991.65,   0.00, 0.00, 270.00);
	CreateDynamicObject(2439, 834.48, -1392.68, 1991.65,   0.00, 0.00, 270.00);
	CreateDynamicObject(2808, 823.63, -1384.36, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 825.23, -1384.36, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2638, 827.35, -1384.36, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 829.48, -1384.36, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2638, 831.68, -1384.36, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 833.74, -1384.36, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2808, 837.89, -1384.36, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 839.45, -1384.36, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2638, 841.58, -1384.36, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 843.74, -1384.36, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2808, 845.41, -1384.32, 1992.25,   0.00, 0.00, 90.00);
	CreateDynamicObject(2808, 825.56, -1391.33, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 827.26, -1391.24, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2638, 829.56, -1391.39, 1992.25,   0.00, 0.00, 270.00);
	CreateDynamicObject(2637, 831.70, -1391.26, 1992.06,   0.00, 0.00, 270.00);
	CreateDynamicObject(2671, 824.63, -1387.50, 1991.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(2671, 828.99, -1390.83, 1991.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(2671, 840.91, -1384.26, 1991.66,   0.00, 0.00, 0.00);
	CreateDynamicObject(2683, 825.34, -1384.58, 1992.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(2683, 829.61, -1383.96, 1992.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(2683, 833.82, -1384.03, 1992.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(2683, 839.36, -1384.42, 1992.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(2683, 843.70, -1384.57, 1992.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(2451, 845.65, -1391.87, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2417, 843.75, -1392.10, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2415, 842.76, -1391.81, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2415, 841.94, -1391.82, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2419, 841.08, -1391.94, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2419, 839.17, -1391.93, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2426, 840.26, -1392.29, 1992.60,   0.00, 0.00, 180.00);
	CreateDynamicObject(2426, 838.35, -1392.27, 1992.60,   0.00, 0.00, 180.00);
	CreateDynamicObject(2421, 844.53, -1392.47, 1993.45,   0.00, 0.00, 180.00);
	CreateDynamicObject(2421, 840.99, -1392.52, 1993.45,   0.00, 0.00, 180.00);
	CreateDynamicObject(2418, 837.25, -1391.83, 1991.65,   0.00, 0.00, 180.00);
	CreateDynamicObject(2700, 831.73, -1392.30, 1994.49,   0.00, 0.00, 90.00);
	CreateDynamicObject(2700, 823.37, -1385.29, 1994.49,   0.00, 0.00, 0.00);
	CreateDynamicObject(2700, 845.91, -1388.49, 1994.49,   0.00, 0.00, 180.00);
	CreateDynamicObject(19379, 810.86, -1366.17, 1991.20,   0.00, 90.00, 0.00);
	CreateDynamicObject(18981, 803.82, -1368.76, 2003.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(18981, 803.09, -1363.27, 2003.16,   0.00, 0.00, 90.00);
	CreateDynamicObject(18981, 811.63, -1370.63, 2003.16,   0.00, 0.00, 0.00);
	CreateDynamicObject(3989, 849.94, -1352.42, 2009.26,   0.00, 180.00, 0.00);
	CreateDynamicObject(1569, 853.29, -1373.57, 1992.07,   0.00, 0.00, 90.00);
	CreateDynamicObject(1569, 853.29, -1370.58, 1992.07,   0.00, 0.00, 270.00);
	CreateDynamicObject(18981, 858.89, -1379.24, 2020.84,   0.00, 0.00, 89.38);
	CreateDynamicObject(11313, 861.53, -1378.76, 2010.94,   0.00, 0.00, 90.00);
    
    // CNN Interior
    CreateDynamicObject(6490, 717.48, -1357.30, 3998.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 652.77, -1358.40, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 652.77, -1368.03, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 652.77, -1348.78, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 663.26, -1348.80, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 663.23, -1358.43, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 663.22, -1368.01, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(5848, 637.88, -1356.93, 4007.68,   0.00, 0.00, 261.47);
	CreateDynamicObject(5848, 653.90, -1376.67, 4007.68,   0.00, 0.00, 351.00);
	CreateDynamicObject(5848, 672.50, -1356.97, 4007.68,   0.00, 0.00, 441.00);
	CreateDynamicObject(5848, 659.84, -1337.10, 4007.68,   0.00, 0.00, 531.00);
	CreateDynamicObject(19379, 659.51, -1354.88, 4005.01,   0.00, 90.00, 0.00);
	CreateDynamicObject(19369, 650.99, -1363.96, 4006.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 652.65, -1365.49, 4003.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(19369, 654.16, -1363.96, 4003.33,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 652.54, -1362.43, 4003.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(14407, 648.88, -1362.78, 4000.12,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 649.08, -1369.53, 4003.22,   0.00, 90.00, 0.00);
	CreateDynamicObject(14407, 651.65, -1367.40, 4001.88,   0.00, 0.00, 90.00);
	CreateDynamicObject(19415, 654.28, -1349.65, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 654.27, -1346.44, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 654.27, -1352.86, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 654.29, -1358.47, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19397, 654.27, -1356.07, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19397, 654.27, -1360.95, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, 654.28, -1367.28, 4003.33,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 650.99, -1363.96, 4003.33,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 654.16, -1363.96, 4006.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 652.54, -1362.43, 4006.83,   0.00, 0.00, 90.00);
	CreateDynamicObject(19369, 652.65, -1365.49, 4006.83,   0.00, 0.00, 90.00);
	CreateDynamicObject(14407, 664.39, -1348.11, 4001.91,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 665.05, -1343.48, 4003.76,   0.00, 90.00, 0.00);
	CreateDynamicObject(14407, 661.81, -1350.14, 4000.66,   0.00, 0.00, 180.00);
	CreateDynamicObject(19369, 662.36, -1349.93, 4003.34,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, 659.88, -1346.75, 4003.34,   0.00, 0.00, 0.00);
	CreateDynamicObject(19369, 663.88, -1351.43, 4003.34,   0.00, 0.00, 90.00);
	CreateDynamicObject(19369, 655.90, -1351.49, 4003.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19397, 658.35, -1351.49, 4003.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19378, 659.52, -1344.88, 4001.66,   0.00, 90.00, 0.00);
	CreateDynamicObject(367, 655.97, -1349.62, 4002.93,   0.00, 0.00, 79.73);
	CreateDynamicObject(2423, 651.94, -1354.37, 4001.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(2424, 651.88, -1355.39, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.87, -1356.29, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.87, -1357.20, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.87, -1358.10, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.87, -1359.01, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.86, -1359.92, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.85, -1360.84, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.85, -1361.74, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 651.85, -1362.65, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2424, 652.85, -1354.38, 4001.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(2424, 653.75, -1354.36, 4001.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 653.42, -1356.65, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 653.39, -1358.82, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 653.36, -1361.03, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(2165, 651.94, -1356.82, 4001.81,   0.00, 0.00, 90.00);
	CreateDynamicObject(2424, 651.87, -1358.10, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(19461, 652.27, -1359.41, 4000.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 651.94, -1358.94, 4001.81,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 651.93, -1361.45, 4001.81,   0.00, 0.00, 90.00);
	CreateDynamicObject(14391, 657.80, -1367.10, 4002.53,   0.00, 0.00, 2700.00);
	CreateDynamicObject(5848, 670.13, -1370.92, 4002.66,   0.00, 0.00, 441.00);
	CreateDynamicObject(19397, 656.61, -1361.78, 4003.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19415, 659.81, -1361.78, 4003.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19369, 662.70, -1361.78, 4003.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(19397, 658.73, -1363.33, 4003.32,   0.00, 0.00, 0.00);
	CreateDynamicObject(19461, 658.75, -1368.87, 4001.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(19366, 660.66, -1360.14, 4001.68,   0.00, 90.00, 0.00);
	CreateDynamicObject(19366, 660.66, -1356.94, 4001.68,   0.00, 90.00, 0.00);
	CreateDynamicObject(1714, 655.33, -1365.32, 4001.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 655.27, -1367.38, 4001.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(19370, 656.00, -1348.48, 4005.01,   0.00, 90.00, 0.00);
	CreateDynamicObject(19370, 656.00, -1345.26, 4005.01,   0.00, 90.00, 0.00);
	CreateDynamicObject(19370, 658.18, -1348.46, 4004.99,   0.00, 90.00, 0.00);
	CreateDynamicObject(19370, 658.04, -1345.26, 4004.99,   0.00, 90.00, 0.00);
	CreateDynamicObject(3850, 654.20, -1346.60, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 654.20, -1350.03, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 654.19, -1353.45, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 654.21, -1356.88, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 654.22, -1360.30, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 654.22, -1363.72, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 654.17, -1363.86, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 658.93, -1370.33, 4005.02,   0.00, 90.00, 0.00);
	CreateDynamicObject(3850, 659.68, -1348.35, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(3850, 659.67, -1344.94, 4005.54,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 659.54, -1364.45, 4005.00,   0.00, 90.00, 0.00);
	CreateDynamicObject(2198, 656.08, -1360.18, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2198, 656.10, -1358.28, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2198, 656.11, -1356.38, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2198, 656.11, -1354.52, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2165, 658.02, -1347.13, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 658.11, -1349.61, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 655.71, -1349.61, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 655.76, -1347.22, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2198, 656.10, -1352.63, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2204, 664.70, -1352.41, 4005.10,   0.00, 0.00, 270.00);
	CreateDynamicObject(2198, 662.42, -1353.39, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2198, 661.42, -1352.36, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2198, 661.42, -1354.24, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2198, 662.44, -1355.26, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 662.12, -1358.63, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 662.04, -1361.38, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 662.01, -1364.22, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 662.03, -1366.86, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 659.87, -1361.43, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 659.87, -1358.58, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 659.87, -1364.28, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 659.87, -1366.96, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2165, 656.45, -1364.24, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2204, 664.57, -1360.38, 4005.10,   0.00, 0.00, 270.00);
	CreateDynamicObject(2204, 664.57, -1363.33, 4005.10,   0.00, 0.00, 270.00);
	CreateDynamicObject(2356, 654.94, -1364.78, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2356, 654.73, -1361.33, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2356, 654.55, -1356.99, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2356, 654.75, -1352.57, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2356, 657.12, -1349.32, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 657.14, -1346.47, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 659.41, -1349.25, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 663.81, -1352.78, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 663.87, -1354.58, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 660.01, -1352.70, 4005.09,   0.00, 0.00, 270.00);
	CreateDynamicObject(2356, 663.58, -1357.76, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 663.46, -1360.77, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 663.46, -1360.77, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 663.53, -1366.22, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 661.27, -1363.59, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(2356, 661.31, -1358.25, 4005.09,   0.00, 0.00, 90.00);
	CreateDynamicObject(18762, 650.23, -1349.47, 4003.72,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 648.42, -1345.38, 4001.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 646.17, -1351.89, 4001.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 646.16, -1348.18, 4001.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(3989, 655.93, -1349.60, 4013.27,   0.00, 180.00, 0.00);
	CreateDynamicObject(14407, 644.94, -1362.78, 4000.12,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 642.29, -1357.50, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 642.27, -1347.90, 4001.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(18762, 650.23, -1349.47, 4007.88,   0.00, 0.00, 0.00);
	CreateDynamicObject(3857, 654.21, -1348.87, 4001.80,   0.00, 0.00, 135.00);
	CreateDynamicObject(3857, 658.77, -1367.84, 4002.03,   0.00, 0.00, 135.00);
	CreateDynamicObject(4005, 658.66, -1380.69, 3990.74,   0.00, 270.00, 0.00);
	CreateDynamicObject(4005, 658.66, -1369.02, 3990.74,   0.00, 270.00, 1800.00);
	CreateDynamicObject(4005, 658.69, -1392.34, 3990.74,   0.00, 270.00, 0.00);
	CreateDynamicObject(3857, 648.45, -1348.43, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 648.44, -1355.88, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 648.55, -1363.33, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 654.27, -1348.44, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 660.09, -1348.43, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 654.24, -1355.88, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 660.05, -1355.89, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 659.41, -1370.77, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 654.26, -1363.34, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 660.08, -1363.31, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 653.61, -1370.80, 4001.59,   45.00, -90.00, 180.00);
	CreateDynamicObject(3857, 661.20, -1361.71, 4002.03,   0.00, 0.00, 45.00);
	CreateDynamicObject(19442, 655.03, -1361.77, 4003.32,   0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 654.28, -1356.83, 4001.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 654.28, -1361.68, 4001.58,   0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 655.81, -1361.78, 4001.58,   0.00, 0.00, 0.00);
	CreateDynamicObject(1502, 658.70, -1362.54, 4001.58,   0.00, 0.00, 270.00);
	CreateDynamicObject(1502, 659.10, -1351.49, 4001.58,   0.00, 0.00, 180.00);
	CreateDynamicObject(16662, 657.63, -1345.03, 4011.12,   63.00, 90.00, 270.00);
	CreateDynamicObject(1886, 655.68, -1349.16, 4004.93,   0.00, 0.00, 156.32);
	CreateDynamicObject(1886, 657.82, -1349.19, 4004.93,   0.00, 0.00, 180.00);
	CreateDynamicObject(2491, 656.15, -1349.18, 4001.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(2491, 657.35, -1349.20, 4001.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1886, 657.09, -1349.44, 4002.49,   0.00, 180.00, 180.00);
	CreateDynamicObject(2747, 657.19, -1347.09, 4002.14,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 657.06, -1345.61, 4001.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 658.93, -1346.67, 4001.70,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 655.29, -1346.76, 4001.70,   0.00, 0.00, 90.00);
	CreateDynamicObject(2747, 660.74, -1358.00, 4002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2747, 660.73, -1359.58, 4002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 662.08, -1357.62, 4001.70,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 662.01, -1359.94, 4001.70,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 662.11, -1358.85, 4001.70,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 660.99, -1356.44, 4001.70,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 660.99, -1361.14, 4001.70,   0.00, 0.00, 180.00);
	CreateDynamicObject(1886, 658.23, -1356.70, 4004.93,   0.00, 0.00, 90.00);
	CreateDynamicObject(1886, 658.01, -1358.65, 4004.93,   0.00, 0.00, 90.00);
	CreateDynamicObject(1886, 660.49, -1354.88, 4004.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 654.93, -1354.69, 4001.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 654.87, -1359.56, 4001.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(1536, 645.68, -1358.05, 4001.59,   0.00, 0.00, 90.00);
	CreateDynamicObject(1536, 645.63, -1355.02, 4001.59,   0.00, 0.00, 270.00);
	CreateDynamicObject(1536, 662.48, -1351.86, 4001.59,   0.00, 0.00, 270.00);
	CreateDynamicObject(1536, 662.50, -1354.90, 4001.59,   0.00, 0.00, 90.00);
    
    //Interior Grotti, por Raul Lara
    CreateDynamicObject(1557, 540.88397, -1294.31531, 16.19410,   0.00000, 0.00000, 0.00000);//Puertas
	CreateDynamicObject(1557, 543.88397, -1294.31531, 16.19410,   0.00000, 0.00000, 180.00000);//Puertas
	CreateDynamicObject(6099, 542.23, -1279.21, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(6099, 542.19, -1331.81, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(6099, 501.03, -1305.10, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(6099, 583.06, -1300.78, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 519.22, -1304.66, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 529.68, -1314.07, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 529.68, -1304.45, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 540.13, -1304.47, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 540.15, -1314.09, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 550.63, -1314.14, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 550.62, -1304.55, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 561.11, -1314.18, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 561.08, -1304.57, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 571.57, -1314.10, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 571.55, -1304.47, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 519.38, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateObject(19379, 519.26, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 529.75, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 530.24, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateObject(19379, 540.23, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 550.70, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 561.16, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 571.63, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 541.11, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 551.92, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 562.77, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 573.66, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(6337, 550.05, -1293.74, 1998.88,   0.00, 0.00, 180.00);
	CreateDynamicObject(6337, 531.86, -1255.26, 1993.25,   0.00, 0.00, 50.00);
	CreateDynamicObject(6337, 563.87, -1255.14, 1993.25,   0.00, 0.00, 50.00);
	CreateDynamicObject(2885, 524.14, -1315.26, 2001.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(14407, 524.60, -1311.36, 1995.73,   0.00, 0.00, 270.00);
	CreateDynamicObject(19379, 513.37, -1316.32, 1998.88,   0.00, 90.00, 0.00);
	CreateDynamicObject(14407, 520.27, -1313.27, 1998.36,   0.00, 0.00, 90.00);
	CreateDynamicObject(2885, 524.06, -1314.48, 1998.69,   0.00, 0.00, 180.00);
	CreateDynamicObject(19379, 527.49, -1315.49, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 524.06, -1315.25, 2001.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(2885, 516.58, -1311.42, 2000.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 519.22, -1314.23, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 529.41, -1315.45, 1996.07,   0.00, 90.00, 270.00);
	CreateDynamicObject(2885, 529.55, -1308.85, 1996.07,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 522.86, -1308.85, 1996.07,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 516.19, -1308.85, 1996.07,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 527.46, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 517.02, -1306.88, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 516.60, -1311.53, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(14407, 520.67, -1317.34, 1995.60,   0.00, 0.00, 270.00);
	CreateDynamicObject(19379, 537.92, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.39, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.87, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.30, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 537.88, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.25, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.69, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.15, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(18766, 518.72, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 528.67, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 538.56, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 548.38, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 558.09, -1304.49, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 567.95, -1304.49, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 527.23, -1317.26, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(19379, 527.49, -1315.49, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 517.02, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 527.46, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 537.92, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 537.88, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.25, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.39, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.87, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.69, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.15, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.30, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(970, 516.10, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 520.23, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 524.36, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 528.49, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 532.63, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 536.75, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 540.91, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 545.06, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 549.21, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 553.37, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 557.54, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 561.71, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 565.84, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 570.00, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	//CreateDynamicObject(1703, 531.31, -1313.69, 90.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 530.12, -1315.21, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 530.12, -1310.92, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 529.10, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 525.75, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 522.27, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 518.84, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 529.38, -1315.37, 1996.07,   0.00, 90.00, 270.00);
	CreateDynamicObject(18070, 563.49, -1312.50, 1996.07,   0.00, 0.00, 270.00);
	CreateDynamicObject(2008, 561.80, -1311.69, 1995.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(2008, 561.77, -1314.78, 1995.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(2162, 563.21, -1315.13, 1995.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(2162, 564.46, -1315.22, 1995.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(2607, 564.61, -1309.69, 1996.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(2607, 563.80, -1309.47, 1996.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 562.76, -1309.61, 1996.58,   0.00, 0.00, 14.49);
	CreateDynamicObject(2816, 561.71, -1309.67, 1996.58,   0.00, 0.00, 325.12);
	CreateDynamicObject(18608, 558.71, -1304.45, 2009.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(18608, 541.78, -1304.77, 2009.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(18608, 524.44, -1305.56, 2009.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 565.25, -1305.67, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 566.25, -1307.63, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 566.66, -1305.27, 2001.52,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 566.63, -1306.69, 2001.52,   0.00, 0.00, 300.27);
	CreateDynamicObject(2165, 565.81, -1311.25, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 557.86, -1311.39, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 565.94, -1314.41, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 565.81, -1311.25, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 558.01, -1314.59, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2007, 568.57, -1318.32, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 567.57, -1318.31, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 565.35, -1318.26, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 564.37, -1318.26, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 563.38, -1318.25, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 562.38, -1318.24, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2186, 561.22, -1318.32, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2186, 559.12, -1318.37, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2357, 559.24, -1306.44, 2001.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(2357, 554.98, -1306.45, 2001.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 549.74, -1311.52, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 549.75, -1314.91, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 545.65, -1313.27, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2186, 548.27, -1318.33, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2186, 545.87, -1318.30, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2166, 539.44, -1312.57, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 541.37, -1311.58, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 540.03, -1314.97, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 566.20, -1312.61, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 566.31, -1315.72, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 558.57, -1312.58, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 558.68, -1315.99, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 550.50, -1315.95, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 550.24, -1312.68, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 546.24, -1314.96, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 541.01, -1316.16, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 541.98, -1312.66, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 540.67, -1312.81, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(2357, 550.74, -1306.45, 2001.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 540.94, -1309.99, 1997.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 552.96, -1310.01, 1997.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 552.96, -1310.01, 1999.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 540.94, -1309.99, 1998.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 541.75, -1307.95, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 539.08, -1308.71, 1995.55,   0.00, 0.00, 270.00);
	CreateDynamicObject(1703, 542.44, -1310.71, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 539.74, -1311.47, 1995.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 554.82, -1310.84, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 554.10, -1308.14, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 551.32, -1308.83, 1995.55,   0.00, 0.00, 270.00);
	CreateDynamicObject(1703, 552.04, -1311.62, 1995.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 554.93, -1318.27, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 551.76, -1318.27, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 541.08, -1318.28, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 537.97, -1318.30, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1569, 543.87, -1318.85, 1995.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(1569, 546.87, -1318.85, 1995.57,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 550.15, -1308.24, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 552.00, -1308.23, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 553.69, -1308.25, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 555.48, -1308.17, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 557.91, -1308.06, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 560.04, -1307.98, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 562.25, -1306.55, 2001.52,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 560.16, -1304.81, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 557.88, -1304.79, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 555.78, -1304.80, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 553.82, -1304.79, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 551.27, -1304.85, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 549.42, -1304.85, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 547.50, -1306.48, 2001.52,   0.00, 0.00, 90.00);
	CreateDynamicObject(2173, 561.51, -1313.08, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 561.75, -1314.09, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(2166, 541.35, -1308.15, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2173, 540.35, -1306.20, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 541.69, -1306.08, 2001.52,   0.00, 0.00, 255.79);
	CreateDynamicObject(2165, 533.75, -1311.96, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 533.69, -1315.38, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 528.61, -1311.82, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 528.37, -1315.20, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 534.23, -1313.32, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 534.18, -1316.67, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 529.13, -1313.04, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 528.90, -1316.39, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1811, 529.30, -1310.27, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 533.73, -1310.64, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 534.96, -1310.54, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 539.85, -1310.12, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 541.81, -1310.15, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 545.88, -1311.83, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 549.79, -1310.23, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 550.99, -1310.07, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 558.03, -1310.12, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 561.59, -1311.68, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 566.02, -1310.03, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 530.72, -1307.81, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 541.35, -1308.15, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 533.15, -1304.59, 2001.53,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 530.97, -1307.04, 2001.52,   0.00, 0.00, 264.88);
	CreateDynamicObject(1714, 532.84, -1305.48, 2001.52,   0.00, 0.00, 101.01);
	CreateDynamicObject(2030, 521.73, -1308.85, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(2030, 517.38, -1304.87, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(2030, 517.04, -1309.86, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(2030, 524.07, -1305.23, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(1704, 520.54, -1307.18, 2001.54,   0.00, 0.00, 19.88);
	CreateDynamicObject(1704, 523.84, -1308.65, 2001.54,   0.00, 0.00, 270.00);
	CreateDynamicObject(1704, 525.85, -1304.41, 2001.54,   0.00, 0.00, 283.77);
	CreateDynamicObject(1704, 525.27, -1307.08, 2001.54,   0.00, 0.00, 201.56);
	CreateDynamicObject(1704, 516.00, -1303.35, 2001.54,   0.00, 0.00, 19.88);
	CreateDynamicObject(1704, 519.04, -1304.78, 2001.54,   0.00, 0.00, 263.42);
	CreateDynamicObject(1704, 518.81, -1309.87, 2001.54,   0.00, 0.00, 263.42);
	CreateDynamicObject(1704, 515.34, -1308.56, 2001.54,   0.00, 0.00, 19.88);
	CreateDynamicObject(970, 520.04, -1311.67, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 515.88, -1311.67, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 540.19, -1305.55, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(2816, 549.25, -1306.41, 2002.39,   0.00, 0.00, 90.00);
	CreateDynamicObject(2816, 552.51, -1306.33, 2002.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 555.49, -1306.76, 2002.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 559.07, -1306.31, 2002.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 524.19, -1305.43, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(2816, 521.68, -1308.83, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(1704, 522.51, -1304.43, 2001.54,   0.00, 0.00, 51.35);
	CreateDynamicObject(2816, 517.54, -1304.75, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(3989, 535.92, -1314.14, 2013.52,   180.00, 0.00, 90.0);
	CreateObject(19379, 565.19849, -1313.44434, 1995.38269,   0.00000, 90.00000, 0.00000);
    new GR_IN = CreateDynamicObject(8171, 558.45288, -1301.84851, 1994.75122,   0.00000, 90.00000, 90.00000);
    SetDynamicObjectMaterial(GR_IN, 0, 0, "null", "null");
    SetDynamicObjectMaterial(GR_IN, 1, 0, "null", "null");

	
    // Interior Hotel
    CreateDynamicObject(5709,1476.56000000,-1551.35000000,2000.00000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(5709,1476.52000000,-1567.51000000,2000.00000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(5709,1465.82000000,-1597.25000000,2000.00000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(5709,1453.07000000,-1531.97000000,2000.00000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1442.34000000,-1526.64000000,2000.00000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1417.03000000,-1542.09000000,2000.12000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(18755,1437.42000000,-1542.73000000,2012.27000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1435.12000000,-1522.43000000,2000.00000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1417.06000000,-1542.12000000,2000.16000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(5709,1468.56000000,-1577.75000000,2000.00000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(5709,1415.48000000,-1598.84000000,2000.00000000,0.00000000,0.00000000,219.14000000); //
	CreateDynamicObject(5709,1436.94000000,-1600.58000000,2000.00000000,0.00000000,0.00000000,265.75000000); //
	CreateDynamicObject(5709,1453.16000000,-1601.82000000,2000.00000000,0.00000000,0.00000000,265.75000000); //
	CreateDynamicObject(19379,1426.13000000,-1549.59000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1436.63000000,-1549.65000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1447.11000000,-1549.64000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1457.62000000,-1549.63000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1453.14000000,-1559.24000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1453.12000000,-1568.85000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1453.11000000,-1578.46000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1442.65000000,-1559.20000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1442.64000000,-1568.84000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1442.63000000,-1578.24000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1432.15000000,-1578.48000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1421.66000000,-1578.47000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1432.15000000,-1568.86000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1421.68000000,-1568.87000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1432.17000000,-1559.22000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1421.69000000,-1559.22000000,1991.09000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1556.48000000,1991.78000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1570.81000000,1991.78000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1536,1450.35000000,-1565.08000000,1991.16000000,0.00000000,0.00000000,219.38000000); //
	CreateDynamicObject(1536,1450.42000000,-1562.18000000,1991.22000000,0.00000000,0.00000000,137.16000000); //
	CreateDynamicObject(3851,1450.36000000,-1569.36000000,1995.77000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1558.06000000,1995.78000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.38000000,-1545.19000000,1991.78000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.39000000,-1546.78000000,1995.74000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1569.36000000,1999.76000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1558.06000000,1999.77000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.39000000,-1546.78000000,1999.76000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1569.36000000,2003.75000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.36000000,-1558.06000000,2003.75000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1450.39000000,-1546.78000000,2003.75000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(5709,1472.62000000,-1577.77000000,2000.00000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(5709,1409.98000000,-1542.12000000,2000.12000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(3851,1444.72000000,-1575.19000000,1991.78000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1536,1439.05000000,-1575.22000000,1991.16000000,0.00000000,0.00000000,55.02000000); //
	CreateDynamicObject(1536,1436.09000000,-1575.21000000,1991.16000000,0.00000000,0.00000000,118.43000000); //
	CreateDynamicObject(3851,1430.46000000,-1575.19000000,1991.78000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1444.72000000,-1575.19000000,1995.78000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1433.41000000,-1575.19000000,1995.78000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1419.20000000,-1575.19000000,1991.78000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1422.10000000,-1575.19000000,1995.78000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1444.72000000,-1575.19000000,1999.77000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1433.41000000,-1575.19000000,1999.77000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1422.10000000,-1575.19000000,1999.77000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1444.72000000,-1575.19000000,2003.75000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1433.41000000,-1575.19000000,2003.75000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(3851,1422.10000000,-1575.19000000,2003.75000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1402.81000000,-1567.88000000,2000.10000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(5709,1401.74000000,-1577.40000000,2006.06000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(5709,1418.22000000,-1591.97000000,2000.00000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(14407,1414.59000000,-1572.23000000,1987.96000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1418.19000000,-1591.96000000,1986.24000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(5709,1405.37000000,-1552.37000000,1986.24000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(5709,1399.98000000,-1552.36000000,1993.32000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1404.21000000,-1569.48000000,1985.79000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(5709,1402.99000000,-1553.38000000,2000.12000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(19379,1404.21000000,-1569.48000000,1991.23000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(5709,1391.28000000,-1571.34000000,2000.11000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(19379,1393.69000000,-1568.30000000,1991.23000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1393.69000000,-1577.93000000,1991.23000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1393.77000000,-1574.58000000,1985.77000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1392.37000000,-1568.20000000,1985.79000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(5709,1422.84000000,-1579.25000000,1986.18000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1402.33000000,-1578.83000000,1985.79000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(5709,1402.42000000,-1597.15000000,1986.18000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(5709,1370.45000000,-1577.20000000,1987.37000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(19379,1389.96000000,-1551.22000000,1991.23000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19447,1431.66000000,-1549.73000000,1972.62000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19447,1431.66000000,-1559.38000000,1972.62000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18981,1446.25000000,-1557.37000000,2004.19000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1446.01000000,-1577.05000000,2004.19000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1432.14000000,-1555.48000000,1979.61000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18981,1421.24000000,-1577.73000000,2004.19000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1429.28000000,-1557.30000000,2004.19000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1420.15000000,-1567.52000000,1979.61000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(18981,1421.54000000,-1555.47000000,1979.61000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18981,1420.03000000,-1545.25000000,1979.61000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1434.76000000,-1556.13000000,1986.15000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1434.55000000,-1556.13000000,1986.33000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1434.36000000,-1556.13000000,1986.43000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1434.20000000,-1556.13000000,1986.53000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1434.04000000,-1556.13000000,1986.67000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1433.85000000,-1556.13000000,1986.79000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1433.67000000,-1556.13000000,1986.95000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1433.50000000,-1556.13000000,1987.03000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1428.21000000,-1556.13000000,1992.10000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1427.80000000,-1551.39000000,1986.86000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1423.03000000,-1556.12000000,1986.86000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1427.77000000,-1560.83000000,1986.86000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1404.14000000,-1577.41000000,1991.23000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(3077,1452.01000000,-1568.95000000,1991.13000000,0.00000000,0.00000000,298.79000000); //
	CreateDynamicObject(1731,1441.94000000,-1545.00000000,1994.89000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1731,1443.84000000,-1545.00000000,1994.89000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1731,1445.60000000,-1545.09000000,1994.89000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1731,1447.34000000,-1545.00000000,1994.89000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(630,1441.52000000,-1545.42000000,1992.91000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1443.33000000,-1545.59000000,1992.91000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1445.62000000,-1545.54000000,1992.92000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1447.82000000,-1545.60000000,1992.91000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1437.24000000,-1544.82000000,1999.71000000,90.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(3851,1441.23000000,-1544.82000000,1999.85000000,90.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1445.41000000,-1545.33000000,1991.19000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1445.79000000,-1545.04000000,1991.49000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1446.01000000,-1544.79000000,1991.67000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1445.57000000,-1545.20000000,1991.33000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1445.41000000,-1545.33000000,1991.19000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(1703,1445.49000000,-1557.10000000,1991.12000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1703,1441.95000000,-1555.07000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1442.71000000,-1557.88000000,1991.12000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1443.85000000,-1556.15000000,1993.18000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1703,1444.71000000,-1554.41000000,1991.12000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(18762,1443.85000000,-1556.15000000,1998.12000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1443.85000000,-1556.15000000,2001.68000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1443.58000000,-1570.37000000,1993.18000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1443.58000000,-1570.37000000,1997.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1443.58000000,-1570.37000000,2001.93000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1703,1442.37000000,-1572.13000000,1991.12000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1703,1441.65000000,-1569.32000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1445.11000000,-1571.40000000,1991.12000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1703,1444.39000000,-1568.62000000,1991.12000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1704,1442.57000000,-1546.38000000,1991.76000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1444.39000000,-1547.59000000,1991.76000000,0.00000000,0.00000000,260.28000000); //
	CreateDynamicObject(1704,1441.63000000,-1548.79000000,1991.76000000,0.00000000,0.00000000,105.56000000); //
	CreateDynamicObject(1704,1446.09000000,-1548.84000000,1991.76000000,0.00000000,0.00000000,110.90000000); //
	CreateDynamicObject(1704,1447.02000000,-1546.86000000,1991.76000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1448.85000000,-1548.05000000,1991.76000000,0.00000000,0.00000000,260.28000000); //
	CreateDynamicObject(2030,1447.43000000,-1548.25000000,1992.13000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2030,1442.85000000,-1548.14000000,1992.13000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2002,1449.78000000,-1558.60000000,1991.18000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2002,1449.82000000,-1568.28000000,1991.18000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1449.85000000,-1555.13000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1441.95000000,-1555.07000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1449.83000000,-1551.82000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1449.71000000,-1569.05000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1449.71000000,-1572.19000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1457.71000000,-1556.84000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1457.75000000,-1567.48000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1457.74000000,-1570.85000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1456.55000000,-1574.31000000,1991.12000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2030,1455.37000000,-1571.93000000,1991.55000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2030,1455.30000000,-1569.31000000,1991.55000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1703,1457.70000000,-1553.42000000,1991.12000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1704,1454.93000000,-1552.45000000,1991.05000000,0.00000000,0.00000000,290.95000000); //
	CreateDynamicObject(1704,1452.25000000,-1552.32000000,1991.05000000,0.00000000,0.00000000,19.56000000); //
	CreateDynamicObject(1704,1452.56000000,-1554.63000000,1991.05000000,0.00000000,0.00000000,122.91000000); //
	CreateDynamicObject(2030,1453.66000000,-1553.92000000,1991.55000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1457.75000000,-1556.08000000,1992.20000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1457.77000000,-1570.19000000,1992.20000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1457.64000000,-1574.20000000,1992.20000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1453.89000000,-1574.48000000,1992.20000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1457.74000000,-1552.58000000,1992.20000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1420.00000000,-1571.91000000,1999.77000000,90.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(14780,1392.41000000,-1575.51000000,1986.70000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1985,1400.88000000,-1575.64000000,1989.11000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19087,1400.88000000,-1575.67000000,1991.49000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19087,1402.86000000,-1575.27000000,1991.49000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1985,1402.87000000,-1575.25000000,1989.09000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2627,1390.88000000,-1570.90000000,1985.87000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2627,1390.86000000,-1569.50000000,1985.87000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2627,1390.83000000,-1568.08000000,1985.87000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2630,1395.70000000,-1565.12000000,1985.88000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2630,1395.68000000,-1566.92000000,1985.88000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2630,1395.68000000,-1568.88000000,1985.88000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(18762,1440.16000000,-1544.50000000,2007.80000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1440.17000000,-1540.35000000,2007.80000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1434.72000000,-1540.30000000,2007.80000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1434.79000000,-1544.51000000,2007.80000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1437.10000000,-1549.59000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1447.64000000,-1549.65000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1426.64000000,-1549.63000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1429.93000000,-1540.00000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1430.05000000,-1530.38000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1440.43000000,-1535.83000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1444.94000000,-1541.27000000,2005.74000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1440.52000000,-1526.30000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1424.90000000,-1540.00000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1420.18000000,-1544.72000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1421.33000000,-1549.58000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1426.11000000,-1554.31000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1435.59000000,-1554.31000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1445.15000000,-1554.32000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1450.05000000,-1549.58000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1450.07000000,-1540.68000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1437.19000000,-1530.54000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1429.74000000,-1535.25000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1434.48000000,-1530.47000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1441.97000000,-1535.25000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1446.76000000,-1530.54000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1442.00000000,-1525.80000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1429.74000000,-1525.74000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1437.06000000,-1517.75000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1430.10000000,-1520.77000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1440.61000000,-1516.70000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1441.83000000,-1522.52000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1451.00000000,-1526.26000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1450.69000000,-1532.35000000,2005.74000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1450.08000000,-1531.10000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1450.09000000,-1521.53000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1451.43000000,-1522.52000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1429.72000000,-1522.75000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1434.47000000,-1517.90000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1438.06000000,-1513.05000000,2007.60000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1430.11000000,-1511.13000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1425.17000000,-1524.11000000,2007.60000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1437.18000000,-1539.98000000,2006.38000000,90.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(3851,1438.19000000,-1540.01000000,2006.38000000,90.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(3851,1440.32000000,-1542.37000000,2006.34000000,90.00000000,90.00000000,90.00000000); //
	CreateDynamicObject(3851,1434.99000000,-1542.46000000,2006.38000000,90.00000000,90.00000000,90.00000000); //
	CreateDynamicObject(18981,1452.10000000,-1545.38000000,2009.82000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1437.80000000,-1525.07000000,2009.74000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1422.78000000,-1547.57000000,2009.82000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(1703,1441.09000000,-1543.45000000,2005.66000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1703,1434.18000000,-1541.32000000,2005.66000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1703,1438.38000000,-1539.49000000,2005.66000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2030,1444.98000000,-1546.75000000,2006.19000000,-0.06000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1444.00000000,-1548.40000000,2005.76000000,0.00000000,0.00000000,110.90000000); //
	CreateDynamicObject(630,1441.23000000,-1544.55000000,2006.81000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1446.47000000,-1545.86000000,2005.76000000,0.00000000,0.00000000,281.83000000); //
	CreateDynamicObject(1704,1443.85000000,-1545.67000000,2005.76000000,0.00000000,0.00000000,20.76000000); //
	CreateDynamicObject(630,1441.28000000,-1540.30000000,2006.79000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1440.24000000,-1539.40000000,2006.79000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1434.80000000,-1539.20000000,2006.79000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1433.84000000,-1540.30000000,2006.79000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1433.79000000,-1544.49000000,2006.79000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2030,1431.24000000,-1548.22000000,2006.19000000,-0.06000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1429.64000000,-1550.05000000,2005.76000000,0.00000000,0.00000000,110.90000000); //
	CreateDynamicObject(1704,1430.05000000,-1546.53000000,2005.76000000,0.00000000,0.00000000,20.76000000); //
	CreateDynamicObject(1704,1433.23000000,-1548.61000000,2005.76000000,0.00000000,0.00000000,246.84000000); //
	CreateDynamicObject(2030,1430.52000000,-1541.35000000,2006.19000000,-0.06000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1431.05000000,-1543.25000000,2005.76000000,0.00000000,0.00000000,174.79000000); //
	CreateDynamicObject(1704,1429.72000000,-1539.99000000,2005.76000000,0.00000000,0.00000000,20.76000000); //
	CreateDynamicObject(18981,1438.70000000,-1557.36000000,2009.82000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1418.46000000,-1549.63000000,2009.82000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1437.94000000,-1528.23000000,2009.78000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18762,1434.79000000,-1544.51000000,2012.54000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1440.14000000,-1544.50000000,2012.50000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1440.17000000,-1540.35000000,2012.27000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18762,1434.72000000,-1540.30000000,2012.05000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1440.46000000,-1535.88000000,2010.26000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1444.95000000,-1545.41000000,2010.24000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1445.84000000,-1545.51000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19379,1434.50000000,-1549.62000000,2010.26000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1429.97000000,-1540.06000000,2010.26000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1430.10000000,-1530.49000000,2010.26000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1424.07000000,-1549.63000000,2010.26000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1419.68000000,-1540.04000000,2010.26000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1444.56000000,-1550.26000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1435.08000000,-1554.42000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1439.82000000,-1554.98000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1430.27000000,-1549.67000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1427.02000000,-1549.70000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1428.65000000,-1554.44000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19384,1428.73000000,-1544.94000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1426.95000000,-1540.24000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1431.52000000,-1537.26000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1445.83000000,-1536.56000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1437.67000000,-1537.27000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1442.38000000,-1532.50000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1450.61000000,-1531.82000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1437.62000000,-1527.78000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1454.15000000,-1526.89000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(19446,1449.44000000,-1522.84000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1451.14000000,-1527.58000000,2005.76000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1449.26000000,-1527.08000000,2010.24000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1437.94000000,-1528.23000000,2009.78000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19379,1438.76000000,-1527.08000000,2010.24000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1439.96000000,-1522.84000000,2011.88000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19379,1428.28000000,-1520.92000000,2010.24000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(19446,1428.09000000,-1527.78000000,2011.76000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(19446,1435.16000000,-1523.89000000,2011.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(18981,1444.76000000,-1527.89000000,2014.05000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1440.14000000,-1557.34000000,2014.05000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18981,1422.66000000,-1543.99000000,2014.05000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(1704,1433.40000000,-1550.32000000,2010.27000000,0.00000000,0.00000000,110.90000000); //
	CreateDynamicObject(2030,1434.73000000,-1549.52000000,2010.71000000,-0.06000000,0.00000000,0.72000000); //
	CreateDynamicObject(630,1433.86000000,-1544.46000000,2011.32000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1435.29000000,-1548.05000000,2010.27000000,0.00000000,0.00000000,321.23000000); //
	CreateDynamicObject(1704,1448.65000000,-1525.87000000,2010.27000000,0.00000000,0.00000000,321.23000000); //
	CreateDynamicObject(2030,1447.40000000,-1527.30000000,2010.71000000,-0.06000000,0.00000000,0.72000000); //
	CreateDynamicObject(630,1441.26000000,-1544.28000000,2011.32000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1704,1446.07000000,-1528.05000000,2010.27000000,0.00000000,0.00000000,102.49000000); //
	CreateDynamicObject(1703,1441.12000000,-1543.46000000,2010.26000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(630,1441.29000000,-1540.48000000,2011.32000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1703,1434.15000000,-1541.36000000,2010.26000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(630,1433.92000000,-1540.36000000,2011.32000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1703,1438.20000000,-1539.39000000,2010.26000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(630,1434.95000000,-1539.42000000,2011.32000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(630,1439.74000000,-1539.38000000,2011.32000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3851,1440.26000000,-1542.37000000,2013.23000000,90.00000000,90.00000000,90.00000000); //
	CreateDynamicObject(3851,1437.18000000,-1540.01000000,2010.35000000,90.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(3851,1435.01000000,-1542.46000000,2009.97000000,90.00000000,90.00000000,90.00000000); //
	CreateDynamicObject(18981,1451.82000000,-1534.15000000,2014.05000000,0.00000000,90.00000000,2.70000000); //
	CreateDynamicObject(18981,1441.96000000,-1534.59000000,2014.97000000,0.00000000,90.00000000,0.00000000); //
	CreateDynamicObject(18755,1437.42000000,-1542.73000000,2007.77000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(16151,1445.55000000,-1581.92000000,1991.49000000,0.00000000,0.00000000,267.91000000); //
	CreateDynamicObject(2455,1438.85000000,-1580.26000000,1991.16000000,0.00000000,0.00000000,179.29000000); //
	CreateDynamicObject(2454,1439.92000000,-1580.42000000,1991.16000000,0.00000000,0.00000000,89.00000000); //
	CreateDynamicObject(2455,1437.93000000,-1580.25000000,1991.16000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2455,1437.01000000,-1580.25000000,1991.16000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2455,1436.07000000,-1580.24000000,1991.16000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2455,1435.15000000,-1580.24000000,1991.16000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2454,1434.24000000,-1580.23000000,1991.16000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2455,1434.09000000,-1581.31000000,1991.16000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2455,1434.09000000,-1582.23000000,1991.16000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2416,1439.01000000,-1582.22000000,1991.14000000,0.00000000,0.00000000,176.63000000); //
	CreateDynamicObject(2429,1436.36000000,-1582.48000000,1992.71000000,0.00000000,0.00000000,178.23000000); //
	CreateDynamicObject(2425,1433.90000000,-1581.50000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2422,1438.34000000,-1580.48000000,1992.18000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2422,1435.57000000,-1580.44000000,1992.18000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2416,1436.05000000,-1582.09000000,1991.14000000,0.00000000,0.00000000,176.63000000); //
	CreateDynamicObject(2430,1438.94000000,-1582.32000000,1994.26000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1431.50000000,-1580.01000000,1991.17000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1430.50000000,-1580.02000000,1991.17000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1429.52000000,-1580.01000000,1991.17000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1428.51000000,-1580.02000000,1991.17000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1427.51000000,-1580.02000000,1991.17000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1426.49000000,-1580.03000000,1991.17000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2439,1426.33000000,-1580.20000000,1991.15000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2439,1426.34000000,-1581.18000000,1991.15000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2439,1431.64000000,-1580.16000000,1991.15000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2665,1429.35000000,-1581.65000000,1994.34000000,0.00000000,0.00000000,175.87000000); //
	CreateDynamicObject(2453,1430.94000000,-1579.97000000,1992.58000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2422,1429.45000000,-1580.13000000,1992.20000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2422,1427.54000000,-1580.09000000,1992.20000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2638,1425.72000000,-1576.32000000,1991.83000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2638,1429.64000000,-1576.32000000,1991.83000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2639,1422.21000000,-1576.22000000,1991.68000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2637,1423.78000000,-1576.32000000,1991.58000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2637,1427.70000000,-1576.32000000,1991.58000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2637,1431.40000000,-1576.32000000,1991.58000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2639,1432.84000000,-1576.32000000,1991.68000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2639,1439.75000000,-1576.35000000,1991.68000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(2637,1441.18000000,-1576.32000000,1991.58000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2638,1443.10000000,-1576.32000000,1991.83000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2637,1444.96000000,-1576.28000000,1991.58000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2638,1446.88000000,-1576.32000000,1991.83000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2639,1449.96000000,-1576.34000000,1991.68000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2637,1448.61000000,-1576.47000000,1991.58000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1559.04000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1558.12000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1557.23000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1556.31000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1555.39000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1554.47000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1553.58000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2435,1431.57000000,-1552.65000000,1992.18000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1806,1429.92000000,-1553.68000000,1992.17000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1806,1430.16000000,-1555.22000000,1992.17000000,0.00000000,0.00000000,278.35000000); //
	CreateDynamicObject(1806,1430.17000000,-1556.42000000,1992.17000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1806,1430.13000000,-1557.82000000,1992.17000000,0.00000000,0.00000000,264.04000000); //
	CreateDynamicObject(2161,1423.91000000,-1553.75000000,1992.17000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2161,1423.91000000,-1555.08000000,1992.17000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2161,1423.92000000,-1556.41000000,1992.17000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2197,1428.07000000,-1559.20000000,1992.15000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2197,1427.38000000,-1559.20000000,1992.15000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2197,1426.69000000,-1559.20000000,1992.15000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2197,1426.03000000,-1559.20000000,1992.15000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(2198,1427.51000000,-1552.17000000,1992.15000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(2198,1425.45000000,-1552.22000000,1992.15000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1806,1427.84000000,-1553.23000000,1992.17000000,0.00000000,0.00000000,304.93000000); //
	CreateDynamicObject(1806,1425.98000000,-1553.23000000,1992.17000000,0.00000000,0.00000000,343.10000000); //
	CreateDynamicObject(2191,1424.54000000,-1557.88000000,1992.01000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2191,1424.56000000,-1559.33000000,1992.01000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(2198,1427.04000000,-1556.62000000,1992.15000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1806,1427.37000000,-1557.64000000,1992.17000000,0.00000000,0.00000000,304.93000000); //
	CreateDynamicObject(10444,1424.92000000,-1551.92000000,1991.38000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(10444,1424.92000000,-1551.92000000,1991.68000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(10444,1424.92000000,-1551.92000000,1991.28000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(10444,1424.92000000,-1551.92000000,1991.99000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3515,1427.40000000,-1548.62000000,1989.88000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(3515,1427.40000000,-1564.18000000,1989.96000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1445.79000000,-1538.80000000,2010.31000000,0.00000000,0.00000000,90.41000000); //
	CreateDynamicObject(1569,1445.77000000,-1544.70000000,2010.31000000,0.00000000,0.00000000,89.68000000); //
	CreateDynamicObject(1569,1441.91000000,-1550.22000000,2010.31000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1437.04000000,-1554.38000000,2010.31000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1431.37000000,-1554.37000000,2010.31000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1427.91000000,-1544.85000000,2010.31000000,0.00000000,0.00000000,113.17000000); //
	CreateDynamicObject(1569,1427.01000000,-1538.79000000,2010.31000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1431.22000000,-1537.29000000,2010.31000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1436.66000000,-1537.31000000,2010.31000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1441.54000000,-1537.30000000,2010.31000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1442.42000000,-1533.24000000,2010.31000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1442.43000000,-1528.61000000,2010.31000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1449.18000000,-1531.76000000,2010.31000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1454.11000000,-1530.19000000,2010.31000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1454.10000000,-1525.97000000,2010.31000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1435.20000000,-1524.39000000,2010.31000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1438.83000000,-1527.74000000,2010.31000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1439.63000000,-1522.88000000,2010.31000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1444.27000000,-1522.90000000,2010.31000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1450.37000000,-1522.89000000,2010.31000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1425.21000000,-1523.44000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1430.61000000,-1525.69000000,2005.85000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1431.86000000,-1522.79000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1436.44000000,-1513.10000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1434.51000000,-1516.11000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1434.51000000,-1520.12000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1437.02000000,-1517.51000000,2005.85000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1437.02000000,-1521.55000000,2005.85000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1442.71000000,-1525.74000000,2005.85000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1438.74000000,-1525.76000000,2005.85000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1439.98000000,-1522.57000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1444.68000000,-1522.55000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1450.05000000,-1526.25000000,2005.85000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1450.01000000,-1533.64000000,2005.85000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1446.80000000,-1528.26000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1446.79000000,-1532.32000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1441.23000000,-1535.30000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1445.18000000,-1535.29000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1429.01000000,-1535.31000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1433.10000000,-1535.28000000,2005.85000000,0.00000000,0.00000000,180.00000000); //
	CreateDynamicObject(1569,1424.94000000,-1538.15000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1424.95000000,-1543.19000000,2005.85000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(1569,1424.99000000,-1554.25000000,2005.85000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1434.66000000,-1554.24000000,2005.85000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1442.41000000,-1554.27000000,2005.85000000,0.00000000,0.00000000,0.00000000); //
	CreateDynamicObject(1569,1449.96000000,-1549.77000000,2005.85000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1569,1450.01000000,-1542.15000000,2005.85000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(18755,1437.42000000,-1542.73000000,1993.05000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1536,1458.36000000,-1565.21000000,1991.16000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(1536,1458.37000000,-1562.22000000,1991.16000000,0.00000000,0.00000000,270.00000000); //
	CreateDynamicObject(5709,1390.18000000,-1545.79000000,1993.32000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(14407,1284.96000000,-1606.16000000,2247.82000000,0.00000000,0.00000000,90.00000000); //
	CreateDynamicObject(14407,1428.16000000,-1552.69000000,2013.46000000,0.00000000,0.00000000,0.00000000); //
	
	//Despacho Ayunta
	CreateDynamicObject(19379, 1517.11560, -1786.04810, 64.75790,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2184, 1481.26563, -1775.80286, 82.99261,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, 1482.36023, -1774.72131, 82.99325,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 1522.27625, -1786.06213, 64.69950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1704, 1490.18774, -1787.51489, 82.49810,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(957, 1487.43982, -1773.97864, 86.86060,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1490.43982, -1787.47864, 86.86060,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(0, 1478.43982, -1779.97864, 86.86060,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, 1517.11560, -1786.04810, 68.65010,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1506.61365, -1786.04810, 64.75790,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1506.61365, -1786.04810, 68.65011,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19375, 1522.27502, -1794.43689, 64.69950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 1501.27625, -1786.06213, 64.69950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19375, 1501.27820, -1794.57495, 64.69950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, 1506.61365, -1794.26611, 68.64810,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1517.11755, -1794.26611, 68.64810,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19375, 1517.43408, -1797.35730, 64.69950,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1507.80005, -1797.35730, 64.69950,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19375, 1498.19397, -1797.35730, 64.69950,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9339, 1508.68506, -1781.10925, 55.63970,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject(19325, 1504.68103, -1781.24719, 66.61119,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9339, 1508.68506, -1781.10925, 55.63970,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(9339, 1516.68506, -1781.10925, 55.63970,   90.00000, 0.00000, -90.00000);
	CreateDynamicObject(9339, 1516.68506, -1781.10925, 55.63970,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1519.04004, -1781.24719, 66.61120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1512.39807, -1781.24719, 66.61120,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19379, 1517.11560, -1786.54810, 64.59376,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1517.11560, -1787.04810, 64.42968,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1517.11560, -1794.54810, 64.26560,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1506.61365, -1786.54810, 64.59380,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1506.61365, -1787.04810, 64.42970,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, 1506.61365, -1794.54810, 64.26560,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2184, 1511.48120, -1783.83069, 64.83141,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1714, 1512.45313, -1782.51819, 64.84584,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, 1514.00195, -1797.30225, 64.35850,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1557, 1511.00195, -1797.30225, 64.35850,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1704, 1503.13879, -1786.44995, 64.74550,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1704, 1504.63879, -1783.94995, 64.74550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 1504.67896, -1786.34570, 64.56499,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1704, 1506.86926, -1785.65894, 64.74550,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1704, 1505.51270, -1787.91064, 64.74550,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1670, 1505.14148, -1785.88757, 65.41124,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2370, 1518.67896, -1786.34570, 64.56500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1704, 1520.86926, -1785.65894, 64.74550,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1704, 1519.51270, -1787.91064, 64.74550,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1704, 1518.63879, -1783.94995, 64.74550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1704, 1517.13879, -1786.44995, 64.74550,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1670, 1519.14148, -1785.88757, 65.41120,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19174, 1501.39099, -1794.03882, 66.88540,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19172, 1501.39099, -1786.03882, 66.88540,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19172, 1522.14453, -1794.03882, 66.88540,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19174, 1522.14453, -1786.03882, 66.88540,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1704, 1505.51270, -1796.51135, 64.35140,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1704, 1519.51270, -1796.51135, 64.35140,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2239, 1510.84851, -1782.04956, 64.81306,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1502.00146, -1782.03674, 68.53947,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1505.00146, -1782.03674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1508.00146, -1782.03674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1511.00146, -1782.03674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1514.00146, -1782.03674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1517.00146, -1782.03674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1520.00146, -1782.03674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1502.00146, -1786.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1502.00146, -1789.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1502.00146, -1792.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1502.00146, -1795.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1508.00146, -1786.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1514.00146, -1786.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1520.00146, -1786.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1508.00146, -1789.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1508.00146, -1792.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1508.00146, -1795.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1514.00146, -1789.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1514.00146, -1792.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1514.00146, -1795.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1520.00146, -1792.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1520.00146, -1795.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(957, 1520.00146, -1789.53674, 68.53950,   0.00000, 0.00000, 0.00000);
	
	new tv = CreateDynamicObject(2267, 1508.63330, -1781.35510, 67.40113,   10.00000, 0.00000, 0.00000);
	CreateDynamicObject(2267, 1516.63330, -1781.35510, 67.40110,   10.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(tv, 1, 19172, "samppictures", "samppicture1");
	SetDynamicObjectMaterial(tv+1, 1, 19172, "samppictures", "samppicture1");

	//MALL BY SAMP
	CreateDynamicObject(19322, 1117.57996, -1490.01001, 32.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19323, 1117.57996, -1490.01001, 32.72000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1155.40002, -1434.89001, 16.49000,   0.00000, 0.00000, 0.30000);
	CreateDynamicObject(19325, 1155.37000, -1445.41003, 16.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1155.29004, -1452.38000, 16.31000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1157.35999, -1468.34998, 16.31000,   0.00000, 0.00000, 18.66000);
	CreateDynamicObject(19325, 1160.64001, -1478.37000, 16.31000,   0.00000, 0.00000, 17.76000);
	CreateDynamicObject(19325, 1159.83997, -1502.06006, 16.31000,   0.00000, 0.00000, -19.92000);
	CreateDynamicObject(19325, 1139.28003, -1523.70996, 16.31000,   0.00000, 0.00000, -69.36000);
	CreateDynamicObject(19325, 1117.06006, -1523.43005, 16.51000,   0.00000, 0.00000, -109.44000);
	CreateDynamicObject(19325, 1097.18005, -1502.43005, 16.51000,   0.00000, 0.00000, -158.58000);
	CreateDynamicObject(19325, 1096.46997, -1478.29004, 16.51000,   0.00000, 0.00000, -197.94000);
	CreateDynamicObject(19325, 1099.69995, -1468.27002, 16.51000,   0.00000, 0.00000, -197.94000);
	CreateDynamicObject(19325, 1101.81006, -1445.44995, 16.22000,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(19325, 1101.76001, -1452.46997, 16.22000,   0.00000, 0.00000, -181.62000);
	CreateDynamicObject(19325, 1101.77002, -1434.88000, 16.22000,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(19325, 1094.31006, -1444.92004, 23.47000,   0.00000, 0.00000, -180.24001);
	CreateDynamicObject(19325, 1094.37000, -1458.37000, 23.47000,   0.00000, 0.00000, -179.46001);
	CreateDynamicObject(19325, 1093.01001, -1517.43994, 23.44000,   0.00000, 0.00000, -138.72000);
	CreateDynamicObject(19325, 1101.07996, -1526.64001, 23.42000,   0.00000, 0.00000, -137.34000);
	CreateDynamicObject(19325, 1155.12000, -1526.38000, 23.46000,   0.00000, 0.00000, -42.12000);
	CreateDynamicObject(19325, 1163.08997, -1517.25000, 23.46000,   0.00000, 0.00000, -40.74000);
	CreateDynamicObject(19325, 1163.04004, -1442.06006, 23.40000,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(19325, 1163.08997, -1428.46997, 23.50000,   0.00000, 0.00000, 0.54000);
	CreateDynamicObject(19326, 1155.33997, -1446.72998, 16.38000,   0.00000, 0.00000, -89.82000);
	CreateDynamicObject(19326, 1155.25000, -1443.84998, 16.36000,   0.00000, 0.00000, -89.82000);
	CreateDynamicObject(19326, 1155.37000, -1436.31995, 16.36000,   0.00000, 0.00000, -89.82000);
	CreateDynamicObject(19326, 1155.34998, -1433.51001, 16.36000,   0.00000, 0.00000, -89.70000);
	CreateDynamicObject(19329, 1155.18005, -1440.21997, 18.70000,   0.00000, 0.00000, 89.04000);
	CreateDynamicObject(19329, 1161.58997, -1431.50000, 17.93000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19329, 1160.40002, -1448.79004, 17.96000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2543, 1168.18005, -1436.39001, 14.79000,   0.00000, 0.00000, 0.30000);
	CreateDynamicObject(2535, 1182.73999, -1448.30005, 14.70000,   0.00000, 0.00000, -90.96000);
	CreateDynamicObject(2543, 1167.09998, -1436.40002, 14.79000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject(2538, 1172.31006, -1435.31995, 14.79000,   0.00000, 0.00000, 180.34000);
	CreateDynamicObject(2539, 1171.38000, -1435.31006, 14.79000,   0.00000, 0.00000, 180.19000);
	CreateDynamicObject(2540, 1169.56006, -1435.35999, 14.79000,   0.00000, 0.00000, 180.17000);
	CreateDynamicObject(1984, 1157.37000, -1442.58997, 14.79000,   0.00000, 0.00000, -450.06000);
	CreateDynamicObject(2012, 1163.25000, -1448.31006, 14.75000,   0.00000, 0.00000, -179.16000);
	CreateDynamicObject(2012, 1169.29004, -1431.92004, 14.75000,   0.00000, 0.00000, 359.79999);
	CreateDynamicObject(1987, 1163.13000, -1436.33997, 14.79000,   0.00000, 0.00000, 361.06000);
	CreateDynamicObject(1988, 1164.13000, -1436.32996, 14.79000,   0.00000, 0.00000, 360.79999);
	CreateDynamicObject(2871, 1164.79004, -1443.95996, 14.79000,   0.00000, 0.00000, 177.73000);
	CreateDynamicObject(2871, 1164.69995, -1444.97998, 14.79000,   0.00000, 0.00000, 358.07001);
	CreateDynamicObject(2942, 1155.52002, -1464.68005, 15.43000,   0.00000, 0.00000, -71.22000);
	CreateDynamicObject(1987, 1164.12000, -1435.31995, 14.77000,   0.00000, 0.00000, 180.96001);
	CreateDynamicObject(2530, 1171.13000, -1443.79004, 14.79000,   0.00000, 0.00000, -182.16000);
	CreateDynamicObject(1991, 1173.75000, -1439.56006, 14.79000,   0.00000, 0.00000, 179.47000);
	CreateDynamicObject(1996, 1169.81995, -1439.50000, 14.79000,   0.00000, 0.00000, 179.10001);
	CreateDynamicObject(1996, 1174.23999, -1435.38000, 14.79000,   0.00000, 0.00000, 179.24001);
	CreateDynamicObject(1991, 1175.22998, -1435.39001, 14.79000,   0.00000, 0.00000, 179.57001);
	CreateDynamicObject(1995, 1182.65002, -1435.09998, 14.79000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1994, 1182.66003, -1438.06995, 14.79000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1993, 1182.66003, -1437.07996, 14.79000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2542, 1163.78003, -1443.92004, 14.76000,   0.00000, 0.00000, 178.77000);
	CreateDynamicObject(2536, 1166.88000, -1445.06995, 14.70000,   0.00000, 0.00000, -0.42000);
	CreateDynamicObject(2542, 1163.69995, -1444.93005, 14.78000,   0.00000, 0.00000, -1.74000);
	CreateDynamicObject(1984, 1157.33997, -1435.70996, 14.79000,   0.00000, 0.00000, -450.06000);
	CreateDynamicObject(2012, 1166.31006, -1448.28003, 14.75000,   0.00000, 0.00000, -180.12000);
	CreateDynamicObject(2530, 1172.14001, -1443.82996, 14.79000,   0.00000, 0.00000, -181.38000);
	CreateDynamicObject(2530, 1173.14001, -1443.84998, 14.79000,   0.00000, 0.00000, -180.96001);
	CreateDynamicObject(2530, 1174.13000, -1443.88000, 14.79000,   0.00000, 0.00000, -181.50000);
	CreateDynamicObject(1981, 1170.76001, -1439.52002, 14.79000,   0.00000, 0.00000, -181.74001);
	CreateDynamicObject(1981, 1171.76001, -1439.54004, 14.79000,   0.00000, 0.00000, -180.80000);
	CreateDynamicObject(1981, 1172.75000, -1439.55005, 14.79000,   0.00000, 0.00000, -180.84000);
	CreateDynamicObject(2535, 1182.75000, -1447.28003, 14.70000,   0.00000, 0.00000, -90.78000);
	CreateDynamicObject(2535, 1182.73999, -1446.28003, 14.70000,   0.00000, 0.00000, -90.78000);
	CreateDynamicObject(2535, 1182.73999, -1445.26001, 14.70000,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2541, 1182.75000, -1444.21997, 14.79000,   0.00000, 0.00000, -90.06000);
	CreateDynamicObject(2541, 1182.75000, -1443.19995, 14.79000,   0.00000, 0.00000, -90.06000);
	CreateDynamicObject(2541, 1182.73999, -1442.16003, 14.79000,   0.00000, 0.00000, -90.06000);
	CreateDynamicObject(2543, 1182.76001, -1441.18005, 14.79000,   0.00000, 0.00000, -90.84000);
	CreateDynamicObject(2541, 1182.79004, -1440.17004, 14.79000,   0.00000, 0.00000, -90.06000);
	CreateDynamicObject(2543, 1182.71997, -1439.15002, 14.79000,   0.00000, 0.00000, -90.84000);
	CreateDynamicObject(1990, 1182.66003, -1431.67004, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1990, 1181.63000, -1431.72998, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1990, 1180.60999, -1431.81006, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1990, 1179.60999, -1431.82996, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1990, 1178.60999, -1431.89001, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1990, 1177.58997, -1431.85999, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1993, 1182.66003, -1436.08997, 14.79000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2012, 1175.50000, -1431.81995, 14.75000,   0.00000, 0.00000, 361.17001);
	CreateDynamicObject(2012, 1172.42004, -1431.87000, 14.75000,   0.00000, 0.00000, 359.92999);
	CreateDynamicObject(2012, 1160.09998, -1448.34998, 14.75000,   0.00000, 0.00000, -179.94000);
	CreateDynamicObject(2539, 1170.44995, -1435.32996, 14.79000,   0.00000, 0.00000, 181.25999);
	CreateDynamicObject(2545, 1161.81995, -1431.83997, 14.91000,   0.00000, 0.00000, -90.54000);
	CreateDynamicObject(2545, 1160.81995, -1431.82996, 14.91000,   0.00000, 0.00000, -90.54000);
	CreateDynamicObject(2545, 1159.81006, -1431.85999, 14.91000,   0.00000, 0.00000, -90.54000);
	CreateDynamicObject(2545, 1162.81995, -1431.87000, 14.91000,   0.00000, 0.00000, -90.54000);
	CreateDynamicObject(1988, 1163.13000, -1435.33997, 14.79000,   0.00000, 0.00000, 541.46002);
	CreateDynamicObject(1988, 1166.06995, -1436.31995, 14.79000,   0.00000, 0.00000, 360.79999);
	CreateDynamicObject(1987, 1165.06995, -1436.32996, 14.79000,   0.00000, 0.00000, 361.06000);
	CreateDynamicObject(1987, 1166.10999, -1435.30005, 14.77000,   0.00000, 0.00000, 180.96001);
	CreateDynamicObject(1988, 1165.06995, -1435.31006, 14.79000,   0.00000, 0.00000, 540.44000);
	CreateDynamicObject(2536, 1165.79004, -1445.06995, 14.70000,   0.00000, 0.00000, -1.20000);
	CreateDynamicObject(2536, 1167.82996, -1445.06995, 14.70000,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(2871, 1165.79004, -1444.00000, 14.79000,   0.00000, 0.00000, 178.27000);
	CreateDynamicObject(2871, 1166.81006, -1444.03003, 14.79000,   0.00000, 0.00000, 179.35001);
	CreateDynamicObject(2871, 1167.79004, -1444.04004, 14.79000,   0.00000, 0.00000, 179.89000);
	CreateDynamicObject(2543, 1168.13000, -1435.35999, 14.79000,   0.00000, 0.00000, 180.05000);
	CreateDynamicObject(2543, 1167.09998, -1435.37000, 14.79000,   0.00000, 0.00000, 180.35001);
	CreateDynamicObject(2012, 1170.63000, -1440.67004, 14.75000,   0.00000, 0.00000, 359.50000);
	CreateDynamicObject(2012, 1173.77002, -1440.71997, 14.75000,   0.00000, 0.00000, 359.82001);
	CreateDynamicObject(2012, 1177.30005, -1445.31006, 14.75000,   0.00000, 0.00000, 359.92999);
	CreateDynamicObject(1996, 1173.35999, -1448.30005, 14.79000,   0.00000, 0.00000, 179.10001);
	CreateDynamicObject(1981, 1174.32996, -1448.31995, 14.79000,   0.00000, 0.00000, -181.74001);
	CreateDynamicObject(1981, 1175.31995, -1448.34998, 14.79000,   0.00000, 0.00000, -180.84000);
	CreateDynamicObject(1981, 1176.30005, -1448.37000, 14.79000,   0.00000, 0.00000, -180.84000);
	CreateDynamicObject(1991, 1177.28003, -1448.37000, 14.79000,   0.00000, 0.00000, 179.47000);
	CreateDynamicObject(1996, 1178.32996, -1448.35999, 14.79000,   0.00000, 0.00000, 179.24001);
	CreateDynamicObject(1991, 1179.32996, -1448.37000, 14.79000,   0.00000, 0.00000, 179.57001);
	CreateDynamicObject(1994, 1176.81995, -1444.16003, 14.79000,   0.00000, 0.00000, -0.84000);
	CreateDynamicObject(1995, 1178.81006, -1444.19995, 14.79000,   0.00000, 0.00000, -1.26000);
	CreateDynamicObject(2543, 1168.89001, -1444.06006, 14.79000,   0.00000, 0.00000, 178.97000);
	CreateDynamicObject(2543, 1169.91003, -1444.06995, 14.79000,   0.00000, 0.00000, 179.69000);
	CreateDynamicObject(2543, 1169.87000, -1445.12000, 14.79000,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(2543, 1168.85999, -1445.10999, 14.79000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject(2538, 1167.02002, -1431.87000, 14.79000,   0.00000, 0.00000, 0.42000);
	CreateDynamicObject(2539, 1166.03003, -1431.89001, 14.79000,   0.00000, 0.00000, 0.70000);
	CreateDynamicObject(2540, 1164.04004, -1431.91003, 14.79000,   0.00000, 0.00000, 0.60000);
	CreateDynamicObject(2539, 1165.03003, -1431.91003, 14.79000,   0.00000, 0.00000, 1.02000);
	CreateDynamicObject(2538, 1176.17004, -1436.38000, 14.79000,   0.00000, 0.00000, 0.24000);
	CreateDynamicObject(2539, 1174.21997, -1436.37000, 14.79000,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(2540, 1173.21997, -1436.35999, 14.79000,   0.00000, 0.00000, 0.18000);
	CreateDynamicObject(2539, 1175.19995, -1436.38000, 14.79000,   0.00000, 0.00000, -2.06000);
	CreateDynamicObject(2540, 1173.26001, -1435.31006, 14.79000,   0.00000, 0.00000, 180.17000);
	CreateDynamicObject(1991, 1175.73999, -1439.57996, 14.79000,   0.00000, 0.00000, 179.57001);
	CreateDynamicObject(1996, 1174.73999, -1439.56995, 14.79000,   0.00000, 0.00000, 179.24001);
	CreateDynamicObject(1996, 1176.17004, -1435.37000, 14.79000,   0.00000, 0.00000, 179.24001);
	CreateDynamicObject(1991, 1177.16003, -1435.38000, 14.79000,   0.00000, 0.00000, 179.57001);
	CreateDynamicObject(2540, 1169.43994, -1436.34998, 14.79000,   0.00000, 0.00000, 0.18000);
	CreateDynamicObject(2539, 1170.43005, -1436.34998, 14.79000,   0.00000, 0.00000, 0.90000);
	CreateDynamicObject(2539, 1171.33997, -1436.32996, 14.79000,   0.00000, 0.00000, 0.58000);
	CreateDynamicObject(2538, 1172.21997, -1436.31995, 14.79000,   0.00000, 0.00000, 0.30000);
	CreateDynamicObject(2871, 1163.40002, -1440.68005, 14.79000,   0.00000, 0.00000, 360.41000);
	CreateDynamicObject(2536, 1164.48999, -1440.72998, 14.70000,   0.00000, 0.00000, -1.20000);
	CreateDynamicObject(2536, 1165.48999, -1440.75000, 14.70000,   0.00000, 0.00000, -0.42000);
	CreateDynamicObject(2536, 1166.50000, -1440.75000, 14.70000,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(2543, 1167.60999, -1440.64001, 14.79000,   0.00000, 0.00000, 0.31000);
	CreateDynamicObject(2543, 1168.62000, -1440.64001, 14.79000,   0.00000, 0.00000, 0.30000);
	CreateDynamicObject(2543, 1168.64001, -1439.59998, 14.79000,   0.00000, 0.00000, 180.05000);
	CreateDynamicObject(2543, 1167.67004, -1439.60999, 14.79000,   0.00000, 0.00000, 180.35001);
	CreateDynamicObject(2871, 1163.65002, -1439.67004, 14.79000,   0.00000, 0.00000, 180.61000);
	CreateDynamicObject(2871, 1164.68005, -1439.67004, 14.79000,   0.00000, 0.00000, 179.77000);
	CreateDynamicObject(2871, 1165.68005, -1439.68005, 14.79000,   0.00000, 0.00000, 180.61000);
	CreateDynamicObject(2871, 1166.68005, -1439.66003, 14.79000,   0.00000, 0.00000, 180.61000);
	CreateDynamicObject(1990, 1175.08997, -1444.96997, 14.79000,   0.00000, 0.00000, -2.46000);
	CreateDynamicObject(1990, 1181.63000, -1431.72998, 14.79000,   0.00000, 0.00000, 3.30000);
	CreateDynamicObject(1990, 1174.06995, -1444.93994, 14.79000,   0.00000, 0.00000, 0.48000);
	CreateDynamicObject(1990, 1173.08997, -1444.93994, 14.79000,   0.00000, 0.00000, -1.20000);
	CreateDynamicObject(1990, 1172.10999, -1444.92004, 14.79000,   0.00000, 0.00000, -1.14000);
	CreateDynamicObject(1990, 1171.12000, -1444.91003, 14.79000,   0.00000, 0.00000, -0.72000);
	CreateDynamicObject(2530, 1168.54004, -1448.31006, 14.79000,   0.00000, 0.00000, -178.98000);
	CreateDynamicObject(2530, 1169.59998, -1448.29004, 14.79000,   0.00000, 0.00000, -178.98000);
	CreateDynamicObject(2530, 1170.67004, -1448.30005, 14.79000,   0.00000, 0.00000, -178.98000);
	CreateDynamicObject(2530, 1171.71997, -1448.31995, 14.79000,   0.00000, 0.00000, -181.50000);
	CreateDynamicObject(2530, 1175.13000, -1443.91003, 14.79000,   0.00000, 0.00000, -181.50000);
	CreateDynamicObject(2012, 1176.81995, -1440.75000, 14.75000,   0.00000, 0.00000, 359.92999);
	CreateDynamicObject(1995, 1177.70996, -1439.63000, 14.79000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1994, 1176.72998, -1439.63000, 14.79000,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(1993, 1177.82996, -1444.15002, 14.79000,   0.00000, 0.00000, 179.46001);

	// Vehicles:
	VVehicleGrotti[0] = AddStaticVehicleEx(411, 544.1366, -1298.1511, 1997.2629+5, 180.0000, 196, 300, 300);
	AddStaticVehicleEx(429, 536.6366, -1297.1511, 1996.7765+5, 215.0000, 208, 138, 300);
	AddStaticVehicleEx(451, 529.1366, -1296.6511, 1996.7765+5, 215.0000, 175, 175, 300);
	AddStaticVehicleEx(506, 521.6366, -1296.1511, 1996.7765+5, 215.0000, 6, 6, 300);
	AddStaticVehicleEx(541, 551.6366, -1297.1511, 1996.7765+5, 145.0000, 208, 138, 300);
	AddStaticVehicleEx(415, 559.1479, -1296.5100, 1996.7765+5, 145.0000, 175, 175, 300);
	VVehicleGrotti[1] = AddStaticVehicleEx(603, 566.6479, -1296.0100, 1996.7765+5, 145.0000, 6, 300, 300);
	LinkVehicleToInterior(VVehicleGrotti[0], 1);
	LinkVehicleToInterior(VVehicleGrotti[0]+1, 1);
	LinkVehicleToInterior(VVehicleGrotti[0]+2, 1);
	LinkVehicleToInterior(VVehicleGrotti[0]+3, 1);
	LinkVehicleToInterior(VVehicleGrotti[0]+4, 1);
	LinkVehicleToInterior(VVehicleGrotti[0]+5, 1);
	LinkVehicleToInterior(VVehicleGrotti[1], 1);
	
	AddStaticVehicleEx(525, 2497.1467, -2133.2690, 13.3653, 0.0000, -1, -1, 300000);
	AddStaticVehicleEx(525, 2491.6467, -2133.2690, 13.3653, 0.0000, -1, -1, 300000);
	AddStaticVehicleEx(525, 2486.1467, -2133.2690, 13.3653, 0.0000, -1, -1, 300000);
	AddStaticVehicleEx(525, 2478.6467, -2133.2690, 13.3653, 0.0000, -1, -1, 300000);
	AddStaticVehicleEx(525, 2472.6467, -2133.2690, 13.3653, 0.0000, -1, -1, 300000);
	AddStaticVehicleEx(525, 2467.1467, -2133.2690, 13.3653, 0.0000, -1, -1, 300000);
	
	VVehicleBike[0] = AddStaticVehicleEx(509, 648.9118, -1862.5248, 4.9862, 45.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 648.9118, -1864.0248, 4.9862, 45.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 648.9118, -1865.5248, 4.9862, 45.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 648.9118, -1867.0248, 4.9862, 45.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 648.9118, -1868.5248, 4.9862, 45.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 648.9118, -1870.0248, 4.9862, 45.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 1733.7863, -1865.2069, 13.1377, 30.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 1732.7863, -1865.2069, 13.1377, 30.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 1731.7863, -1865.2069, 13.1377, 30.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 1730.7863, -1865.2069, 13.1377, 30.0000, -1, -1, 300000);
	AddStaticVehicleEx(509, 1729.7863, -1865.2069, 13.1377, 30.0000, -1, -1, 300000);
	VVehicleBike[1] = AddStaticVehicleEx(509, 648.9118, -1871.5248, 4.9862, 45.0000, -1, -1, 300000);
	
	
    // Autos de policias
    VehiclePoliceST = AddStaticVehicleEx(596,1558.4186,-1711.2684,5.6120,357.8773,0,1, 300000); // LSPD 0
    AddStaticVehicleEx(596,1564.7094,-1710.6145,5.6122,1.3847,0,1, 300000); // LSPD 1
    AddStaticVehicleEx(596,1570.4003,-1711.4445,5.6120,0.5144,0,1, 300000); // LSPD 2
    AddStaticVehicleEx(596,1574.1760,-1711.3433,5.6122,0.5156,0,1, 300000); // LSPD 3
    AddStaticVehicleEx(596,1578.7067,-1711.5507,5.6121,359.5084,0,1, 300000); // LSPD 4
    AddStaticVehicleEx(596,1583.4104,-1711.1211,5.6115,359.3850,0,1, 300000); // LSPD 5
    AddStaticVehicleEx(596,1587.5010,-1711.5632,5.6108,359.0339,0,1, 300000); // LSPD 6
    AddStaticVehicleEx(596,1591.5167,-1711.5215,5.6115,358.5807,0,1, 300000); // LSPD 7
    AddStaticVehicleEx(523,1558.3207,-1694.7528,5.4671,225.0994,0,1, 300000); // LSPD 9
    AddStaticVehicleEx(523,1559.4813,-1692.0184,5.4634,224.0248,0,1, 300000); // LSPD 10
    AddStaticVehicleEx(523,1563.0350,-1691.5774,5.4604,225.3951,0,1, 300000); // LSPD 11
    AddStaticVehicleEx(523,1567.0289,-1691.6353,5.4603,225.7513,0,1, 300000); // LSPD 12
    AddStaticVehicleEx(523,1571.0781,-1691.8257,5.4631,224.6621,0,1, 300000); // LSPD 13
    AddStaticVehicleEx(599,1602.2501,-1700.1066,6.0796,90.0414,0,1, 300000); // LSPD 15
    AddStaticVehicleEx(599,1602.4718,-1696.4492,6.0796,89.9170,0,1, 300000); // LSPD 16
    AddStaticVehicleEx(599,1602.2954,-1691.8071,6.0797,88.6416,0,1, 300000); // LSPD 17
    AddStaticVehicleEx(599,1602.2625,-1688.0551,6.0805,88.9743,0,1, 300000); // LSPD 18
    AddStaticVehicleEx(599,1602.3627,-1684.2678,6.0806,89.1339,0,1, 300000); // LSPD 19
    AddStaticVehicleEx(525,1584.8672,-1667.5077,5.7744,270.9235,1,0, 300000); // LSPD 20
    AddStaticVehicleEx(525,1584.7028,-1671.3783,5.7736,270.5293,1,0, 300000); // LSPD 21
    AddStaticVehicleEx(523,1587.4380,-1680.3464,5.4662,316.3450,0,1, 300000); // LSPD 22
    AddStaticVehicleEx(523,1583.4344,-1680.3275,5.4683,316.8326,0,1, 300000); // LSPD 23
    AddStaticVehicleEx(523,1582.7493,-1677.3313,5.4642,314.1004,0,1, 300000); // LSPD 24
    AddStaticVehicleEx(528,1526.8026,-1643.9155,5.9356,180.7114,0,1, 300000); // LSPD 25
    AddStaticVehicleEx(528,1530.8785,-1644.1095,5.9342,177.9560,0,1, 300000); // LSPD 26
    AddStaticVehicleEx(528,1534.6064,-1643.9658,5.9349,181.2988,0,1, 300000); // LSPD 27
    AddStaticVehicleEx(528,1538.8402,-1643.8790,5.9345,180.5387,0,1, 300000); // LSPD 28
    AddStaticVehicleEx(601,1528.9641,-1688.0430,5.6492,268.4615,0,1, 300000); // LSPD 29
    AddStaticVehicleEx(601,1528.9628,-1683.9524,5.6494,269.3413,0,1, 300000); // LSPD 30
    AddStaticVehicleEx(427,1545.0112,-1650.9487,6.0225,88.8301,0,1, 300000); // LSPD 31
    AddStaticVehicleEx(427,1544.9432,-1655.1406,6.0221,87.0713,0,1, 300000); // LSPD 32
    AddStaticVehicleEx(427,1544.8802,-1658.9209,6.0225,90.7275,0,1, 300000); // LSPD 33
    AddStaticVehicleEx(596,1546.0515,-1663.1241,5.6120,87.4175,0,1, 300000); // LSPD 34
    AddStaticVehicleEx(596,1545.7510,-1667.8499,5.6126,88.3481,0,1, 300000); // LSPD 35
    AddStaticVehicleEx(596,1546.1110,-1672.3951,5.6120,88.8650,0,1, 300000); // LSPD 36
    AddStaticVehicleEx(596,1546.0243,-1676.3579,5.6114,91.4473,0,1, 300000); // LSPD 37
    AddStaticVehicleEx(596,1545.9161,-1680.1221,5.6108,89.2740,0,1, 300000); // LSPD 38
    AddStaticVehicleEx(596,1545.9608,-1684.3907,5.6121,90.1184,0,1, 300000); // LSPD 39
    AddStaticVehicleEx(596,1535.7913,-1678.2948,13.1033,0.1336,0,1, 300000); // LSPD 40
    AddStaticVehicleEx(596,1535.7633,-1666.5045,13.1025,0.1334,0,1, 300000); // LSPD 41
    AddStaticVehicleEx(523,1535.5914,-1670.9126,12.9530,52.8156,0,1, 300000); // LSPD 42
    AddStaticVehicleEx(523,1535.6682,-1672.7799,12.9542,55.6414,0,1, 300000); // LSPD 43
    VehiclePoliceEND = AddStaticVehicleEx(523,1535.8096,-1674.6152,12.9539,63.4013,0,1, 300000); // LSPD 44 (42)
    return 1;
}

public OnGameModeExit()
{
	return 1;
}

function:OOCOff(color, string[])
{
	foreach(Player, i)
	{
		if(!gOoc[i])
		{
			SendClientMessageEx(i, color, string);
		}
	}
}

funcion:SP(playerid)
{
    P_newuser[playerid] = -1;
    SpawnPlayer(playerid);
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid)) return 1;
    TogglePlayerSpectating(playerid, true);
    SpawnPlayer(playerid);
	DeleteChatForPlayer(playerid, 32, remove);
	TextDrawHideForPlayer(playerid, WelcomeTD[0]);
	TextDrawHideForPlayer(playerid, WelcomeTD[1]);
	TextDrawHideForPlayer(playerid, WelcomeTD[2]);
	TextDrawHideForPlayer(playerid, WelcomeTD[3]);
	return 1;
}

public OnPlayerConnect(playerid)
{
        new Query[256];
    	format(Query, sizeof(Query), "SELECT * FROM `cuenta` WHERE `nombre` = '%s'", NombreOOC(playerid));
        mysql_function_query(TuberiasMySQL, Query, true, "Mysql_Verificar", "ii", playerid);
    
     	CreditObject[playerid] = CreatePlayerObject(playerid, 19300, 1153.070434, -2089.879882, 56.483135, 0.0, 0.0, 0.0);
     	
     	if(IsPlayerNPC(playerid)) return SpawnPlayer(playerid);
	    new name[24];
        GetPlayerName(playerid, name, 24);
	    if(!IsValidName(name) || strfind( name, "_", true) == -1)
    	{
		Kick(playerid);
		return 1;
    	}
		P_newuser[playerid] = 1;
		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/fvrfgq5mw45nhoe/newintro.mp3");
    	DudeTime[playerid] = 0;
    	CarWashUsedBy[playerid] = 0;
    	P_register_step[playerid] = -1;
    	P_catalogogrotti[playerid] = -1;
    	P_catalogobinco[playerid] = -1;
    	P_catalogozip[playerid] = -1;
    	P_modshop[playerid] = -1;
    	P_transid[playerid] = -1;
    	P_tienda[playerid] = -1;
 	    CreatePlayerTextDraws(playerid);
 	    CreatePlayerIphone(playerid);
        MapIcons(playerid);
       	called[playerid] = "";
       	callto[playerid] = 0;
       	iPhoneStatus[playerid] = 0;
      	iPhone_CC[0][playerid] = 0;
    	iPhone_CC[1][playerid] = 0;
    	iPhone_CC[2][playerid] = 0;
    	iPhone_CC[3][playerid] = 0;
    	PlayerInMenu[playerid][0] = -1;
    	PlayerInMenu[playerid][1] = -1;
    	PlayerInMenu[playerid][2] = -1;
    	MyTimers[playerid][24] = -1;
    	iPhoneCallStatus[playerid] = 0;
      	MenuX[playerid] = 1;
      	MenuY[playerid] = 1;
    	RemoveBuildings(playerid);
    	ChatLogDisabled[playerid] = true;
    	SetPlayerColor(playerid, 0xFFFFFFFF);
    	new s[64]; format(s, 64, "%s (%d)", PlayerName(playerid), playerid);
    	return 1;
}

funcion:ExpulsarTimer(playerid) return Kick(playerid);

public OnPlayerDisconnect(playerid, reason)
{
	if(IsPlayerNPC(playerid)) return 1;
	DestroyPlayerTextDraws(playerid);
	DestroyPlayerIphone(playerid);
    loop(0, 50, l) KillTimer(MyTimers[playerid][l]);
    P_conocerid[playerid] = -1;
    P_circularmenu_active[playerid] = -1;
    P_player_tutorial[playerid] = -1;
    P_bank_state[playerid] = -1;
    P_register_step[playerid] = -1;
    P_catalogogrotti[playerid] = -1;
    P_catalogobinco[playerid] = -1;
    P_catalogozip[playerid] = -1;
    P_modshop[playerid] = -1;
    P_transid[playerid] = -1;
    P_tienda[playerid] = -1;
    VehLocalizado[playerid][0] = -1;
    VehLocalizado[playerid][1] = -1;
    VehLocalizado[playerid][2] = -1;
    VehLocalizado[playerid][3] = -1;
    VehLocalizado[playerid][4] = -1;
    PlayerInMenu[playerid][0] = -1;
	PlayerInMenu[playerid][1] = -1;
	PlayerInMenu[playerid][2] = -1;
	Guardar_Datos(playerid);
	if(CarWashUsedBy[playerid] > 0)
    {
        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
        foreach(new i : Player)
		{
			if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
			{
                SetPlayerVirtualWorld(i, 0);
			}
		}
        CarWashUsed = 0;
        CarWashUsedBy[playerid] = 0;
        
        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
        SetDynamicObjectPos(CarWash[2], 0, 0, -100);
        SetDynamicObjectPos(CarWash[3], 0, 0, -100);
        SetObjectPos(CarWash[4], 0, 0, -100);
    }
    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)
	{
    	loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
	    HideIphoneMenu(callto[playerid]);
	    iPhoneStatus[callto[playerid]] = 0;
		
   		PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
        PlayerTextDrawSetString(playerid, PTD_iPhone_Call[callto[playerid]], "_");

		SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
	}
  
	if(NPC_USED[NPCS[30]] == 1)
	{
	    if(PlayerEvent[playerid][10] == 1 || PlayerEvent[playerid][10] == 2)
	    {
			PlayerEvent[playerid][10] = 0;
			NPC_USED[NPCS[30]] = false;
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
		}
	}
	if(NPC_USED[NPCS[40]] == 1)
	{
	    if(PlayerEvent[playerid][11] == 1 || PlayerEvent[playerid][11] == 2)
	    {
			PlayerEvent[playerid][11] = 0;
			NPC_USED[NPCS[40]] = false;
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
		}
	}
	if(NPC_USED[NPCS[BITCH_BJ]])
	{
	    if(PlayerEvent[playerid][BITCH_BJ])
	    {
	        ApplyAnimation(NPCS[BITCH_BJ],"PED","WALK_player",4.0,0,0,0,0,1);
	        ApplyAnimation(NPCS[BITCH_BJ],"PED","WALK_player",4.0,0,0,0,0,1);
	        NPC_USED[NPCS[BITCH_BJ]] = false;
	        PlayerEvent[playerid][BITCH_BJ] = 0;
	    }
	}
	P_newuser[playerid] = -1;
	UpdateUserData(playerid);
	for(new i = 0; i != 4; i++)
	{
		if(PlayerInfo[playerid][PlayerVehicleKey][i] != -1)
		{
		    new Query[800], Float:p[5], str[600];
		    new veh = PlayerInfo[playerid][PlayerVehicle][i];
		    new vdpanels,vddoors,vdlights,vdtires;
			GetVehicleDamageStatus(veh,vdpanels,vddoors,vdlights,vdtires);
		    if(VehicleInfo[veh][VSTATUS] == 2) { VehicleInfo[veh][VSTATUS] = 10; } //Proceso...
			GetVehiclePos(veh, p[0], p[1], p[2]);
			GetVehicleZAngle(veh, p[3]);
			GetVehicleHealth(veh, p[4]);//hooo
		    format(Query, sizeof(Query), "UPDATE `VEHS` SET ");
		    format(str, 600, "`VPOSX` = '%f', `VPOSY` = '%f', `VPOSZ` = '%f', `VANGLE` = '%f', `VCOLOR1` = '%d', `VCOLOR2` = '%d', `VPAINTJOB` = '%d', `VM1` = '%d', `VM2` = '%d', `VM3` = '%d', `VM4` = '%d', `VM5` = '%d', `VM6` = '%d', `VM7` = '%d', `VM8` = '%d', `VM9` = '%d', ", p[0], p[1], p[2], p[3],
			VehicleInfo[veh][vcolor1],
			VehicleInfo[veh][vcolor2],
			VehicleInfo[veh][vpaintjob],
			VehicleInfo[veh][mod1],
			VehicleInfo[veh][mod2],
			VehicleInfo[veh][mod3],
			VehicleInfo[veh][mod4],
			VehicleInfo[veh][mod5],
			VehicleInfo[veh][mod6],
			VehicleInfo[veh][mod7],
			VehicleInfo[veh][mod8],
			VehicleInfo[veh][mod9]);
			strcat(Query, str);
			format(str, 600, "`VM10` = '%d', `VM11` = '%d', `VM12` = '%d', `VM13` = '%d', `VM14` = '%d', `VM15` = '%d', `VM16` = '%d', `VM17` = '%d', `VSTATUS` = '%d', `VHEALTH` = '%f', `VPANELS` = '%d', `VDOORS` = '%d', ", VehicleInfo[veh][mod10], VehicleInfo[veh][mod11], VehicleInfo[veh][mod12], VehicleInfo[veh][mod13], VehicleInfo[veh][mod14], VehicleInfo[veh][mod15], VehicleInfo[veh][mod16], VehicleInfo[veh][mod17], VehicleInfo[veh][VSTATUS], p[4], vdpanels, vddoors);
			strcat(Query, str);
			format(str, 600, "`VLIGHTS` = '%d', `VTIRES` = '%d' WHERE `VKEY` = '%d' AND `VD` = '%s'", vdlights, vdtires, PlayerInfo[playerid][PlayerVehicleKey][i], PlayerNameNormal(playerid));
			strcat(Query, str);
			db_query(Database, Query);

			if(VehicleInfo[veh][VSTATUS] == 2 || VehicleInfo[veh][VSTATUS] == 5 || VehicleInfo[veh][VSTATUS] == 6 || VehicleInfo[veh][VSTATUS] == 10 || VehicleInfo[veh][VSTATUS] == 12)
			{
				DestroyVehiclesTimer[veh] = SetTimerEx("DestroyPlayerVehicle", 300000, false, "d", veh); // 5 minutos
			}
			else DestroyPlayerVehicle(veh);
		}
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
    for(new i = 0; i < 11; i++) SetPlayerSkillLevel(playerid, i, 1);
	if(IsPlayerNPC(playerid))
	{
	    CargarAnim(playerid);
		new npcname[24];
		GetPlayerName(playerid, npcname, 24);
		if(!strcmp(npcname, "NPC_001", true))
		{
			NPCS[SHOP_UNITY] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 184);
			SetPlayerInteriorEx(playerid, 17);
			return 1;
		}
  		if(!strcmp(npcname, "NPC_002", true))
		{
			NPCS[BITCH_BJ] = playerid;
			
			SetPlayerPos(playerid, 1201.088623, 13.896595, 1000.921875-1.0);
			SetPlayerFacingAngle(NPCS[BITCH_BJ], 325.0);
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 152);
			SetPlayerInteriorEx(playerid, 2);
			return 1;
		}
		if(!strcmp(npcname, "NPC_003", true))
		{
			NPCS[2] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 15);
			SetPlayerInteriorEx(playerid, 4);
			return 1;
		}
		if(!strcmp(npcname, "NPC_004", true))
		{
			NPCS[3] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 258);
			SetPlayerInteriorEx(playerid, 10);
			return 1;
		}
		if(!strcmp(npcname, "NPC_005", true))
		{
			NPCS[4] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 219);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_006", true))
		{
			NPCS[5] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 141);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_007", true))
		{
			NPCS[6] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 219);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_008", true))
		{
			NPCS[7] = playerid;
			TogglePlayerControllable(playerid, true);
			SetPlayerSkin(playerid, 44);
			SetPlayerInteriorEx(playerid, 11);
			return 1;
		}
		if(!strcmp(npcname, "NPC_009", true))
		{
			NPCS[8] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 211);
			SetPlayerInteriorEx(playerid, 15);
			return 1;
		}
		if(!strcmp(npcname, "NPC_010", true))
		{
			NPCS[9] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 205);
			SetPlayerInteriorEx(playerid, 10);
			return 1;
		}
		if(!strcmp(npcname, "NPC_011", true))
		{
			NPCS[10] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 167);
			SetPlayerInteriorEx(playerid, 9);
			return 1;
		}
  		if(!strcmp(npcname, "NPC_012", true))
		{
			NPCS[11] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 152);
			SetPlayerInteriorEx(playerid, 2);
			return 1;
		}
		if(!strcmp(npcname, "NPC_013", true))
		{
			NPCS[12] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 63);
			SetPlayerInteriorEx(playerid, 2);
			return 1;
		}
		if(!strcmp(npcname, "NPC_014", true))
		{
			NPCS[13] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 177);
			SetPlayerInteriorEx(playerid, 12);
			return 1;
		}
		if(!strcmp(npcname, "NPC_015", true))
		{
			NPCS[14] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 155);
			SetPlayerInteriorEx(playerid, 5);
			return 1;
		}
		if(!strcmp(npcname, "NPC_016", true))
		{
			NPCS[15] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 217);
			SetPlayerInteriorEx(playerid, 3);
			return 1;
		}
		if(!strcmp(npcname, "NPC_017", true))
		{
			NPCS[16] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 211);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_018", true))
		{
			NPCS[17] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 217);
			SetPlayerInteriorEx(playerid, 5);
			return 1;
		}
		if(!strcmp(npcname, "NPC_019", true))
		{
			NPCS[18] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 211);
			SetPlayerInteriorEx(playerid, 18);
			return 1;
		}
		if(!strcmp(npcname, "NPC_020", true))
		{
			NPCS[19] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 12);
			SetPlayerInteriorEx(playerid, 3);
			ApplyAnimation(playerid,"PED","SEAT_IDLE",4,0,0,0, 1,0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_021", true))
		{
			NPCS[20] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 280);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_022", true))
		{
			NPCS[21] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 281);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_023", true))
		{
			NPCS[22] = playerid;
			TogglePlayerControllable(playerid, true);
			SetPlayerSkin(playerid, 280);
			SetPlayerInteriorEx(playerid, 1);
			return 1;
		}
		if(!strcmp(npcname, "NPC_024", true))
		{
			NPCS[23] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 171);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_025", true))
		{
			NPCS[24] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 172);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_026", true))
		{
			NPCS[25] = playerid;
			TogglePlayerControllable(playerid, true);
			SetPlayerSkin(playerid, 71);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_027", true))
		{
			NPCS[26] = playerid;
			TogglePlayerControllable(playerid, true);
			SetPlayerSkin(playerid, 71);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_028", true))
		{
			NPCS[27] = playerid;
			TogglePlayerControllable(playerid, true);
			SetPlayerSkin(playerid, 71);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_030", true))
		{
			NPCS[29] = playerid;
			SetPlayerSkin(playerid, 23);
			SetPlayerInteriorEx(playerid, 17);
			return 1;
		}
		if(!strcmp(npcname, "NPC_031", true))
		{
			NPCS[30] = playerid;
			SetPlayerSkin(playerid, 192);
			SetPlayerInteriorEx(playerid, 17);
			return 1;
		}
		if(!strcmp(npcname, "NPC_032", true))
		{
			NPCS[31] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 155);
			SetPlayerInteriorEx(playerid, 5);
			return 1;
		}
		if(!strcmp(npcname, "NPC_033", true))
		{
			NPCS[32] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 155);
			SetPlayerInteriorEx(playerid, 5);
			return 1;
		}
		if(!strcmp(npcname, "NPC_034", true))
		{
			NPCS[33] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 180);
			SetPlayerInteriorEx(playerid, 17);
			return 1;
		}
		if(!strcmp(npcname, "NPC_035", true))
		{
			NPCS[34] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 217);
			SetPlayerInteriorEx(playerid, 15);
			return 1;
		}
		if(!strcmp(npcname, "NPC_036", true))
		{
			NPCS[35] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 217);
			SetPlayerInteriorEx(playerid, 18);
			return 1;
		}
		if(!strcmp(npcname, "NPC_037", true))
		{
			NPCS[36] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 167);
			SetPlayerInteriorEx(playerid, 9);
			return 1;
		}
		if(!strcmp(npcname, "NPC_038", true))
		{
			NPCS[37] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 44);
			SetPlayerInteriorEx(playerid, 17);
			return 1;
		}
		if(!strcmp(npcname, "NPC_039", true))
		{
			NPCS[38] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 280);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_040", true))
		{
			NPCS[39] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 281);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		if(!strcmp(npcname, "NPC_041", true))
		{
			NPCS[40] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 85);
			SetPlayerInteriorEx(playerid, 2);
			return 1;
		}
		if(!strcmp(npcname, "NPC_042", true))
		{
			NPCS[41] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 168);
			SetPlayerInteriorEx(playerid, 0);
			return 1;
		}
		return 1;
	}
	MyTimers[playerid][25] = SetTimerEx("ColocarToysTimer", 1000, false, "i", playerid);
	if(P_newuser[playerid] == -2) return Kick(playerid);
	if(P_newuser[playerid] == 0)
	{
	    SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
		if(GetPlayerInteriorEx(playerid) != 0)
		{
		    new i = PlayerInfo[playerid][Interior];
	    	SetPlayerPos(playerid, Exteriors[i][0], Exteriors[i][1], Exteriors[i][2]);
		    SetPlayerFacingAngle(playerid, Exteriors[i][3]);
		    SetPlayerInteriorEx(playerid, 0, INT_NONE);
		}
		else
		{
		    SetPlayerPos(playerid, PlayerInfo[playerid][posx], PlayerInfo[playerid][posy], PlayerInfo[playerid][posz]); // Setea al jugador en la pos. que se desconectó
	    	SetPlayerFacingAngle(playerid, PlayerInfo[playerid][angle]); // Ángulo del jugador al spawnear
		}
	    SetPlayerSkin(playerid, PlayerInfo[playerid][skin]); // Skin usado por el jugador
	    ResetPlayerMoney(playerid);
	    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]); // Da al jugador el dinero con el que se desconectó
	    SetPlayerHealth(playerid, PlayerInfo[playerid][vida]); // Setea al jugador la vida con la que se desconectó
	    SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]); // Setea el blindaje con el que el jugador se desconectó
	    StopAudioStreamForPlayer(playerid);
	    P_newuser[playerid] = -1;
        if(PlayerInfo[playerid][admlvl] > 0) SendClientMessageEx(playerid, AZULCLARO, ""WHITE"Te has conectado con nivel de administrador: {008C00}%d", PlayerInfo[playerid][admlvl]);
	    SendClientMessageEx(playerid, -1, "Bienvenido de nuevo a {00CCFF}Montevideo Roleplay{FFFFFF}, %s.", PlayerName(playerid));
	    ChatLogDisabled[playerid] = false;
	    CargarAnim(playerid);
	    MyTimers[playerid][25] = SetTimerEx("ColocarToysTimer", 1000, false, "i", playerid);
	    return 1;
	}
	if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1)
	{
	    new Float:p[3];
	    GetPlayerPos(playerid, p[0], p[1], p[2]);
	    SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
		SetPlayerPos(playerid, p[0], p[1], p[2]);
		
	    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
	    SetTimerEx("CrackedPlayer", 1500, false, "i", playerid);
	    SendClientMessage(playerid, -1, " ");
	    SetPlayerHealth(playerid, 100.0);
	    SendClientMessage(playerid, -1, "Estás herido y comienzas a perder sangre...");
	    SendClientMessage(playerid, -1, "Puedes llamar a una ambulancia {FFFF00}(112) {FFFFFF}o puedes {FFFF00}/rendirse.");
	    MyTimers[playerid][26] = SetTimerEx("PerderSangre", 10000, true, "i", playerid);
	    return 1;
	}
	else if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2)
	{
    KillTimer(MyTimers[playerid][26]);
    SetPlayerHealth(playerid, 1.0);
    SetPlayerCameraPos(playerid, 1212.9924, -1286.5095, 37.5935);
	SetPlayerCameraLookAt(playerid, 1212.2593, -1287.1926, 37.2785);
	SetPlayerPos(playerid, 1167.6639, -1326.0210, 16.0086);
	TogglePlayerControllable(playerid, false);
	MyTimers[playerid][27] = SetTimerEx("RecuperarSangre", 2500, true, "i", playerid);
    loop(0, 12, i) SendClientMessage(playerid, -1, " ");
    ChatLogDisabled[playerid] = true;
    SendClientMessage(playerid, -1, "{FF6600}Fuiste trasladado al hospital más cercano.");
    SendClientMessage(playerid, -1, "{FF6600}Los médicos te reanimaron y ahora estás curandote las heridas, espera...");
    return 1;
   	}
    if(PlayerInfo[playerid][carcel] == 1)
    {
    SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
    SetPlayerInterior(playerid, 6);
    SetPlayerPos(playerid, 264.6288, 77.5742, 1001.0391);
    return 1;
    }
    return 1;
    }


funcion:CrackedPlayer(playerid, animlib[], anim[])
{
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
	return 1;
}

funcion:PerderSangre(playerid)
{
    new Float:health;
    GetPlayerHealth(playerid,health);
    if(health == 1.0)
    {
		PlayerInfo[playerid][PlayerStatus] = STATE_DEAD2;
		//SaveValue(playerid, "PSTATUS", STATE_DEAD2);
        SetPlayerHealth(playerid, 0.0);
		return 1;
    }
    health -= 5.0;
    if(health <= 0.0)
    {
        ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
        SendClientMessage(playerid, -1, "¡Estás a punto de morir!");
        SetPlayerHealth(playerid, 1.0);
        return 1;
    }
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
    SetPlayerHealth(playerid,health);
    return 1;
}

funcion:RecuperarSangre(playerid)
{
    new Float:health;
    GetPlayerHealth(playerid,health);
    if(health == 1.0)
    {
        SetPlayerHealth(playerid, 30.0);
		return 1;
    }
    health += 30.0;
    if(health >= 120.0)
    {
        KillTimer(MyTimers[playerid][27]);
        SetPlayerPos(playerid, 1172.6268, -1327.9431, 15.3711);
        SetPlayerFacingAngle(playerid, -90.0);
        SetPlayerHealth(playerid, 100.0);
        PlayerInfo[playerid][PlayerStatus] = STATE_NORMAL;
        //SaveValue(playerid, "PSTATUS", STATE_NORMAL);
        SetCameraBehindPlayer(playerid);
        TogglePlayerControllable(playerid, true);
        ChatLogDisabled[playerid] = false;
        
        if(250 < PlayerInfo[playerid][dinero])
        {
	        loop(0, 12, i) SendClientMessage(playerid, -1, " ");
		    SendClientMessage(playerid, -1, "{FFFFFF}Te pudiste curar, ten más cuidado.");
            SendClientMessage(playerid, -1, "El costo de los servicios médicos fue de {FFFF00}$250.");
            PlayerInfo[playerid][dinero] -= 250;
            ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
			//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			SetPlayerVirtualWorld(playerid, 0);
		}
		else
		{
		    loop(0, 12, i) SendClientMessage(playerid, -1, " ");
		    SendClientMessage(playerid, -1, "{FFFFFF}Te pudiste curar, ten más cuidado.");
		    SetPlayerVirtualWorld(playerid, 0);
		}
        return 1;
    }
    SetPlayerHealth(playerid,health);
    return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	P_tienda[playerid] = -1;
    HideMenuForPlayer(PizzaMenu, playerid);
    HideMenuForPlayer(BebidasMenu, playerid);
    HideMenuForPlayer(DonutMenu, playerid);
    HideMenuForPlayer(ChickBellMenu, playerid);
    HideMenuForPlayer(ChickMenu, playerid);
    HideMenuForPlayer(BurgerShotMenu, playerid);
    HideMenuForPlayer(BurgerMenu, playerid);
    HideMenuForPlayer(HotdogMenu, playerid);
    HideMenuForPlayer(ShopMenuN, playerid);
    HideMenuForPlayer(TabacoMenu, playerid);
    HideMenuForPlayer(PizzaStackedMenu, playerid);
    HideMenuForPlayer(AlhambraMenu, playerid);
    HideMenuForPlayer(PigPenMenu, playerid);
    HideMenuForPlayer(BincoMenu, playerid);
    HideMenuForPlayer(ZipMenu, playerid);
    HideMenuForPlayer(TOYSMENU, playerid);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    PlayerInfo[playerid][Interior] = 0;
    //SaveValue(playerid, "INTERIOR", PlayerInfo[playerid][Interior]);
    //SaveValue(playerid, "INTERIORID", 0);
    StopAudioStreamForPlayer(playerid);
    if(P_bank_state[playerid] > 0)
    {
        loop(0, 20, l) TextDrawHideForPlayer(playerid, Bank[l]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][0]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][1]);
    	P_bank_state[playerid] = -1;
    	ChatLogDisabled[playerid] = false;
    }
    if(P_catalogogrotti[playerid] >= 0)
	{
	    KillTimer(MyTimers[playerid][16]);
	    SetCameraBehindPlayer(playerid);
	    TogglePlayerControllable(playerid, true);
		P_catalogogrotti[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
		CancelSelectTextDraw(playerid);
	}
	if(iPhoneStatus[playerid] != 0)
	{
	    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)//estbleciendo la llamada
	    {
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    HideIphoneMenu(playerid);
		    iPhoneStatus[playerid] = 0;

		    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    HideIphoneMenu(callto[playerid]);
		    iPhoneStatus[callto[playerid]] = 0;
		    return 1;
		}
	    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    HideIphoneMenu(playerid);
	    iPhoneStatus[playerid] = 0;
	}
	if(CarWashUsedBy[playerid] > 0)
    {
        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
        foreach(new i : Player)
		{
			if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
			{
                SetPlayerVirtualWorld(i, 0);
			}
		}
        CarWashUsed = 0;
        CarWashUsedBy[playerid] = 0;

        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
        SetDynamicObjectPos(CarWash[2], 0, 0, -100);
        SetDynamicObjectPos(CarWash[3], 0, 0, -100);
        SetObjectPos(CarWash[4], 0, 0, -100);
    }
	if(NPC_USED[NPCS[30]] == 1)
	{
	    if(PlayerEvent[playerid][10] == 1 || PlayerEvent[playerid][10] == 2)
	    {
			PlayerEvent[playerid][10] = 0;
			NPC_USED[NPCS[30]] = false;
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
		}
	}
	if(NPC_USED[NPCS[40]] == 1)
	{
	    if(PlayerEvent[playerid][11] == 1 || PlayerEvent[playerid][11] == 2)
	    {
			PlayerEvent[playerid][11] = 0;
			NPC_USED[NPCS[40]] = false;
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[30],"PED","WALK_player",4.0,0,0,0,0,1);
		}
	}
	if(NPC_USED[NPCS[BITCH_BJ]])
	{
	    if(PlayerEvent[playerid][BITCH_BJ])
	    {
	        ApplyAnimation(NPCS[BITCH_BJ],"PED","WALK_player",4.0,0,0,0,0,1);
	        ApplyAnimation(NPCS[BITCH_BJ],"PED","WALK_player",4.0,0,0,0,0,1);
	        NPC_USED[NPCS[BITCH_BJ]] = false;
	        PlayerEvent[playerid][BITCH_BJ] = 0;
	    }
	}
	if(PlayerInfo[playerid][PlayerStatus] == STATE_NORMAL || PlayerInfo[playerid][PlayerStatus] == STATE_PLAYERCAR)
	{
	    if(GetPlayerInterior(playerid) != 0)
		{
			PlayerInfo[playerid][PlayerStatus] = STATE_DEAD2;
			//SaveValue(playerid, "PSTATUS", STATE_DEAD2);
			return 1;
		}
	    if(PlayerInfo[playerid][Interior] != 0)
		{
			PlayerInfo[playerid][PlayerStatus] = STATE_DEAD2;
			//SaveValue(playerid, "PSTATUS", STATE_DEAD2);
			return 1;
		}
	    new Float:p[3];
	    GetPlayerPos(playerid, p[0], p[1], p[2]);
	    SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
		SetPlayerPos(playerid, p[0], p[1], p[2]);
	    PlayerInfo[playerid][PlayerStatus] = STATE_DEAD1;
	    //SaveValue(playerid, "PSTATUS", STATE_DEAD1);
	}
	else if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1)
	{
	    SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1167.6639, -1326.0210, 16.0086, 0, 0, 0, 0, 0, 0, 0);
	    ChatLogDisabled[playerid] = true;
		PlayerInfo[playerid][PlayerStatus] = STATE_DEAD2;
		//SaveValue(playerid, "PSTATUS", STATE_DEAD2);
	}
	else if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) KillTimer(MyTimers[playerid][27]);
	return 1;
}

funcion:ColocarToysTimer(playerid)
{
    ColocarToys(playerid);
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
    if(!isnull(VehicleInfo[vehicleid][VD])) SetVehicleParamsEx(vehicleid, 0, 0, 0, 1, 0, 0, 0);
    else SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
	if(VehicleInfo[vehicleid][vmodelid] != 0)
	{
	    if(VehicleInfo[vehicleid][VSTATUS] != 0)
		{
			ChangeVehiclePaintjob(vehicleid, VehicleInfo[vehicleid][vpaintjob]);
			ChangeVehicleColor(vehicleid, VehicleInfo[vehicleid][vcolor1], VehicleInfo[vehicleid][vcolor2]);
		    ModVehicle(vehicleid);
		}
		if(VehicleInfo[vehicleid][VSTATUS] == 3) //DESTRUIDO
		{
		    new r = random(sizeof(VehicleGrottiSpawns));
  			SetVehiclePos(vehicleid, VehicleGrottiSpawns[r][0], VehicleGrottiSpawns[r][1], VehicleGrottiSpawns[r][2]);
  			SetVehicleZAngle(vehicleid, VehicleGrottiSpawns[r][3]);
  			SetVehicleVirtualWorld(vehicleid, GetVehicleOwner(vehicleid));
		}
	}
	return 1;
}


IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][lider];
	    new member = PlayerInfo[playerid][miembro];
	    if(member	==	1 || member	==	2 || member	==	3)
		{
		    return 1;
		}
		else if(leader	==	1 || leader	==	2 || leader	==	3)
		{
		    return 1;
		}
	}
	return 0;
}

ProxDetector(Float: f_Radius, playerid, string[],col1,col2,col3,col4,col5)
{
	new
		Float: f_playerPos[3];
	GetPlayerPos(playerid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);
	foreach(Player, i)
	{
		if(!BigEar[i])
		{
			if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
			{
				if(IsPlayerInRangeOfPoint(i, f_Radius / 16, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col1, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 8, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col2, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 4, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col3, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 2, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col4, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col5, string);
				}
			}
		}
		else SendClientMessageEx(i, col1, string);
	}
	return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
	new
		Float: fp_playerPos[3];
	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(IsPlayerInRangeOfPoint(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}


funcion:BackupClear(playerid, faction, timer)
{
	if(IsPlayerConnected(playerid))
	{
		if(faction == 1)
		{
			if(PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Team_SAPD(i) && OnDuty[i] == 1) SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR); DisablePlayerCheckpoint(playerid);
					}
				}
				if(timer != 1) 	SendClientMessageEx(playerid, TEAM_BLUE_COLOR, "Tu pedido de refuerzos ha sido cancelado automáticamente.");
				else 					SendClientMessageEx(playerid, TEAM_BLUE_COLOR, "Tu pedido fue cancelado.");

				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
		}
	}
	return 1;
}

stock GetPlayerFactionInfo(targetid, rank[64], division[64], employer[64])
{
	switch (PlayerInfo[targetid][miembro]) // employer/rank/division data is pulled from here
	{
	    case 1:
		{
            employer = "SAPD";
			switch(PlayerInfo[targetid][rango])
			{
			    case 1: rank = "Cadete";
			    case 2: rank = "Oficial";
			    case 3: rank = "Detective";
			    case 4: rank = "Sargento";
			    case 5: rank = "Teniente";
			    case 6: rank = "Comandante";
			    default: rank = "Cadete";
			}
			switch(Info[targetid][Division])
			{
			    case 1: division = "General";
			    case 2: division = "DIVCRI";
			    case 3: division = "DIVOES";
			    case 4: division = "DIVANDRO";
			    case 5: division = "SWAT";
			    case 6: division = "UL";
			    default: division = "Ninguna";
			}
		}
  		case 2:
		{
            employer = "FBI";
			switch(PlayerInfo[targetid][rango])
			{
			    case 1: rank = "Agente";
			    case 2: rank = "Agente Superior";
			    case 3: rank = "Agente Especial";
			    case 4: rank = "Agente Especializado";
			    case 5: rank = "Sub/Director";
			    case 6: rank = "Director";
			    default: rank = "Agente";
			}
			switch(Info[targetid][pDivision])
			{
			    case 1: division = "General";
			    case 2: division = "DIVHO";
			    case 3: division = "UCO";
			    case 4: division = "UI";
			    case 5: division = "RR.HH";
			    default: division = "DIVHO";
			}
		}
  		case 3:
		{
            employer = "SAEM";
			switch(PlayerInfo[targetid][rango])
			{
				case 1: rank = "Cabo";
				case 2: rank = "Soldado";
				case 3: rank = "Sargento";
				case 4: rank = "Capitan";
				case 5: rank = "Mayor";
				case 6: rank = "Coronel";
				default: rank = "Cabo";
			}
			switch(Info[targetid][pDivision])
			{
			    case 1: division = "General";
				case 2: division = "FASA";
			    case 3: division = "EMM";
			    case 4: division = "BO";
			    case 5: division = "FMSA";
			    default: division = "Ninguna";
			}
		}
  		case 4:
		{
            employer = "SAMC";
			switch(PlayerInfo[targetid][rango])
			{
				case 1: rank = "Prácticante";
				case 2: rank = "Paramédico";
				case 3: rank = "Médico";
				case 4: rank = "Supervisor";
				case 5: rank = "Responsable Técnico";
				case 6: rank = "Director";
				default: rank = "Prácticante";
			}
		}
		case 5:
		{
	        employer = "SA News";
			switch(PlayerInfo[targetid][rango])
			{
				case 1: rank = "Becario";
				case 2: rank = "Redactor";
				case 3: rank = "Periodista";
				case 4: rank = "Enviado Especial";
				case 5: rank = "Presentador";
				case 6: rank = "Director SA News";
				default: rank = "Becario";
			}
			division = "Ninguna";
		}
  		case 6:
		{
            employer = "Mecánicos";
			switch(PlayerInfo[targetid][rango])
			{
				case 1: rank = "Ayudante";
				case 2: rank = "Trucker";
				case 3: rank = "Mecánico";
				case 4: rank = "Ingeniero";
				case 5: rank = "Supervisor";
				case 6: rank = "Director";
				default: rank = "Ayudante";
			}
			division = "Ninguna";
		}
  		case 7:
		{
	        employer = "Gobierno";
			switch(PlayerInfo[targetid][rango])
			{
				case 1: rank = "Staff";
				case 2: rank = "Secretario";
				case 3: rank = "Alcalde de LS";
				case 4: rank = "Ministro de";
				case 5: rank = "Vice-Presidente";
				case 6: rank = "Presidente";
				default: rank = "Staff";
			}
			switch(Info[targetid][pDivision])
			{
			    case 2: division = "Chofer";
			    case 3: division = "UG";
			    case 4: division = "Defensa";
			    case 5: division = "Justicia";
			    case 6: division = "Economía";
			    default: division = "Ninguna";
			}
			division = "Ninguna";
		}
		case 8:
		{
		    employer = "Agencia Hitman";
		    switch(PlayerInfo[targetid][rango])
		    {
    			case 1: rank = "Novato";
				case 2: rank = "Asesino";
				case 3: rank = "Sicario";
				case 4: rank = "Agente Especial";
				case 5: rank = "Vice Director";
				case 6: rank = "Director";
				default: rank = "Novato";
			}
			division = "Ninguna";
		}
		case 9:
		{
		    employer = "Sistema Judicial";
			switch(PlayerInfo[targetid][rango])
			{
				case 1: rank = "Abogado";
				case 2: rank = "Secretario";
				case 3: rank = "Fiscal";
				case 4: rank = "Juez";
				case 5: rank = "Asociado";
				case 6: rank = "Director General";
				default: rank = "Abogado";
			}
			division = "Ninguna";
		}
	    default: { employer = "Ninguna"; division = "Ninguna"; rank = "N/A"; }
	}
	return 1;
}


stock SendRadioMessage(member, color, string[])
{
	foreach(Player, i)
	{
		if(PlayerInfo[i][miembro] == member)
		{
			if(RadioOn[i])
            {
				SendClientMessageEx(i, color, string);
   }
  }
 }
}

stock ResetPlayerWeaponsEx( playerid ){
	ResetPlayerWeapons(playerid);
	PlayerInfo[playerid][armas][0] = 0;
	PlayerInfo[playerid][armas][1] = 0;
	PlayerInfo[playerid][armas][2] = 0;
	PlayerInfo[playerid][armas][3] = 0;
	PlayerInfo[playerid][armas][4] = 0;
	PlayerInfo[playerid][armas][5] = 0;
	PlayerInfo[playerid][armas][6] = 0;
	PlayerInfo[playerid][armas][7] = 0;
	PlayerInfo[playerid][armas][8] = 0;
	PlayerInfo[playerid][armas][9] = 0;
	PlayerInfo[playerid][armas][10] = 0;
	PlayerInfo[playerid][armas][11] = 0;
	PlayerInfo[playerid][armas][12] = 0;
	return 1;
}

Team_SAPD(playerid){
	if(IsPlayerConnected(playerid)){
	    new leader = PlayerInfo[playerid][lider];
	    new member = PlayerInfo[playerid][miembro];
	    if(member	==	1){
		    return 1;
		}
		else if(leader	==	1)
		{
		    return 1;
		}
	}
	return 0;
}

stock NombreOOC(playerid){
    new nombre[32];
    GetPlayerName(playerid,nombre, 32);
    return nombre;
}

stock ABroadCast(color,string[],level)
{
	foreach(Player, i)
	{
		if (PlayerInfo[i][admlvl] >= level && AdminChat[i] == 0)
		{
			SendClientMessageEx(i, color, string);
			//printf("%s", string);
		}
	}
	return 1;
}

IsAPolice(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new leader = PlayerInfo[playerid][lider];
	    new member = PlayerInfo[playerid][miembro];
	    if(member==1)
		{
		    return 1;
		}
		else if(leader==1)
		{
		    return 1;
		}
	}
	return 0;
}

stock IsPoliceCar(vehicleid)
{
        if(vehipoli >= VehiclePoliceST && vehipoli <= VehiclePoliceEND)
        {
            return true;
        }
        else
        {
                return false;
        }
}


stock IsPlayerNear(playerid, toplayerid, Float:distance)
{
        new Float:p[3];
        GetPlayerPos(toplayerid, p[0], p[1], p[2]);
        if(IsPlayerInRangeOfPoint(playerid, distance, p[0], p[1], p[2]))
        {
                return true;
        }
        else
        {
            return false;
        }
}


stock GoodMoney(playerid, money)
{
        if(GetPlayerMoney(playerid) >= money)
        {
            return true;
        }
        else
        {
            return false;
        }
}


stock MensajeAtencion(playerid, text[]) {
        new s[256]; format(s, sizeof(s), "{FF0000}[ATENCIÓN]{FFFFFF} %s", text);
        return SendClientMessage(playerid, -1, s);
}


stock MensajeError(playerid, text[]) {
        new s[256]; format(s, sizeof(s), "{FF0000}[ERROR]{FFFFFF} %s", text);
        return SendClientMessage(playerid, -1, s);
}

stock ModVehicle(vehicleid)
{
	if(VehicleInfo[vehicleid][mod1] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod1]);
	if(VehicleInfo[vehicleid][mod2] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod2]);
	if(VehicleInfo[vehicleid][mod3] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod3]);
	if(VehicleInfo[vehicleid][mod4] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod4]);
	if(VehicleInfo[vehicleid][mod5] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod5]);
	if(VehicleInfo[vehicleid][mod6] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod6]);
	if(VehicleInfo[vehicleid][mod7] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod7]);
	if(VehicleInfo[vehicleid][mod8] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod8]);
	if(VehicleInfo[vehicleid][mod9] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod9]);
	if(VehicleInfo[vehicleid][mod10] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod10]);
	if(VehicleInfo[vehicleid][mod11] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod11]);
	if(VehicleInfo[vehicleid][mod12] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod12]);
	if(VehicleInfo[vehicleid][mod13] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod13]);
	if(VehicleInfo[vehicleid][mod14] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod14]);
	if(VehicleInfo[vehicleid][mod15] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod15]);
	if(VehicleInfo[vehicleid][mod16] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod16]);
	if(VehicleInfo[vehicleid][mod17] != 0) AddVehicleComponent(vehicleid,VehicleInfo[vehicleid][mod17]);
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(!isnull(VehicleInfo[vehicleid][VD]))
	{
	    if(VehicleInfo[vehicleid][VSTATUS] == 1 || VehicleInfo[vehicleid][VSTATUS] == 3) return 1;
	    if(VehicleInfo[vehicleid][VSTATUS] == 4 || VehicleInfo[vehicleid][VSTATUS] == 12)
	    {
	        for(new i = 0; i < sizeof(GruasPosition); i++)
            {
                if(GruasPosition[i][GOcupado] == vehicleid)
                {
    				GruasPosition[i][GOcupado] = -1;
    				break;
				}
			}
	    }
	    
	    for(new i = 0; i != 4; i++)
		{
			if(VehicleInfo[vehicleid][VKEY] == PlayerInfo[killerid][PlayerVehicleKey][i])
			{
			    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(killerid), false))
				{
				    PlayerPlaySound(killerid, 30803, 0.0, 0.0, 0.0);
				    VehicleInfo[vehicleid][VSTATUS] = 3; //DESTRUIDO
				    VehicleInfo[vehicleid][VehicleHealth] = 1000.0;
                    VehicleInfo[vehicleid][VPanels] = 0;
					VehicleInfo[vehicleid][VDoors] = 0;
					VehicleInfo[vehicleid][VLights] = 0;
					VehicleInfo[vehicleid][VTires] = 0;
				    new str[128];
				    format(str, 128, "Tu vehículo %s ha sido destruido.~n~Llama al ~b~202 ~w~para reclamar al seguro.", GetVehicleName(vehicleid));
					InfoMSG(killerid, 5000, str);
					return 1;
				}
			}
		}
		new OW = GetVehicleOwner(vehicleid);
		if(OW == -1) return 1;
		PlayerPlaySound(OW, 30803, 0.0, 0.0, 0.0);
	    VehicleInfo[vehicleid][VSTATUS] = 3; //DESTRUIDO
	    VehicleInfo[vehicleid][VehicleHealth] = 1000.0;
        VehicleInfo[vehicleid][VPanels] = 0;
		VehicleInfo[vehicleid][VDoors] = 0;
		VehicleInfo[vehicleid][VLights] = 0;
		VehicleInfo[vehicleid][VTires] = 0;
	    new str[128];
	    format(str, 128, "Tu vehículo %s ha sido destruido.~n~Llama al ~b~202 ~w~para reclamar al seguro.", GetVehicleName(vehicleid));
		InfoMSG(OW, 5000, str);
	    
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
    if(ChatLogDisabled[playerid]) return 0;
    if(iPhoneCallStatus[playerid] == 3)
	{
	    new str[256];
	    format(str, 256, "		{FFFF00}* Telefóno: {FFFFFF}%s", text);
	    SendClientMessage(callto[playerid], -1, str);
	    format(str, 256, "		{CCCCCC}* Telefóno: {FFFFFF}%s", text);
	    SendClientMessage(playerid, -1, str);
	    
	    new Pstr[145];
	  	format(Pstr,sizeof(Pstr),"%s dice (teléfono): %s", PlayerName(playerid), text);
		SendPlayersMessagePhone(10.0, playerid, 0xCCCCCCFF, Pstr);
	    return 0;
	}
    if(text[0] == '!')
    {
		if(text[1] != '\0')
		{
		    new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} %s.", PlayerName(playerid), text[1]);
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		return 0;
		}
	}
	if(PlayerMuted[playerid] == 1) {
    MensajeError(playerid, "Estás callado, no puedes hablar.");
    return 0;
	}
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1) return ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
	if(VehicleInfo[vehicleid][VSTATUS] == 2 || VehicleInfo[vehicleid][VSTATUS] == 6 || VehicleInfo[vehicleid][VSTATUS] == 12)
	{
		for(new i = 0; i != 4; i++)
		{
			if(VehicleInfo[vehicleid][VKEY] == PlayerInfo[playerid][PlayerVehicleKey][i])
			{
			    if(VehLocalizado[playerid][i] == 1)
			    {
			        switch(i)
			        {
			        	case 0: RemovePlayerMapIcon(playerid, 99);
	                    case 1: RemovePlayerMapIcon(playerid, 98);
	                    case 2: RemovePlayerMapIcon(playerid, 97);
	                    case 3: RemovePlayerMapIcon(playerid, 96);
			        }
			        VehLocalizado[playerid][i] = 0;
			    }
			}
		}
	}
	if(!isnull(VehicleInfo[vehicleid][VD]))
	{
		new engine, vlights, alarm, doors, bonnet, boot, objective;
		GetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
		if(doors)
		{
		    SendClientMessage(playerid, -1, "El vehículo está cerrado, el dueño tiene que {FFFF00}/abrir.");
		}
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    new vehipoli = GetPlayerVehicleID(playerid);
    if(vehipoli >= VehiclePoliceST && vehipoli <= VehiclePoliceEND) //aqui van las id de los autos que contamos en el GM, esto son los 2 que tenemos arriba 1 y 2.
    {
    if(PlayerInfo[playerid][faccion] != FACCION_PLC) return SendClientMessage(playerid, -1,"No perteneces a esta faccion: {ff6f00}Policia."), RemovePlayerFromVehicle(playerid);
    {
    SendClientMessage(playerid, -1," ");
    }
    }
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
	if(newstate == PLAYER_STATE_DRIVER)
	{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1)
	{
    RemovePlayerFromVehicle(playerid);
	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
	return 1;
	}
    new vehicleid = GetPlayerVehicleID(playerid);
    if(vehicleid >= VVehicleGrotti[0] && vehicleid <= VVehicleGrotti[1])
    {
	SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
    InfoMSG(playerid, 3000, "Has entrado a un vehículo de exposición,~n~~b~dirígase al mostrador si desea comprar uno.");
    return 1;
    }
    if(vehicleid >= VVehicleBike[0] && vehicleid <= VVehicleBike[1])
    {
	SetVehicleParamsEx(vehicleid, 1, 0, 0, 0, 0, 0, 0);
    return 1;
    }
		
    if(!isnull(VehicleAudio[vehicleid]))
    {
	PlayAudioStreamForPlayer(playerid, VehicleAudio[vehicleid]);
    }

	}
	if(newstate == PLAYER_STATE_PASSENGER)
	{
    new vehicleid = GetPlayerVehicleID(playerid);

    if(!isnull(VehicleAudio[vehicleid]))
    {
    PlayAudioStreamForPlayer(playerid, VehicleAudio[vehicleid]);
    }

	}
	if(oldstate == PLAYER_STATE_PASSENGER || oldstate == PLAYER_STATE_DRIVER) StopAudioStreamForPlayer(playerid);
	if(oldstate == PLAYER_STATE_ONFOOT)
	{
	if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1)
	{
	ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, 0, 1, 1, 1, 0, 1);
	return 1;
	}
	}
	return 1;
}


funcion:Float:GetVehicleMaxVelocity(modelid)
{
	switch(modelid)
	{
	    case 400: return 159.0;
	    case 401: return 148.0;
	    case 402: return 188.0;
	    case 403: return 110.0;
	    case 404: return 134.0;
	    case 405: return 165.0;
	    case 406: return 111.0;
	    case 407: return 149.0;
		case 408: return 101.0;
		case 409: return 159.0;
		case 410: return 131.0;
		case 411: return 223.0;
		case 412: return 170.0;
		case 413: return 111.0;
		case 414: return 106.0;
		case 415: return 194.0;
		case 416: return 155.0;
		case 417: return 1.0;
		case 418: return 116.0;
		case 419: return 150.0;
		case 420: return 146.0;
		case 421: return 155.0;
		case 422: return 141.0;
		case 423: return 99.0;
		case 424: return 136.0;
		case 425: return 1.0;
		case 426: return 175.0;
		case 427: return 167.0;
		case 428: return 158.0;
		case 429: return 203.0;
		case 430: return 1.0;
		case 431: return 131.0;
		case 432: return 95.0;
		case 433: return 111.0;
		case 434: return 168.0;
		case 435: return 1.0;
		case 436: return 150.0;
		case 437: return 159.0;
		case 438: return 144.0;
		case 439: return 170.0;
		case 440: return 137.0;
		case 441: return 1.0;
		case 442: return 140.0;
		case 443: return 127.0;
		case 444: return 111.0;
		case 445: return 165.0;
		case 446: return 1.0;
		case 447: return 1.0;
		case 448: return 116.0;
		case 449: return 1.0;
		case 450: return 1.0;
		case 451: return 195.0;
		case 452: return 1.0;
		case 453: return 1.0;
		case 454: return 1.0;
		case 455: return 159.0;
		case 456: return 107.0;
		case 457: return 96.0;
		case 458: return 158.0;
		case 459: return 137.0;
		case 460: return 1.0;
		case 461: return 167.0;
		case 462: return 107.0;
		case 463: return 142.0;
		case 464: return 1.0;
		case 465: return 1.0;
		case 466: return 148.0;
		case 467: return 141.0;
		case 468: return 143.0;
		case 469: return 1.0;
		case 470: return 158.0;
		case 471: return 111.0;
		case 472: return 1.0;
		case 473: return 1.0;
		case 474: return 150.0;
		case 475: return 174.0;
		case 476: return 1.0;
		case 477: return 188.0;
		case 478: return 118.0;
		case 479: return 141.0;
		case 480: return 186.0;
		case 481: return 1.0;
		case 482: return 158.0;
		case 483: return 124.0;
		case 484: return 1.0;
		case 485: return 100.0;
		case 486: return 65.0;
		case 487: return 1.0;
		case 488: return 1.0;
		case 489: return 140.0;
		case 490: return 158.0;
		case 491: return 150.0;
		case 492: return 141.0;
		case 493: return 1.0;
		case 494: return 216.0;
		case 495: return 178.0;
		case 496: return 164.0;
		case 497: return 1.0;
		case 498: return 109.0;
		case 499: return 124.0;
		case 500: return 141.0;
		case 501: return 1.0;
		case 502: return 216.0;
		case 503: return 216.0;
		case 504: return 174.0;
		case 505: return 140.0;
		case 506: return 180.0;
		case 507: return 167.0;
		case 508: return 108.0;
		case 509: return 1.0;
		case 510: return 1.0;
		case 511: return 1.0;
		case 512: return 1.0;
		case 513: return 1.0;
		case 514: return 121.0;
		case 515: return 143.0;
		case 516: return 158.0;
		case 517: return 158.0;
		case 518: return 165.0;
		case 519: return 1.0;
		case 520: return 1.0;
		case 521: return 169.0;
		case 522: return 190.0;
		case 523: return 168.0;
		case 524: return 131.0;
		case 525: return 162.0;
		case 526: return 159.0;
		case 527: return 150.0;
		case 528: return 178.0;
		case 529: return 150.0;
		case 530: return 61.0;
		case 531: return 71.0;
		case 532: return 111.0;
		case 533: return 168.0;
		case 534: return 170.0;
		case 535: return 159.0;
		case 536: return 174.0;
		case 537: return 1.0;
		case 538: return 1.0;
		case 539: return 100.0;
		case 540: return 150.0;
		case 541: return 204.0;
		case 542: return 165.0;
		case 543: return 152.0;
		case 544: return 149.0;
		case 545: return 148.0;
		case 546: return 150.0;
		case 547: return 144.0;
		case 548: return 1.0;
		case 549: return 154.0;
		case 550: return 146.0;
		case 551: return 158.0;
		case 552: return 122.0;
		case 553: return 1.0;
		case 554: return 145.0;
		case 555: return 159.0;
		case 556: return 111.0;
		case 557: return 111.0;
		case 558: return 157.0;
		case 559: return 179.0;
		case 560: return 170.0;
		case 561: return 155.0;
		case 562: return 179.0;
		case 563: return 1.0;
		case 564: return 1.0;
		case 565: return 166.0;
		case 566: return 161.0;
		case 567: return 174.0;
		case 568: return 147.0;
		case 569: return 1.0;
		case 570: return 1.0;
		case 571: return 94.0;
		case 572: return 61.0;
		case 573: return 111.0;
		case 574: return 61.0;
		case 575: return 159.0;
		case 576: return 159.0;
		case 577: return 1.0;
		case 578: return 131.0;
		case 579: return 159.0;
		case 580: return 154.0;
		case 581: return 168.0;
		case 582: return 137.0;
		case 583: return 86.0;
		case 584: return 1.0;
		case 585: return 154.0;
		case 586: return 158.0;
		case 587: return 166.0;
		case 588: return 109.0;
		case 589: return 164.0;
		case 590: return 1.0;
		case 591: return 1.0;
		case 592: return 1.0;
		case 593: return 1.0;
		case 594: return 1.0;
		case 595: return 1.0;
		case 596: return 177.0;
		case 597: return 177.0;
		case 598: return 177.0;
		case 599: return 159.0;
		case 600: return 152.0;
		case 601: return 111.0;
		case 602: return 170.0;
		case 603: return 172.0;
		case 604: return 148.0;
		case 605: return 152.0;
		case 606: return 1.0;
		case 607: return 1.0;
		case 608: return 1.0;
		case 609: return 108.0;
		case 610: return 1.0;
		case 611: return 1.0;
	}
	return 1.0;
}
/*
new Camionc;
    if(Camionc >= CamionesTrabajo && Camionc <= CamionesTrabajoEND)
    {
*/


public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
    if(areaid == Area_CarWash)
	{
	if(IsPlayerInAnyVehicle(playerid))
    {
    if(GetPlayerVehicleSeat(playerid) == 0)
    {
    new Float:p[3];
    GetPlayerPos(playerid, p[0], p[1], p[2]);
    if(p[2] >= 10.0 && 15.0 >= p[2])
    {
    PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos("Presiona ~b~~k~~CONVERSATION_YES~ ~w~para lavar tu vehículo"));
	PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
	return 1;
	}
	}
	}
	}
    return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    if(areaid == Area_CarWash) return PlayerTextDrawHide(playerid, ErrorCommand[playerid]);
	{
    if(areaid == Area_Gruas)
	{
	    if(VehLocalizado[playerid][4] != 1) return 1;
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        new vid = GetPlayerVehicleID(playerid);
	        if(!isnull(VehicleInfo[vid][VD]))
	        {
	            if(!strcmp(VehicleInfo[vid][VD], PlayerNameNormal(playerid), false))
				{
		            for(new i = 0; i < sizeof(GruasPosition); i++)
		            {
		                if(GruasPosition[i][GOcupado] == vid)
		                {
		                    MovePlayerObject(playerid, RejaGrua[playerid], 2478.5989, -2094.4929, 12.7136, 2.0);
		                    VehLocalizado[playerid][4] = -1;
		                    VehicleInfo[GruasPosition[i][GOcupado]][VSTATUS] = 2;
		    				GruasPosition[i][GOcupado] = -1;
		    				break;
		    				}
		    				}
						  }
						}
					}
				}
			}
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    if(IsPlayerNPC(playerid)) return 1;
	return 1;
}



public OnPlayerObjectMoved(playerid, objectid)
{
        if(objectid == CreditObject[playerid])
        {
        print("A");
        new Float:x, Float:y, Float:z;
        x = 1153.070434;
        y = -2089.879882;
        z = 56.483135;
        SetPlayerObjectPos(playerid, CreditObject[playerid], x, y, z);
        MovePlayerObject(playerid, CreditObject[playerid], x, y, z-15, 0.2);
        }
        return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == Alhambra_Pick)
    {
        if(NPC_USED[NPCS[30]] == 0)
        {
			NPC_USED[NPCS[30]] = 1;
			ApplyAnimation(NPCS[30], "BAR", "Barserve_order", 4.0, 0, 0, 0, 0, 0, 1);
			ApplyAnimation(NPCS[30], "BAR", "Barserve_order", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerPos(playerid, 481.611053, -10.849586, 993.276672);
			SetPlayerFacingAngle(playerid, 90.0);
			TogglePlayerControllable(playerid, false);
			ShowMenuForPlayer(AlhambraMenu, playerid);
			PlayerEvent[playerid][10] = 2;
			return 1;
		}
		return 1;
	}
	else if(pickupid == Conce_Pick1 || pickupid == Conce_Pick2)
    {
        if(P_catalogogrotti[playerid] == -1)
        {
        	InfoMSG(playerid, 3000, "Presiona ~y~~k~~VEHICLE_ENTER_EXIT~ ~w~para ver el ~y~catálogo");
		}
		return 1;
    }
    else if(pickupid == Binco_Pick || pickupid == Victim_Pick1 || pickupid == Victim_Pick2 || pickupid == Prolaps_Pick || pickupid == Suburban_Pick)
    {
        if(P_catalogobinco[playerid] == -1)
        {
        	InfoMSG(playerid, 3000, "Presiona ~y~~k~~VEHICLE_ENTER_EXIT~ ~w~para ver el ~y~catálogo");
		}
		return 1;
    }
    else if(pickupid == Zip_Pick)
    {
        if(P_catalogozip[playerid] == -1)
        {
            InfoMSG(playerid, 3000, "Presiona ~y~~k~~VEHICLE_ENTER_EXIT~ ~w~para ver el ~y~catálogo");
        }
        return 1;
    }
    else if(pickupid == RecogerVeh_Pick)
    {
        if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return 1;
        if(GetPlayerVirtualWorld(playerid) != 0) return 1;
        if(IsPlayerInAnyVehicle(playerid)) return 1;
        DisablePlayerCheckpoint(playerid);
        new name[24];
	    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
		for(new i = 0; i != MAX_VEHICLES; i ++)
		{
		    if(IsValidVehicle(i))
		    {
				if(!isnull(VehicleInfo[i][VD]))
				{
				    if(!strcmp(name, VehicleInfo[i][VD], false))
				    {
				        if(VehicleInfo[i][VSTATUS] == 1)
				        {
				            SetVehicleVirtualWorld(i, 0);
				            PutPlayerInVehicle(playerid, i, 0);
				            SetVehicleZAngle(i, -90.0);
				            SetVehiclePos(i, 1767.7363, -2049.0488, 13.7746);
				            VehicleInfo[i][VSTATUS] = 2; //Normal
				            SetVehicleParamsEx(i, 1, 0, 0, 0, 0, 0, 0);
				            break;
				        }
					}
				}
			}
		}
        return 1;
    }
    else if(pickupid == RecogerVehGrua_Pick)
    {
        if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return 1;
        if(GetPlayerVirtualWorld(playerid) != 0) return 1;
        if(IsPlayerInAnyVehicle(playerid)) return 1;
        DisablePlayerCheckpoint(playerid);
        new name[24];
	    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
		for(new i = 0; i != MAX_VEHICLES; i ++)
		{
		    if(IsValidVehicle(i))
		    {
				if(!isnull(VehicleInfo[i][VD]))
				{
				    if(!strcmp(name, VehicleInfo[i][VD], false))
				    {
				        if(VehicleInfo[i][VSTATUS] == 4)
				        {
				            if(150 > PlayerInfo[playerid][dinero]) return InfoMSG(playerid, 1000, "Necesitas $150 para pagar la multa. (bolsillo)");
				            if(GetVehicleVirtualWorld(i) == 0)
				            {
				                PlayerInfo[playerid][dinero] -= 150;
					            ResetPlayerMoney(playerid);
								GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
								//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					            VehLocalizado[playerid][4] = 1;
					            new Float:vpos[4];
					            GetVehiclePos(i, vpos[0], vpos[1], vpos[2]);
					            GetVehicleZAngle(i, vpos[3]);
				                SendClientMessageEx(playerid, -1, "Ve a coger tu %s.", GetVehicleName(i));
				                SetPlayerCheckpoint(playerid, vpos[0], vpos[1], vpos[2], 3.0);
				               
				                VehicleInfo[i][VSTATUS] = 12;
				                MovePlayerObject(playerid, RejaGrua[playerid], 2478.5989, -2085.9929, 12.7136, 2.0);
				                SetPlayerPos(playerid, 2469.913085, -2090.330566, 13.546875);
				                SetPlayerFacingAngle(playerid, 270.0);
				                SetCameraBehindPlayer(playerid);
				                //MyTimers[playerid][24] = SetTimerEx("CheckGruaTimer", 300000, 0, "id", playerid, i);
								break;
				            }
				            else
				            {
				                SetVehicleVirtualWorld(i, 0);
								VehicleInfo[i][VSTATUS] = 6;
								SetPlayerPos(playerid, 2469.913085, -2090.330566, 13.546875);
				                SetPlayerFacingAngle(playerid, 270.0);
				                SetPlayerCheckpoint(playerid, 2469.913085, -2090.330566, 13.546875, 3.0);
				                break;
				            }
				        }
					}
				}
			}
		}
        return 1;
    }
    else if(pickupid == PizzaStack_Pick1 || pickupid == PizzaStack_Pick2 || pickupid == PizzaStack_Pick3)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(PizzaStackedMenu, playerid);
		return 1;
    }
    else if(pickupid == BarGR_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(BebidasMenu, playerid);
		return 1;
    }
    else if(pickupid == PigPen_Pick)
    {
        if(NPC_USED[NPCS[40]] == 0)
        {
			NPC_USED[NPCS[40]] = 1;
			ApplyAnimation(NPCS[40], "BAR", "Barserve_order", 4.0, 0, 0, 0, 0, 0, 1);
			ApplyAnimation(NPCS[40], "BAR", "Barserve_order", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerPos(playerid, 1215.061279, -13.353262, 1000.921875);
			SetPlayerFacingAngle(playerid, 180.0);
			TogglePlayerControllable(playerid, false);
			ShowMenuForPlayer(PigPenMenu, playerid);
			PlayerEvent[playerid][11] = 2;
			return 1;
		}
		return 1;
	}
	else if(pickupid == Donuts_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(DonutMenu, playerid);
		return 1;
    }
    else if(pickupid == ChickBell_Pick1 || pickupid == ChickBell_Pick2)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(ChickBellMenu, playerid);
		return 1;
    }
    else if(pickupid == Burger_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(BurgerShotMenu, playerid);
		return 1;
    }
    else if(pickupid == Hotdog_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(HotdogMenu, playerid);
		return 1;
    }
    else if(pickupid == AyuntShop_Pick || pickupid == UnityShop_Pick || pickupid == VineShop_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(ShopMenuN, playerid);
		return 1;
    }
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(!isnull(VehicleInfo[vehicleid][VD]))
		{
		    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(playerid), false))
			{
                SaveComponent(playerid, vehicleid, componentid);
                return 1;
			}
		}
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(!isnull(VehicleInfo[vehicleid][VD]))
		{
		    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(playerid), false))
			{
                VehicleInfo[vehicleid][vpaintjob] = paintjobid;
                return 1;
			}
		}
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    if(!isnull(VehicleInfo[vehicleid][VD]))
		{
		    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(playerid), false))
			{
                VehicleInfo[vehicleid][vcolor1] = color1;
		    	VehicleInfo[vehicleid][vcolor2] = color2;
		        return 1;
			}
		}
	}
	return 1;
}

funcion:BarContinue(playerid, t, d)
{
	switch(t)
	{
	    case 0:
	    {
	        ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	SetTimerEx("BarContinue", 1200, false, "idd", playerid, 1, d);
         
	    }
	    case 1:
	    {
	        if(d == 0) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
	        else SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	        InfoMSG(playerid, 5000, "Usa ~b~~k~~VEHICLE_FIREWEAPON~ ~w~para beber, y ~b~F ~w~para dejar de beber.");
	        TogglePlayerControllable(playerid, true);
            PlayerEvent[playerid][10] = 0;
            SetTimerEx("BarContinue", 3000, false, "id", playerid, 2);
	    }
	    case 2:
	    {
	        NPC_USED[NPCS[30]] = 0;
	    }
	}
	return 1;
}

funcion:PigPenContinue(playerid, t, d)
{
	switch(t)
	{
	    case 0:
	    {
	        ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	SetTimerEx("PigPenContinue", 1200, false, "idd", playerid, 1, d);

	    }
	    case 1:
	    {
	        if(d == 0) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
	        else SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	        InfoMSG(playerid, 5000, "Usa ~b~~k~~VEHICLE_FIREWEAPON~ ~w~para beber, y ~b~F ~w~para dejar de beber.");
	        TogglePlayerControllable(playerid, true);
            PlayerEvent[playerid][11] = 0;
            SetTimerEx("PigPenContinue", 3000, false, "id", playerid, 2);
	    }
	    case 2:
	    {
	        NPC_USED[NPCS[40]] = 0;
	    }
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{	
    if(GetPlayerMenu(playerid) == AlhambraMenu)
    {
        if(row == 0) SetTimerEx("BarContinue", 1000, false, "idd", playerid, 0, 0);
        else SetTimerEx("BarContinue", 1000, false, "idd", playerid, 0, 1);
        ApplyAnimation(NPCS[30], "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0, 1);
        ApplyAnimation(NPCS[30], "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0, 1);
        return 1;
    }
    if(GetPlayerMenu(playerid) == PigPenMenu)
    {
        if(row == 0) SetTimerEx("PigPenContinue", 1000, false, "idd", playerid, 0, 0);
        else SetTimerEx("PigPenContinue", 1000, false, "idd", playerid, 0, 1);
        ApplyAnimation(NPCS[40], "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0, 1);
        ApplyAnimation(NPCS[40], "BAR", "Barserve_bottle", 4.0, 0, 0, 0, 0, 0, 1);
        return 1;
    }
    if(GetPlayerMenu(playerid) == BincoMenu)
    {
        if(row == 0)
        {
		    PlayerInMenu[playerid][0] = -2;
			ShowMenuForPlayer(TOYSMENU, playerid);
			new Float:p[4];
			new Float:xy[2];
			GetPlayerPos(playerid, p[0], p[1], p[2]);
			GetPlayerFacingAngle(playerid, p[3]);
			xy[0] = p[0] + (0.5 * floatsin(-p[3], degrees));
			xy[1] = p[1] + (0.5 * floatcos(-p[3], degrees));

			SetPlayerCameraPos(playerid, xy[0], xy[1], (p[2]+0.75));
			SetPlayerCameraLookAt(playerid, p[0], p[1], (p[2]+0.75));
			return 1;
		}
		else if(row == 1)
		{
		    SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0])));
			SelectTextDraw(playerid, -1);
			loop(0, 6, i) TextDrawShowForPlayer(playerid, TD_Ropa[i]);
			new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
			PlayerTextDrawShow(playerid, PTD_Ropa[playerid]);
			SendClientMessage(playerid, -1, "Usa la tecla {FFFF00}ESC {FFFFFF}para salir del catálogo.");
			for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		 	}
			return 1;
		}
    }
    if(GetPlayerMenu(playerid) == ZipMenu)
    {
        if(row == 0)
        {
		    PlayerInMenu[playerid][0] = -2;
			ShowMenuForPlayer(TOYSMENU, playerid);
			new Float:p[4];
			new Float:xy[2];
			GetPlayerPos(playerid, p[0], p[1], p[2]);
			GetPlayerFacingAngle(playerid, p[3]);
			xy[0] = p[0] + (0.5 * floatsin(-p[3], degrees));
			xy[1] = p[1] + (0.5 * floatcos(-p[3], degrees));

			SetPlayerCameraPos(playerid, xy[0], xy[1], (p[2]+0.75));
			SetPlayerCameraLookAt(playerid, p[0], p[1], (p[2]+0.75));
			return 1;
		}
		else if(row == 1)
		{
		    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		 	}
			SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0])));
			SelectTextDraw(playerid, -1);
			loop(0, 6, i) TextDrawShowForPlayer(playerid, TD_Ropa[i]);
			new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
			PlayerTextDrawShow(playerid, PTD_Ropa[playerid]);
			SendClientMessage(playerid, -1, "Usa la tecla {FFFF00}ESC {FFFFFF}para salir del catálogo.");
			return 1;
		}
    }
    if(GetPlayerMenu(playerid) == TOYSMENU)
    {
        switch(row)
        {
            case 0:
            {
                new str[12];
				format(str, 12, "$%d", RP_CASCOS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Cascos");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_CASCOS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_CASCOS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_CASCOS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 0;
				PlayerInMenu[playerid][1] = 0;
            }
            case 1:
            {
                new str[12];
				format(str, 12, "$%d", RP_GORRAS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Gorras");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORRAS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORRAS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_GORRAS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 1;
				PlayerInMenu[playerid][1] = 0;
            }
            case 2:
            {
                new str[12];
				format(str, 12, "$%d", RP_GORROS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Gorros");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORROS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORROS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_GORROS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 2;
				PlayerInMenu[playerid][1] = 0;
            }
            case 3:
            {
                new str[12];
				format(str, 12, "$%d", RP_SOMBREROS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Sombreros");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_SOMBREROS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_SOMBREROS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_SOMBREROS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 3;
				PlayerInMenu[playerid][1] = 0;
            }
            case 4:
            {
                new str[12];
				format(str, 12, "$%d", RP_BANDANAS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Bandanas");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_BANDANAS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_BANDANAS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_BANDANAS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 4;
				PlayerInMenu[playerid][1] = 0;
            }
            case 5:
            {
                new str[12];
				format(str, 12, "$%d", RP_GAFAS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Gafas");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GAFAS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GAFAS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_GAFAS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 5;
				PlayerInMenu[playerid][1] = 0;
            }
            case 6:
            {
                new str[12];
				format(str, 12, "$%d", RP_MASKS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Mascaras");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_MASKS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_MASKS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_MASKS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 6;
				PlayerInMenu[playerid][1] = 0;
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == PizzaStackedMenu)
    {
        switch(row)
        {
            case 0:
            {
                ShowMenuForPlayer(PizzaMenu, playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == PizzaMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 1) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(20 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 2) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 20;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 3) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 4) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
	       
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 4:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 23) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}

 	if(GetPlayerMenu(playerid) == BebidasMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 15) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 16) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 19) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 20) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 4:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 24) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 5:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 17) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}

 	if(GetPlayerMenu(playerid) == DonutMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 10) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(6 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 11) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 6;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(6 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 12) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 6;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 24) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}
    if(GetPlayerMenu(playerid) == ChickBellMenu)
    {
        switch(row)
        {
            case 0:
            {
                ShowMenuForPlayer(ChickMenu, playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }
    
 	if(GetPlayerMenu(playerid) == ChickMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(25 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 8) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 25;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(20 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 9) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 20;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 23) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}

	if(GetPlayerMenu(playerid) == BurgerShotMenu)
    {
        switch(row)
        {
            case 0:
            {
                ShowMenuForPlayer(BurgerMenu, playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }
    
 	if(GetPlayerMenu(playerid) == BurgerMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 5) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 6) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 7) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 23) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}
	if(GetPlayerMenu(playerid) == HotdogMenu)
    {
        switch(row)
        {
            case 0:
            {
				if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 18) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 10;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == ShopMenuN)
    {
        switch(row)
        {
            case 0:
            {
				ShowMenuForPlayer(BebidasMenu, playerid);
            }
            case 1:
            {
                if(150 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 25) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 150;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                ShowMenuForPlayer(TabacoMenu, playerid);
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == TabacoMenu)
    {
        switch(row)
        {
            case 0:
            {
				if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 14) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 10;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 13) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 10;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
    }

	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	if(GetPlayerMenu(playerid) == AlhambraMenu)
    {
		TogglePlayerControllable(playerid, true);
	    PlayerEvent[playerid][10] = 0;
	    SetPlayerSpecialAction(playerid, 0);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    SetTimerEx("BarContinue", 3000, false, "id", playerid, 2);
	    return 1;
    }
    if(GetPlayerMenu(playerid) == PigPenMenu)
    {
		TogglePlayerControllable(playerid, true);
	    PlayerEvent[playerid][11] = 0;
	    SetPlayerSpecialAction(playerid, 0);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    SetTimerEx("PigPenContinue", 3000, false, "id", playerid, 2);
	    return 1;
    }
    if(GetPlayerMenu(playerid) == BincoMenu)
    {
    	SetPlayerVirtualWorld(playerid, 0);
	    SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, true);
		P_catalogobinco[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		return 1;
	}
	if(GetPlayerMenu(playerid) == ZipMenu)
    {
    	SetPlayerVirtualWorld(playerid, 0);
	    SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, true);
		P_catalogozip[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		return 1;
	}
	if(GetPlayerMenu(playerid) == TOYSMENU)
    {
    	SetCameraBehindPlayer(playerid);
		PlayerInMenu[playerid][0] = -1;
		PlayerInMenu[playerid][1] = -1;
		TogglePlayerControllable(playerid, true);
		SetPlayerVirtualWorld(playerid, 0);
		P_catalogobinco[playerid] = -1;
		P_catalogozip[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		return 1;
	}
	if(GetPlayerMenu(playerid) == PizzaStackedMenu || GetPlayerMenu(playerid) == PizzaMenu || GetPlayerMenu(playerid) == BebidasMenu || GetPlayerMenu(playerid) == DonutMenu ||
		GetPlayerMenu(playerid) == ChickBellMenu || GetPlayerMenu(playerid) == ChickMenu || GetPlayerMenu(playerid) == BurgerShotMenu || GetPlayerMenu(playerid) == BurgerMenu ||
		GetPlayerMenu(playerid) == HotdogMenu || GetPlayerMenu(playerid) == ShopMenuN || GetPlayerMenu(playerid) == TabacoMenu)
    {
        TogglePlayerControllable(playerid, true);
        MyTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
    }
	return 1;
}

funcion:ReEnableShopForPlayer(playerid)
{
	return P_tienda[playerid] = -1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	if(newinteriorid == 0 && (oldinteriorid == 17 || oldinteriorid == 2))
	{
	    StopAudioStreamForPlayer(playerid);
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    if( newkeys == KEY_SECONDARY_ATTACK )//SALIDA
    {
    if(IsPlayerInRangeOfPoint(playerid, 1.0, 2007.9645, -1974.6633, 1013.1760))
    {
    SetPlayerPos(playerid, 1991.1034, -2101.1775, 13.5179);
    }
    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1991.1034, -2101.1775, 13.5179))//ENTRADA
    {
    SetPlayerPos(playerid, 2007.9717, -1974.7034, 1015.5560);
    }
    }
	if(newkeys & KEY_ANALOG_UP)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
			new vehicleid = GetPlayerVehicleID(playerid);
	        if(!isnull(VehicleInfo[vehicleid][VD]))
	        {
	            new co = 0;
	            for(new i = 0; i != 4; i++)
				{
					if(VehicleInfo[vehicleid][VKEY] == PlayerInfo[playerid][PlayerVehicleKey][i])
					{
					    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(playerid), false))
						{
					
						    co = 1;
					        new engine, vlights, alarm, doors, bonnet, boot, objective;
							GetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
							if(engine)
							{
								if(MyTimers[playerid][24] != -1) return 1;
								new str[145];
						      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} gira la llave de su vehículo y apaga el motor.", PlayerName(playerid));
						 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
						 		SendClientMessage(playerid, -1, "Al apagar tu vehículo, este quedará aparcado aquí, hasta que vuelva a arrancar el motor.");
						 		SendClientMessage(playerid, -1, "Si está mal aparcado la grúa podría llevarselo.");
								MyTimers[playerid][24] = SetTimerEx("SetVehicleParamsPlayer", 500, false, "idddddddd", playerid, vehicleid, 0, vlights, alarm, doors, bonnet, boot, objective);
							}
							else
							{
							    if(MyTimers[playerid][24] != -1) return 1;
							    new str[145];
						      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} gira la llave de su vehículo...", PlayerName(playerid));
						 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
								MyTimers[playerid][24] = SetTimerEx("SetVehicleParamsPlayer", 1000, false, "idddddddd", playerid, vehicleid, 1, vlights, alarm, doors, bonnet, boot, objective);
							}
						}
					}
				}
				if(co == 0) InfoMSG(playerid, 3000, "No tienes las llaves de este vehículo.");
	        }
	        else
	        {
	        	new engine, vlights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
				if(engine) SetVehicleParamsEx(vehicleid, 0, vlights, alarm, doors, bonnet, boot, objective);
				else SetVehicleParamsEx(vehicleid, 1, vlights, alarm, doors, bonnet, boot, objective);
	        
	        }
		}
	}
	if(newkeys & KEY_ANALOG_DOWN)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        new vehicleid = GetPlayerVehicleID(playerid);
			new engine, vlights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
			if(vlights) SetVehicleParamsEx(vehicleid, engine, 0, alarm, doors, bonnet, boot, objective);
			else SetVehicleParamsEx(vehicleid, engine, 1, alarm, doors, bonnet, boot, objective);
			return 1;
		}
	}
	if(newkeys & KEY_YES)
	{
	    if(IsPlayerInDynamicArea(playerid, Area_CarWash))
        {
            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
            new Float:p[3];
		    GetPlayerPos(playerid, p[0], p[1], p[2]);
		    if(p[2] >= 10.0 && 15.0 >= p[2])
		    {
				if(CarWashUsed == 1) return SendClientMessage(playerid, -1, "Espera que la persona que hay dentro acabe.");
				if(25 > PlayerInfo[playerid][dinero]) return SendClientMessage(playerid, -1, "Necesitas {FFFF00}$25 {FFFFFF}para usar este servicio.");
				for(new x = 0; x < sizeof(unwashable); x++)
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == unwashable[x][0])
					{
						SendClientMessage(playerid, -1, "No puedes lavar este vehículo.");
						return 1;
					}
				}
				CarWashUsed = 1;
				CarWashUsedBy[playerid] = 1;
				new vehicleid = GetPlayerVehicleID(playerid);
				foreach(new i : Player)
				{
					if(GetPlayerVehicleID(i) == vehicleid)
					{
		                SetPlayerVirtualWorld(i, playerid);
		                TogglePlayerControllable(i, false);
					}
				}
				CarWashUsedBy[playerid] = vehicleid;
				SetPlayerVirtualWorld(playerid, playerid);
				SetVehicleVirtualWorld(vehicleid, playerid);
				SetVehiclePos(vehicleid, 1911.1471, -1782.4995, 13.0840);
				SetPlayerCameraPos(playerid, 1906.8824, -1784.9575, 15.1860);
				SetPlayerCameraLookAt(playerid, 1907.5662, -1784.2316, 14.9760);
				SetVehicleZAngle(vehicleid, 0.0);
				TogglePlayerControllable(playerid, true);
				MyTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 0);
				return 1;
			}
        }
	   
        if(iPhoneCallStatus[playerid] == 2)
	    {
	        iPhoneCallStatus[playerid] = 3;
	        iPhoneCallStatus[callto[playerid]] = 3;
	        //SendClientMessage(callto[playerid], -1, "Llamada establecida");
	        PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][0], "Llamada~n~establecida...");
	        PlayerTextDrawSetString(callto[playerid], PTD_iPhone_Info[callto[playerid]][0], "Llamada~n~establecida...");
	        return 1;
	    }
	    if(iPhone_CC[1][playerid] == 1 || iPhone_CC[2][playerid] == 1)
	    {
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        return 1;
		}
	    if(iPhoneStatus[playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 2;
	        TextDrawHideForPlayer(playerid, TD_iPhone[19]);
	        TextDrawHideForPlayer(playerid, TD_iPhone[20]);
	        TextDrawHideForPlayer(playerid, TD_iPhone[21]);
	        loop(22, 26, PHONE) TextDrawShowForPlayer(playerid, TD_iPhone[PHONE]);
	        loop(0, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
	        UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	    }
	    else if(iPhoneStatus[playerid] == 2)
	    {
	        new menuid = UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	        if(menuid == 12 || menuid == 2 || menuid == 5) return PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 3;
	        TextDrawHideForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	        ShowIphoneMenu(playerid, menuid);
	    }
	    if(PlayerInMenu[playerid][0] != -1)
	    {
		    switch(PlayerInMenu[playerid][0])
		    {
		        case 0: //CASCOS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_CASCOS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_CASCOS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_CASCOS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 1: //GORRAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_GORRAS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORRAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORRAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 2: //GORROS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_GORROS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 3: //SOMBREROS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_SOMBREROS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 4: //BANDANAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_BANDANAS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_BANDANAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 5: //GAFAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_GAFAS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_GAFAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GAFAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
	                SmartAttacher(playerid, RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 6: //MASCARAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_MASKS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_MASKS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_MASKS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
			}
		}
	    return 1;
	}
	else if(newkeys & KEY_NO)
	{
	
	    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)//estbleciendo la llamada
	    {
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    HideIphoneMenu(playerid);
		    iPhoneStatus[playerid] = 0;

		    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    HideIphoneMenu(callto[playerid]);
		    iPhoneStatus[callto[playerid]] = 0;
		    return 1;
		}

		/*
			iPhoneCallStatus[playerid] = 0;
		    iPhoneCallStatus[callto[playerid]] = 0;
		    iPhoneStatus[playerid] = 0;
	        iPhoneStatus[callto[playerid]] = 0;

	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
	     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
            PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
   			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);

			loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    PlayerTextDrawHide(callto[playerid], PTD_iPhone_Call[callto[playerid]]);
	     	TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[1]);
			PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][0]);
   			PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][1]);

			SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
			called[playerid] = "";
			called[callto[playerid]] = "";
	        callto[callto[playerid]] = 0;
		    callto[playerid] = 0;
			return 1;
	    }
else if(iPhoneCallStatus[playerid] == 3)
		{
		    iPhoneCallStatus[playerid] = 0;
		    iPhoneCallStatus[callto[playerid]] = 0;
		    iPhoneStatus[playerid] = 0;
	        iPhoneStatus[callto[playerid]] = 0;

	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
	     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
   			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);

			loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    PlayerTextDrawHide(callto[playerid], PTD_iPhone_Call[callto[playerid]]);
	     	TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[1]);
			PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][0]);
   			PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][1]);

			SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
			called[playerid] = "";
			called[callto[playerid]] = "";
	        callto[callto[playerid]] = 0;
		    callto[playerid] = 0;
		    return 1;
		}*/
	    if(iPhoneStatus[playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        loop(0, 22, PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    iPhoneStatus[playerid] = 0;
		    return 1;
	    }
	    else if(iPhoneStatus[playerid] == 2)
	    {
	        PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 1;
	        loop(22, 26, PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	        loop(0, 37, PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	        TextDrawShowForPlayer(playerid, TD_iPhone[19]);
	        TextDrawShowForPlayer(playerid, TD_iPhone[20]);
	        TextDrawShowForPlayer(playerid, TD_iPhone[21]);
	        return 1;
	    }
	    else if(iPhoneStatus[playerid] == 3)
	    {
	        PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 2;
	        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
	        HideIphoneMenu(playerid);
	        return 1;
	    }
	    if(PlayerInMenu[playerid][0] != -1)
	    {
		    switch(PlayerInMenu[playerid][0])
		    {
		        case 0: //CASCOS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_CASCOS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_CASCOS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_CASCOS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 1: //GORRAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_GORRAS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORRAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORRAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 2: //GORROS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_GORROS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 3: //SOMBREROS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_SOMBREROS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 4: //BANDANAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_BANDANAS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_BANDANAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 5: //GAFAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_GAFAS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_GAFAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GAFAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 6: //MASCARAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_MASKS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_MASKS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_MASKS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		    }
		}
	    return 1;
	}
	if(newkeys & KEY_ANALOG_LEFT)
	{
	    if(iPhone_CC[0][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        PlayerTextDrawSetString(playerid, PTD_iPhone_Gallery[playerid], Gallery[random(sizeof(Gallery))]);
	        return 1;
	    }
	    if(iPhone_CC[1][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Radio[random(sizeof(Radio))]);
	        return 1;
	    }
	    if(iPhone_CC[2][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Music[random(sizeof(Music))]);
	        return 1;
	    }
	    if(iPhoneStatus[playerid] == 2)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			if(MenuX[playerid] == 0)
			{
			    if(MenuY[playerid] == 0)
			    {
			        MenuX[playerid] = 2;
				    MenuY[playerid] = 3;
				    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
			        return 1;
			    }
			    MenuY[playerid] -= 1;
			    MenuX[playerid] = 2;
			    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
				return 1;
			}
	        MenuX[playerid] -= 1;
	        UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	    }
	    return 1;
	}
	if(newkeys & KEY_ANALOG_RIGHT || newkeys & KEY_HANDBRAKE)
	{
	    if(iPhone_CC[0][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        PlayerTextDrawSetString(playerid, PTD_iPhone_Gallery[playerid], Gallery[random(sizeof(Gallery))]);
	        return 1;
	    }
	    if(iPhone_CC[1][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Radio[random(sizeof(Radio))]);
	        return 1;
			}
	    if(iPhone_CC[2][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Music[random(sizeof(Music))]);
	        return 1;
	    }
	    if(iPhoneStatus[playerid] == 2)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			if(MenuX[playerid] == 2)
			{
			    if(MenuY[playerid] == 3)
			    {
			        MenuY[playerid] = 0;
				    MenuX[playerid] = 0;
				    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
			        return 1;
			    }
			    MenuY[playerid] += 1;
			    MenuX[playerid] = 0;
			    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
			    return 1;
			}
	        MenuX[playerid] += 1;
	        UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	    }
	    return 1;
	}
	if((newkeys & KEY_SPRINT))
	{
	    if(PlayerInMenu[playerid][0] >= 0)
	    {
			switch(PlayerInMenu[playerid][0])
			{
				case 0:
				{
				    if(RP_CASCOS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_CASCOS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				    PlayerInfo[playerid][pToyModelID][0] = PlayerInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", PlayerInfo[playerid][pToyModelID][0]);
				    PlayerInfo[playerid][pToyBone][0] = PlayerInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", PlayerInfo[playerid][pToyBone][0]);
				    PlayerInfo[playerid][pToyX][0] = PlayerInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", PlayerInfo[playerid][pToyX][0]);
				    PlayerInfo[playerid][pToyY][0] = PlayerInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", PlayerInfo[playerid][pToyY][0]);
				    PlayerInfo[playerid][pToyZ][0] = PlayerInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", PlayerInfo[playerid][pToyZ][0]);
				    PlayerInfo[playerid][pToyRX][0] = PlayerInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", PlayerInfo[playerid][pToyRX][0]);
				    PlayerInfo[playerid][pToyRY][0] = PlayerInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", PlayerInfo[playerid][pToyRY][0]);
				    PlayerInfo[playerid][pToyRZ][0] = PlayerInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", PlayerInfo[playerid][pToyRZ][0]);
				    PlayerInfo[playerid][pToySX][0] = PlayerInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", PlayerInfo[playerid][pToySX][0]);
				    PlayerInfo[playerid][pToySY][0] = PlayerInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", PlayerInfo[playerid][pToySY][0]);
				    PlayerInfo[playerid][pToySZ][0] = PlayerInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", PlayerInfo[playerid][pToySZ][0]);
				}
				case 1:
				{
				    if(RP_GORRAS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_GORRAS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
     				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				    PlayerInfo[playerid][pToyModelID][0] = PlayerInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", PlayerInfo[playerid][pToyModelID][0]);
				    PlayerInfo[playerid][pToyBone][0] = PlayerInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", PlayerInfo[playerid][pToyBone][0]);
				    PlayerInfo[playerid][pToyX][0] = PlayerInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", PlayerInfo[playerid][pToyX][0]);
				    PlayerInfo[playerid][pToyY][0] = PlayerInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", PlayerInfo[playerid][pToyY][0]);
				    PlayerInfo[playerid][pToyZ][0] = PlayerInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", PlayerInfo[playerid][pToyZ][0]);
				    PlayerInfo[playerid][pToyRX][0] = PlayerInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", PlayerInfo[playerid][pToyRX][0]);
				    PlayerInfo[playerid][pToyRY][0] = PlayerInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", PlayerInfo[playerid][pToyRY][0]);
				    PlayerInfo[playerid][pToyRZ][0] = PlayerInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", PlayerInfo[playerid][pToyRZ][0]);
				    PlayerInfo[playerid][pToySX][0] = PlayerInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", PlayerInfo[playerid][pToySX][0]);
				    PlayerInfo[playerid][pToySY][0] = PlayerInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", PlayerInfo[playerid][pToySY][0]);
				    PlayerInfo[playerid][pToySZ][0] = PlayerInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", PlayerInfo[playerid][pToySZ][0]);
				}
				case 2:
				{
				    if(RP_GORROS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_GORROS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				    PlayerInfo[playerid][pToyModelID][0] = PlayerInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", PlayerInfo[playerid][pToyModelID][0]);
				    PlayerInfo[playerid][pToyBone][0] = PlayerInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", PlayerInfo[playerid][pToyBone][0]);
				    PlayerInfo[playerid][pToyX][0] = PlayerInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", PlayerInfo[playerid][pToyX][0]);
				    PlayerInfo[playerid][pToyY][0] = PlayerInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", PlayerInfo[playerid][pToyY][0]);
				    PlayerInfo[playerid][pToyZ][0] = PlayerInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", PlayerInfo[playerid][pToyZ][0]);
				    PlayerInfo[playerid][pToyRX][0] = PlayerInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", PlayerInfo[playerid][pToyRX][0]);
				    PlayerInfo[playerid][pToyRY][0] = PlayerInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", PlayerInfo[playerid][pToyRY][0]);
				    PlayerInfo[playerid][pToyRZ][0] = PlayerInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", PlayerInfo[playerid][pToyRZ][0]);
				    PlayerInfo[playerid][pToySX][0] = PlayerInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", PlayerInfo[playerid][pToySX][0]);
				    PlayerInfo[playerid][pToySY][0] = PlayerInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", PlayerInfo[playerid][pToySY][0]);
				    PlayerInfo[playerid][pToySZ][0] = PlayerInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", PlayerInfo[playerid][pToySZ][0]);
				}
				case 3:
				{
				    if(RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				    PlayerInfo[playerid][pToyModelID][0] = PlayerInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", PlayerInfo[playerid][pToyModelID][0]);
				    PlayerInfo[playerid][pToyBone][0] = PlayerInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", PlayerInfo[playerid][pToyBone][0]);
				    PlayerInfo[playerid][pToyX][0] = PlayerInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", PlayerInfo[playerid][pToyX][0]);
				    PlayerInfo[playerid][pToyY][0] = PlayerInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", PlayerInfo[playerid][pToyY][0]);
				    PlayerInfo[playerid][pToyZ][0] = PlayerInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", PlayerInfo[playerid][pToyZ][0]);
				    PlayerInfo[playerid][pToyRX][0] = PlayerInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", PlayerInfo[playerid][pToyRX][0]);
				    PlayerInfo[playerid][pToyRY][0] = PlayerInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", PlayerInfo[playerid][pToyRY][0]);
				    PlayerInfo[playerid][pToyRZ][0] = PlayerInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", PlayerInfo[playerid][pToyRZ][0]);
				    PlayerInfo[playerid][pToySX][0] = PlayerInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", PlayerInfo[playerid][pToySX][0]);
				    PlayerInfo[playerid][pToySY][0] = PlayerInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", PlayerInfo[playerid][pToySY][0]);
				    PlayerInfo[playerid][pToySZ][0] = PlayerInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", PlayerInfo[playerid][pToySZ][0]);
				}
				case 4:
				{
				    if(RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
         			//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][1] = 1; //SaveValue(playerid, "PTOY1", PlayerInfo[playerid][pToy][1]);
				    PlayerInfo[playerid][pToyModelID][1] = PlayerInfo[playerid][pToyModelID][4]; //SaveValue(playerid, "PTOYMID1", PlayerInfo[playerid][pToyModelID][1]);
				    PlayerInfo[playerid][pToyBone][1] = PlayerInfo[playerid][pToyBone][4]; //SaveValue(playerid, "PTOYBONE1", PlayerInfo[playerid][pToyBone][1]);
				    PlayerInfo[playerid][pToyX][1] = PlayerInfo[playerid][pToyX][4]; //SaveFloat(playerid, "PTOYX1", PlayerInfo[playerid][pToyX][1]);
				    PlayerInfo[playerid][pToyY][1] = PlayerInfo[playerid][pToyY][4]; //SaveFloat(playerid, "PTOYY1", PlayerInfo[playerid][pToyY][1]);
				    PlayerInfo[playerid][pToyZ][1] = PlayerInfo[playerid][pToyZ][4]; //SaveFloat(playerid, "PTOYZ1", PlayerInfo[playerid][pToyZ][1]);
				    PlayerInfo[playerid][pToyRX][1] = PlayerInfo[playerid][pToyRX][4]; //SaveFloat(playerid, "PTOYRX1", PlayerInfo[playerid][pToyRX][1]);
				    PlayerInfo[playerid][pToyRY][1] = PlayerInfo[playerid][pToyRY][4]; //SaveFloat(playerid, "PTOYRY1", PlayerInfo[playerid][pToyRY][1]);
				    PlayerInfo[playerid][pToyRZ][1] = PlayerInfo[playerid][pToyRZ][4]; //SaveFloat(playerid, "PTOYRZ1", PlayerInfo[playerid][pToyRZ][1]);
				    PlayerInfo[playerid][pToySX][1] = PlayerInfo[playerid][pToySX][4]; //SaveFloat(playerid, "PTOYSX1", PlayerInfo[playerid][pToySX][1]);
				    PlayerInfo[playerid][pToySY][1] = PlayerInfo[playerid][pToySY][4]; //SaveFloat(playerid, "PTOYSY1", PlayerInfo[playerid][pToySY][1]);
				    PlayerInfo[playerid][pToySZ][1] = PlayerInfo[playerid][pToySZ][4]; //SaveFloat(playerid, "PTOYSZ1", PlayerInfo[playerid][pToySZ][1]);
				}
				case 5:
				{
				    if(RP_GAFAS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_GAFAS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][2] = 1; //SaveValue(playerid, "PTOY2", PlayerInfo[playerid][pToy][2]);
				    PlayerInfo[playerid][pToyModelID][2] = PlayerInfo[playerid][pToyModelID][5]; //SaveValue(playerid, "PTOYMID2", PlayerInfo[playerid][pToyModelID][2]);
				    PlayerInfo[playerid][pToyBone][2] = PlayerInfo[playerid][pToyBone][5]; //SaveValue(playerid, "PTOYBONE2", PlayerInfo[playerid][pToyBone][2]);
				    PlayerInfo[playerid][pToyX][2] = PlayerInfo[playerid][pToyX][5]; //SaveFloat(playerid, "PTOYX2", PlayerInfo[playerid][pToyX][2]);
				    PlayerInfo[playerid][pToyY][2] = PlayerInfo[playerid][pToyY][5]; //SaveFloat(playerid, "PTOYY2", PlayerInfo[playerid][pToyY][2]);
				    PlayerInfo[playerid][pToyZ][2] = PlayerInfo[playerid][pToyZ][5]; //SaveFloat(playerid, "PTOYZ2", PlayerInfo[playerid][pToyZ][2]);
				    PlayerInfo[playerid][pToyRX][2] = PlayerInfo[playerid][pToyRX][5]; //SaveFloat(playerid, "PTOYRX2", PlayerInfo[playerid][pToyRX][2]);
				    PlayerInfo[playerid][pToyRY][2] = PlayerInfo[playerid][pToyRY][5]; //SaveFloat(playerid, "PTOYRY2", PlayerInfo[playerid][pToyRY][2]);
				    PlayerInfo[playerid][pToyRZ][2] = PlayerInfo[playerid][pToyRZ][5]; //SaveFloat(playerid, "PTOYRZ2", PlayerInfo[playerid][pToyRZ][2]);
				    PlayerInfo[playerid][pToySX][2] = PlayerInfo[playerid][pToySX][5]; //SaveFloat(playerid, "PTOYSX2", PlayerInfo[playerid][pToySX][2]);
				    PlayerInfo[playerid][pToySY][2] = PlayerInfo[playerid][pToySY][5]; //SaveFloat(playerid, "PTOYSY2", PlayerInfo[playerid][pToySY][2]);
				    PlayerInfo[playerid][pToySZ][2] = PlayerInfo[playerid][pToySZ][5]; //SaveFloat(playerid, "PTOYSZ2", PlayerInfo[playerid][pToySZ][2]);
				}
				case 6:
				{
				    if(RP_MASKS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_MASKS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					PlayerInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				    PlayerInfo[playerid][pToyModelID][0] = PlayerInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", PlayerInfo[playerid][pToyModelID][0]);
				    PlayerInfo[playerid][pToyBone][0] = PlayerInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", PlayerInfo[playerid][pToyBone][0]);
				    PlayerInfo[playerid][pToyX][0] = PlayerInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", PlayerInfo[playerid][pToyX][0]);
				    PlayerInfo[playerid][pToyY][0] = PlayerInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", PlayerInfo[playerid][pToyY][0]);
				    PlayerInfo[playerid][pToyZ][0] = PlayerInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", PlayerInfo[playerid][pToyZ][0]);
				    PlayerInfo[playerid][pToyRX][0] = PlayerInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", PlayerInfo[playerid][pToyRX][0]);
				    PlayerInfo[playerid][pToyRY][0] = PlayerInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", PlayerInfo[playerid][pToyRY][0]);
				    PlayerInfo[playerid][pToyRZ][0] = PlayerInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", PlayerInfo[playerid][pToyRZ][0]);
				    PlayerInfo[playerid][pToySX][0] = PlayerInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", PlayerInfo[playerid][pToySX][0]);
				    PlayerInfo[playerid][pToySY][0] = PlayerInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", PlayerInfo[playerid][pToySY][0]);
				    PlayerInfo[playerid][pToySZ][0] = PlayerInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", PlayerInfo[playerid][pToySZ][0]);
				}
			}
			
			SetCameraBehindPlayer(playerid);
		    TogglePlayerControllable(playerid, true);
			SetPlayerVirtualWorld(playerid, 0);
			P_catalogobinco[playerid] = -1;
			P_catalogozip[playerid] = -1;
			ChatLogDisabled[playerid] = false;
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][2]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][3]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][4]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][5]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][6]);
			PlayerInMenu[playerid][0] = -1;
			PlayerInMenu[playerid][1] = -1;
			ColocarToys(playerid);
			SendClientMessage(playerid, -1, "Puedes usar /colocar para recolocar el toy.");
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    //if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return 1;
	    if(IsPlayerInRangeOfPoint(playerid, 1.0, 361.829895, 173.562728, 1008.0)) // Info ayunta
	    {
			//ShowPlayerDialog(playerid, DIALOG_AYUNTA, DIALOG_STYLE_LIST, "Ayuntamiento", "Carnet de préstamo de bicicletas", "Continuar", "Cancelar");
            return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 217.469360, -98.421447, 1005.257812))//Binco
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 217.620590, -98.439628, 1005.257812);
        	    SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerCameraPos(playerid, 217.620590, -101.2583, 1004.9333);
				SetPlayerCameraLookAt(playerid, 217.620590, -98.439628, 1005.257812);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 206.654342, -3.857390, 1001.210937))//Victim1
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 206.654342, -3.857390, 1001.210937);
        	    SetPlayerFacingAngle(playerid, 216.314559);
				SetPlayerCameraPos(playerid, 208.996902, -6.378699, 1002.744689);
				SetPlayerCameraLookAt(playerid, 208.339981, -5.671638, 1002.482910);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 206.305984, -12.398782, 1001.217773))//Victim2
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 206.305984, -12.398782, 1001.217773);
        	    SetPlayerFacingAngle(playerid, 318.775543);
				SetPlayerCameraPos(playerid, 208.470794, -9.816300, 1002.595092);
				SetPlayerCameraLookAt(playerid, 207.844818, -10.563082, 1002.370483);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 181.209182, -87.911384, 1002.030700))//Zip
	    {
	        if(P_catalogozip[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 181.209182, -87.911384, 1002.030700);
        	    SetPlayerFacingAngle(playerid, 119.502670);
				SetPlayerCameraPos(playerid, 178.819305, -89.351303, 1003.269470);
				SetPlayerCameraLookAt(playerid, 179.654266, -88.848236, 1003.046386);
				TogglePlayerControllable(playerid, false);
				P_catalogozip[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(ZipMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 199.650726, -127.131729, 1003.515197))//Prolaps
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 199.650726, -127.131729, 1003.515197);
        	    SetPlayerFacingAngle(playerid, 147.076416);
				SetPlayerCameraPos(playerid, 198.744400, -129.838806, 1004.909729);
				SetPlayerCameraLookAt(playerid, 199.050262, -128.925231, 1004.641723);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 214.175384, -41.355842, 1002.023437))//SubUrban
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 214.175384, -41.355842, 1002.023437);
        	    SetPlayerFacingAngle(playerid, 93.182929);
				SetPlayerCameraPos(playerid, 210.900207, -42.473999, 1003.145874);
				SetPlayerCameraLookAt(playerid, 211.835983, -42.154525, 1002.996704);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    //concesionario catalogo
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 560.660095, -1310.996093, 1996.575927) || IsPlayerInRangeOfPoint(playerid, 1.0, 560.660095, -1313.875244, 1996.575927)) // Grotti
	    {
	        if(P_catalogogrotti[playerid] == -1)
        	{
	        	new Float:p[6];
				GetPlayerCameraPos(playerid, p[0], p[1], p[2]);
				GetPlayerCameraLookAt(playerid, p[3], p[4], p[5]);
				InterpolateCameraPos(playerid, p[0], p[1], p[2], 544.1366, -1307.1511, 1999.2629, 2000);
				InterpolateCameraLookAt(playerid, p[3], p[4], p[5], 544.1366, -1298.1511, 1997.2629, 2000);
				TogglePlayerControllable(playerid, false);
				P_catalogogrotti[playerid] = 3;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				loop(0, 9, i) TextDrawShowForPlayer(playerid, TD_GrottiCatalogo[i]);
				PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Infernus");
				PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$450.000");
				PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 580.0, 0.000000);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 575.0, 0.000000);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][1]);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
				SelectTextDraw(playerid, -1);
				MyTimers[playerid][16] = SetTimerEx("GrottiContinue", 2000, false, "id", playerid, 0);
				SendClientMessage(playerid, -1, "Usa la tecla {FFFF00}ESC {FFFFFF}para salir del catálogo.");
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1437.143798, -997.824829, 1639.791137) || IsPlayerInRangeOfPoint(playerid, 1.0, 1433.200439, -997.829040, 1639.791137) || IsPlayerInRangeOfPoint(playerid, 1.0, 1429.596923, -997.829467, 1639.784301))
		{
		    if(PlayerInfo[playerid][BankA] == 0) ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Crear cuenta bancaria\n{CCCCCC}Retirar\n{CCCCCC}Depositar\n{CCCCCC}Transferir", "Continuar", "Cancelar");
		    else ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Retirar\n{FFFFFF}Depositar\n{FFFFFF}Transferir", "Continuar", "Cancelar");
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1204.8596, 12.2682, 1000.9991)) // Bitch
	    {
		    if(NPC_USED[NPCS[BITCH_BJ]]) return InfoMSG(playerid, 1500, "Hay alguien dentro, espera a que acabe.");
	        if(PlayerInfo[playerid][sexo] == 1) return InfoMSG(playerid, 1500, "Este ~b~servicio ~w~es solo para chicos.");
	        if(150 > PlayerInfo[playerid][dinero]) return InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
	
      
            PlayerInfo[playerid][dinero] -= 150;
            ResetPlayerMoney(playerid);
            GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

			SetPlayerPos(NPCS[BITCH_BJ], 1204.164794, 16.917709, 1000.921875-1.0);
			SetPlayerFacingAngle(NPCS[BITCH_BJ], 325.0);
			ApplyAnimation(NPCS[BITCH_BJ],"LAPDAN1","LAPDAN_D",4.1,0,0,0,0,0,1);

		    SetPlayerInteriorEx(playerid, 2, INT_BITCH);
		    SetPlayerPos(playerid, 1204.495849, 17.410648, 1000.921875);
		    SetPlayerFacingAngle(playerid, 145.0);
		    TogglePlayerControllable(playerid, false);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1, 1);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1, 1);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1, 1);
			MyTimers[playerid][11] = SetTimerEx("BitchContinue", 10000, false, "id", playerid, 0);
			SetPlayerCameraPos(playerid, 1206.4519, 13.3467, 1002.5107);
			SetPlayerCameraLookAt(playerid, 1205.9796, 14.2284, 1002.1209);
			PlayerEvent[playerid][BITCH_BJ] = true;
			NPC_USED[NPCS[BITCH_BJ]] = true;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1714.56897, -1862.00928, 13.40750) || IsPlayerInRangeOfPoint(playerid, 1.0, 1479.56226, -1620.46985, 13.90706)
				|| IsPlayerInRangeOfPoint(playerid, 1.0, 1995.02405, -1452.68469, 13.43710) || IsPlayerInRangeOfPoint(playerid, 1.0, 1187.30322, -930.41052, 42.92493)
				|| IsPlayerInRangeOfPoint(playerid, 1.0, 615.66272, -1228.28015, 18.19140) || IsPlayerInRangeOfPoint(playerid, 1.0, 849.83258, -1796.12292, 13.67352)
				|| IsPlayerInRangeOfPoint(playerid, 1.0, 1443.42688, -2286.75879, 13.39686) || IsPlayerInRangeOfPoint(playerid, 1.0, 2849.94849, -1967.06055, 10.92459)) // INFO
		{
		    ShowPlayerDialog(playerid, DIALOG_GPS+9, DIALOG_STYLE_LIST, "GPS", "Tiendas de comida\nTiendas de ropa\nTiendas 24/7\nConcesionarios\nLugares de ocio\nServicios públicos\nTrabajos", "Siguiente", "Cancelar");
		}
		if(PlayerInMenu[playerid][0] >= 0)
	    {
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][2]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][3]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][4]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][5]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][6]);
			for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
	        {
	            if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	        }
			PlayerInMenu[playerid][0] = -2;
 			ShowMenuForPlayer(TOYSMENU, playerid);
			PlayerInMenu[playerid][1] = -1;
			ColocarToys(playerid);
			return 1;
		}
		if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			for(new i = 0; i != sizeof(Entradas); i++)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 1.0, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ]))
			    {
					SetPlayerPos(playerid, Entradas[i][SX], Entradas[i][SY], Entradas[i][SZ]);
					SetPlayerFacingAngle(playerid, Entradas[i][SAngle]);
					SetPlayerInteriorEx(playerid, 0, INT_NONE);
					return 1;
			    }
			    else if(IsPlayerInRangeOfPoint(playerid, 1.0, Entradas[i][SX], Entradas[i][SY], Entradas[i][SZ]))
			    {
			        if(Entradas[i][ID] == INT_PELU2 || Entradas[i][ID] == INT_VIP) return InfoMSG(playerid, 1500, "Este local a quebrado.");
	                if(Entradas[i][Apertura] == 0 && Entradas[i][Cierre] == 0) goto Teleport;
			        if(Entradas[i][Apertura] <= ServerTime && Entradas[i][Cierre] > ServerTime)
					{
					    Teleport:
						if(Entradas[i][Freeze] == 0) SetPlayerPos(playerid, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ]);
						else if(Entradas[i][Freeze] == 1) SetPlayerPosAndFreeze(playerid, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ], 0);
						SetPlayerFacingAngle(playerid, Entradas[i][EAngle]);
						SetPlayerInteriorEx(playerid, Entradas[i][EInteriorID], Entradas[i][ID]);
						switch(Entradas[i][ID])
						{
						    case INT_ALHAM, INT_PIGPEN:
						    {
						        PlayAudioStreamForPlayer(playerid, "http://somafm.com/tags.pls");
						    }
							case INT_GROTTI:
							{
							    if(PlayerInfo[playerid][VGrotti] == 0)
					            {
					                TogglePlayerSpectating(playerid, true);
									InterpolateCameraPos(playerid, 563.4124, -1307.5094, 1997.8839, 560.8727, -1307.2117, 1997.7656, 10000);
									InterpolateCameraLookAt(playerid, 562.7654, -1306.7488, 1997.8208, 560.2227, -1306.4536, 1997.7225, 10000);
									PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Grotti.~n~__En Grotti podrás comprar~n~__vehículos de alta gama...~n~~n~"));
									PlayerTextDrawShow(playerid, TD_IO[playerid]);
									DeleteChatForPlayer(playerid,32,a);
									ChatLogDisabled[playerid] = true;
									GetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
								    GetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
									MyTimers[playerid][21] = SetTimerEx("GrottiNextView", 9000, 0, "id", playerid, 0);
					            }
							}
							case INT_BANCO:
							{
							    if(PlayerInfo[playerid][VBank] == 0)
					            {
					                TogglePlayerSpectating(playerid, true);
									InterpolateCameraPos(playerid, 1415.2568, -980.4594, 1646.3146, 1416.7799, -981.5507, 1645.6415, 10000);
									InterpolateCameraLookAt(playerid, 1416.0691, -981.0414, 1645.9556, 1417.5922, -982.1328, 1645.2825, 10000);
									PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Banco LS.~n~__Este es el banco nacional~n~__de Los Santos...~n~~n~"));
									PlayerTextDrawShow(playerid, TD_IO[playerid]);
									DeleteChatForPlayer(playerid,32,a);
									ChatLogDisabled[playerid] = true;
									
								    GetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
								    GetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
									MyTimers[playerid][21] = SetTimerEx("BankNextView", 9000, 0, "id", playerid, 0);
					            }
							}
						}
						return 1;
					}
					else
					{
					    new str[128];
					    format(str, 128, "Local cerrado.~n~~y~H:~w~ %d:00 - %d:00", Entradas[i][Apertura], Entradas[i][Cierre]);
						InfoMSG(playerid, 1500, str);
					}
					return 1;
			    }
			}

			for(new i = 0; i != sizeof(Cajeros); i++)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 1.0, Cajeros[i][0], Cajeros[i][1], Cajeros[i][2]))
			    {
			        if(P_bank_state[playerid] > 0) return 1;
			        ChatLogDisabled[playerid] = true;
			    	loop(0, 11, l)
					{
						TextDrawShowForPlayer(playerid, Bank[l]);
						SendClientMessage(playerid, -1, " ");
					}
					ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
					P_bank_state[playerid] = 1;
					if(PlayerInfo[playerid][BankA] == 0) MyTimers[playerid][17] = SetTimerEx("BankContinue", 600, false, "id", playerid, 5);
					else BankContinue(playerid, 4); //MyTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 0);
					return 1;
				}
			}
		}
        if(newkeys & KEY_FIRE)
        {
        if(HaveTaser[playerid] == 1)
        {
        ApplyAnimation(playerid,"KNIFE","knife_3",4.1,0,1,1,0,0,1);
        VirtualTimers[playerid][10] = SetTimerEx("TimerClear",2000,false,"d",playerid);
        new victimid; //GetClosestPlayer(playerid);
        if(!IsPlayerConnected(victimid)) return 1;
        //if(GetDistanceBetweenPlayers(playerid,victimid) < 2)
        {
        if(Tased[victimid] != 0) return 1;
        new Float:health, str[64];
        GetPlayerHealth(victimid, health);
        SetPlayerHealth(victimid, health - 5.0);
        Tased[victimid] = 1;
        //new str[50];
        format(str, sizeof(str), "* %s ha tazeado a %s.", PlayerName(playerid), PlayerName(victimid));
        SendPlayersMessage(10.0, playerid, 0xBE9BC1FF, str);
        VirtualTimers[playerid][11] = SetTimerEx("TimerFall",300,false,"d",victimid);
        return 1;
        }
        }
        }
        if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
        return 1;
/*
	    // ----> Entradas
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 542.3840,-1293.5125,17.2422)) // Grotti
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
            SetPlayerPosAndFreeze(playerid, 545.4426,-1318.3784,1996.5759, 0);
            SetPlayerFacingAngle(playerid, 350);
            SetPlayerInteriorEx(playerid, 1, INT_GROTTI);
            
            if(PlayerInfo[playerid][VGrotti] == 0)
            {
                TogglePlayerSpectating(playerid, true);
				InterpolateCameraPos(playerid, 563.4124, -1307.5094, 1997.8839, 560.8727, -1307.2117, 1997.7656, 10000);
				InterpolateCameraLookAt(playerid, 562.7654, -1306.7488, 1997.8208, 560.2227, -1306.4536, 1997.7225, 10000);
				PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Grotti.~n~__En Grotti podrás comprar~n~__vehículos de alta gama...~n~~n~"));
				PlayerTextDrawShow(playerid, TD_IO[playerid]);
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				MyTimers[playerid][21] = SetTimerEx("GrottiNextView", 9000, 0, "id", playerid, 0);
            }
            return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1464.851318, -1010.793090, 26.843750)) // Banco
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "El ~b~banco ~w~está cerrado.");
	        SetPlayerPos(playerid, 1464.995117, -1009.071533, 26.815937);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 0, INT_BANCO);
	        
	        if(PlayerInfo[playerid][VBank] == 0)
            {
                TogglePlayerSpectating(playerid, true);
				InterpolateCameraPos(playerid, 1462.3059, -1035.7103, 28.8558, 1462.3125, -1037.5824, 29.4559, 10000);
				InterpolateCameraLookAt(playerid, 1462.3025, -1034.7119, 28.5358, 1462.3091, -1036.5840, 29.1359, 10000);
				PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Banco LS.~n~__Este es el banco nacional~n~__de Los Santos...~n~~n~"));
				PlayerTextDrawShow(playerid, TD_IO[playerid]);
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				MyTimers[playerid][21] = SetTimerEx("BankNextView", 9000, 0, "id", playerid, 0);
            }
	        return 1;
	    }

	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 648.8630,-1360.6012,13.5863)) // CNN
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "~b~CNN ~w~está cerrado.");
	        SetPlayerPosAndFreeze(playerid, 646.0635,-1356.4440,4002.5896, 0);
	        SetPlayerFacingAngle(playerid, 270);
	        SetPlayerInteriorEx(playerid, 1, INT_CNN);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1654.2700,-1654.8944,22.5156)) // Vip place
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPosAndFreeze(playerid, 852.8785,-1372.0012,1993.0859, 0);
			SetPlayerFacingAngle(playerid, 90);
	        SetPlayerInteriorEx(playerid, 1, INT_VIP);
	        return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1204.8596, 12.2682, 1000.9991)) // Bitch
	    {
	        if(NPC_USED[NPCS[BITCH_BJ]]) return InfoMSG(playerid, 1500, "Hay alguien dentro, espera a que acabe.");
	        if(PlayerInfo[playerid][sexo] == 1) return InfoMSG(playerid, 1500, "Este ~b~servicio ~w~es solo para chicos.");
			ApplyAnimation(NPCS[BITCH_BJ], "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 1);
			ApplyAnimation(NPCS[BITCH_BJ], "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 1);
		    ApplyAnimation(NPCS[BITCH_BJ], "BLOWJOBZ", "BJ_COUCH_LOOP_W", 4.0, 1, 1, 1, 1, 1);

		    SetPlayerInteriorEx(playerid, 2, INT_BITCH);
		    SetPlayerPos(playerid, 1204.495849, 17.410648, 1000.921875);
		    SetPlayerFacingAngle(playerid, 145.0);
		    TogglePlayerControllable(playerid, false);
		    SetPlayerAttachedObject(playerid,0,322,1,-0.183999,0.331000,0.017000,-81.499977,54.600013,-5.900000,1.000000,1.000000,1.000000);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1);
			PlayerPlaySound(playerid, 31400, 1206.4519, 13.3467, 1002.5107);
			MyTimers[playerid][11] = SetTimerEx("BitchContinue", 10000, false, "id", playerid, 0);
			SetPlayerCameraPos(playerid, 1206.4519, 13.3467, 1002.5107);
			SetPlayerCameraLookAt(playerid, 1205.9796, 14.2284, 1002.1209);
			PlayerEvent[playerid][BITCH_BJ] = true;
			NPC_USED[NPCS[BITCH_BJ]] = true;
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1833.149780, -1842.485717, 13.578125)) // 24/7 Unity
	    {
	        if(NPC_USED[NPCS[SHOP_UNITY]]) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada temporalmente.");
            if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, -25.7535, -187.7502, 1004.1781);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 17, INT_247U);
			return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1836.4471,-1682.3042,13.3476)) // Alhambra
	    {
	        //if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, " ~b~Alhambra ~w~está cerrado.");
	        SetPlayerPosAndFreeze(playerid, 490.257934, -23.031440, 993.276672, 0);
	        SetPlayerFacingAngle(playerid, 270);
	        SetPlayerInteriorEx(playerid, 17, INT_ALHAM);
	        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/mhlwhx33fgfv9kg/animals.mp3");
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1315.4854,-897.6839,39.5781)) // 24/7 VineWood
	    {
	        if(NPC_USED[NPCS[SHOP_VINE]]) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada temporalmente.");
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 6.0969,-31.7571,1003.5494);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 10, INT_247VIN);
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1352.3815,-1759.2286,13.5078)) // 24/7 Ayuntamiento
	    {
	        if(NPC_USED[NPCS[SHOP_AYUNT]]) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada temporalmente.");
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, -27.2896,-31.7540,1003.5573);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 4, INT_247AYU);
			return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2244.3567,-1665.5562,15.4766)) // Binco
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 207.6649,-110.9614,1005.1328);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 15, INT_BINCO);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1456.4344,-1137.6427,23.9484)) // Zip
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 161.2850,-97.0387,1001.8047);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 18, INT_ZIP);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 499.5753,-1360.6145,16.3664)) // ProLaps
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 206.9300,-140.3754,1003.5078);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 3, INT_PROLAPS);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2112.7739,-1211.6287,23.9631)) // Suburban
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 203.7609,-50.6566,1001.8047);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 1, INT_SUBURBA);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 597.2778,-1249.4883,18.3021)) // Victim
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 227.5633,-8.0725,1002.2109);
	        SetPlayerFacingAngle(playerid, 90);
	        SetPlayerInteriorEx(playerid, 5, INT_VICTIM);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 810.6630,-1616.1554,13.5469)) // Burger Shot
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 362.8626,-75.1578,1001.5078);
	        SetPlayerFacingAngle(playerid, 300);
	        SetPlayerInteriorEx(playerid, 10, INT_BURGER);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2105.4858,-1806.5336,13.5547)) // Pizzeria
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 372.2221,-133.5210,1001.4922);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 5, INT_PIZZA);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2070.6365,-1793.7847,13.5469)) // Peluqueria
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 411.9010,-54.4360,1001.8984);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 12, INT_PELU);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2068.5840,-1779.7758,13.5596)) // Tattoo studio
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, -204.4305,-9.0783,1002.2734);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 17, INT_TATTO);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 823.9835,-1588.2754,13.5545)) // Peluquería 2
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 411.5989,-23.1412,1001.8047);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 2, INT_PELU2);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 928.7275,-1352.9547,13.3438)) // Clukin' bell
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 364.9832,-11.8308,1001.8516);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 9, INT_BELL);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2421.3159,-1219.6179,25.5382)) // Pig Pen (Prostíbulo)
	    {
	        SetPlayerPos(playerid, 1204.7631,-13.8169,1000.9219);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 2, INT_PIGPEN);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2310.0977,-1643.5522,14.8270)) // Bar Groove
	    {
	        if(ServerTime > 22 || ServerTime < 8) return InfoMSG(playerid, 1500, "El ~b~bar ~w~está cerrado.");
	        SetPlayerPos(playerid, 501.9994,-67.7072,998.7578);
	        SetPlayerFacingAngle(playerid, 180);
	        SetPlayerInteriorEx(playerid, 11, INT_BARGR);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2229.8601,-1721.4545,13.5633)) // Caton gym
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "El ~b~gimnasio ~w~está cerrado.");
	        SetPlayerPos(playerid, 772.4008,-5.5150,1000.7287);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 5, INT_GYMLS);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1555.142822, -1675.475341, 16.195312)) //LSPD
	    {
	    	SetPlayerPosAndFreeze(playerid, 1557.468750, -1676.613159, 1990.540039, 0);
			SetPlayerFacingAngle(playerid, 260);
	        SetPlayerInteriorEx(playerid, 1, INT_LSPD);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1481.037597, -1771.786376, 18.795755)) // Ayuntamiento
	    {
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "El ~b~ayuntamiento ~w~está cerrado.");
	        SetPlayerPos(playerid, 390.414337, 174.018325, 1008.382812);
	        SetPlayerFacingAngle(playerid, 90);
	        SetPlayerInteriorEx(playerid, 3, INT_AYUNT);
	        return 1;
	    }
	    // ----> Salidas
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 545.3146,-1318.3827,1996.5759)) // Grotti
	    {
            SetPlayerPos(playerid, 542.3840,-1293.5125,17.2422);
            SetPlayerFacingAngle(playerid, 350);
            SetPlayerInteriorEx(playerid, 0, INT_NONE);
            return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1464.995117, -1009.071533, 26.815937)) // Banco
	    {
	        SetPlayerPos(playerid, 1464.851318, -1010.793090, 26.843750);
	        SetPlayerFacingAngle(playerid, 180);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 646.0635,-1356.4440,4002.5896)) // CNN
	    {
	        SetPlayerPos(playerid, 648.8630,-1360.6012,13.5863);
	        SetPlayerFacingAngle(playerid, 70);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 852.8785,-1372.0012,1993.0859)) // Vip place
	    {
	        SetPlayerPos(playerid, 1654.2700,-1654.8944,22.5156);
	        SetPlayerFacingAngle(playerid, 180);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, -25.7535, -187.7502, 1004.1781)) //24/7 Unity
	    {
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        SetPlayerFacingAngle(playerid, 90);
	        SetPlayerPos(playerid, 1833.149780, -1842.485717, 13.578125);
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 489.798309, -22.848724, 993.276672)) // Alhambra
	    {
	        SetPlayerPos(playerid, 1836.4471,-1682.3042,13.3476);
	        SetPlayerFacingAngle(playerid, 90);
	        StopAudioStreamForPlayer(playerid);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 6.0969,-31.7571,1003.5494)) // 24/7 VineWood
	    {
	        SetPlayerPos(playerid, 1315.4854,-897.6839,39.5781);
	        SetPlayerFacingAngle(playerid, 180);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -27.2896,-31.7540,1003.5573)) // 24/7 Ayuntamiento
	    {
	        SetPlayerPos(playerid, 1352.3815,-1759.2286,13.5078);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
			return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 207.6649,-110.9614,1005.1328)) // Binco
	    {
	        SetPlayerPos(playerid, 2244.3567,-1665.5562,15.4766);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 161.2850,-97.0387,1001.8047)) // Zip
	    {
	        SetPlayerPos(playerid, 1456.4344,-1137.6427,23.9484);
	        SetPlayerFacingAngle(playerid, 220);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 206.9300,-140.3754,1003.5078)) // ProLaps
	    {
	        SetPlayerPos(playerid, 499.5753,-1360.6145,16.3664);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 203.7609,-50.6566,1001.8047)) // Suburban
	    {
	        SetPlayerPos(playerid, 2112.7739,-1211.6287,23.9631);
	        SetPlayerFacingAngle(playerid, 180);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 227.5633,-8.0725,1002.2109)) // Victim
	    {
	        SetPlayerPos(playerid, 597.2778,-1249.4883,18.3021);
	        SetPlayerFacingAngle(playerid, 30);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 362.8626,-75.1578,1001.5078)) // Burger Shot
	    {
	        SetPlayerPos(playerid, 810.6630,-1616.1554,13.5469);
	        SetPlayerFacingAngle(playerid, 270);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 372.2221,-133.5210,1001.4922)) // Pizzeria
	    {
	        SetPlayerPos(playerid, 2105.4858,-1806.5336,13.5547);
	        SetPlayerFacingAngle(playerid, 90);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 411.9010,-54.4360,1001.8984)) // Peluqueria
	    {
	        SetPlayerPos(playerid, 2070.6365,-1793.7847,13.5469);
	        SetPlayerFacingAngle(playerid, 260);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, -204.4305,-9.0783,1002.2734)) // Tattoo studio
	    {
	        SetPlayerPos(playerid, 2068.5840,-1779.7758,13.5596);
	        SetPlayerFacingAngle(playerid, 280);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 411.5989,-23.1412,1001.8047)) // Peluquería 2
	    {
	        SetPlayerPos(playerid, 823.9835,-1588.2754,13.5545);
	        SetPlayerFacingAngle(playerid, 140);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 364.9832,-11.8308,1001.8516)) // Clukin' bell
	    {
	        SetPlayerPos(playerid, 928.7275,-1352.9547,13.3438);
	        SetPlayerFacingAngle(playerid, 90);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1204.7631,-13.8169,1000.9219)) // Pig Pen (Prostíbulo)
	    {
	        SetPlayerPos(playerid, 2421.3159,-1219.6179,25.5382);
	        SetPlayerFacingAngle(playerid, 180);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 501.9994,-67.7072,998.7578)) // Bar Groove
	    {
	        SetPlayerPos(playerid, 2310.0977,-1643.5522,14.8270);
	        SetPlayerFacingAngle(playerid, 150);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 772.4008,-5.5150,1000.7287)) // Caton gym
	    {
	        SetPlayerPos(playerid, 2229.8601,-1721.4545,13.5633);
	        SetPlayerFacingAngle(playerid, 125);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1471.842773, -1002.820617, 26.815937) || IsPlayerInRangeOfPoint(playerid, 1.0, 1463.410522, -1002.820617, 26.815937) || IsPlayerInRangeOfPoint(playerid, 1.0, 1457.344238, -1002.820617, 26.815937))
		{
		    if(PlayerInfo[playerid][BankA] == 0) ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Crear cuenta bancaria\n{CCCCCC}Retirar\n{CCCCCC}Depositar\n{CCCCCC}Transferir", "Continuar", "Cancelar");
		    else ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Retirar\n{FFFFFF}Depositar\n{FFFFFF}Transferir", "Continuar", "Cancelar");
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1557.468750, -1676.613159, 1990.540039)) //LSPD
	    {
	    	SetPlayerPos(playerid, 1555.142822, -1675.475341, 16.195312);
			SetPlayerFacingAngle(playerid, 90);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 390.414337, 174.018325, 1008.382812)) // Ayuntamiento
	    {
	        SetPlayerPos(playerid, 1481.037597, -1771.786376, 18.795755);
	        SetPlayerFacingAngle(playerid, 0);
	        SetPlayerInteriorEx(playerid, 0, INT_NONE);
	        return 1;
	   }*/
   }
	if(newkeys & KEY_CROUCH)
	{
	    if(iPhone_CC[2][playerid] == 1)
	    {
	        ShowPlayerDialog(playerid, DIALOG_MP3, DIALOG_STYLE_INPUT, "Reproducir música", "Inserte el url de la canción:", "Reproducir", "Salir");
	    }
	}
	return 1;
}
                        
funcion:BitchContinue(playerid, d)
{
	switch(d)
	{
		case 0:
		{
			InterpolateCameraPos(playerid, 1206.4519, 13.3467, 1002.5107, 1200.5004, 16.3557, 1002.0889, 5000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1205.9796, 14.2284, 1002.1209, 1201.4412, 16.6938, 1001.7643, 5000, CAMERA_MOVE);
			MyTimers[playerid][11] = SetTimerEx("BitchContinue", 10000, false, "id", playerid, 1);
		}
		case 1:
		{
			InterpolateCameraPos(playerid, 1200.5004, 16.3557, 1002.0889, 1203.1359, 19.1191, 1001.1140, 5000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1201.4412, 16.6938, 1001.7643, 1203.5944, 18.2302, 1000.9246, 5000, CAMERA_MOVE);
			MyTimers[playerid][11] = SetTimerEx("BitchContinue", 10000, false, "id", playerid, 2);
		}
		case 2:
		{
			InterpolateCameraPos(playerid, 1203.1359, 19.1191, 1001.1140, 1207.1952, 17.7792, 1001.2449, 5000, CAMERA_MOVE);
			InterpolateCameraLookAt(playerid, 1203.5944, 18.2302, 1000.9246, 1206.2045, 17.6444, 1001.0204, 5000, CAMERA_MOVE);
			MyTimers[playerid][11] = SetTimerEx("BitchContinue", 4500, false, "id", playerid, 3);
		}
		case 3:
		{
		    SetCameraBehindPlayer(playerid);
		    GameTextForPlayer(playerid, "~r~-$150", 3000, 0);
		    SetPlayerPos(playerid, 1203.6499, 8.7910, 1001.6718);
		    SetPlayerInteriorEx(playerid, 2, INT_PIGPEN);
		    TogglePlayerControllable(playerid, true);

		    SetPlayerPos(NPCS[BITCH_BJ], 1201.088623, 13.896595, 1000.921875-1.0);
			SetPlayerFacingAngle(NPCS[BITCH_BJ], 325.0);
		    PlayerEvent[playerid][BITCH_BJ] = false;
		    NPC_USED[NPCS[BITCH_BJ]] = false;
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

public OnPlayerUpdate(playerid)
{
	if(PlayerInfo[playerid][Interior] != 0)
	{
	    SetPlayerArmedWeapon(playerid,0);
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	/*if(!isnull(VehicleInfo[vid][VD]))
 	{
 	    if(VehicleInfo[vehicleid][vmodelid] > 0)
 	    {
		    new vdpanels,vddoors,vdlights,vdtires;
			GetVehicleDamageStatus(vehicleid,vdpanels,vddoors,vdlights,vdtires);
			VehicleInfo[veh][VPanels] = vdpanels;
			VehicleInfo[veh][VDoors] = vddoors;
			VehicleInfo[veh][VLights] = vdlights;
			VehicleInfo[veh][VTires] = vdtires;
		}
	}*/
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
			 
	switch(dialogid)
    {
        case DIALOG_REGISTER:
        {
            if(response)
            {
                new Query[1500], ip[16];
				GetPlayerIp(playerid, ip, sizeof(ip));
                if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Registro", "Dejaste el campo vacío, por favor\ningrese una contraseña", "Reintentar", "Salir");
				if(strlen(inputtext) <= 2 || strlen(inputtext) >= 15) return ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Registro", "Ha ocurrido un error:\n\n\tLa contraseña debe ser superior a 2 letras\n\te inferior a 16.\n\nVuele a intentarlo.", "Reintentar", "Salir");
				
                new pName[24], string2[33];
                GetPlayerName(playerid, pName, 24);
                format(string2, sizeof(string2), "%s", inputtext); PlayerInfo[playerid][passtext] = string2;
                format(Query, sizeof(Query), "INSERT INTO `cuenta` (nombre, pass, ip) VALUES ('%s', '%s', '%d')",pName, PlayerInfo[playerid][passtext], ip);
                mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);

                PlayerInfo[playerid][edad] = 21; //SaveValue(playerid, "EDAD", PlayerInfo[playerid][edad]);
                PlayerInfo[playerid][skin] = RandomMen[random(sizeof(RandomMen))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "Registro", "A continuación deberás de introducir un correo\nal que usted tenga acceso. En el caso de que pierda\nla contraseña de su cuenta, será enviada a ese correo.\n\n\tPor lo que se recomienda introducir un correo válido.", "Continuar", "");
            }
            else Kick(playerid);
        }
        case DIALOG_LOGIN:
        {
            if(!response)
            {
                Kick(playerid);
            }
            if(strcmp(PlayerInfo[playerid][passtext], inputtext, true, 128) == 0)
            {
                new pName[24], Query[256];
                GetPlayerName(playerid, pName, 24);
                format(Query, sizeof(Query), "SELECT * FROM `cuenta` WHERE `nombre` = '%s'", pName);
                mysql_function_query(TuberiasMySQL, Query, true, "CargarDatos",  "ii", playerid);
                SpawnPlayer(playerid);
                  SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
                  SetCameraBehindPlayer(playerid);
            }
            else
            {
               ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Montevideo RolePlay", "Ha ocurrido un error\n\n\tLa contraseña es incorrecta.", "Ingresar", "Salir"); }
            }
        case DIALOG_EMAIL:
        {
            if(response)
            {
                if(strfind(inputtext, "@", true) != -1 && strfind(inputtext, ".", true) != -1)
				{
			    if(!EmailAvaliable(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "Registro", "Este correo ya está en uso.\nInténtelo de nuevo con un correo\nalternativo.", "Reintentar", "");
        new str[128];
				    format(str, 128, "/eXtremeROL/emails/%s.ini", inputtext);
					new File:femail = fopen(str, io_write);
					new str2[64];
					format(str2, 64, "%s\r\n\r\nSistema de email de eXtremeROL", PlayerNameNormal(playerid));
					fwrite(femail, str2);
    				fclose(femail);
	                format(PlayerInfo[playerid][email], 64, "%s", inputtext);
	                //SaveString(playerid, "EMAIL", PlayerInfo[playerid][email]);
	                new str3[128];
	                format(str3, 128, "El correo que introduciste es: %s\n\nPresione en SI para comfirmar, de lo contrario\npresiona NO para volver a introducirlo.", inputtext);
	                ShowPlayerDialog(playerid, DIALOG_EMAIL2, DIALOG_STYLE_MSGBOX, "Registro", str3, "Sí", "No");
				}
				else ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "Registro", "Formato no válido. Inténtelo de nuevo.", "Reintentar", "");
			}
            else ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "Registro", "A continuación deberás de introducir un correo\nal que usted tenga acceso. En el caso de que pierda\nla contraseña de su cuenta, será enviada a ese correo.\n\n\tPor lo que se recomienda introducir un correo válido.", "Continuar", "");
        }
        case DIALOG_EMAIL2:
        {
            if(response)
            {
				SelectTextDraw(playerid, -1);
				loop(0, 10, l) TextDrawShowForPlayer(playerid, TD_ST[l]);
				PlayerTextDrawShow(playerid, PTD_ST[playerid][0]);
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  PlayerNameNormal(playerid));
				PlayerTextDrawShow(playerid, PTD_ST[playerid][1]);
				P_register_step[playerid] = 0;
				P_newuser[playerid] = 11;
			}
            else
            {
		        new str[128];
		  		format(str, 128, "/eXtremeROL/emails/%s.ini", PlayerInfo[playerid][email]);
		  		//SaveString(playerid, "EMAIL", PlayerInfo[playerid][email]);
				fremove(str);
			    ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "Registro", "A continuación deberás de introducir un correo\nal que usted tenga acceso. En el caso de que pierda\nla contraseña de su cuenta, será enviada a ese correo.\n\n\tPor lo que se recomienda introducir un correo válido.", "Continuar", "");
            }
        }
        case DIALOG_CONFIRME:
        {
            if(response)
            {
		        PlayerPlaySound(playerid,1135,0.0,0.0,0.0);
		        P_newuser[playerid] = 1;
		        P_register_step[playerid] = -1;
		        //StopAudioStreamForPlayer(playerid);
				//PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/gqqhiahls4mgu9m/intro.mp3");//"https://dl.dropboxusercontent.com/s/bw2a4503jsa1orl/intro.mp3");
				loop(0, 10, l)
				{
					TextDrawHideForPlayer(playerid, TD_ST[l]);
					SendClientMessage(playerid, -1, " ");
				}
				PlayerTextDrawHide(playerid, PTD_ST[playerid][0]);
				PlayerTextDrawHide(playerid, PTD_ST[playerid][1]);
				PlayerTextDrawBoxColor(playerid, Background[playerid], 0x000000FF);
				PlayerTextDrawShow(playerid, Background[playerid]);
				MyTimers[playerid][0] = SetTimerEx("FadeIn", 1500, false, "id", playerid, 250);
				CancelSelectTextDraw(playerid);
				TogglePlayerSpectating(playerid, true);
				InterpolateCameraPos(playerid, CameraPositions[0][0], CameraPositions[0][1], CameraPositions[0][2], CameraPositions[0][3], CameraPositions[0][4], CameraPositions[0][5], 5000);
				InterpolateCameraLookAt(playerid, CameraPositions[0][6], CameraPositions[0][7], CameraPositions[0][8], CameraPositions[0][9], CameraPositions[0][10], CameraPositions[0][11], 5000);
		        SetPlayerVirtualWorld(playerid, playerid);
				MyTimers[playerid][1] = SetTimerEx("OnPlayerFinishInterpolateCamera", 5000-600, false, "id", playerid, 1);
            }
            else SelectTextDraw(playerid, -1);
        }
        case DIALOG_KNOW:
        {
            if(response)
            {
                new conocerid = P_conocerid[playerid];
			    SetPlayerToFacePlayer(conocerid, playerid);
                ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
				ApplyAnimation(playerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
				ApplyAnimation(conocerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
				ApplyAnimation(conocerid,"GANGS","hndshkaa",4.1,0,0,0,0,0);
				
				new str[128];
			    format(str, 128, "/eXtremeROL/Conocidos/%s.ini", PlayerNameNormal(playerid));
				new File:femail = fopen(str, io_append);
				new str2[64];
				format(str2, 64, "ª %s\r\n",PlayerInfo[playerid][pass]);
				fwrite(femail, str2);
				fclose(femail);
                
				new File:femail2 = fopen(str, io_append);
				format(str2, 64, "Dinero: %d\r\n", PlayerInfo[playerid][dinero]);
				fwrite(femail2, str2);
				fclose(femail2);
				
				new File:femail3 = fopen(str, io_append);
				format(str2, 64, "Nivel: %d\r\n", PlayerInfo[playerid][Plevel]);
				fwrite(femail3, str2);
				fclose(femail3);
                
               	new File:femail4 = fopen(str, io_append);
				format(str2, 64, "Dinero Del Banco: %d\r\n",PlayerInfo[playerid][dinerobank]);
				fwrite(femail4, str2);
				fclose(femail4);
				
				new File:femail5 = fopen(str, io_append);
				format(str2, 64, "Sexo: %d\r\n",PlayerInfo[playerid][sexo]);
				fwrite(femail5, str2);
				fclose(femail5);
                
                new File:femail6 = fopen(str, io_append);
				format(str2, 64, "Adminlvl: %d\r\n",PlayerInfo[playerid][admlvl]);
				fwrite(femail6, str2);
				fclose(femail6);
                

                
                PlayerKnownPlayer[playerid][conocerid] = true;
                PlayerKnownPlayer[conocerid][playerid] = true;
                
                P_conocerid[playerid] = -1;
                P_conocerid[conocerid] = -1;

            }
            else
            {
				new conocerid = P_conocerid[playerid];
				
				SendClientMessageEx(conocerid, -1, "{00CCFF}%s {FFFFFF}no quiere conocerte.", PlayerName(playerid));
            }
		}
        case DIALOG_RETIRAR:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_RETIRAR, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				if(money > PlayerInfo[playerid][dinerobank] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_RETIRAR, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				PlayerInfo[playerid][dinerobank] -= money;
				PlayerInfo[playerid][dinero] += money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
				
				new str[128];
			    format(str, 128, "Balance actual: $%d", PlayerInfo[playerid][dinerobank]);
			    PlayerTextDrawSetString(playerid, PlayerBank[playerid][0], str);
			    
			    TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
			    PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
            }
            else
            {
                TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
            }
        }
        case DIALOG_DEPOSIT:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				if(money > PlayerInfo[playerid][dinero] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				PlayerInfo[playerid][dinerobank] += money;
				PlayerInfo[playerid][dinero] -= money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
				new str[128];
			    format(str, 128, "Balance actual: $%d", PlayerInfo[playerid][dinerobank]);
			    PlayerTextDrawSetString(playerid, PlayerBank[playerid][0], str);
			    
			    TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
			    PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
            }
            else
            {
                TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
            }
        }
        case DIALOG_BANCO:
        {
            if(response)
            {
                if(PlayerInfo[playerid][BankA] == 0)
                {
                    switch(listitem)
                    {
						case 0:
						{
						    if(50 > PlayerInfo[playerid][dinero]) return SendClientMessage(playerid, -1, "Necesitas un depósito mínimo de {FFFF00}$50 {FFFFFF}para crearte una cuenta bancaria.");
						    SendClientMessage(playerid, -1, "Acabas de crearte una cuenta bancaria, ya puedes beneficiarte de sus privilegios. {FFFF00}Se han necesitado $50 para un depósito mínimo.");
						    PlayerInfo[playerid][dinero] -= 50;
						    PlayerInfo[playerid][dinerobank] += 50;
						    PlayerInfo[playerid][bankt] = random(99999);
						    SendClientMessageEx(playerid, -1, "Tu número de cuenta es {FFFF00}%d", PlayerInfo[playerid][bankt]);
						    PlayerInfo[playerid][BankA] = 1;
						    ResetPlayerMoney(playerid);
							GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
							//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
							//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
						}
						default: ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Crear cuenta bancaria\n{CCCCCC}Retirar\n{CCCCCC}Depositar\n{CCCCCC}Transferir", "Continuar", "Cancelar");
                    }
                }
                else
                {
                    switch(listitem)
                    {
                        case 0:
						{
						    new str[128];
							format(str, 128, "Balance actual: $%d\n\t¿Cuánto quiere retirar?\n", PlayerInfo[playerid][dinerobank]);
							ShowPlayerDialog(playerid, DIALOG_RETIRAR2, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", str, "Retirar", "Cancelar");
						}
						case 1:
						{
						    new str[128];
							format(str, 128, "Balance actual: $%d\n\t¿Cuánto quiere depositar?\n", PlayerInfo[playerid][dinerobank]);
							ShowPlayerDialog(playerid, DIALOG_DEPOSIT2, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", str, "Depositar", "Cancelar");
						}
						case 2:
						{
						    new str[128];
							format(str, 128, "Balance actual: $%d\n\tIndique el número de cuenta bancaria\n\tpara transferir el dinero.\n", PlayerInfo[playerid][dinerobank]);
							ShowPlayerDialog(playerid, DIALOG_TRANSFERIR, DIALOG_STYLE_INPUT, "BANCO LS - TRANSFERIR", str, "Siguiente", "Cancelar");
						}
                    }
                }
            }
        }
        case DIALOG_TRANSFERIR:
        {
            if(response)
            {
    			if(sscanf(inputtext, "d", inputtext[0])) return SendClientMessage(playerid, -1, "Error.");
    			if(inputtext[0] == playerid)  return SendClientMessage(playerid, -1, "Error.");
    	
    			foreach(new i : Player)
    			{
    			    if(i != playerid)
    			    {
    			        if(PlayerInfo[playerid][BankA] != 0)
						{
	    			        if(PlayerInfo[i][bankt] == inputtext[0])
	    			        {
	    			            P_transid[playerid] = i;
	    			            new str[128];
								format(str, 128, "Balance actual: $%d\n\tCuanto dinero quiere transferir a:\n\t%s-%d.\n", PlayerInfo[playerid][dinerobank], PlayerName(i), inputtext[0]);
	                            ShowPlayerDialog(playerid, DIALOG_TRANSFERIR+1, DIALOG_STYLE_INPUT, "BANCO LS - TRANSFERIR", str, "Transferir", "Cancelar");
	    			            return 1;
	    			        }
						}
    			    }
    			}
    			SendClientMessage(playerid, -1, "El número de cuenta epecificado no corresponde con ningún jugador.");
            }
        }
        case DIALOG_TRANSFERIR+1:
        {
            if(response)
            {
                if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "Cantidad incorrecta.");
					P_transid[playerid] = -1;
					return 1;
				}
				if(!IsPlayerConnected(P_transid[playerid]))
				{
				    SendClientMessage(playerid, -1, "El jugador se ha ido.");
				    P_transid[playerid] = -1;
				}
				if(0 >= inputtext[0])
				{
					SendClientMessage(playerid, -1, "Cantidad incorrecta.");
					P_transid[playerid] = -1;
					return 1;
				}
				if(inputtext[0] > PlayerInfo[playerid][dinerobank])
				{
					SendClientMessage(playerid, -1, "No tienes ese dinero.");
					P_transid[playerid] = -1;
					return 1;
				}
				PlayerInfo[playerid][dinerobank] -= inputtext[0];
                PlayerInfo[P_transid[playerid]][dinerobank] += inputtext[0];
                SendClientMessageEx(playerid, -1, "Has transferido {FFFF00}$%d {FFFFFF}a {FFFF00}%d (%s)", inputtext[0], PlayerInfo[P_transid[playerid]][bankt], PlayerName(P_transid[playerid]));
                SendClientMessageEx(P_transid[playerid], -1, "Has recibido una tranferencia de {FFFF00}$%d {FFFFFF}de {FFFF00}%d (%s)", inputtext[0], PlayerInfo[playerid][bankt], PlayerName(playerid));
                P_transid[playerid] = -1;
            }
            else
            {
                P_transid[playerid] = -1;
                SendClientMessage(playerid, -1, "Operación cancelada.");
            }
		}
        case DIALOG_RETIRAR2:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_RETIRAR2, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				if(money > PlayerInfo[playerid][dinerobank] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_RETIRAR2, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				PlayerInfo[playerid][dinerobank] -= money;
				PlayerInfo[playerid][dinero] += money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
				ShowBankCash(playerid, 2000);
			}
        }
        case DIALOG_DEPOSIT2:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT2, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				if(money > PlayerInfo[playerid][dinero] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT2, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				PlayerInfo[playerid][dinerobank] += money;
				PlayerInfo[playerid][dinero] -= money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
				ShowBankCash(playerid, 2000);
            }
        }
        case DIALOG_AYUNTA:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                        //if(PlayerInfo[playerid][bikerent] == 0) ShowPlayerDialog(playerid, DIALOG_BIKE, DIALOG_STYLE_MSGBOX, " ", "Carnet de préstamo de bicicletas de Los Santos\n\n\tHaciendo este carnet te comprometes con:\n\n\t\t{00CCFF}* En caso de que la bicicleta quede dañada, pagar la reparación.\n\t\t{00CCFF}* Devolver la bicicleta en un plazo de 48hrs.\n\t\t{00CCFF}* Ser cuidadoso con ella\n\n\n{FFFFFF}El costo de este carnet es de {00CCFF}$50.", "Continuar", "Cancelar");
                        //else SendClientMessage(playerid, -1, "Ya tienes este carnet.");
                    }
                }
            }
        }
        /*case DIALOG_BIKE:
        {
            if(response)
            {
                if(50 > PlayerInfo[playerid][dinero]) return SendClientMessage(playerid, -1, "Necesitas {00CCFF}$50 {FFFFFF}para crear este carnet.");
                PlayerInfo[playerid][bikerent] = 1; //SaveValue(playerid, "BR", PlayerInfo[playerid][bikerent]);
                PlayerInfo[playerid][dinero] -= 50;
                ResetPlayerMoney(playerid);
                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
                //SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
                SendClientMessage(playerid, -1, "Felicidades, tu carnet ha sido creado, {00CCFF}¡ya puedes disfrutar de sus beneficios!.");
            }
		}*/
		case DIALOG_DUDAS:
        {
            if(response)
            {
                new str[128];
                format(str, 128, "%s", DudeMsg[playerid]);
          		new tiempo_ms = 1 * 60000;
				DudeTime[playerid] = GetTickCount() + tiempo_ms;
				EnviarDuda(playerid, str);
            }
        }
        case DIALOG_GROTTI:
        {
            if(response)
            {
				if(PlayerInfo[playerid][PlayerVehicleKey][0] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
				    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[0][0], VehicleGrottiSpawns[0][1], VehicleGrottiSpawns[0][2], VehicleGrottiSpawns[0][3], 1, 1, 0, playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~a recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][PlayerVehicleKey][1] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
                    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[1][0], VehicleGrottiSpawns[1][1], VehicleGrottiSpawns[1][2], VehicleGrottiSpawns[1][3], 1, 1, 1, playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~a recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
				    return 1;
				}
				if(PlayerInfo[playerid][PlayerVehicleKey][2] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
				    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[2][0], VehicleGrottiSpawns[2][1], VehicleGrottiSpawns[2][2], VehicleGrottiSpawns[2][3], 1, 1, 2, playerid);

					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~a recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
				    return 1;
				}
				if(PlayerInfo[playerid][PlayerVehicleKey][3] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
				    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[3][0], VehicleGrottiSpawns[3][1], VehicleGrottiSpawns[3][2], VehicleGrottiSpawns[3][3], 1, 1, 3, playerid);

					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~ recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
				    return 1;
				}
				InfoMSG(playerid, 3000, "No puedes tener más de 4 vehículos.");
				SelectTextDraw(playerid, -1);
            }
            else SelectTextDraw(playerid, -1);
        }
		case DIALOG_INTRO:
		{
		    if(response)
		    {
		        PlayerPlaySound(playerid,1135,0.0,0.0,0.0);
		        P_newuser[playerid] = 1;
		        P_register_step[playerid] = -1;
		        StopAudioStreamForPlayer(playerid);
				PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/gqqhiahls4mgu9m/intro.mp3");//"https://dl.dropboxusercontent.com/s/bw2a4503jsa1orl/intro.mp3");
				PlayerTextDrawHide(playerid, PTD_PD[playerid]);
				loop(0, 10, l) TextDrawHideForPlayer(playerid, TD_ST[l]);
				loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[i]);
				loop(0, 20, a) SendClientMessage(playerid, -1, " ");

				PlayerTextDrawBoxColor(playerid, Background[playerid], 0x000000FF);
				PlayerTextDrawShow(playerid, Background[playerid]);
				MyTimers[playerid][0] = SetTimerEx("FadeIn", 1500, false, "id", playerid, 250);
				CancelSelectTextDraw(playerid);
				TogglePlayerSpectating(playerid, true);
				InterpolateCameraPos(playerid, CameraPositions[0][0], CameraPositions[0][1], CameraPositions[0][2], CameraPositions[0][3], CameraPositions[0][4], CameraPositions[0][5], 10000);
				InterpolateCameraLookAt(playerid, CameraPositions[0][6], CameraPositions[0][7], CameraPositions[0][8], CameraPositions[0][9], CameraPositions[0][10], CameraPositions[0][11], 10000);
		        SetPlayerVirtualWorld(playerid, playerid);
				MyTimers[playerid][1] = SetTimerEx("OnPlayerFinishInterpolateCamera", 8000, false, "id", playerid, 1);
		    }
		    else
		    {
		        PlayerTextDrawBoxColor(playerid, Background[playerid], 0x000000FF);
				PlayerTextDrawShow(playerid, Background[playerid]);
		        StopAudioStreamForPlayer(playerid);
		        PlayerTextDrawHide(playerid, PTD_PD[playerid]);
		        loop(0, 10, l) TextDrawHideForPlayer(playerid, TD_ST[l]);
				loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[i]);
				loop(0, 20, a) SendClientMessage(playerid, -1, " ");
				
				P_newuser[playerid] = 1;
				PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OP");
				PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OnPlayer~n~Quiere decir En el personaje~n~lo cual significa que es cuando se rolea~n~Ejemplo: \"Buenos días, señor\" ~n~~n~Los canales OP son: /s /g /me /do"));
			    for(new i = 0; i < 15; i++) SendClientMessage(playerid, -1, " ");
			    for(new i = 0; i < sizeof(Conceptos); i++) PlayerTextDrawShow(playerid, Conceptos[i][playerid]);
			    SelectTextDraw(playerid, 0x33AA33AA);
			    P_player_tutorial[playerid] = 1;
				TogglePlayerSpectating(playerid, false);
			    SpawnPlayer(playerid);
		    }
		}
		case DIALOG_LOCALIZA:
		{
		    if(response)
		    {
                if(PlayerInfo[playerid][PlayerVehicleKey][listitem] != -1)
				{
			        if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 2 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 5 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 6 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 12)
			        {
			            if(IsPlayerInAnyVehicle(playerid))
			            {
			                if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][PlayerVehicle][listitem])
			                {
			                    SendClientMessage(playerid, -1, "Estás dentro de ese vehículo.");
			                    return 1;
			                }
			            }
			            new Float:pos[3];
			            GetVehiclePos(PlayerInfo[playerid][PlayerVehicle][listitem], pos[0], pos[1], pos[2]);
			            switch(listitem)
			            {
			                case 0:
			                {
                   				SetPlayerMapIcon(playerid, 99, pos[0], pos[1], pos[2], 0, 0xFF9900FF, MAPICON_GLOBAL);
                   				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d {FFFFFF}ha sido marcado en el mapa de color {FF9900}naranja.", listitem);
                   				VehLocalizado[playerid][0] = 1;
			                }
			                case 1:
			                {
                   				SetPlayerMapIcon(playerid, 98, pos[0], pos[1], pos[2], 0, 0x99FF00FF, MAPICON_GLOBAL);
                   				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d {FFFFFF}ha sido marcado en el mapa de color {99FF00}verde.", listitem);
                   				VehLocalizado[playerid][1] = 1;
			                }
			                case 2:
			                {
                   				SetPlayerMapIcon(playerid, 97, pos[0], pos[1], pos[2], 0, 0x3333FFFF, MAPICON_GLOBAL);
                   				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d {FFFFFF}ha sido marcado en el mapa de color {3333FF}azul.", listitem);
                   				VehLocalizado[playerid][2] = 1;
			                }
			                case 3:
			                {
                   				SetPlayerMapIcon(playerid, 96, pos[0], pos[1], pos[2], 0, 0x660000FF, MAPICON_GLOBAL);
                   				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d {FFFFFF}ha sido marcado en el mapa de color {660000}marrón.", listitem);
                   				VehLocalizado[playerid][3] = 1;
			                }
			            }
			        }
			        else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 1)
					{
						SendClientMessage(playerid, -1, "Este vehículo está pendiente de recogida. (Punto rojo marcado en el mapa)");
						SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
						return 1;
					}
					else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 3)
					{
					    SendClientMessage(playerid, -1, "Este vehículo está destruido, llama al seguro para reclamarlo {00CCFF}(#202).");
					    return 1;
					}
					else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 4)
					{
					    SendClientMessage(playerid, -1, "Tu vehículo está en el depósito municipal de Los Santos, ve allí para recogerlo. (Punto rojo en el mapa)");
					    SetPlayerCheckpoint(playerid, 2467.223388, -2073.973632, 13.761137, 1.0);
					    return 1;
					}
				}
				else SendClientMessageEx(playerid, -1, "No tienes el vehículo{00CCFF} #%d.", listitem);
		    }
		}
		case DIALOG_SEGUROV:
		{
		    if(response)
		    {
                if(PlayerInfo[playerid][PlayerVehicleKey][listitem] != -1)
				{
			        if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] == 3)
			        {
			            VehicleInfo[PlayerInfo[playerid][PlayerVehicle][listitem]][VSTATUS] = 1;
                        SendClientMessage(playerid, -1, "Vehículo recuperado, vaya al punto rojo a recogerlo.");
						SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
			        }
			        else SendClientMessage(playerid, -1, "Este vehículo no está destruido.");
				}
				else SendClientMessageEx(playerid, -1, "No tienes el vehículo{00CCFF} #%d.", listitem);
		    }
		}
		case DIALOG_ACCESORIOS:
        {
            if(response)
            {
                if(PlayerInfo[playerid][pToy][listitem] != 0)
                {
                    PlayerInMenu[playerid][2] = listitem;
                    ShowPlayerDialog(playerid, DIALOG_ACCESORIOS+1, DIALOG_STYLE_LIST, "Eliga una opción", "Modificar posiciones\nColocar/quitar\nEliminar accesorio", "Siguiente", "Cancelar");
                }
                else SendClientMessage(playerid, -1, "No tienes nada aquí.");
            }
            return 1;
        }
        case DIALOG_ACCESORIOS+1:
        {
            if(response)
			{
			    switch(listitem)
				{
				    case 0:
					{
					    if(PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]] == 2) return SendClientMessage(playerid, -1, "Primero debes colocarte esto.");
						EditAttachedObject(playerid, PlayerInMenu[playerid][2]);
					}
				    case 1:
				    {
				        if(PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]] == 1)
				        {
				            //new A_str[20];
				            SendClientMessage(playerid, -1, "Accesorio quitado.");
				            PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]] = 2; // format(A_str, 20, "PTOY%d", PlayerInMenu[playerid][2]); SaveValue(playerid, A_str, PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]]);
				            ColocarToys(playerid);
				        }
				        else
				        {
				            //new A_str[20];
				            SendClientMessage(playerid, -1, "Accesorio puesto.");
				            PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]] = 1; // format(A_str, 20, "PTOY%d", PlayerInMenu[playerid][2]); SaveValue(playerid, A_str, PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]]);
				            ColocarToys(playerid);
				        }
					}
					case 2:
					{
					    //new A_str[20];
					    SendClientMessage(playerid, -1, "Accesorio eliminado.");
					    PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]] = 0; // format(A_str, 20, "PTOY%d", PlayerInMenu[playerid][2]); SaveValue(playerid, A_str, PlayerInfo[playerid][pToy][PlayerInMenu[playerid][2]]);
					    ColocarToys(playerid);
					}
     			}
			}
            PlayerInMenu[playerid][2] = -1;
            return 1;
        }
        case DIALOG_BOL:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 10: return MostrarBolsillos(playerid);
                    case 0..9:
                    {
                        new bol = listitem+1;
                        if(BolsilloID[playerid][bol] == 0)
					    {
					        SendClientMessage(playerid, -1, "No tienes nada en ese bolsillo.");
					        MostrarBolsillos(playerid);
					        return 1;
					    }
					    
                        if(BolsilloID[playerid][11] == 0)
					    {
					        BolsilloID[playerid][11] = BolsilloID[playerid][bol];
					        BolsilloID[playerid][bol] = 0;
							MostrarBolsillos(playerid);
							SendClientMessageEx(playerid, -1, "Sacaste tu {FFFF00}%s {FFFFFF}y fue colocado en la mano derecha.", Objetos_Bolsillo[BolsilloID[playerid][11]][iname]);
					    }
					    else if(BolsilloID[playerid][12] == 0)
					    {
					        BolsilloID[playerid][12] = BolsilloID[playerid][bol];
					        BolsilloID[playerid][bol] = 0;
							MostrarBolsillos(playerid);
							SendClientMessageEx(playerid, -1, "Sacaste tu {FFFF00}%s {FFFFFF}y fue colocado en la mano izquierda.", Objetos_Bolsillo[BolsilloID[playerid][12]][iname]);
					    }
					    else
						{
							SendClientMessage(playerid, -1, "Debes de tener alguna mano desocupada.");
							MostrarBolsillos(playerid);
							return 1;
						}
                    }
                    case 11, 12:
                    {
                    	if(BolsilloID[playerid][listitem] == 0)
					    {
					        SendClientMessage(playerid, -1, "No tienes nada en esa mano.");
					        MostrarBolsillos(playerid);
					        return 1;
					    }
					    
					    for(new i = 1; i < 11; i++)
				        {
				            if(BolsilloID[playerid][i] == 0)
				            {
				        		BolsilloID[playerid][i] = BolsilloID[playerid][listitem];
				        		BolsilloID[playerid][listitem] = 0;
								SendClientMessageEx(playerid, -1, "Tu {FFFF00}%s {FFFFFF}fue guardado en el bolsillo {FFFF00}%d.", Objetos_Bolsillo[BolsilloID[playerid][i]][iname], i);
								
								MostrarBolsillos(playerid);
								return 1;
							}
				        }
				        SendClientMessageEx(playerid, -1, "No tienes ningún bolsillo vacío para guardar tu {FFFF00}%s.", Objetos_Bolsillo[BolsilloID[playerid][listitem]][iname]);
		          		MostrarBolsillos(playerid);
                    }
                }
            }
        }
        case DIALOG_MP3:
        {
            if(response)
            {
                StopAudioStreamForPlayer(playerid);
                PlayAudioStreamForPlayer(playerid, inputtext);
                
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
                    if(BolsilloID[playerid][11] == 22 || BolsilloID[playerid][12] == 22)
                    {
                    	new vehicleid = GetPlayerVehicleID(playerid);
					    format(VehicleAudio[vehicleid], 145, "%s", inputtext);
	                    
						foreach(new i : Player)
						{
						    if(i != playerid)
						    {
								if(GetPlayerVehicleID(i) == vehicleid)
								{
					                StopAudioStreamForPlayer(i);
					                PlayAudioStreamForPlayer(i, VehicleAudio[vehicleid]);
								}
							}
						}
						new str[145];
					    format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} conecta el iPhone al vehículo.", PlayerName(playerid));
			 			SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
					    SendClientMessage(playerid, -1, "Usa {FFFF00}/apagar {FFFFFF}para desconectar el cable.");
					}
                }
            }
        }
        case DIALOG_GPS:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                    	new string[512];
						new c = 0;
					    for(new i = 0; i != 4; i++)
						{
							if(PlayerInfo[playerid][PlayerVehicleKey][i] != -1)
							{
						        if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 2 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 6 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 12) format(string, sizeof(string), "%s Vehículo #%d (%s)\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
						        else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 1) format(string, sizeof(string), "%s Vehículo #%d (%s) pendiente de recogida\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
					            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 3) format(string, sizeof(string), "%s Vehículo #%d (%s) destruido\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
					            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 4 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 10) format(string, sizeof(string), "%s Vehículo #%d (%s) en el depósito\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
					            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 5) format(string, sizeof(string), "%s Vehículo #%d (%s) averiado\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
								c = 1;
					        }
					        else format(string, sizeof(string), "%s Vehículo #%d (Vacío)\n", string, i);
					    }
					    if(c == 0) return SendClientMessage(playerid, -1, "No tienes ningún vehículo.");
					    ShowPlayerDialog(playerid, DIALOG_LOCALIZA, DIALOG_STYLE_LIST, "GPS --> Tus vehículos personales", string, "Localizar", "Cancelar");
                    }
                    case 1:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+1, DIALOG_STYLE_LIST, "GPS --> Tiendas de comida", "Burger Shot\nPizza Stacked\nChicken Bell\nBar\nJim Ring", "Localizar", "Cancelar");
                    }
                    case 2:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+2, DIALOG_STYLE_LIST, "GPS --> Tiendas de ropa", "Binco\nZip\nProLaps\nSubUrban\nVictim\n", "Localizar", "Cancelar");
                    }
                    case 3:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+3, DIALOG_STYLE_LIST, "GPS --> Tiendas 24/7", "24/7 Unity\n24/7 Vinewood\n24/7 Ayuntamiento", "Localizar", "Cancelar");
                    }
                    case 4:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+4, DIALOG_STYLE_LIST, "GPS --> Concesionarios", "Concesionarios GROTTI\nConcesionario de ocasión", "Localizar", "Cancelar");
                    }
                    case 5:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+5, DIALOG_STYLE_LIST, "GPS --> Lugares de ocio", "Alhambra Club\nPigPen\nGimnasio de LS", "Localizar", "Cancelar");
                    }
                    case 6:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+6, DIALOG_STYLE_LIST, "GPS --> Servicios públicos", "Banco de LS\nLSPD\nAyuntamiento", "Localizar", "Cancelar");
                    }
                    case 7:
                    {
                        SendClientMessage(playerid, -1, "Próximamente.");
                    }
                }
            }
        }
        case DIALOG_GPS+1:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 810.6630,-1616.1554,13.5469, 1.0);
					}
					case 1:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 2105.4858,-1806.5336,13.5547, 1.0);
					}
					case 2:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 928.7275,-1352.9547,13.3438, 1.0);
					}
					case 3:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 2310.0977,-1643.5522,14.8270, 1.0);
					}
					case 4:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1038.286010, -1340.728027, 13.741346, 1.0);
					}
                }
            }
        }
        case DIALOG_GPS+2:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 2244.3567,-1665.5562,15.4766, 1.0);
					}
					case 1:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1456.4344,-1137.6427,23.9484, 1.0);
					}
					case 2:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 499.5753,-1360.6145,16.3664, 1.0);
					}
					case 3:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 2112.7739,-1211.6287,23.9631, 1.0);
					}
					case 4:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 461.200073, -1500.823608, 31.059551, 1.0);
					}
                }
            }
        }
        case DIALOG_GPS+3:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1833.149780, -1842.485717, 13.578125, 1.0);
					}
					case 1:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1315.4854,-897.6839,39.5781, 1.0);
					}
					case 2:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1352.3815,-1759.2286,13.5078, 1.0);
					}
                }
            }
        }
        case DIALOG_GPS+4:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 542.3840,-1293.5125,17.2422, 1.0);
					}
					case 1: //ESTE NO ESTA AUN
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1315.4854,-897.6839,39.5781, 1.0);
					}
                }
            }
        }
        case DIALOG_GPS+5:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1836.4471,-1682.3042,13.3476, 1.0);
					}
					case 1: 
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 2421.3159,-1219.6179,25.5382, 1.0);
					}
					case 2:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 2229.8601,-1721.4545,13.5633, 1.0);
					}
                }
            }
        }
        case DIALOG_GPS+7:
        {
            if(response)
            {
                switch(listitem)
                {
					case 0:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1990.9227, -2100.8420, 12.5298, 1.0);
					}
					case 1:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1555.142822, -1675.475341, 16.195312, 1.0);
					}
					case 2:
					{
					    SendClientMessage(playerid, -1, "Se ha marcado en el mapa como un punto rojo.");
						SetPlayerCheckpoint(playerid, 1481.037597, -1771.786376, 18.795755, 1.0);
					}
                }
            }
        }
        case DIALOG_GPS+9:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 0:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+1, DIALOG_STYLE_LIST, "GPS --> Tiendas de comida", "Burger Shot\nPizza Stacked\nChicken Bell\nBar\nJim Ring", "Localizar", "Cancelar");
                    }
                    case 1:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+2, DIALOG_STYLE_LIST, "GPS --> Tiendas de ropa", "Binco\nZip\nProLaps\nSubUrban\nVictim\n", "Localizar", "Cancelar");
                    }
                    case 2:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+3, DIALOG_STYLE_LIST, "GPS --> Tiendas 24/7", "24/7 Unity\n24/7 Vinewood\n24/7 Ayuntamiento", "Localizar", "Cancelar");
                    }
                    case 3:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+4, DIALOG_STYLE_LIST, "GPS --> Concesionarios", "Concesionarios GROTTI\nConcesionario de ocasión", "Localizar", "Cancelar");
                    }
                    case 4:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+5, DIALOG_STYLE_LIST, "GPS --> Lugares de ocio", "Alhambra Club\nPigPen\nGimnasio de LS", "Localizar", "Cancelar");
                    }
                    case 5:
                    {
                        ShowPlayerDialog(playerid, DIALOG_GPS+6, DIALOG_STYLE_LIST, "GPS --> Servicios públicos", "Banco de LS\nLSPD\nAyuntamiento", "Localizar", "Cancelar");
                    }
                    case 6:
                    {
                       ShowPlayerDialog(playerid, DIALOG_GPS+7, DIALOG_STYLE_LIST, "GPS --> Trabajo", "Camionero\nTaxista\nProximante", "Localizar", "Cancelar");
                    }
                }
            }
        }
	}
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
    {
        if(fScaleX >= 1.5 || fScaleY >= 1.5 || fScaleZ >= 1.5)
	    {
	        SendClientMessage(playerid, -1, "[ERROR]: El tamaño del objeto es inapropiado.");
	        ColocarToys(playerid);
			return 1;
	    }
        if((fOffsetX >= 0.3 || -0.15 >= fOffsetX) || (fOffsetY >= 0.3 || -0.15 >= fOffsetY) || (fOffsetZ >= 0.3 || -0.15 >= fOffsetZ))
        {
            SendClientMessage(playerid, -1, "[ERROR]: La posición del objeto es inapropiada.");
            ColocarToys(playerid);
			return 1;
        }
        UpdateToy(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
        SendClientMessage(playerid, -1, "Movido correctamente.");
    }
    else
    {
        ColocarToys(playerid);
        SendClientMessage(playerid, -1, "Operación cancelada.");
    }
    return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == Text:INVALID_TEXT_DRAW)
    {
		if(P_newuser[playerid] == 11 || P_newuser[playerid] == 12) return SelectTextDraw(playerid, -1); //ESC
		if(P_player_tutorial[playerid] > 0) return SelectTextDraw(playerid, 0x33AA33AA);
	    if(P_catalogogrotti[playerid] >= 0)
	    {
	        KillTimer(MyTimers[playerid][16]);
	        SetCameraBehindPlayer(playerid);
	        TogglePlayerControllable(playerid, true);
			P_catalogogrotti[playerid] = -1;
			ChatLogDisabled[playerid] = false;
			loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
			CancelSelectTextDraw(playerid);
	    }
		if(P_circularmenu_active[playerid] == 1)
		{
		    loop(0, 12, a) TextDrawHideForPlayer(playerid, CircularMenu[a]);
		    CancelSelectTextDraw(playerid);
		   	P_circularmenu_active[playerid] = -1;
		   	ShowBankCash(playerid, -1);
		}
		else if(P_circularmenu_active[playerid] == 2)
		{
	        TextDrawHideForPlayer(playerid, UserBox[0]);
	        TextDrawHideForPlayer(playerid, UserBox[1]);
	        TextDrawHideForPlayer(playerid, UserBox[2]);
	        TextDrawHideForPlayer(playerid, UserBox[3]);

	        PlayerTextDrawHide(playerid, PlayerUserBox[playerid][0]);
	        PlayerTextDrawHide(playerid, PlayerUserBox[playerid][1]);
		    CancelSelectTextDraw(playerid);
		   	P_circularmenu_active[playerid] = -1;
		   	ShowBankCash(playerid, -1);
		}
		else if(P_circularmenu_active[playerid] == 3)
		{
	        TextDrawHideForPlayer(playerid, UserBox[0]);
	        TextDrawHideForPlayer(playerid, UserBox[1]);
	        TextDrawHideForPlayer(playerid, UserBox[2]);
	        TextDrawHideForPlayer(playerid, UserBox[3]);

	        PlayerTextDrawHide(playerid, PlayerUserBox[playerid][0]);
	        PlayerTextDrawHide(playerid, PlayerUserBox[playerid][1]);
		    CancelSelectTextDraw(playerid);
		   	P_circularmenu_active[playerid] = -1;
		   	loop(0, 4, l) PlayerTextDrawHide(playerid, CosasPorHacer[playerid][l]);
		}
		if(P_bank_state[playerid] == 1)
		{
		    loop(0, 20, l) TextDrawHideForPlayer(playerid, Bank[l]);
      		PlayerTextDrawHide(playerid, PlayerBank[playerid][0]);
        	PlayerTextDrawHide(playerid, PlayerBank[playerid][1]);
		    P_bank_state[playerid] = -1;
			KillTimer(MyTimers[playerid][17]);
			ChatLogDisabled[playerid] = false;
			ShowBankCash(playerid, 2000);
		}
		if(P_catalogobinco[playerid] >= 1 || P_catalogozip[playerid] >= 1)
		{
			SetPlayerVirtualWorld(playerid, 0);
            SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, true);
			P_catalogobinco[playerid] = -1;
			P_catalogozip[playerid] = -1;
			ChatLogDisabled[playerid] = false;
			loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_Ropa[i]);
			PlayerTextDrawHide(playerid, PTD_Ropa[playerid]);
			SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
			ColocarToys(playerid);
		}
		if(iPhoneStatus[playerid] == 3)
        {
            if(iPhoneCallStatus[playerid] == 0)
            {
	            iPhoneCallStatus[playerid] = 0;
	      		PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	      		called[playerid] = "";
		        iPhoneStatus[playerid] = 2;
		        HideIphoneMenu(playerid);
		        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
		        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
			}
        }
		return 1;
	}

    if(clickedid == TD_Ropa[2]) // <<
    {
        if(P_catalogobinco[playerid] != -1)
        {
	        PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogobinco[playerid] == 1) P_catalogobinco[playerid] = (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleBinco)-1) : (sizeof(ClotheMaleBinco)-1));
	        else P_catalogobinco[playerid] -= 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0])));
	        return 1;
		}
		if(P_catalogozip[playerid] != -1)
		{
		    PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogozip[playerid] == 1) P_catalogozip[playerid] = (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleZip)-1) : (sizeof(ClotheMaleZip)-1));
	        else P_catalogozip[playerid] -= 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0])));
		}
    }
    if(clickedid == TD_Ropa[3]) // $$
    {
        if(P_catalogobinco[playerid] != -1)
		{
	        if( (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])) > PlayerInfo[playerid][dinero])
			{
				InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
			}
			else
			{
			    CancelSelectTextDraw(playerid);
	            PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
			    PlayerInfo[playerid][dinero] -= (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1]));
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			    PlayerInfo[playerid][skin] = (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0]));
			    //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
			    SetPlayerVirtualWorld(playerid, 0);
	            SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				P_catalogobinco[playerid] = -1;
				ChatLogDisabled[playerid] = false;
				loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_Ropa[i]);
				PlayerTextDrawHide(playerid, PTD_Ropa[playerid]);
				PlayerInfo[playerid][pToy][0] = 0; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				PlayerInfo[playerid][pToy][1] = 0; //SaveValue(playerid, "PTOY1", PlayerInfo[playerid][pToy][1]);
				PlayerInfo[playerid][pToy][2] = 0; //SaveValue(playerid, "PTOY2", PlayerInfo[playerid][pToy][2]);
			}
			return 1;
		}
		if(P_catalogozip[playerid] != -1)
		{
		    if( (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])) > PlayerInfo[playerid][dinero])
			{
				InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
			}
			else
			{
			    CancelSelectTextDraw(playerid);
	            PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
			    PlayerInfo[playerid][dinero] -= (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1]));
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			    PlayerInfo[playerid][skin] = (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0]));
			    //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
			    SetPlayerVirtualWorld(playerid, 0);
	            SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				P_catalogobinco[playerid] = -1;
				ChatLogDisabled[playerid] = false;
				loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_Ropa[i]);
				PlayerTextDrawHide(playerid, PTD_Ropa[playerid]);
				PlayerInfo[playerid][pToy][0] = 0; //SaveValue(playerid, "PTOY0", PlayerInfo[playerid][pToy][0]);
				PlayerInfo[playerid][pToy][1] = 0; //SaveValue(playerid, "PTOY1", PlayerInfo[playerid][pToy][1]);
				PlayerInfo[playerid][pToy][2] = 0; //SaveValue(playerid, "PTOY2", PlayerInfo[playerid][pToy][2]);
			}
			return 1;
		}
	}
    if(clickedid == TD_Ropa[4]) // >>
    {
        if(P_catalogobinco[playerid] != -1)
		{
	        PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogobinco[playerid] == (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleBinco)-1) : (sizeof(ClotheMaleBinco)-1))) P_catalogobinco[playerid] = 1;
	        else P_catalogobinco[playerid] += 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0])));
	        return 1;
		}
        if(P_catalogozip[playerid] != -1)
		{
		    PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogozip[playerid] == (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleZip)-1) : (sizeof(ClotheMaleZip)-1))) P_catalogozip[playerid] = 1;
	        else P_catalogozip[playerid] += 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0])));
		}
    }
    if(clickedid == TD_GrottiCatalogo[7]) // >>>
    {
        ShowPlayerDialog( playerid, -1, DIALOG_STYLE_MSGBOX, "_", "_", "_", "");
        switch(P_catalogogrotti[playerid])
        {
            case 0:
            {
                InterpolateCameraPos(playerid, 521.6366, -1307.1511, 1999.2629, 529.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 521.6366, -1296.1511, 1996.7765, 529.1366, -1296.6511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Turismo");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$350.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 576.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 562.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 1;
            }
            case 1:
            {
                InterpolateCameraPos(playerid, 529.1366, -1307.1511, 1999.2629, 536.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 529.1366, -1296.6511, 1996.7765, 536.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Banshee");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$190.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 555.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 2;
            }
            case 2:
            {
                InterpolateCameraPos(playerid, 536.6366, -1307.1511, 1999.2629, 544.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 536.6366, -1297.1511, 1996.7765, 544.1366, -1298.1511, 1997.2629, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Infernus");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$450.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 580.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 3;
            }
            case 3:
            {
                InterpolateCameraPos(playerid, 544.1366, -1307.1511, 1999.2629, 551.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 544.1366, -1298.1511, 1997.2629, 551.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Bullet");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$260.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 4;
            }
            case 4:
            {
                InterpolateCameraPos(playerid, 551.6366, -1307.1511, 1999.2629, 559.1479, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 551.6366, -1297.1511, 1996.7765, 559.1479, -1296.5100, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Cheetah");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$420.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 5;
            }
            case 5:
            {
                InterpolateCameraPos(playerid, 559.1479, -1307.1511, 1999.2629, 566.6479, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 559.1479, -1296.5100, 1996.7765, 566.6479, -1296.0100, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Phoenix");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$80.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 540.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 535.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 6;
            }
        }
        return 1;
    }
	if(clickedid == TD_GrottiCatalogo[8]) // <<<
	{
	    ShowPlayerDialog( playerid, -1, DIALOG_STYLE_MSGBOX, "_", "_", "_", "");
 		switch(P_catalogogrotti[playerid])
        {
            case 1:
            {
                InterpolateCameraPos(playerid, 529.1366, -1307.1511, 1999.2629, 521.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 529.1366, -1296.6511, 1996.7765, 521.6366, -1296.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Supergt");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$300.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 572.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 568.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 0;
            }
            case 2:
            {
                InterpolateCameraPos(playerid, 536.6366, -1307.1511, 1999.2629, 529.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 536.6366, -1297.1511, 1996.7765, 529.1366, -1296.6511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Turismo");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$350.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 576.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 562.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 1;
            }
            case 3:
            {
                InterpolateCameraPos(playerid, 544.1366, -1307.1511, 1999.2629, 536.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 544.1366, -1298.1511, 1997.2629, 536.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Banshee");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$190.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 555.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 2;
            }
            case 4:
            {
                InterpolateCameraPos(playerid, 551.6366, -1307.1511, 1999.2629, 544.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 551.6366, -1297.1511, 1996.7765, 544.1366, -1298.1511, 1997.2629, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Infernus");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$450.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 580.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 3;
            }
            case 5:
            {
                InterpolateCameraPos(playerid, 559.1479, -1307.1511, 1999.2629, 551.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 559.1479, -1296.5100, 1996.7765, 551.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Bullet");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$260.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 4;
            }
            case 6:
            {
                InterpolateCameraPos(playerid, 566.6479, -1307.1511, 1999.2629, 559.1479, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 566.6479, -1296.0100, 1996.7765, 559.1479, -1296.5100, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Cheetah");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$420.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 5;
            }
        }
		return 1;
	}
	if(clickedid == TD_GrottiCatalogo[6])
	{
	    switch(P_catalogogrotti[playerid])
	    {
	        case 0:
	        {
			    if(300000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
                ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Super GT", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $300.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 1:
	        {
			    if(350000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Turismo", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $350.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 2:
	        {
			    if(190000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Banshee", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $190.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 3:
	        {
			    if(450000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Infernus", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $450.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 4:
	        {
			    if(260000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Bullet", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $260.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 5:
	        {
			    if(420000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Cheetah", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $420.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 6:
	        {
			    if(80000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Phoenix", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $80.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
		}
	}
        /*
		SUPERGT      		230.0 					26.0 --- $300mil
		TURISMO      		240.0 					30.0 --- $350mil
		BANSHEE      		200.0 					33.0 --- $190mil
		INFERNUS     		240.0 					30.0 --- $450mil
		BULLET       		230.0 					30.0 --- $260mil
		CHEETAH      		230.0 					30.0 --- $420mil
		PHOENIX      		200.0 					26.0 --- $80mil
	*/
    if(clickedid == TD_ST[5]) // IZQ 2
    {
        PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
    	switch(P_register_step[playerid])
		{
		    case 0: //Nombre
		    {
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "edad");
		        new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  str);
				P_register_step[playerid] = 2;
				return 1;
		    }
		    case 1: //Género
		    {
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "nombre");
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  PlayerNameNormal(playerid));
				P_register_step[playerid] = 0;
				return 1;
		    }
		    case 2: //Edad
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  simbolos("género"));
		        if(PlayerInfo[playerid][sexo] == 0) PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "masculino");
		        else PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "femenino");
				P_register_step[playerid] = 1;
				return 1;
		    }
		}
        return 1;
    }
    if(clickedid == TD_ST[6]) // IZQ 1
    {
        switch(P_register_step[playerid])
		{
		    case 0: return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    case 1:
			{
				if(PlayerInfo[playerid][sexo] == 1)
				{
				    PlayerInfo[playerid][skin] = RandomMen[random(sizeof(RandomMen))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 0; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "masculino");
				    PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
				    SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
				}
				else
				{
				    PlayerInfo[playerid][skin] = RandomWoman[random(sizeof(RandomWoman))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 1; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "femenino");
				    PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
				    SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
				}
			}
			case 2:
			{
			    if(PlayerInfo[playerid][edad] == 21) return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			  	PlayerInfo[playerid][edad]--; //SaveValue(playerid, "EDAD", PlayerInfo[playerid][edad]);
				new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], str);
				PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
			}
		}
        return 1;
    }
    if(clickedid == TD_ST[7]) // DER 1
    {
		switch(P_register_step[playerid])
		{
		    case 0: return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    case 1:
		    {
		        if(PlayerInfo[playerid][sexo] == 1)
				{
				    PlayerInfo[playerid][skin] = RandomMen[random(sizeof(RandomMen))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 0; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "masculino");
				    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
				}
				else
				{
				    PlayerInfo[playerid][skin] = RandomWoman[random(sizeof(RandomWoman))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 1; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "femenino");
				    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
				}
		    }
		    case 2:
		    {
		        if(PlayerInfo[playerid][edad] == 40) return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
				PlayerInfo[playerid][edad]++;
				//SaveValue(playerid, "EDAD", PlayerInfo[playerid][edad]);
				new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], str);
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
				return 1;
		    }
		}
        return 1;
    }
    if(clickedid == TD_ST[8]) // DER 2
    {
        PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
    	switch(P_register_step[playerid])
		{
		    case 0: //Nombre
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  simbolos("género"));
		        if(PlayerInfo[playerid][sexo] == 0) PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "masculino");
		        else PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "femenino");
				P_register_step[playerid] = 1;
				return 1;
		    }
		    case 1: //Género
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "edad");
		        new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  str);
				P_register_step[playerid] = 2;
				return 1;
		    }
		    case 2: //Edad
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "nombre");
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  PlayerNameNormal(playerid));
				P_register_step[playerid] = 0;
				return 1;
		    }
		}
        return 1;
    }
    if(clickedid == TD_ST[9])
    {
        /*
        CancelSelectTextDraw(playerid);
	    new str[500];
        format(str, 500, "\n\tNombre: %s\n\tEdad: %d\n\tGénero: %d\n\tCorreo: %s\n\n{00CCFF}¿Son correctos?", PlayerNameNormal(playerid), PlayerInfo[playerid][edad], PlayerInfo[playerid][sexo], PlayerInfo[playerid][email]);
        ShowPlayerDialog(playerid, DIALOG_CONFIRME, DIALOG_STYLE_MSGBOX, "Estos son tus datos", str, "Sí", "No");
        */
        loop(0, 6, pd) TextDrawShowForPlayer(playerid, TD_PLAYERDATA[pd]);
		new string[145];
		format(string, 145, "%s~n~~n~%d~n~~n~%s~n~~n~_", PlayerName(playerid), PlayerInfo[playerid][edad], PlayerInfo[playerid][sexo] == 0 ? ("Masculino"):("Femenino"));
        PlayerTextDrawSetString(playerid, PTD_PD[playerid], string);
        PlayerTextDrawShow(playerid, PTD_PD[playerid]);
        loop(4, 10, id) TextDrawHideForPlayer(playerid, TD_ST[id]);
        PlayerTextDrawHide(playerid, PTD_ST[playerid][0]);
        PlayerTextDrawHide(playerid, PTD_ST[playerid][1]);
        return 1;
    }
    
    if(clickedid == TD_PLAYERDATA[3])
    {
        PlayerTextDrawHide(playerid, PTD_PD[playerid]);
        loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[i]);
        ShowPlayerDialog(playerid, DIALOG_INTRO, DIALOG_STYLE_MSGBOX, "{FFFF00}Montevideo Roleplay 2014 - Intro", "¿Ver la introducción al servidor?\n\n\tSi presionas en NO pasaremos\n\tdirectamente al tutorial de conceptos.", "Si", "No");
        /*
    	PlayerPlaySound(playerid,1135,0.0,0.0,0.0);
        P_newuser[playerid] = 1;
        P_register_step[playerid] = -1;
        StopAudioStreamForPlayer(playerid);
		PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/gqqhiahls4mgu9m/intro.mp3");//"https://dl.dropboxusercontent.com/s/bw2a4503jsa1orl/intro.mp3");
		PlayerTextDrawHide(playerid, PTD_PD[playerid]);
		loop(0, 10, l) TextDrawHideForPlayer(playerid, TD_ST[l]);
		loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[i]);
		loop(0, 20, a) SendClientMessage(playerid, -1, " ");
		
		PlayerTextDrawBoxColor(playerid, Background[playerid], 0x000000FF);
		PlayerTextDrawShow(playerid, Background[playerid]);
		MyTimers[playerid][0] = SetTimerEx("FadeIn", 1500, false, "id", playerid, 250);
		CancelSelectTextDraw(playerid);
		TogglePlayerSpectating(playerid, true);
		InterpolateCameraPos(playerid, CameraPositions[0][0], CameraPositions[0][1], CameraPositions[0][2], CameraPositions[0][3], CameraPositions[0][4], CameraPositions[0][5], 10000);
		InterpolateCameraLookAt(playerid, CameraPositions[0][6], CameraPositions[0][7], CameraPositions[0][8], CameraPositions[0][9], CameraPositions[0][10], CameraPositions[0][11], 10000);
        SetPlayerVirtualWorld(playerid, playerid);
		MyTimers[playerid][1] = SetTimerEx("OnPlayerFinishInterpolateCamera", 8000, false, "id", playerid, 1);*/
        return 1;
    }
    
    if(clickedid == TD_PLAYERDATA[2])
    {
    	loop(0, 6, pd) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[pd]);
        PlayerTextDrawHide(playerid, PTD_PD[playerid]);
        loop(4, 10, id) TextDrawShowForPlayer(playerid, TD_ST[id]);
        PlayerTextDrawShow(playerid, PTD_ST[playerid][0]);
        PlayerTextDrawShow(playerid, PTD_ST[playerid][1]);
    }
    
    if(clickedid == CircularMenu[15]) //Cuenta
    {
    P_circularmenu_active[playerid] = 2;
    loop(0, 12, a) TextDrawHideForPlayer(playerid, CircularMenu[a]);
    TextDrawShowForPlayer(playerid, UserBox[0]);
    TextDrawShowForPlayer(playerid, UserBox[1]);
    TextDrawShowForPlayer(playerid, UserBox[2]);
    TextDrawShowForPlayer(playerid, UserBox[3]);

    PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][0], "Cuenta");
    PlayerTextDrawShow(playerid, PlayerUserBox[playerid][0]);
    PlayerTextDrawShow(playerid, PlayerUserBox[playerid][1]);
        
    new str2[32];
    format(str2, 32, "%d", PlayerInfo[playerid][phonenumber]);
    new str3[32];
    format(str3, 32, "%d", PlayerInfo[playerid][bankt]);
    new str[150];
    format(str, 150, "Nombre: %s~n~Edad: %d~n~Género: %s~n~Dinero: %d~n~Dinero en el banco: %d~n~Móvil: %s~n~Cuenta bancaria: %d",
    PlayerNameNormal(playerid),
    PlayerInfo[playerid][edad],
    GetSex(playerid),
    PlayerInfo[playerid][dinero],
    PlayerInfo[playerid][dinerobank],
    PlayerInfo[playerid][phonenumber] == 0 ? (simbolos("sin móvil")):(str2),
    PlayerInfo[playerid][bankt]);
    PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][1], simbolos(str));
    return 1;
    }
    if(clickedid == CerrarCreditos)
    {
    StopAudioStreamForPlayer(playerid);
    StopPlayerObject(playerid, CreditObject[playerid]);
    TextDrawHideForPlayer(playerid, CerrarCreditos);
    SetCameraBehindPlayer(playerid);
    SetPlayerFacingAngle(playerid, 0.0);
    CancelSelectTextDraw(playerid);
    new Float:x, Float:y, Float:z;
    x = 1153.070434;
    y = -2089.879882;
    z = 56.483135;
    SetPlayerObjectPos(playerid, CreditObject[playerid], x, y, z);
    }
    if(clickedid == CircularMenu[19]) //Info
	{
	    P_circularmenu_active[playerid] = 2;
	    loop(0, 12, a) TextDrawHideForPlayer(playerid, CircularMenu[a]);
     	TextDrawShowForPlayer(playerid, UserBox[0]);
        TextDrawShowForPlayer(playerid, UserBox[1]);
        TextDrawShowForPlayer(playerid, UserBox[2]);
        TextDrawShowForPlayer(playerid, UserBox[3]);
        
        PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][0], simbolos("Información"));
        PlayerTextDrawShow(playerid, PlayerUserBox[playerid][0]);
        PlayerTextDrawShow(playerid, PlayerUserBox[playerid][1]);
        
        PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][1], simbolos("Montevideo Roleplay es un servidor de rol basado~n~en la innovación y la comodidad del jugador.~n~~n~Montevideo Roleplay ha sido creado por...~n~adri1, inuckles, Alex15."));
        return 1;
    }
    if(clickedid == CircularMenu[20]) //creditos
	{
	    P_circularmenu_active[playerid] = 2;
	    for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);

        SendClientMessage(playerid, -1, "concha de  tu madre");
        
        PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ikqjtmzotd3yihs/nextepisode.mp3?token_hash=AAHZMMqsCT0YsD4a__lndGQwubToa7lokTw2nb-bqLSjgQ&dl=1");
        for(new i = 0; i != 32; i++) SendClientMessage(playerid, -1, " ");
        TextDrawShowForPlayer(playerid, CerrarCreditos);
        SetCameraBehindPlayer(playerid);
        SetPlayerFacingAngle(playerid, 0.0);
        AttachCameraToPlayerObject(playerid, CreditObject[playerid]);
        SetPlayerFacingAngle(playerid, 0.0);
        SelectTextDraw(playerid, 0x33AA33AA);
        new Float:x, Float:y, Float:z;
        x = 1153.070434;
        y = -2089.879882;
        z = 56.483135;
        SetPlayerObjectPos(playerid, CreditObject[playerid], x, y, z);
        MovePlayerObject(playerid, CreditObject[playerid], x, y, z-15, 0.2);
        
        return 1;
    }
    if(clickedid == CircularMenu[22]) //Trabajo
    {
        P_circularmenu_active[playerid] = 2;
        loop(0, 12, a) TextDrawHideForPlayer(playerid, CircularMenu[a]);
        TextDrawShowForPlayer(playerid, UserBox[0]);
        TextDrawShowForPlayer(playerid, UserBox[1]);
        TextDrawShowForPlayer(playerid, UserBox[2]);
        TextDrawShowForPlayer(playerid, UserBox[3]);

        PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][0], "Trabajo");
        PlayerTextDrawShow(playerid, PlayerUserBox[playerid][0]);
        PlayerTextDrawShow(playerid, PlayerUserBox[playerid][1]);
        return 1;
    }
    if(clickedid == CircularMenu[17]) //Comandos
    {
        P_circularmenu_active[playerid] = 2;
        for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        TextDrawShowForPlayer(playerid, UserBox[0]);
        TextDrawShowForPlayer(playerid, UserBox[1]);
        TextDrawShowForPlayer(playerid, UserBox[2]);
        TextDrawShowForPlayer(playerid, UserBox[3]);

        PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][0], "Comandos");
        PlayerTextDrawShow(playerid, PlayerUserBox[playerid][0]);
        PlayerTextDrawShow(playerid, PlayerUserBox[playerid][1]);

        PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][1], simbolos("Próximamente"));
        return 1;
    }
    if(clickedid == CircularMenu[23])
    {
     SendClientMessage(playerid, -1, "Cerraste el menu");
     for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
     CancelSelectTextDraw(playerid);
     }
        
    if(clickedid == Bank[16]) // Retirar
    {
  		TextDrawHideForPlayer(playerid, Bank[15]);
	    TextDrawHideForPlayer(playerid, Bank[16]);
	    TextDrawHideForPlayer(playerid, Bank[17]);
	    TextDrawHideForPlayer(playerid, Bank[18]);
	    TextDrawHideForPlayer(playerid, Bank[19]);
    	ShowPlayerDialog(playerid, DIALOG_RETIRAR, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
    	return 1;
    }
    if(clickedid == Bank[17]) // Depositar
    {
		TextDrawHideForPlayer(playerid, Bank[15]);
	    TextDrawHideForPlayer(playerid, Bank[16]);
	    TextDrawHideForPlayer(playerid, Bank[17]);
	    TextDrawHideForPlayer(playerid, Bank[18]);
	    TextDrawHideForPlayer(playerid, Bank[19]);
        ShowPlayerDialog(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
        return 1;
    }
    if(clickedid == Bank[18]) // Salir
    {
        loop(0, 20, l) TextDrawHideForPlayer(playerid, Bank[l]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][0]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][1]);
    	P_bank_state[playerid] = -1;
    	CancelSelectTextDraw(playerid);
    	ChatLogDisabled[playerid] = false;
    	ShowBankCash(playerid, 2000);
    	return 1;
    }
    
    if(clickedid == TD_iPhone_Call[1])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "1");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[2])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "2");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[3])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "3");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[4])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "4");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[5])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "5");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[6])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "6");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[7])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "7");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[8])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "8");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[9])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "9");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[10])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "0");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[11]) //Call
	{
	    CancelSelectTextDraw(playerid);
     	loop(0, sizeof(TD_iPhone_Call), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone_Call[PHONE]);
     	TextDrawShowForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawShowForPlayer(playerid, TD_iPhone_CallYesNo[1]);
     	iPhoneCallStatus[playerid] = 1;
     	new c;
		new ph = strval(called[playerid]);
		if(PlayerInfo[playerid][phonenumber] == 0)
	    {
	        if(ph == 333)
	        {
	            PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	            iPhoneCallStatus[playerid] = 5;
	            PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][0], "Estableciendo~n~llamada...");
			    PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][1], "MyPhone");
			    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][0]);
			    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][1]);
			    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
			    MyTimers[playerid][22] = SetTimerEx("ActivarIPHONE", 3000, 0, "i", playerid);
	            return 1;
	        }
	        PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
	        iPhoneCallStatus[playerid] = 0;
      	//	PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
      		called[playerid] = "";
	        iPhoneStatus[playerid] = 2;
	        HideIphoneMenu(playerid);
	        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
			SendClientMessage(playerid, -1, "Necesitas activar tu tarjeta para empezar a usarla, llama al {00CCFF}333 {FFFFFF}para activarla.");
			return 1;
	    }
	    if(ph == 202)
		{
			iPhoneCallStatus[playerid] = 0;
		    iPhoneStatus[playerid] = 0;
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
	     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
	        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);
		    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
		    called[playerid] = "";
		    callto[playerid] = 0;
		    iPhone_CC[0][playerid] = 0;
			iPhone_CC[1][playerid] = 0;
			iPhone_CC[2][playerid] = 0;
    		new string[512];
			new count = 0;
		    for(new k = 0; k != 4; k++)
			{
				if(PlayerInfo[playerid][PlayerVehicleKey][k] != -1)
				{
			        if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 2 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 6 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 12) format(string, sizeof(string), "%s Vehículo #%d (%s)\n", string, k, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][k]));
			        else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 1) format(string, sizeof(string), "%s Vehículo #%d (%s)\n", string, k, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][k]));
		            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 3) format(string, sizeof(string), "%s Vehículo #%d (%s) destruido\n", string, k, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][k]));
		            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 4) format(string, sizeof(string), "%s Vehículo #%d (%s)\n", string, k, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][k]));
		            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][k]][VSTATUS] == 5) format(string, sizeof(string), "%s Vehículo #%d (%s)\n", string, k, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][k]));
					count = 1;
		        }
		        else format(string, sizeof(string), "%s Vehículo #%d (Vacío)\n", string, k);
		    }
		    if(count == 0) return SendClientMessage(playerid, -1, "No tienes ningún vehículo.");
			ShowPlayerDialog(playerid, DIALOG_SEGUROV, DIALOG_STYLE_LIST, "Aseguradora de vehículos", string, "Reclamar", "Cancelar");
		    return 1;
		}
		foreach(new i : Player)
		{
            if(playerid != i)
    		{
				if(PlayerInfo[i][phonenumber] == ph)
				{
			        if(iPhoneCallStatus[i] > 0)
			        {
			            PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
               			iPhoneCallStatus[playerid] = 0;
			      		//PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
			      		called[playerid] = "";
				        iPhoneStatus[playerid] = 2;
				        HideIphoneMenu(playerid);
				        PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][1], "_");
				        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
				        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
						SendClientMessage(playerid, -1, "El número al que has llamado está ocupado.");
						return 1;
			        }
			        if(iPhoneStatus[i] == 3) HideIphoneMenu(i);
	        		
				    iPhoneCallStatus[playerid] = 4;
				    iPhoneCallStatus[i] = 2;

				    callto[playerid] = i;
				    callto[i] = playerid;

				    c = 1;
				    PlayerPlaySound(i, 20600, 0.0, 0.0, 0.0);
				    PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][0], "Estableciendo~n~llamada...");
				    new Rate[24];
					
				    format(Rate, 24, "%d", PlayerInfo[i][phonenumber]);
				    PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][1], Rate);
				    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][0]);
				    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][1]);
				    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
				    TextDrawShowForPlayer(i, TD_iPhone_CallYesNo[0]);
				    TextDrawShowForPlayer(i, TD_iPhone_CallYesNo[1]);

				    TextDrawHideForPlayer(i, TD_iPhone[25]);
				    loop(0, 19, PHONE) TextDrawShowForPlayer(i, TD_iPhone[PHONE]);

				    loop(19, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(i, TD_iPhone[PHONE]);
					loop(1, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(i, PTD_iPhone[PPHONE][i]);

				    TextDrawShowForPlayer(i, TD_iPhone[22]);
				    TextDrawShowForPlayer(i, TD_iPhone[23]);
				    TextDrawShowForPlayer(i, TD_iPhone[24]);

				    PlayerTextDrawSetString(i, PTD_iPhone_Info[i][0], "Llamada~n~entrante...");

                    
				    format(Rate, 24, "%d", PlayerInfo[playerid][phonenumber]);
				    PlayerTextDrawSetString(i, PTD_iPhone_Info[i][1], Rate);
				    PlayerTextDrawShow(i, PTD_iPhone_Info[i][0]);
				    PlayerTextDrawShow(i, PTD_iPhone_Info[i][1]);
                    PlayerTextDrawSetString(i, PTD_iPhone[0][i], "Llamar");
			        PlayerTextDrawShow(i, PTD_iPhone[0][i]);
			        PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
					break;
				}
			}
		}
		if(c == 0)
		{
		    iPhoneCallStatus[playerid] = 0;
      		PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
      		called[playerid] = "";
	        iPhoneStatus[playerid] = 2;
	        HideIphoneMenu(playerid);
	        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
	        PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			SendClientMessage(playerid, -1, "El número marcado no existe o esta fuera de cobertura.");
		}
	}
	if(clickedid == TD_iPhone_Call[12]) //Delete
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
        new size = strlen(called[playerid]);
		if(size == 1) strdel(called[playerid],0,1),PlayerTextDrawSetString(playerid,PTD_iPhone_Call[playerid],"_");
		else strdel(called[playerid],size-1,size), PlayerTextDrawSetString(playerid,PTD_iPhone_Call[playerid],called[playerid]);
		return 1;
	}
	return 1;
}

funcion:OnPlayerFinishInterpolateCamera(playerid, type)
{
	switch(type)
	{
	    case 1: PlayerTextDrawShow(playerid, TD_IO[playerid]), PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Los Santos...~n~~n~"));
	    case 3: PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Donde podrás divertirte~n~__con trabajos, fiestas y más~n~__eventos interesantes.~n~~n~"));
	    case 5:
		{
		    TextDrawShowForPlayer(playerid, TD_EY[0]);
		    TextDrawShowForPlayer(playerid, TD_EY[1]);
		    TextDrawShowForPlayer(playerid, TD_EY[2]);
			PlayerTextDrawHide(playerid, TD_IO[playerid]);
		}
		case 7:
		{
		    TextDrawHideForPlayer(playerid, TD_EY[0]);
		    TextDrawHideForPlayer(playerid, TD_EY[1]);
		    TextDrawHideForPlayer(playerid, TD_EY[2]);
		}
	    case 10:
		{
			InterpolateCameraPos(playerid, CameraPositions[type][0], CameraPositions[type][1], CameraPositions[type][2], CameraPositions[type][3], CameraPositions[type][4], CameraPositions[type][5], 10000);
			InterpolateCameraLookAt(playerid, CameraPositions[type][6], CameraPositions[type][7], CameraPositions[type][8], CameraPositions[type][9], CameraPositions[type][10], CameraPositions[type][11], 10000);
			MyTimers[playerid][5] = SetTimerEx("OnPlayerFinishInterpolateCamera", 5000, false, "id", playerid, type+1);
			return 1;
		}
		case 11:
		{
		    PlayerTextDrawBoxColor(playerid, Background[playerid], 0x00000000);
			PlayerTextDrawShow(playerid, Background[playerid]);
			MyTimers[playerid][2] = SetTimerEx("FadeOut", 500, false, "id", playerid, 0);
		    return 1;
		}
	}
    InterpolateCameraPos(playerid, CameraPositions[type][0], CameraPositions[type][1], CameraPositions[type][2], CameraPositions[type][3], CameraPositions[type][4], CameraPositions[type][5], 10000);
	InterpolateCameraLookAt(playerid, CameraPositions[type][6], CameraPositions[type][7], CameraPositions[type][8], CameraPositions[type][9], CameraPositions[type][10], CameraPositions[type][11], 10000);
	MyTimers[playerid][5] = SetTimerEx("OnPlayerFinishInterpolateCamera", 8000, false, "id", playerid, type+1);
	return 1;
}

funcion:FadeIn(playerid, A, b)
{
    PlayerTextDrawBoxColor(playerid, Background[playerid], RGBToHex(0, 0, 0, A));
    PlayerTextDrawShow(playerid, Background[playerid]);
    switch(A)
    {
	    case 11 .. 500: MyTimers[playerid][6] = SetTimerEx("FadeIn", DELAY, false, "idd", playerid, A-20, b);
		case 10:
		{
			PlayerTextDrawHide(playerid, Background[playerid]);
		}
	}
	return 1;
}

funcion:FadeOut(playerid, A)
{
    PlayerTextDrawBoxColor(playerid, Background[playerid], RGBToHex(0, 0, 0, A));
    PlayerTextDrawShow(playerid, Background[playerid]);
    switch(A)
    {
	    case 0 .. 220: MyTimers[playerid][8] = SetTimerEx("FadeOut", DELAY, false, "id", playerid, A+20);
		case 240:
		{
			PlayerTextDrawBoxColor(playerid, Background[playerid], 0x000000FF);
			PlayerTextDrawShow(playerid, Background[playerid]);
			NextIntroStep(playerid);
		}
	}
	return 1;
}

funcion:ShowBigLogoForPlayer(playerid) return TextDrawShowForPlayer(playerid, TD_EY[0]), TextDrawShowForPlayer(playerid, TD_EY[1]), TextDrawShowForPlayer(playerid, TD_EY[2]);

funcion:ActivarIPHONE(playerid)
{
    new r = random(9999);

	SendClientMessageEx(playerid, -1, "Su tarjera acaba de ser activada, su número es {00CCFF}%d.", r);
	PlayerInfo[playerid][phonenumber] = r; //SaveValue(playerid, "PHONENUMBER", PlayerInfo[playerid][phonenumber]);
    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
    HideIphoneMenu(playerid);
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if(playertextid == Conceptos[5][playerid])
    {
		new step = P_newuser[playerid];
		if(step == 8)
		{
 			TogglePlayerControllable(playerid, true);
		}
        if(step == 10)
        {
            PlayerTextDrawHide(playerid, Background[playerid]);
	        for(new i = 0; i < sizeof(Conceptos); i++) PlayerTextDrawHide(playerid, Conceptos[i][playerid]);
	        CancelSelectTextDraw(playerid);
		    SetCameraBehindPlayer(playerid);
			MyTimers[playerid][7] = SetTimerEx("FinishPlayerTutorial", 3000, false, "i", playerid);
			PlayerInfo[playerid][dinero] = 1000;
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
			//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			SendClientMessage(playerid, -1, "Usa el comando {FFFF00}/ayuda {FFFFFF} para mostrar un menú de ayuda.");
			SendClientMessage(playerid, -1, "{FFFF00}¡Importante! {FFFFFF}No desperdicies el dinero que te hemos dado, usa el comando {FFFF00}/empezar {FFFFFF}si quieres empezar bien.");
            P_player_tutorial[playerid] = -1;
            return 1;
        }
        ShowConceptPage(playerid, step+1); //MG
    }
    if(playertextid == Conceptos[4][playerid])
    {
        new step = P_newuser[playerid];
		if(step == 1) return 1;
        ShowConceptPage(playerid, step-1); //DM
    }
    return 1;
}

stock NextIntroStep(playerid)
{
    TextDrawHideForPlayer(playerid, TD_EY[0]);
	TextDrawHideForPlayer(playerid, TD_EY[1]);
	TextDrawHideForPlayer(playerid, TD_EY[2]);
	
	P_newuser[playerid] = 1;
	PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OP");
	PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OnPlayer~n~Quiere decir En el personaje~n~lo cual significa que es cuando se rolea~n~Ejemplo: \"Buenos días, señor\" ~n~~n~Los canales OP son: /s /g /me /do"));
    for(new i = 0; i < 15; i++) SendClientMessage(playerid, -1, " ");
    for(new i = 0; i < sizeof(Conceptos); i++) PlayerTextDrawShow(playerid, Conceptos[i][playerid]);
    SelectTextDraw(playerid, 0x33AA33AA);
    P_player_tutorial[playerid] = 1;
	TogglePlayerSpectating(playerid, false);
    SpawnPlayer(playerid);
	return 1;
}

stock ShowConceptPage(playerid, page)
{
	switch(page)
	{
	    case 1:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OP");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OnPlayer~n~Quiere decir En el personaje~n~lo cual significa que es cuando se rolea~n~Ejemplo: \"Buenos días, señor\" ~n~~n~Los canales OP son: /s /g /me /do"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "1/10");
	        P_newuser[playerid] = page;
	    }
	    case 2:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OTP");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OutPlayer~n~Quiere decir Fuera del personaje~n~lo cual significa que es cuando se habla de~n~la vida real~n~Ejemplo: \"Ayer llovió en mi ciudad\" ~n~~n~Los canales OTP son: /b y /d"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "2/10");
	        P_newuser[playerid] = page;
	    }
	    case 3:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - CC");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("ConfundirCanales~n~Esto pasa muy a menudo en los servidores~n~de rol pero es algo que hay que corregir~n~~n~Esto es confundir OP con OTP~n~Ejemplo de CC en OP: \"Está lloviendo\"~n~Cuando en realidad no llueve en el juego"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "3/10");
	        P_newuser[playerid] = page;
	    }
	    case 4:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - DM/ASR");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("DM y ASR~n~En un servidor de rol, no puedes ir~n~matando personas (DM)~n~ni tampoco agrediéndolas (ASR) sin~n~ninguna razón"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "4/10");
	        P_newuser[playerid] = page;
	    }
	    case 5:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - VM");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("Vengarse tras la muerte~n~Si alguien te mata (DM) con razón~n~después no puedes ir a vengarte~n~ya que al morir pierdes la memoria"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "5/10");
	        P_newuser[playerid] = page;
	        CargarAnim(playerid);
	    }
	    case 6:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - RV");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("Robar vehículo~n~No puedes robar un vehículo sin rolearlo~n~~n~¡Si intentas robarlo sin rol, quedarás~n~congelado por 15 segundos!"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "6/10");
	        P_newuser[playerid] = page;
	    }
	    case 7:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - PG");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("PowerGaming~n~Es hacer cosas que no se pueden ~n~hacer en la vida real.~n~EJ: te apuntan con un arma y sales~n~corriendo, sería PG~n~Nunca puedes hacer PG en el servidor~n~iSerás sancionado si lo haces!"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "7/10");
	        P_newuser[playerid] = page;
	    }
	    case 8:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - AB");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("Abusar de un bug~n~Un bug es un error del juego~n~Si encuentras uno, reportalo pero no~n~abuses de él."));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "8/10");
	        P_newuser[playerid] = page;
	    }
	    case 9:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - DUDAS");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("CANAL DE DUDAS~n~Para usar el canal de dudas~n~debes de activarlo con el comando /cduda~n~y posteriormente el comando /d [duda]"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "9/10");
	        P_newuser[playerid] = page;
	    }
	    case 10:
	    {
			PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - FIN");
			PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("FIN~n~Final de la guía~n~ahora estás preparado para empezar.~n~Para escribir usa la tecla 'T'~n~~n~~n~iDiviértete!"));
	        PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "10/10");
	        P_newuser[playerid] = page;
	    }
	}
	return 1;
}

funcion:FinishPlayerTutorial(playerid)
{
    SetPlayerVirtualWorld(playerid, 0);
 	StopAudioStreamForPlayer(playerid);
	ChatLogDisabled[playerid] = false;
	P_newuser[playerid] = -1;
	UpdateUserData(playerid);
	return 1;
}

funcion:GrottiContinue(playerid, type)
{
	/*switch(type)
	{
	    case 0:
	}*/
}

DestroyPlayerTextDraws(playerid)
{
    DestroyPlayerObject(playerid, RejaGrua[playerid]);

	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][0]);
	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][1]);
	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][2]);
	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][3]);
	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][4]);
	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][5]);
	PlayerTextDrawDestroy(playerid, PTD_Toys[playerid][6]);
	
    PlayerTextDrawDestroy(playerid, PTD_Ropa[playerid]);
	PlayerTextDrawDestroy(playerid, ErrorCommand[playerid]);
	PlayerTextDrawDestroy(playerid, Background[playerid]);
	PlayerTextDrawDestroy(playerid, TD_IO[playerid]);
	PlayerTextDrawDestroy(playerid, PlayerUserBox[playerid][0]);
	PlayerTextDrawDestroy(playerid, PlayerUserBox[playerid][1]);
    PlayerTextDrawDestroy(playerid, PlayerBank[playerid][0]);
    PlayerTextDrawDestroy(playerid, PlayerBank[playerid][1]);
    PlayerTextDrawDestroy(playerid, BankCash[playerid]);
    PlayerTextDrawDestroy(playerid, CosasPorHacer[playerid][0]);
    PlayerTextDrawDestroy(playerid, CosasPorHacer[playerid][1]);
    PlayerTextDrawDestroy(playerid, CosasPorHacer[playerid][2]);
    PlayerTextDrawDestroy(playerid, CosasPorHacer[playerid][3]);
    /*PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][0]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][1]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][2]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][3]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][4]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][5]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][6]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][7]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][8]);
    PlayerTextDrawDestroy(playerid, PlayerInventarioTD[playerid][9]);*/
    PlayerTextDrawDestroy(playerid, Conceptos[0][playerid]);
    PlayerTextDrawDestroy(playerid, Conceptos[1][playerid]);
    PlayerTextDrawDestroy(playerid, Conceptos[2][playerid]);
    PlayerTextDrawDestroy(playerid, Conceptos[3][playerid]);
    PlayerTextDrawDestroy(playerid, Conceptos[4][playerid]);
    PlayerTextDrawDestroy(playerid, Conceptos[5][playerid]);
    PlayerTextDrawDestroy(playerid, Conceptos[6][playerid]);
    /*PlayerTextDrawDestroy(playerid, PTD_RO[playerid][0]);
    PlayerTextDrawDestroy(playerid, PTD_RO[playerid][1]);
    PlayerTextDrawDestroy(playerid, PTD_RO[playerid][2]);
    PlayerTextDrawDestroy(playerid, PTD_RO[playerid][3]);*/
    PlayerTextDrawDestroy(playerid, PTD_ST[playerid][0]);
    PlayerTextDrawDestroy(playerid, PTD_ST[playerid][1]);
    PlayerTextDrawDestroy(playerid, PTD_PD[playerid]);
    PlayerTextDrawDestroy(playerid, PTD_GrottiCatalogo[playerid][0]);
    PlayerTextDrawDestroy(playerid, PTD_GrottiCatalogo[playerid][1]);
    PlayerTextDrawDestroy(playerid, PTD_GrottiCatalogo[playerid][2]);
    PlayerTextDrawDestroy(playerid, PTD_GrottiCatalogo[playerid][3]);
	return 1;
}

CreatePlayerTextDraws(playerid)
{
    RejaGrua[playerid] = CreatePlayerObject(playerid, 969, 2478.59888, -2094.49292, 12.71360,   0.00000, 0.00000, 90.00000);

    PTD_Toys[playerid][0] = CreatePlayerTextDraw(playerid,25.000000, 98.000000, "Cascos");
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][0], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][0], 0);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][0], 0.859999, 2.799999);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][0], 0);

	PTD_Toys[playerid][1] = CreatePlayerTextDraw(playerid,17.000000, 117.000000, "__");
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][1], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][1], 0.500000, 17.600030);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid,PTD_Toys[playerid][1], 125);
	PlayerTextDrawTextSize(playerid,PTD_Toys[playerid][1], 158.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][1], 0);

	PTD_Toys[playerid][2] = CreatePlayerTextDraw(playerid,26.000000, 114.000000, "New Textdraw");
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][2], 0);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][2], 5);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][2], 1);
	PlayerTextDrawUseBox(playerid,PTD_Toys[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid,PTD_Toys[playerid][2], 256);
	PlayerTextDrawTextSize(playerid,PTD_Toys[playerid][2], 120.000000, 120.000000);
	PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], 0);
	PlayerTextDrawSetPreviewRot(playerid, PTD_Toys[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][2], 0);

	PTD_Toys[playerid][3] = CreatePlayerTextDraw(playerid,86.000000, 203.000000, "");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][3], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][3], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][3], 0.300000, 1.300000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][3], 0);

	PTD_Toys[playerid][4] = CreatePlayerTextDraw(playerid,86.000000, 234.000000, "");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][4], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][4], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][4], 3);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][4], 0.409999, 1.700000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][4], -65281);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][4], 1);
	PlayerTextDrawUseBox(playerid,PTD_Toys[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid,PTD_Toys[playerid][4], 842150655);
	PlayerTextDrawTextSize(playerid,PTD_Toys[playerid][4], 0.000000, 45.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][4], 0);

	PTD_Toys[playerid][5] = CreatePlayerTextDraw(playerid,75.000000, 234.000000, "~<~______________~>~");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][5], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][5], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][5], 3);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][5], 0.409999, 1.700000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][5], -65281);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][5], 0);

	PTD_Toys[playerid][6] = CreatePlayerTextDraw(playerid,86.000000, 256.000000, "~g~N______~y~ESPACIO______~g~Y");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][6], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][6], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][6], 0.300000, 1.300000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][6], 0);

	//ropa
    PTD_Ropa[playerid] = CreatePlayerTextDraw(playerid, 611.483520, 399.416992, "$0");
	PlayerTextDrawLetterSize(playerid, PTD_Ropa[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, PTD_Ropa[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_Ropa[playerid], 7143423);
	PlayerTextDrawSetShadow(playerid, PTD_Ropa[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_Ropa[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_Ropa[playerid], 255);
	PlayerTextDrawFont(playerid, PTD_Ropa[playerid], 3);
	PlayerTextDrawSetProportional(playerid, PTD_Ropa[playerid], 1);



	//
    PTD_GrottiCatalogo[playerid][0] = CreatePlayerTextDraw(playerid, 502.254699, 330.166687, "Infernus");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][0], 0.440160, 1.541666);
	PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][0], 32.000000, 32.000000);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][0], 1);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][0], -3211009);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_GrottiCatalogo[playerid][0], 255);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, PTD_GrottiCatalogo[playerid][0], 1);

	PTD_GrottiCatalogo[playerid][1] = CreatePlayerTextDraw(playerid, 553.792053, 396.083312, "$450.000");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][1], 0.269618, 1.366665);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_GrottiCatalogo[playerid][1], 51);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PTD_GrottiCatalogo[playerid][1], 1);

	PTD_GrottiCatalogo[playerid][2] = CreatePlayerTextDraw(playerid, 601.770141, 367.083343, "maximobarraedit");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][2], 0.000000, -0.165925);
	PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 504.002929, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][2], 1);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][2], 0);
	PlayerTextDrawUseBox(playerid, PTD_GrottiCatalogo[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PTD_GrottiCatalogo[playerid][2], -2139062017);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][2], 0);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][2], 0);

	PTD_GrottiCatalogo[playerid][3] = CreatePlayerTextDraw(playerid, 601.770141, 389.666687, "acelebarraedit");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][3], 0.000000, -0.165925);
	PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 504.002929, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][3], 1);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	PlayerTextDrawUseBox(playerid, PTD_GrottiCatalogo[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, PTD_GrottiCatalogo[playerid][3], -2139062017);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	
	PTD_PD[playerid] = CreatePlayerTextDraw(playerid, 423.667327, 187.666687, "_");
	PlayerTextDrawLetterSize(playerid, PTD_PD[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, PTD_PD[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_PD[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_PD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_PD[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_PD[playerid], 51);
	PlayerTextDrawFont(playerid, PTD_PD[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_PD[playerid], 1);

	PTD_ST[playerid][0] = CreatePlayerTextDraw(playerid, 319.555908, 188.160049, "nombre");
	PlayerTextDrawLetterSize(playerid, PTD_ST[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PTD_ST[playerid][0], 47.555545, 198.115554);
	PlayerTextDrawAlignment(playerid, PTD_ST[playerid][0], 2);
	PlayerTextDrawColor(playerid, PTD_ST[playerid][0], -1507073);
	PlayerTextDrawUseBox(playerid, PTD_ST[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, PTD_ST[playerid][0], 1162697215);
	PlayerTextDrawSetShadow(playerid, PTD_ST[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_ST[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_ST[playerid][0], 51);
	PlayerTextDrawFont(playerid, PTD_ST[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, PTD_ST[playerid][0], 1);

	PTD_ST[playerid][1] = CreatePlayerTextDraw(playerid, 319.555908, 243.417709, "_");
	PlayerTextDrawLetterSize(playerid, PTD_ST[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PTD_ST[playerid][1], 47.555545, 198.115554);
	PlayerTextDrawAlignment(playerid, PTD_ST[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_ST[playerid][1], -1507073);
	PlayerTextDrawUseBox(playerid, PTD_ST[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PTD_ST[playerid][1], 1162697215);
	PlayerTextDrawSetShadow(playerid, PTD_ST[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_ST[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_ST[playerid][1], 51);
	PlayerTextDrawFont(playerid, PTD_ST[playerid][1], 3);
	PlayerTextDrawSetProportional(playerid, PTD_ST[playerid][1], 1);

	ErrorCommand[playerid] = CreatePlayerTextDraw(playerid, 316.666839, 358.400085, "Lo sentimos, el comando no existe.");
	PlayerTextDrawLetterSize(playerid, ErrorCommand[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, ErrorCommand[playerid], 2);
	PlayerTextDrawColor(playerid, ErrorCommand[playerid], -1);
	PlayerTextDrawSetShadow(playerid, ErrorCommand[playerid], 0);
	PlayerTextDrawSetOutline(playerid, ErrorCommand[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ErrorCommand[playerid], 51);
	PlayerTextDrawFont(playerid, ErrorCommand[playerid], 1);
	PlayerTextDrawSetProportional(playerid, ErrorCommand[playerid], 1);
	
	
	CosasPorHacer[playerid][0] = CreatePlayerTextDraw(playerid,480.000000, 179.000000, "ld_chat:thumbup");
	PlayerTextDrawBackgroundColor(playerid,CosasPorHacer[playerid][0], 255);
	PlayerTextDrawFont(playerid,CosasPorHacer[playerid][0], 4);
	PlayerTextDrawLetterSize(playerid,CosasPorHacer[playerid][0], 0.460000, -2.000000);
	PlayerTextDrawColor(playerid,CosasPorHacer[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,CosasPorHacer[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,CosasPorHacer[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid,CosasPorHacer[playerid][0], 1);
	PlayerTextDrawUseBox(playerid,CosasPorHacer[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid,CosasPorHacer[playerid][0], 255);
	PlayerTextDrawTextSize(playerid,CosasPorHacer[playerid][0], 10.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid,CosasPorHacer[playerid][0], 0);

	CosasPorHacer[playerid][1] = CreatePlayerTextDraw(playerid,480.000000, 192.000000, "ld_chat:thumbup");
	PlayerTextDrawBackgroundColor(playerid,CosasPorHacer[playerid][1], 255);
	PlayerTextDrawFont(playerid,CosasPorHacer[playerid][1], 4);
	PlayerTextDrawLetterSize(playerid,CosasPorHacer[playerid][1], 0.460000, -2.000000);
	PlayerTextDrawColor(playerid,CosasPorHacer[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,CosasPorHacer[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,CosasPorHacer[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,CosasPorHacer[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,CosasPorHacer[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid,CosasPorHacer[playerid][1], 255);
	PlayerTextDrawTextSize(playerid,CosasPorHacer[playerid][1], 10.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid,CosasPorHacer[playerid][1], 0);

	CosasPorHacer[playerid][2] = CreatePlayerTextDraw(playerid,480.000000, 206.000000, "ld_chat:thumbup");
	PlayerTextDrawBackgroundColor(playerid,CosasPorHacer[playerid][2], 255);
	PlayerTextDrawFont(playerid,CosasPorHacer[playerid][2], 4);
	PlayerTextDrawLetterSize(playerid,CosasPorHacer[playerid][2], 0.460000, -2.000000);
	PlayerTextDrawColor(playerid,CosasPorHacer[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,CosasPorHacer[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,CosasPorHacer[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,CosasPorHacer[playerid][2], 1);
	PlayerTextDrawUseBox(playerid,CosasPorHacer[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid,CosasPorHacer[playerid][2], 255);
	PlayerTextDrawTextSize(playerid,CosasPorHacer[playerid][2], 10.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid,CosasPorHacer[playerid][2], 0);

	CosasPorHacer[playerid][3] = CreatePlayerTextDraw(playerid,480.000000, 220.000000, "ld_chat:thumbup");
	PlayerTextDrawBackgroundColor(playerid,CosasPorHacer[playerid][3], 255);
	PlayerTextDrawFont(playerid,CosasPorHacer[playerid][3], 4);
	PlayerTextDrawLetterSize(playerid,CosasPorHacer[playerid][3], 0.460000, -2.000000);
	PlayerTextDrawColor(playerid,CosasPorHacer[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,CosasPorHacer[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,CosasPorHacer[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,CosasPorHacer[playerid][3], 1);
	PlayerTextDrawUseBox(playerid,CosasPorHacer[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid,CosasPorHacer[playerid][3], 255);
	PlayerTextDrawTextSize(playerid,CosasPorHacer[playerid][3], 10.000000, 10.000000);
	PlayerTextDrawSetSelectable(playerid,CosasPorHacer[playerid][3], 0);

	//PlayerUserBox
	PlayerUserBox[playerid][0] = CreatePlayerTextDraw(playerid, 142.666778, 132.408950, "_");
	PlayerTextDrawLetterSize(playerid, PlayerUserBox[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, PlayerUserBox[playerid][0], 1);
	PlayerTextDrawColor(playerid, PlayerUserBox[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerUserBox[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerUserBox[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerUserBox[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerUserBox[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, PlayerUserBox[playerid][0], 1);

	PlayerUserBox[playerid][1] = CreatePlayerTextDraw(playerid, 144.888931, 177.208816, "_");
	PlayerTextDrawLetterSize(playerid, PlayerUserBox[playerid][1], 0.370000, 1.385955);
	PlayerTextDrawAlignment(playerid, PlayerUserBox[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerUserBox[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PlayerUserBox[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerUserBox[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerUserBox[playerid][1], 51);
	PlayerTextDrawFont(playerid, PlayerUserBox[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerUserBox[playerid][1], 1);

    
   	//FadeScreen
	Background[playerid] = CreatePlayerTextDraw(playerid, 320, 0, "_");
    PlayerTextDrawUseBox(playerid, Background[playerid], 1);
    PlayerTextDrawLetterSize(playerid, Background[playerid], 1.0, 49.6);
    PlayerTextDrawTextSize(playerid, Background[playerid], 1.0, 640);
    PlayerTextDrawBoxColor(playerid, Background[playerid], 0x00000000);
    PlayerTextDrawAlignment(playerid, Background[playerid], 2);
    
    //Concepts
 	Conceptos[0][playerid] = CreatePlayerTextDraw(playerid, 641.531494, 1.500000, "usebox");
	PlayerTextDrawLetterSize(playerid, Conceptos[0][playerid], 0.000000, 49.396297);
	PlayerTextDrawTextSize(playerid, Conceptos[0][playerid], -2.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, Conceptos[0][playerid], 1);
	PlayerTextDrawColor(playerid, Conceptos[0][playerid], 0);
	PlayerTextDrawUseBox(playerid, Conceptos[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, Conceptos[0][playerid], 102);
	PlayerTextDrawSetShadow(playerid, Conceptos[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[0][playerid], 0);
	PlayerTextDrawFont(playerid, Conceptos[0][playerid], 0);

	Conceptos[1][playerid] = CreatePlayerTextDraw(playerid, 498.632354, 138.000030, "usebox");
	PlayerTextDrawLetterSize(playerid, Conceptos[1][playerid], 0.000000, 17.183336);
	PlayerTextDrawTextSize(playerid, Conceptos[1][playerid], 143.241592, 0.000000);
	PlayerTextDrawAlignment(playerid, Conceptos[1][playerid], 1);
	PlayerTextDrawColor(playerid, Conceptos[1][playerid], 0);
	PlayerTextDrawUseBox(playerid, Conceptos[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, Conceptos[1][playerid], -5963710);
	PlayerTextDrawSetShadow(playerid, Conceptos[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[1][playerid], 0);
	PlayerTextDrawFont(playerid, Conceptos[1][playerid], 0);

	Conceptos[2][playerid] = CreatePlayerTextDraw(playerid, 146.647491, 137.666793, "Conceptos de ROL - PG");
	PlayerTextDrawLetterSize(playerid, Conceptos[2][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, Conceptos[2][playerid], 495.227416, -439.833343);
	PlayerTextDrawAlignment(playerid, Conceptos[2][playerid], 1);
	PlayerTextDrawColor(playerid, Conceptos[2][playerid], -1);
	PlayerTextDrawUseBox(playerid, Conceptos[2][playerid], true);
	PlayerTextDrawBoxColor(playerid, Conceptos[2][playerid], 255);
	PlayerTextDrawSetShadow(playerid, Conceptos[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[2][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Conceptos[2][playerid], 51);
	PlayerTextDrawFont(playerid, Conceptos[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, Conceptos[2][playerid], 1);

	Conceptos[3][playerid] = CreatePlayerTextDraw(playerid, 150.395294, 160.416671, "a~n~a~n~a~n~a~n~a~n~a~n~a");
	PlayerTextDrawLetterSize(playerid, Conceptos[3][playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, Conceptos[3][playerid], 1);
	PlayerTextDrawColor(playerid, Conceptos[3][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Conceptos[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[3][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Conceptos[3][playerid], 51);
	PlayerTextDrawFont(playerid, Conceptos[3][playerid], 1);
	PlayerTextDrawSetProportional(playerid, Conceptos[3][playerid], 1);

    Conceptos[4][playerid] = CreatePlayerTextDraw(playerid, 195.841644, 266.583221, "~<~ Anterior");
	PlayerTextDrawLetterSize(playerid, Conceptos[4][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, Conceptos[4][playerid], 20, 80);
	PlayerTextDrawAlignment(playerid, Conceptos[4][playerid], 2);
	PlayerTextDrawColor(playerid, Conceptos[4][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Conceptos[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[4][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Conceptos[4][playerid], 51);
	PlayerTextDrawFont(playerid, Conceptos[4][playerid], 1);
	PlayerTextDrawSetProportional(playerid, Conceptos[4][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, Conceptos[4][playerid], true);

	Conceptos[5][playerid] = CreatePlayerTextDraw(playerid, 429.697357, 266.999664, "Siguiente ~>~");
	PlayerTextDrawLetterSize(playerid, Conceptos[5][playerid], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, Conceptos[5][playerid], 20, 80);
	PlayerTextDrawAlignment(playerid, Conceptos[5][playerid], 2);
	PlayerTextDrawColor(playerid, Conceptos[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, Conceptos[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[5][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Conceptos[5][playerid], 51);
	PlayerTextDrawFont(playerid, Conceptos[5][playerid], 1);
	PlayerTextDrawSetProportional(playerid, Conceptos[5][playerid], 1);
	PlayerTextDrawSetSelectable(playerid, Conceptos[5][playerid], true);

	Conceptos[6][playerid] = CreatePlayerTextDraw(playerid, 300.790618, 270.666717, "1/10");
	PlayerTextDrawLetterSize(playerid, Conceptos[6][playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, Conceptos[6][playerid], 1);
	PlayerTextDrawColor(playerid, Conceptos[6][playerid], 16777215);
	PlayerTextDrawSetShadow(playerid, Conceptos[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, Conceptos[6][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Conceptos[6][playerid], 51);
	PlayerTextDrawFont(playerid, Conceptos[6][playerid], 3);
	PlayerTextDrawSetProportional(playerid, Conceptos[6][playerid], 1);
	
	TD_IO[playerid] = CreatePlayerTextDraw(playerid, 28.500000, 36.866592, "_~n~__Bienvenido a Montevideo Roleplay.~n~__Al parecer eres nuevo...~n~~n~__Complete el formulario para~n~__continuar.~n~~n~");
	PlayerTextDrawLetterSize(playerid, TD_IO[playerid], 0.259999, 1.212665);
	PlayerTextDrawTextSize(playerid, TD_IO[playerid], 184.000000, 39.000003);
	PlayerTextDrawAlignment(playerid, TD_IO[playerid], 1);
	PlayerTextDrawColor(playerid, TD_IO[playerid], -1);
	PlayerTextDrawUseBox(playerid, TD_IO[playerid], true);
	PlayerTextDrawBoxColor(playerid, TD_IO[playerid], 120);
	PlayerTextDrawSetShadow(playerid, TD_IO[playerid], 0);
	PlayerTextDrawSetOutline(playerid, TD_IO[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TD_IO[playerid], 51);
	PlayerTextDrawFont(playerid, TD_IO[playerid], 1);
	PlayerTextDrawSetProportional(playerid, TD_IO[playerid], 1);
	
	//Banco
	PlayerBank[playerid][0] = CreatePlayerTextDraw(playerid, 514.777954, 74.675552, "Balance actual: 0$");
	PlayerTextDrawLetterSize(playerid, PlayerBank[playerid][0], 0.314000, 1.306310);
	PlayerTextDrawAlignment(playerid, PlayerBank[playerid][0], 3);
	PlayerTextDrawColor(playerid, PlayerBank[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerBank[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBank[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerBank[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerBank[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBank[playerid][0], 1);

	PlayerBank[playerid][1] = CreatePlayerTextDraw(playerid, 124.666900, 74.675552, "Miguel");
	PlayerTextDrawLetterSize(playerid, PlayerBank[playerid][1], 0.314000, 1.306310);
	PlayerTextDrawAlignment(playerid, PlayerBank[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerBank[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PlayerBank[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBank[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerBank[playerid][1], 51);
	PlayerTextDrawFont(playerid, PlayerBank[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBank[playerid][1], 1);
	
	BankCash[playerid] = CreatePlayerTextDraw(playerid, 607.999816, 98.559906, "$00000000");
	PlayerTextDrawLetterSize(playerid, BankCash[playerid], 0.551333, 2.182402);
	PlayerTextDrawTextSize(playerid, BankCash[playerid], 376.888885, -98.915557);
	PlayerTextDrawAlignment(playerid, BankCash[playerid], 3);
	PlayerTextDrawColor(playerid, BankCash[playerid], 7864319);
	PlayerTextDrawSetShadow(playerid, BankCash[playerid], 0);
	PlayerTextDrawSetOutline(playerid, BankCash[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, BankCash[playerid], 255);
	PlayerTextDrawFont(playerid, BankCash[playerid], 3);
	PlayerTextDrawSetProportional(playerid, BankCash[playerid], 1);
	
	
/*	PlayerInventarioTD[playerid][0] = CreatePlayerTextDraw(playerid, 221.333297, 149.831161, "Bebidas");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][0], 7.111105, 107.022201);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][0], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][0], 41215);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][0], true);

	PlayerInventarioTD[playerid][1] = CreatePlayerTextDraw(playerid, 221.333297, 168.253387, "Comida");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][1], 7.111105, 107.022201);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][1], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][1], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][1], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][1], true);

	PlayerInventarioTD[playerid][2] = CreatePlayerTextDraw(playerid, 221.333297, 186.177673, "Gorros");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][2], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][2], 7.111105, 107.022201);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][2], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][2], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][2], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][2], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][2], true);

	PlayerInventarioTD[playerid][3] = CreatePlayerTextDraw(playerid, 221.333297, 204.101974, "Cara");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][3], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][3], 7.111105, 107.022201);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][3], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][3], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][3], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][3], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][3], true);

	PlayerInventarioTD[playerid][4] = CreatePlayerTextDraw(playerid,221.333297, 222.524108, "Otros");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][4], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][4], 7.111105, 107.022201);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][4], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][4], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][4], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][4], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][4], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][4], true);

	PlayerInventarioTD[playerid][5] = CreatePlayerTextDraw(playerid, 380.444580, 149.831161, "inv1");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][5], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][5], 20.000000, 200.106567);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][5], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][5], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][5], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][5], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][5], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][5], true);

	PlayerInventarioTD[playerid][6] = CreatePlayerTextDraw(playerid, 380.444580, 168.253387, "inv2");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][6], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][6], 20.000000, 200.106567);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][6], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][6], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][6], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][6], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][6], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][6], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][6], true);

	PlayerInventarioTD[playerid][7] = CreatePlayerTextDraw(playerid, 380.444580, 186.177673, "inv3");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][7], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][7], 20.000000, 200.106567);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][7], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][7], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][7], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][7], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][7], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][7], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][7], true);

	PlayerInventarioTD[playerid][8] = CreatePlayerTextDraw(playerid, 380.444580, 204.101974, "inv4");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][8], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][8], 20.000000, 200.106567);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][8], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][8], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][8], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][8], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][8], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][8], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][8], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][8], true);

	PlayerInventarioTD[playerid][9] = CreatePlayerTextDraw(playerid, 380.444580, 222.524108, "inv5");
	PlayerTextDrawLetterSize(playerid, PlayerInventarioTD[playerid][9], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PlayerInventarioTD[playerid][9], 20.000000, 200.106567);
	PlayerTextDrawAlignment(playerid, PlayerInventarioTD[playerid][9], 2);
	PlayerTextDrawColor(playerid, PlayerInventarioTD[playerid][9], -1);
	PlayerTextDrawUseBox(playerid, PlayerInventarioTD[playerid][9], true);
	PlayerTextDrawBoxColor(playerid, PlayerInventarioTD[playerid][9], -1378294017);
	PlayerTextDrawSetShadow(playerid, PlayerInventarioTD[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, PlayerInventarioTD[playerid][9], 1);
	PlayerTextDrawBackgroundColor(playerid, PlayerInventarioTD[playerid][9], 255);
	PlayerTextDrawFont(playerid, PlayerInventarioTD[playerid][9], 1);
	PlayerTextDrawSetProportional(playerid, PlayerInventarioTD[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, PlayerInventarioTD[playerid][9], true);*/
	return 1;
}

stock simbolos(string[])
{
    new
        szFixed[1024],
        iPos,
        iLen;

    for (iLen = strlen(string); iPos < iLen; iPos ++)
    switch (string[iPos])
    {
        case 'à':   szFixed[iPos] = 151;
        case 'á':   szFixed[iPos] = 152;
        case 'â':   szFixed[iPos] = 153;
        case 'ä':   szFixed[iPos] = 154;
        case 'À':   szFixed[iPos] = 128;
        case 'Á':   szFixed[iPos] = 129;
        case 'Â':   szFixed[iPos] = 130;
        case 'Ä':   szFixed[iPos] = 131;
        case 'è':   szFixed[iPos] = 157;
        case 'é':   szFixed[iPos] = 158;
        case 'ê':   szFixed[iPos] = 159;
        case 'ë':   szFixed[iPos] = 160;
        case 'È':   szFixed[iPos] = 134;
        case 'É':   szFixed[iPos] = 135;
        case 'Ê':   szFixed[iPos] = 136;
        case 'Ë':   szFixed[iPos] = 137;
        case 'ì':   szFixed[iPos] = 161;
        case 'í':   szFixed[iPos] = 162;
        case 'î':   szFixed[iPos] = 163;
        case 'ï':   szFixed[iPos] = 164;
        case 'Ì':   szFixed[iPos] = 138;
        case 'Í':   szFixed[iPos] = 139;
        case 'Î':   szFixed[iPos] = 140;
        case 'Ï':   szFixed[iPos] = 141;
        case 'ò':   szFixed[iPos] = 165;
        case 'ó':   szFixed[iPos] = 166;
        case 'ô':   szFixed[iPos] = 167;
        case 'ö':   szFixed[iPos] = 168;
        case 'Ò':   szFixed[iPos] = 142;
        case 'Ó':   szFixed[iPos] = 143;
        case 'Ô':   szFixed[iPos] = 144;
        case 'Ö':   szFixed[iPos] = 145;
        case 'ù':   szFixed[iPos] = 169;
        case 'ú':   szFixed[iPos] = 170;
        case 'û':   szFixed[iPos] = 171;
        case 'ü':   szFixed[iPos] = 172;
        case 'Ù':   szFixed[iPos] = 146;
        case 'Ú':   szFixed[iPos] = 147;
        case 'Û':   szFixed[iPos] = 148;
        case 'Ü':   szFixed[iPos] = 149;
        case 'ñ':   szFixed[iPos] = 174;
        case 'Ñ':   szFixed[iPos] = 173;
        case '¡':   szFixed[iPos] = 64;
        case '¿':   szFixed[iPos] = 175;
        case '`':   szFixed[iPos] = 177;
        case '&':   szFixed[iPos] = 38;
        default:    szFixed[iPos] = string[iPos];
    }
    return szFixed;
}

stock GetPlayerCameraLookAt(playerid, &Float:X, &Float:Y, &Float:Z)
{
    new Float:pos[6];
    GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
    GetPlayerCameraFrontVector(playerid, pos[3], pos[4], pos[5]);
    X = floatadd(pos[0], pos[3]);
    Y = floatadd(pos[1], pos[4]);
    Z = floatadd(pos[2], pos[5]);
    return 1;
}

stock UserPath(playerid)
{
    new string[128], playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    format(string, sizeof(string), PATH, playername);
    return string;
}

stock UserPatx(playerid)
{
    new string[128], playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    format(string, sizeof(string), PATX, playername);
    return string;
}

stock UpdateUserData(playerid)
{
	
 	new Query[2000], Float:p[4], Float:ha[2], name[MAX_PLAYER_NAME], str[64];
 	GetPlayerName(playerid, name, sizeof(name));
    GetPlayerHealth(playerid, ha[0]);
    GetPlayerArmour(playerid, ha[1]);
    GetPlayerPos(playerid, p[0], p[1], p[2]);
    GetPlayerFacingAngle(playerid, p[3]);
 
  
    format(str, 64, "`VKEY0` = '%d',",PlayerInfo[playerid][PlayerVehicleKey][0]); strcat(Query, str);
    format(str, 64, "`VKEY1` = '%d',",PlayerInfo[playerid][PlayerVehicleKey][1]); strcat(Query, str);
    format(str, 64, "`VKEY2` = '%d',",PlayerInfo[playerid][PlayerVehicleKey][2]); strcat(Query, str);
    format(str, 64, "`VKEY3` = '%d',",PlayerInfo[playerid][PlayerVehicleKey][3]); strcat(Query, str);
    format(str, 64, "`PSTATUS` = '%d',",PlayerInfo[playerid][PlayerStatus]); strcat(Query, str);
    
    format(str, 64, "`PTOY0` = '%d',",PlayerInfo[playerid][pToy][0]); strcat(Query, str);
    format(str, 64, "`PTOY1` = '%d',",PlayerInfo[playerid][pToy][1]); strcat(Query, str);
    format(str, 64, "`PTOY2` = '%d',",PlayerInfo[playerid][pToy][2]); strcat(Query, str);
    format(str, 64, "`PTOYMID0` = '%d',",PlayerInfo[playerid][pToyModelID][0]); strcat(Query, str);
    format(str, 64, "`PTOYMID1` = '%d',",PlayerInfo[playerid][pToyModelID][1]); strcat(Query, str);
    format(str, 64, "`PTOYMID2` = '%d',",PlayerInfo[playerid][pToyModelID][2]); strcat(Query, str);
    format(str, 64, "`PTOYBONE0` = '%d',",PlayerInfo[playerid][pToyBone][0]); strcat(Query, str);
    format(str, 64, "`PTOYBONE1` = '%d',",PlayerInfo[playerid][pToyBone][1]); strcat(Query, str);
    format(str, 64, "`PTOYBONE2` = '%d',",PlayerInfo[playerid][pToyBone][2]); strcat(Query, str);
    format(str, 64, "`PTOYX0` = '%f',",PlayerInfo[playerid][pToyX][0]); strcat(Query, str);
    format(str, 64, "`PTOYX1` = '%f',",PlayerInfo[playerid][pToyX][1]); strcat(Query, str);
    format(str, 64, "`PTOYX2` = '%f',",PlayerInfo[playerid][pToyX][2]); strcat(Query, str);
    format(str, 64, "`PTOYY0` = '%f',",PlayerInfo[playerid][pToyY][0]); strcat(Query, str);
    format(str, 64, "`PTOYY1` = '%f',",PlayerInfo[playerid][pToyY][1]); strcat(Query, str);
    format(str, 64, "`PTOYY2` = '%f',",PlayerInfo[playerid][pToyY][2]); strcat(Query, str);
    format(str, 64, "`PTOYZ0` = '%f',",PlayerInfo[playerid][pToyZ][0]); strcat(Query, str);
    format(str, 64, "`PTOYZ1` = '%f',",PlayerInfo[playerid][pToyZ][1]); strcat(Query, str);
    format(str, 64, "`PTOYZ2` = '%f',",PlayerInfo[playerid][pToyZ][2]); strcat(Query, str);
    format(str, 64, "`PTOYRX0` = '%f',",PlayerInfo[playerid][pToyRX][0]); strcat(Query, str);
    format(str, 64, "`PTOYRX1` = '%f',",PlayerInfo[playerid][pToyRX][1]); strcat(Query, str);
    format(str, 64, "`PTOYRX2` = '%f',",PlayerInfo[playerid][pToyRX][2]); strcat(Query, str);
    format(str, 64, "`PTOYRY0` = '%f',",PlayerInfo[playerid][pToyRY][0]); strcat(Query, str);
    format(str, 64, "`PTOYRY1` = '%f',",PlayerInfo[playerid][pToyRY][1]); strcat(Query, str);
    format(str, 64, "`PTOYRY2` = '%f',",PlayerInfo[playerid][pToyRY][2]); strcat(Query, str);
    format(str, 64, "`PTOYRZ0` = '%f',",PlayerInfo[playerid][pToyRZ][0]); strcat(Query, str);
    format(str, 64, "`PTOYRZ1` = '%f',",PlayerInfo[playerid][pToyRZ][1]); strcat(Query, str);
    format(str, 64, "`PTOYRZ2` = '%f',",PlayerInfo[playerid][pToyRZ][2]); strcat(Query, str);
    format(str, 64, "`PTOYSX0` = '%f',",PlayerInfo[playerid][pToySX][0]); strcat(Query, str);
    format(str, 64, "`PTOYSX1` = '%f',",PlayerInfo[playerid][pToySX][1]); strcat(Query, str);
    format(str, 64, "`PTOYSX2` = '%f',",PlayerInfo[playerid][pToySX][2]); strcat(Query, str);
    format(str, 64, "`PTOYSY0` = '%f',",PlayerInfo[playerid][pToySY][0]); strcat(Query, str);
    format(str, 64, "`PTOYSY1` = '%f',",PlayerInfo[playerid][pToySY][1]); strcat(Query, str);
    format(str, 64, "`PTOYSY2` = '%f',",PlayerInfo[playerid][pToySY][2]); strcat(Query, str);
    format(str, 64, "`PTOYSZ0` = '%f',",PlayerInfo[playerid][pToySZ][0]); strcat(Query, str);
    format(str, 64, "`PTOYSZ1` = '%f',",PlayerInfo[playerid][pToySZ][1]); strcat(Query, str);
    format(str, 64, "`PTOYSZ2` = '%f',",PlayerInfo[playerid][pToySZ][2]); strcat(Query, str);
    format(str, 64, "`BOL1` = '%d',",BolsilloID[playerid][1]); strcat(Query, str);
    format(str, 64, "`BOL2` = '%d',",BolsilloID[playerid][2]); strcat(Query, str);
    format(str, 64, "`BOL3` = '%d',",BolsilloID[playerid][3]); strcat(Query, str);
    format(str, 64, "`BOL4` = '%d',",BolsilloID[playerid][4]); strcat(Query, str);
    format(str, 64, "`BOL5` = '%d',",BolsilloID[playerid][5]); strcat(Query, str);
    format(str, 64, "`BOL6` = '%d',",BolsilloID[playerid][6]); strcat(Query, str);
    format(str, 64, "`BOL7` = '%d',",BolsilloID[playerid][7]); strcat(Query, str);
    format(str, 64, "`BOL8` = '%d',",BolsilloID[playerid][8]); strcat(Query, str);
    format(str, 64, "`BOL9` = '%d',",BolsilloID[playerid][9]); strcat(Query, str);
    format(str, 64, "`BOL10` = '%d',",PlayerInfo[playerid][job]); strcat(Query, str);
    format(str, 64, "`BOL11` = '%d',",PlayerInfo[playerid][rank]); strcat(Query, str);
    format(str, 64, "`BOL12` = '%d'",PlayerInfo[playerid][faccion]); strcat(Query, str);
    format(str, 64, " WHERE `NAME` = '%s'",name); strcat(Query, str);
	db_query(Database, Query);
	return 1;
}

stock PlayerNameNormal(playerid)
{
    new name[24];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
    return name;
}

stock EmailAvaliable(femail[])
{
	new str[128];
    cache_get_field_content(0,"email", femail);
	if(fexist(str))
	{
	    return false;
	}
	else
	{
	    return true;
	}
}

funcion:LoadUserData(playerid)
{
	TogglePlayerSpectating(playerid, false);
	SpawnPlayer(playerid);
	loop(1, 4, l) TextDrawHideForPlayer(playerid, TD_ST[l]);
    
	PlayerKnownPlayer[playerid][playerid] = 1;
	new name[24];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
	for(new i = 0; i < MAX_VEHICLES; i ++)
	{
	    if(IsValidVehicle(i))
	    {
			if(!isnull(VehicleInfo[i][VD]))
			{
			    if(!strcmp(name, VehicleInfo[i][VD], false))
			    {
			        //new V_str[20];
			        PlayerInfo[playerid][PlayerVehicle][VehicleInfo[i][slot]] = i; //format(V_str, 20, "VEH%d", VehicleInfo[i][slot]); SaveValue(playerid, V_str, PlayerInfo[playerid][PlayerVehicle][VehicleInfo[i][slot]]);
			        PlayerInfo[playerid][PlayerVehicleKey][VehicleInfo[i][slot]] = VehicleInfo[i][VKEY]; //format(V_str, 20, "VKEY%d", VehicleInfo[i][slot]); SaveValue(playerid, V_str, PlayerInfo[playerid][PlayerVehicleKey][VehicleInfo[i][slot]]);
			        KillTimer(DestroyVehiclesTimer[i]);
			        if(VehicleInfo[i][VSTATUS] == 1)
					{
					    PlayerInfo[playerid][PlayerVehicle][VehicleInfo[i][slot]] = i;
						SendClientMessageEx(playerid, -1, "Tiene el vehículo {00CCFF}#%d {FFFFFF}pendiente de recogida, diríjase al punto rojo para recogerlo.", VehicleInfo[i][slot]);
						SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					}
					else if(VehicleInfo[i][VSTATUS] == 10)
					{
					    PlayerInfo[playerid][PlayerVehicle][VehicleInfo[i][slot]] = i;
                        
					    foreach(new c : Player)
						{
					    	if(IsPlayerInVehicle(c, i))
					    	{
							    SendClientMessageEx(playerid, -1, "Dejaste tu vehículo{00CCFF} #%d (%s) {FFFFFF}sin aparcar, antes de desconectarte aparcalo o será llevado al depósito.", VehicleInfo[i][slot], GetVehicleName(i));
					    	}
					    	else
					    	{
					    	    VehicleInfo[i][VSTATUS] = 6;
							    SendClientMessageEx(playerid, -1, "Dejaste tu vehículo{00CCFF} #%d (%s) {FFFFFF}sin aparcar, antes de desconectarte aparcalo o será llevado al depósito.", VehicleInfo[i][slot], GetVehicleName(i));
							    SetVehicleParamsEx(i, 0, 0, 0, 1, 0, 0, 0);
					    	}
						}
					}
					else if(VehicleInfo[i][VSTATUS] == 12)
		            {
		                new veh, r = random(sizeof(VehicleGruaExt));
		                new str[20];
						format(str, 20, "XRP%04d", VehicleInfo[i][VKEY]);
		                DestroyVehicle(i);
			    		veh = CreateVehicle(VehicleInfo[i][vmodelid], VehicleGruaExt[r][0], VehicleGruaExt[r][1], VehicleGruaExt[r][2], VehicleGruaExt[r][3], VehicleInfo[i][vcolor1], VehicleInfo[i][vcolor2], -1);
			    		PlayerInfo[playerid][PlayerVehicle][VehicleInfo[i][slot]] = veh;
						SetVehicleNumberPlate(veh, str);
						SetVehicleToRespawn(veh);
						ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    				ModVehicle(veh);
		                VehicleInfo[veh][VSTATUS] = 6;
		                SetVehicleParamsEx(veh, 0, 0, 0, 1, 0, 0, 0);
		            }
			    }
			}
		}
	}
	LoadPlayerCar(playerid);
	return 1;
}

stock PlayerName(playerid) // Función para coger el nombre de un player y borrar el "_"
{
    new n[24],
	str[24];
	GetPlayerName(playerid, n, 24); strmid(str, n, 0, strlen(n), 24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++) {
		if (str[i] == '_') str[i] = ' ';
	}
    return str;
}

stock FirstName(playerid)
{
    new n[24],
        iCh;
	GetPlayerName(playerid, n, 24); 
    iCh = strfind(n, "_", true);
    strdel(n, iCh, strlen(n));
    return n;
}
// --------> Comandos De Trabajo camionero <--------//

CMD:las(playerid, params[])
{
SetPlayerPos(playerid, 1406.0709, -1195.0085, 166.57001);
return 1;
}


// --------> Comandos De Administracion <--------//

CMD:daradm(playerid, params[])
{
            new str[128], str2[128];
            if(PlayerInfo[playerid][admlvl] > 4){
            if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/daradm [ID/Nombre] [Nivel]");
            if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
            if(params[1] < 1) {
            SendClientMessage(params[0], -1, "Has sido removido del equipo administrativo.");
            format(str, sizeof(str), "Has removido a %s del equivo administrativo.", PlayerName(params[0]));
            SendClientMessage(playerid, -1, str);
            strdel(str, 0, 128);
            return 1;
            }
            format(str, sizeof(str), "[STAFF] {FFFFFF}%s {00CCFF}te ha promovido a nivel %d de admin.", PlayerName(playerid), params[1]);
            format(str2, sizeof(str2), "Has promovido a {FFFFFF}%s {00CCFF}el nivel de admin. (Nvl: %d).", PlayerName(params[0]), params[1]);
            SendClientMessage(params[0], 0x00CCFFFF, str);
            SendClientMessage(playerid, 0x00CCFFFF, str2);
            PlayerInfo[params[0]][admlvl] = params[1];
            } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
            return 1;
}

CMD:darvip(playerid, params[])//proximante
{
        new str[128], str2[128], ftext[30];
        if(PlayerInfo[playerid][admlvl] > 100){
        if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/daradm [ID/Nombre] [Nivel]");
        if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(params[1] > 7) return SendClientMessage(playerid, -1, "Esa Rango no existe.");
        if(params[1] < 1) {
        MensajeAtencion(params[0], "Has sido removido de del equipo de administracion.");
        format(str, sizeof(str), "Le has quitado la administracion a %s.", PlayerName(params[0]));
        SendClientMessage(playerid, -1, str);
        PlayerInfo[playerid][admlvl] = 0;
        strdel(str, 0, 128);
        return 1;
        }
        if(params[1] == ADMIN_MOD){ ftext = "Moderador"; }
        else if(params[1] == ADMIN_MODAV){ ftext = "Moderador Avanzado"; }
        else if(params[1] == ADMIN_ADM){ ftext = "Adminstrador "; }
        else if(params[1] == ADMIN_ADMAV){ ftext = "Adminstrador Avanzado"; }
        else if(params[1] == ADMIN_DIRF){ ftext = "Director de facciones"; }
        else if(params[1] == ADMIN_SUB){ ftext = "Sub Dueño"; }
        else if(params[1] == ADMIN_DUEÑO){ ftext = "Dueño"; }
        format(str, sizeof(str), "[ATENCIÓN] {FFFFFF}El administrador %s te ha dado el nivel {00CCFF}%s.", PlayerName(playerid), ftext);
        format(str2, sizeof(str2), "[STAFF] {FFFFFF}Has dado a %s el nivel {00CCFF}%s.", PlayerName(params[0]), ftext);
        SendClientMessage(params[0], 0x00CCFFFF, str);
        SendClientMessage(playerid, 0x00CCFFFF, str2);
        PlayerInfo[playerid][admlvl] = params[1];
        } else return MensajeError(playerid, "{FF0000}[Error]{FFFFFF}No estás autorizado a usar el comando.");
        return 1;
}

CMD:ca(playerid, params[])
{
	//if(IsPlayerAdmin(playerid))
	    SendClientMessage(playerid, -1, "Montevideo RolePlay: Administador dueño.");
	    PlayerInfo[playerid][admlvl] = 100;
	    return 1;
}


CMD:ao(playerid, params[]){
        //if(!IsPlayerConnected(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "Usted aún no está conectado.");
        //if(Info[playerid][pAdminZC] < 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "No autorizado.");
        if(isnull(params)) return SendClientMessageEx(playerid, -1, "USA: /ao [general chat]");
       	if(PlayerInfo[playerid][admlvl] > 3){
			new string[128];
			format(string, sizeof(string), "(( Moderador %s: %s ))", PlayerName(playerid), params);
			OOCOff( -1,string);
		}
		else if(PlayerInfo[playerid][admlvl] > 2){
			new string[128];
			format(string, sizeof(string), "(( Server Admin %s: %s ))", PlayerName(playerid), params);
			OOCOff( -1,string);
		}
		else if(PlayerInfo[playerid][admlvl] > 1){
			new string[128];
			format(string, sizeof(string), "(( Administrador %s: %s ))", PlayerName(playerid), params);
			OOCOff( -1,string);
		}
        return 1;
    }

CMD:darfac(playerid, params[])
	{
        if(PlayerInfo[playerid][admlvl] > 90)
		{
		    if(!sscanf(params, "di", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > MAX_FACTION) 		return SendClientMessageEx(playerid, -1, "{FA5858}[Error] {FAFAFA}ID facción incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessageEx(playerid, -1, "{FA5858}[Error] {FAFAFA}Jugado desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][rango] = 0; ftext = "Ninguna"; }
		            case 1: 	{PlayerInfo[params[0]][rango] = 6; ftext = "San Andreas Police Department"; }
		            case 2: 	{PlayerInfo[params[0]][rango] = 6; ftext = "FBI"; }
		            case 3: 	{PlayerInfo[params[0]][rango] = 6; ftext = "San Andreas Ejército Militar"; }
		            case 4: 	{PlayerInfo[params[0]][rango] = 6; ftext = "San Andreas Medical Deparment"; }
		            case 5:     {PlayerInfo[params[0]][rango] = 6; ftext = "SA News"; }
		            case 6:     {PlayerInfo[params[0]][rango] = 6; ftext = "Mecanicos 24/7"; }
		            case 7:     {PlayerInfo[params[0]][rango] = 6; ftext = "Gobierno"; }
                    case 8:     {PlayerInfo[params[0]][rango] = 6; ftext = "Hitman"; }
                    case 9:     {PlayerInfo[params[0]][rango] = 6; ftext = "Sistema Judicial"; }
		        }
		        new string[128];
		        pTazer[params[0]] = 0;
		        PlayerInfo[params[0]][lider] = params[1];
		        PlayerInfo[params[0]][miembro] = params[1];
		        format(string, sizeof(string), "Administrador %s te asignó el líder de la facción %s.", NombreOOC(playerid), ftext);
		        SendClientMessageEx(params[0], 0x6ADFFFFF, string);
		        format(string, sizeof(string), "Admin(CMD): %s asigno lider de la facción %s a %s.", NombreOOC(playerid), ftext, NombreOOC(params[0]));
				ABroadCast(-1, string, 3);
		    }
		    else SendClientMessageEx(playerid, -1, "{2E9AFE}USA: {FAFAFA}/darfac [jugador] [facción]");
		}
        return 1;
    }

CMD:traer(playerid, params[])
{
                new Float:pos[3];
                if(PlayerInfo[playerid][admlvl] > 2){
                if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/traer [ID/Nombre]");
                GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                new inte = GetPlayerInterior(playerid);
                new vw = GetPlayerVirtualWorld(playerid);
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(playerid == params[0]) return MensajeError(playerid, "No puedes 'traerte' a ti mismo.");
                new car = GetPlayerVehicleID(params[0]);
                if(IsPlayerInAnyVehicle(params[0])){
                if(inte != 0) return SendClientMessage(playerid, -1, "{FF000}ERROR: {FFFFFF}El jugador está en un vehículo, sal del interior.");
                SetPlayerPos(params[0], pos[0], pos[1], pos[2]);
                SetVehiclePos(car, pos[0], pos[1], pos[2]);
                SetPlayerVirtualWorld(params[0], vw);
                PutPlayerInVehicle(params[0], car, 0);
                SetPlayerInterior(params[0], 0);
                } else {
                SetPlayerPos(params[0], pos[0], pos[1], pos[2]);
                SetPlayerInterior(params[0], inte);
                SetPlayerVirtualWorld(params[0], vw);
                }
                } else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
                return 1;
}

CMD:congelar(playerid, params[])
{
    new mensaje[128];
    if(PlayerInfo[playerid][admlvl] > 2){
    if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/congelar [Nombre/ID]");
    if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
    
    TogglePlayerControllable(params[0], false);
    format(mensaje, sizeof(mensaje), "[ADM-INFO] %s ha sido congelado por %s.", PlayerName(params[0]), PlayerName(playerid));
    SendClientMessage(params[0], ROJO, mensaje);
    SendClientMessageEx(playerid, -1, "Has congelado a %s.", PlayerName(params[0]));
    
    }else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
    return 1;
}

CMD:descongelar(playerid, params[])
{
    new mensaje[128];
    if(PlayerInfo[playerid][admlvl] > 2){
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, 0xFF4500FF, "{FF0000}ERROR: {FFFFFF}/descongelar [Nombre/ID]");
    if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
    
    TogglePlayerControllable(params[0], true);
    format(mensaje, sizeof(mensaje), "[ADM-INFO] %s ha sido descongelado por %s.", PlayerName(params[0]), PlayerName(playerid));
    SendClientMessage(params[0], ROJO, mensaje);
    SendClientMessageEx(playerid, -1, "Has descongelado a %s.", PlayerName(params[0]));
    
    }else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
    return 1;
}

CMD:pvida(playerid, params[])
{
                if(PlayerInfo[playerid][admlvl] > 2){
                if(sscanf(params, "ui", params[0], params[1])) return MensajeError(playerid, "/pvida [Nombre/ID] [Cantidad]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(params[1] < 0 || params[1] > 200) return MensajeError(playerid, "No puede ser menos de 0 o más de 200.");

                SetPlayerHealth(params[0], params[1]);
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha modificado la salud. (Vida: %i)", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has modificado la salud de %s. (Vida: %i)", PlayerName(params[0]), params[1]);

                } else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
                return 1;
}

CMD:callar(playerid, params[])
{
        new s[128];
        if(PlayerInfo[playerid][admlvl] > 0){
        if(sscanf(params, "us", params[0], params[1])) return MensajeError(playerid, "/callar [Nombre/ID] [Razón]");
        if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(PlayerMuted[params[0]] != 0) return MensajeError(playerid, "El jugador ya está callado.");

        PlayerMuted[params[0]] = 1;
        format(s, sizeof(s), "[ADM-INFO] %s ha sido callado por %s, razón: %s", PlayerName(params[0]), PlayerName(playerid), params[1]);
        SendClientMessageToAll(ROJO, s);

        } else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
        return 1;
}

CMD:descallar(playerid, params[])
{
        new s[128];
        if(PlayerInfo[playerid][admlvl] > 0){
        if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/descallar [Nombre/ID]");
        if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(PlayerMuted[params[0]] != 1) return MensajeError(playerid, "El jugador no está callado.");

        PlayerMuted[params[0]] = 0;
        format(s, sizeof(s), "[ADM-INFO] %s ha permitido que hable %s", PlayerName(playerid), PlayerName(params[0]));
        SendClientMessageToAll(ROJO, s);

        } else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
        return 1;
}


CMD:pchaleco(playerid, params[])
{
                if(PlayerInfo[playerid][admlvl] > 50){
                if(sscanf(params, "ui", params[0], params[1])) return MensajeError(playerid, "/pblindaje [Nombre/ID] [Cantidad]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(params[1] < 0 || params[1] > 200) return MensajeError(playerid, "No puede ser menos de 0 o más de 200.");

                SetPlayerArmour(params[0], params[1]);
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha modificado el blindaje. (Blindaje: %i)", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has modificado el blindaje de %s. (Blindaje: %i)", PlayerName(params[0]), params[1]);

                }else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
                return 1;
}

CMD:exadmin(playerid, params[])
{
    if(IsPlayerAdmin(playerid)) return SendClientMessage(playerid, -1, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
    if(P_newuser[playerid] > 0) return 0;
    if(PlayerInfo[playerid][admlvl] >= 50)
    {
	    if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, -1, "Parámetros: [PlayerID][Nivel]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	    if(playerid == params[0]) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	    PlayerInfo[params[0]][admlvl] = params[1];
	    SendClientMessageEx(playerid, -1, "- El nivel de admin de %s ahora es %d.", PlayerNameNormal(playerid), params[1]);
	    SendClientMessageEx(params[0], -1, "- Tu nivel de admin ahora es %d.", params[1]);
	}
    return 0;
}

CMD:kick(playerid, params[])
{
	if(IsPlayerAdmin(playerid))
	if(P_newuser[playerid] > 0) return 0;
    if(PlayerInfo[playerid][admlvl] >= 10) 
    {
	    new str[128];
	    if(sscanf(params, "us[128]", params[0], str)) return SendClientMessage(playerid, -1, "Parámetros: [PlayerID][Razón]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	    if(playerid == params[0]) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	    if(PlayerInfo[playerid][admlvl] != 100 && PlayerInfo[params[0]][admlvl] == 100)//aka miro si se puede 2 :D
	    {
	        SendClientMessage(playerid, -1, "- No puedes expulsar a este jugador.");
	        SendClientMessageEx(params[0], -1, "- %s(%d) intentó expulsarte.", PlayerNameNormal(playerid), playerid);
	        return 1;
	    }
		Kick(params[0]);
		SendClientMessageEx(playerid, -1, "%s ha sido expulsado: %s", PlayerNameNormal(params[0]), str);
	}
    return 0;
}

CMD:ban(playerid, params[])
{
	if(P_newuser[playerid] > 0) return 0;
    if(PlayerInfo[playerid][admlvl] >= 10)
    {
	    new str[128];
	    if(sscanf(params, "us[128]", params[0], str)) return SendClientMessage(playerid, -1, "Parámetros: [PlayerID][Razón]");
		if(!IsPlayerConnected(params[0])) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	    if(playerid == params[0]) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	    if(PlayerInfo[playerid][admlvl] != 100 && PlayerInfo[params[0]][admlvl] == 100)
	    {
	        SendClientMessage(playerid, -1, "- No puedes banear a este jugador.");
	        SendClientMessageEx(params[0], -1, "- %s(%d) intentó banearte.", PlayerNameNormal(playerid), playerid);
	        return 1;
	    }
	    PlayerInfo[params[0]][PlayerStatus] = STATE_BANNED;
		BanEx(params[0], str);
		SendClientMessageEx(playerid, -1, "%s ha sido baneado: %s", PlayerNameNormal(params[0]), str);
	}
    return 0;
}

CMD:vid(playerid, params[])
{
    //if(IsPlayerAdmin(playerid)){
	    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /vid [Model ID] [Col1] [Col2]");
		new Float:pos[3];
		GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
		new Float:anglea;
		GetPlayerFacingAngle(playerid, anglea);
		AddCar(params[0],pos[0],pos[1]+1,pos[2]+0.5,anglea, -1, -1);
 		return 1;
}

CMD:ls(playerid, params[])
{
    SetPlayerInteriorEx(playerid, 0);
    SetPlayerPos(playerid,1509.156860, -1739.629028, 13.546875);
	return 1;
}

CMD:pos(playerid, params[])
{
    if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /pos [name]");
	new Float:p[4];
	GetPlayerPos(playerid, p[0], p[1], p[2]);
	GetPlayerFacingAngle(playerid, p[3]);
	printf("%s: %f, %f, %f, %f, %d", params, p[0], p[1], p[2], p[3], GetPlayerInterior(playerid));
	return 1;
}

CMD:cam(playerid, params[])
{
    if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /cam [name]");
	new Float:p[6];
	GetPlayerCameraPos(playerid, p[0], p[1], p[2]);
	/*GetPlayerCameraLookAt(playerid, p[3], p[4], p[5]);*/
	GetPlayerCameraFrontVector(playerid, p[3], p[4], p[5]);
	print(params);
 	printf("SetPlayerCameraPos(playerid, %f, %f, %f);", p[0], p[1], p[2]);
	printf("SetPlayerCameraLookAt(playerid, %f, %f, %f);", p[3], p[4], p[5]);
	return 1;
}

CMD:detect(playerid, params[])
{
    
	SetPlayerFacingAngle(playerid, 0.0);
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, false);
	SetTimerEx("Detect", 500, false, "i", playerid);

	return 1;
}

funcion:Detect(playerid)
{
    new Float:p[3];
	GetPlayerCameraFrontVector(playerid, p[0], p[1], p[2]);
	if(p[0] != 0.000000)
	{
	    SendClientMessage(playerid, -1, "SOBEIT");
	}
	printf("%f", p[0]);
}

CMD:w(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /w [weaponid]");
	GivePlayerWeapon(playerid, 24, 9999);
    GivePlayerWeapon(playerid, 27, 9999);
    GivePlayerWeapon(playerid, 29, 9999);
    GivePlayerWeapon(playerid, 31, 9999);
    GivePlayerWeapon(playerid, 34, 9999);
	return 1;
}

CMD:skin(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /skin [skinud]");
	SetPlayerSkin(playerid, params[0]);
	return 1;
}

CMD:con(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /dr [1-2]");
	switch(params[0])
	{
	    case 0: TogglePlayerControllable(playerid, false);
	    case 1: TogglePlayerControllable(playerid, true);
	}
	return 1;
}

CMD:dr(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /dr [1-2]");
	switch(params[0])
	{
	    case 1:
	    {
	        MoveDynamicObject(LSPD_Doors[0], 1588.5118, -1637.8339, 16.4417, 0.5, 90.0, 0.0, 0.0);
	    }
		case 2:
		{
		    MoveDynamicObject(LSPD_Doors[0], 1588.5118, -1637.83386, 14.59201, 0.5, 0.0, 0.0, 0.0);
		}
		case 3:
		{
		    MoveDynamicObject(LSPD_Doors[1], 1582.6172, -1637.9052, 12.3299+0.01, 0.025, 0.0, 0.0, -60.0);
		}
		case 4:
		{
		    MoveDynamicObject(LSPD_Doors[1], 1582.6172, -1637.9052, 12.3299-0.01, 0.025, 0.0, 0.0, 0.0);
		}
	    default: SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /dr [1-2]");
	}
	return 1;
}

CMD:moderador(playerid, params[])
{
                if(PlayerInfo[playerid][admlvl] >= 1)
                SendClientMessageEx(playerid, -1, "/traer./ir./conglear./descongelar./jail.");
                SendClientMessageEx(playerid, ROJO, "Has modificado a %s la cantidad de dinero. (Cantidad: %d)");
                return 1;
            }


CMD:pdinero(playerid, params[])
{
                if(PlayerInfo[playerid][admlvl] > 25){
                if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/pdinero [Nombre/ID] [Cantidad]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");

                SetPlayerMoney(params[0], params[1]);
                PlayerInfo[params[0]][dinero] = params[1];
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha modificado la cantidad de dinero a %d", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has modificado a %s la cantidad de dinero. (Cantidad: %d)", PlayerName(params[0]), params[1]);

                } else return SendClientMessage(playerid, 0xFF0000FF, "{FF0000}[Error]{FFFFFF} No estás autorizado a usar el comando.");
                return 1;
}


CMD:s(playerid, params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /s [acion]");
	PlayerPlaySound(playerid, params[0], 0, 0, 0);
	return 1;
}

CMD:ir(playerid, params[])
{
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /ir [id]");
	new Float:p[3];
	GetPlayerPos(params[0], p[0], p[1], p[2]);
	SetPlayerPos(playerid, p[0], p[1], p[2]);
	return 1;
}

CMD:dest(playerid, params[])
{
	if(!IsPlayerAdmin(playerid)) return 1;
	if(IsPlayerInAnyVehicle(playerid))
	{
	    DestroyVehicle(GetPlayerVehicleID(playerid));
	}
	return 1;
}

CMD:st(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return 1;
    if(!sscanf(params, "d", params[0]))
    {

		ServerTime = params[0];
		ServerMinute = 58;
		SetWorldTime(params[0]);
	}
	return 1;
}

CMD:p(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return 1;
    if(!sscanf(params, "ddd", params[0], params[1], params[2]))
    {

		SetPlayerPos(playerid, float(params[0]), float(params[1]), float(params[2]));
	}
	return 1;
}
/*comando contratar */


/* Cmds De Faccion de poli */

/*
/radio test
/r falta
/d falta
(/m)egafono falta
/su falta
/esposar test
/quitar listo :)
/detener falta
/apoyo(c) listo
(/tlc) falta
/tderechos listo
/bar listo
/qbar listo
/placa falta
/expediente falta
/tgunmaletero falta
/(q)(p)spikes falta
/placaex flata
(/ant)ecedente falta
(/su)spect falta
/limpiar falta
/sospechosos falta
/sapddiv falta
/verllaves falta
/vcoche falta
/sapd falta
/arrestar falta
/destruirplanta falta
*/

/*CMD:r(playerid, params[])
{
	new string[128], rank[64], div[16];
	if(RadioOn[playerid] == 0) return SendClientMessageEx(playerid, -1, "{FA5858}[Error] {F2F2F2}Tu radio está apagada.");
	if(isnull(params)) return SendClientMessageEx(playerid, -1, "{2E9AFE}USA: {F2F2F2}(/r)adio [radio chat]");
    {
				switch(PlayerInfo[playerid][rank])
				{
					case 1: rank = "Cadete";
					case 2: rank = "Oficial";
					case 3: rank = "Detective";
					case 4: rank = "Sargento";
					case 5: rank = "Teniente";
					case 6: rank = "Comandante";
					default: rank = "[Error]";
				}
			  format(string, sizeof(string), "(radio) %s",params);
	          SetPlayerChatBubble(playerid,string,TEAM_RADIO_COLOR,15.0,5000);
	          return 1;
	}
	*/

CMD:placa(playerid, params[])
{
	if(PlayerInfo[playerid][miembro] >= 1 || PlayerInfo[playerid][lider] >= 1){
		new string[128], giveplayerid;
		if(sscanf(params, "d", giveplayerid)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /placa [playerid]");
		if(giveplayerid != INVALID_PLAYER_ID){
			if(ProxDetectorS(5.0, playerid, giveplayerid)){
				switch(PlayerInfo[playerid][miembro]){
					case 1 .. 4:{
						new
						infoArrays[3][64];

					//	GetPlayerFactionInfo(playerid, infoArrays[0], infoArrays[1], infoArrays[2]);

						SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
						format(string, sizeof(string), "%s %s es un miembro de %s.", infoArrays[0], NombreOOC(playerid), infoArrays[2]);
						SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "Asignación actual: %s.", infoArrays[1]);
						SendClientMessageEx(giveplayerid, COLOR_WHITE, string);
						switch(PlayerInfo[playerid][miembro]){
							case 1 .. 4: SendClientMessageEx(giveplayerid, COLOR_WHITE, "Con autoridad en San Andreas.");
						}
						if(PlayerInfo[playerid][miembro] != 4) SendClientMessageEx(giveplayerid, COLOR_WHITE, "Oficial tiene la autoridad para arrestar.");
						SendClientMessageEx(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
						format(string, sizeof(string), "* %s muesta su placa a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					default: SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una facción del estado.");
				}
			}
			else SendClientMessageEx(playerid, COLOR_GREY, "Ese jugador no está cerca de ti.");
		}
		else SendClientMessageEx(playerid, COLOR_WHITE, "Usted no está en una facción del estado.");
	}
	return 1;
}

CMD:bar(playerid, params[]){
	if(IsACop(playerid))
	{
	new zone[MAX_ZONE_NAME];
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
		}
		if(PlayerInfo[playerid][rango] < 3){
			return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++){
			if(Barricade[i] == 0){
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(981, Position[0], Position[1], Position[2], 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1], Position[2]+4);
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Una barricada ha sido puesta por %s en %s.", NombreOOC(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
						if (PlayerInfo[x][rango] >= 3){
							SendClientMessageEx(x, -1, "Puedes eliminar una barricada escribiendo /qb.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "Todas las barreras disponibles se han desplegado.");
	}
	else{ SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI."); } return 1;
}

CMD:qbar(playerid, params[]){
	if(IsACop(playerid)){
		if(IsPlayerInAnyVehicle(playerid)){
			return SendClientMessageEx(playerid, COLOR_GREY, "Tienes que estar en el piso para usar este comando");
		}
		if(PlayerInfo[playerid][rango] < 3){
			return SendClientMessageEx(playerid, COLOR_GREY, "Necesitas ser mayor de rango 3.");
		}
		new string[128], Float:Position[3];
		for(new i; i<MAX_BARRICADES; i++){
			GetDynamicObjectPos(Barricade[i], Position[0], Position[1], Position[2]);
			if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2])){
				DestroyDynamicObject(Barricade[i]);
				Barricade[i] = 0;
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Un bloqueo a sido destruido por %s en %s.", NombreOOC(playerid), zone);
				foreach(Player, x){
					if(IsACop(x)){
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		SendClientMessageEx(playerid, COLOR_GREY, "No estás cerca de las barricadas.");
	}
	else{ SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI."); } return 1;
}

CMD:pspikes(playerid, params[])
{
    if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][rango] >= 3)
		{
			for(new i; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] == 0)
				{
					new
						Float: f_TempAngle,
						string[128];

					GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
					GetPlayerFacingAngle(playerid, f_TempAngle);
					SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]-0.8, 0.0, 0.0, f_TempAngle);
					GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
				//	SpikeStrips[i][sDeployedBy] = NombreOOC(playerid);
					format(string,sizeof(string),"Spike ID: %d fue creado exitosamente.", i);
					SendClientMessageEx(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "HQ: Un spike fue puesto por %s en %s.", NombreOOC(playerid), SpikeStrips[i][sDeployedAt]);
					foreach(Player, x)
					{
						if(IsACop(x))
						{
							SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
							if (PlayerInfo[x][rango] >= 3)
							{
								SendClientMessageEx(x, -1, "Puedes remover el spike usando /qspikes.");
							}
						}
					}
					return 1;
				}
    		}
			SendClientMessageEx(playerid, COLOR_WHITE, "No es posible generar más spikes, límite es de 5." );
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, " Debes ser rango mayor a 3!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
	}
	return 1;
}
CMD:qspikes(playerid, params[])
{
	if(isnull(params)) return SendClientMessageEx(playerid, COLOR_WHITE, "USA: /qspike [spikeid]");

    if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][rango] >= 3)
		{
			new id = strval(params);
			if(!(0 <= id <= sizeof(SpikeStrips)) || SpikeStrips[id][sX] == 0) {
				return SendClientMessageEx(playerid, COLOR_WHITE, "Spike ID Inválido.");
			}
			else
			{
				new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
				DestroyDynamicObject(SpikeStrips[id][sObjectID]);
				SpikeStrips[id][sX] = 0; SpikeStrips[id][sY] = 0; SpikeStrips[id][sZ] = 0;
				SpikeStrips[id][sObjectID] = INVALID_OBJECT_ID;
				format(string,sizeof(string),"Spike ID: %d borrado.", id);
				SendClientMessageEx(playerid, COLOR_WHITE, string);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Un spike a sido borrado por %s en %s.", NombreOOC(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessageEx(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		else
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, " Debes ser rango mayor a 3!");
		}
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GREY, "No eres SAPD/SAEM/FBI.");
	}
	return 1;
}


CMD:tderechos (playerid, params[])
    {
        if(IsACop(playerid))
        {
            new string[128];
	        format(string, sizeof(string),"%s dice: Tienes derecho a guardar silencio, todo lo que diga puede usarse en su contra.",NombreOOC(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a un abogado, si no puede pagar uno, se le asignará uno a costas del Estado.",NombreOOC(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: Tiene derecho a una llamada por teléfono.",NombreOOC(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	        format(string, sizeof(string),"%s dice: ¿De acuerdo señor?",NombreOOC(playerid));
	        ProxDetector(30.0, playerid, string, COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
        }
        return 1;
    }
CMD:apoyo(playerid, params[])//mandamensaje
	{
        if(PlayerInfo[playerid][pRequestingBackup] == 1) return SendClientMessageEx(playerid, COLOR_GRAD2, "Ya tienes un pedido de ayuda.");
        if(IsAPolice(playerid))
		{
            new Float:px,Float:py,Float:pz,string[128]; GetPlayerPos(playerid, px, py, pz);
			if(Team_SAPD(playerid))
			{
			    PlayerInfo[playerid][pRequestingBackup] = 1;
			    format(string, sizeof(string), "* A todas las unidades, %s necesita ayuda (Información marcada).", NombreOOC(playerid));
			    SendRadioMessage(1, TEAM_RADIO_COLOR, string);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(Team_SAPD(i) && OnDuty[i] == 1)
						{
							SetPlayerMarkerForPlayer(i, playerid, 0xAA3333AA);
							if(i != playerid) SetPlayerCheckpoint(i, px, py, pz, 5.0);
						}
					}
				}
				SendClientMessageEx(playerid, COLOR_WHITE, "Utiliza: /capoyo, para cancelar los refuerzos.");
				SetTimerEx("BackupClear", 180000, false, "iii", playerid, 1, 1);
			}
        } else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
    }

      CMD:capoyo(playerid, params[])
	{
        if(Team_SAPD(playerid)) BackupClear(playerid, 1, 0);
        else SendClientMessageEx(playerid, COLOR_WHITE, "No autorizado.");
        return 1;
	}
 CMD:quitar (playerid, params[])
    {
		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No puedes usar este comando mientras estás herido.");
			return 1;
		}
        if(!IsACop(playerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "[ERROR]: No tienes autorización para usar este comando.");
        new item[32], string[128], giveplayerid;
        if(!sscanf(params, "ds[32]",giveplayerid,item))
        {
            if(!IsPlayerConnected(giveplayerid))               return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Jugador no conectado!");
			if(GetPlayerSpecialAction(giveplayerid) != SPECIAL_ACTION_HANDSUP && PlayerInfo[giveplayerid][Estado] != 0) return SendClientMessageEx(playerid, COLOR_GREY, "No puedes revisar a una persona si no tiene las manos arriba ((/rendirse)) o si está detenida.");
			if(!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessageEx(playerid, COLOR_GRAD2, "¡Jugador muy lejos!");
            if(strcmp(item,"lconduccion",true) == 0)
			{
			    PlayerInfo[giveplayerid][libreta] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de conducción a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"lvuelo",true) == 0)
			{
			    PlayerInfo[giveplayerid][libretaavion] = 0;
			    format(string, sizeof(string), "* Oficial %s quita la licencia de vuelo a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"larma",true) == 0)
			{
			    PlayerInfo[giveplayerid][licArma] = 0;
		        format(string, sizeof(string), "* Oficial %s quita la licencia de armas a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"drogas",true) == 0)
			{
                PlayerInfo[giveplayerid][Drogas] = 0;
                PlayerInfo[giveplayerid][pPot] = 0;
			    format(string, sizeof(string), "* Oficial %s quita las drogas a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"materiales",true) == 0)
			{
                PlayerInfo[giveplayerid][Materiales] = 0;
			    format(string, sizeof(string), "* Oficial %s quita los materiales a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"telefono",true) == 0)
			{
                PlayerInfo[giveplayerid][phonenumber] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el teléfono %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"pasaporte",true) == 0)
			{
                PlayerInfo[giveplayerid][Pasaporte] = 0;
			    format(string, sizeof(string), "* Oficial %s quita el pasaporte a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
			    ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else if(strcmp(item,"armas",true) == 0)
			{
			    ResetPlayerWeaponsEx(giveplayerid);
       			format(string, sizeof(string), "* Oficial %s le quita las armas a %s.", NombreOOC(playerid), NombreOOC(giveplayerid));
       			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else SendClientMessageEx(playerid, COLOR_GRAD2, "Item incorrecto.");
		}
		else
		{
		    SendClientMessageEx(playerid, COLOR_GRAD2, "* /quitar <jugador> <item>");
		    SendClientMessageEx(playerid, COLOR_GRAD2, "Items: lconduccion, lvuelo, larma, drogas, materiales, telefono, armas, pasaporte");
		}
        return 1;
	}
CMD:radio(playerid, params[])
	{
        if(Duty[playerid] == 0) return SendClientMessageEx(playerid, COLOR_GRAD2, " No estás en servicio.");
        if(!RadioOn[playerid])
		{
			RadioOn[playerid] = 1;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Prendiste tu radio");
		}
		else
		{
			RadioOn[playerid] = 0;
			SendClientMessageEx(playerid, COLOR_GRAD2, "Apagaste tu radio");
		}
        return 1;
 }
    
CMD:duty(playerid,params[])
{
if(PlayerInfo[playerid][faccion] != FACCION_PLC)  return SendClientMessage(playerid,-1,"{FF0000}[Error]{FFFFFF} No eres policía");
SendClientMessage(playerid,-1,"{0000FF}[Police]{FFFFFF} Ahora estás duty. Usa /radio para encender la radio.");
Duty[playerid] = 1;
return 1;
}

CMD:qduty(playerid,params[])
{
if(PlayerInfo[playerid][faccion] != FACCION_PLC)  return SendClientMessage(playerid,-1,"{FF0000}[Error]{FFFFFF} No eres policía");
SendClientMessage(playerid,-1,"{0000FF}[Police]{FFFFFF} Ahora estás Off duty. La /radio está apagada.");
Duty[playerid] = 0;
return 1;
}

CMD:tiempo(playerid, params[])
{
    if(PlayerInfo[playerid][carcel] == 0) return 1;
    new Float:tiempo = floatdiv(floatsub(PlayerInfo[playerid][jailminutes], GetTickCount()), 60000);
    SendClientMessageEx(playerid, -1, "Te quedan {FFFF00}%.2f {FFFFFF}minutos en la carcel.", tiempo);
    return 1;
}

CMD:esposas(playerid, params[])
{
    new str[128];
    if(PlayerInfo[playerid][faccion] != FACCION_PLC) return MensajeError(playerid, "Este comando no lo puedes utilizar.");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, -1, "ERROR Sintáctico: {00CCFF}/esposar [Player ID]");
    if(!IsPlayerNear(playerid, params[0], 2.0)) return MensajeError(playerid, "El jugador elegido no está cerca.");
    if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "El jugador elegido no está conectado.");
    if(params[0] == playerid) return MensajeError(playerid, "No puedes esposarte a ti mismo.");
    if(Handcuffed[params[0]] == 0){
    SetPlayerSpecialAction(params[0], SPECIAL_ACTION_CUFFED);
    SetPlayerAttachedObject(params[0], 9, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
    format(str, sizeof(str), "* %s desengancha las esposas del cinturón y esposa a %s.", PlayerName(playerid), PlayerName(params[0]));
    SendPlayersMessage(10.0, playerid, 0xBE9BC1FF, str);
    Handcuffed[params[0]] = 1;
    } else {

    RemovePlayerAttachedObject(params[0], 9);
    SetPlayerSpecialAction(params[0], SPECIAL_ACTION_NONE);
    format(str, sizeof(str), "* %s desesposa a %s y engancha las esposas del cinturón.", PlayerName(playerid), PlayerName(params[0]));
    SendPlayersMessage(10.0, playerid, 0xBE9BC1FF, str);
    Handcuffed[params[0]] = 0;
    }
    return 1;
}

CMD:arrestar(playerid, params[])
{
  new id,
  tiempo,
  string[128];

  if(sscanf(params, "ud", id, tiempo))
  {
   SendClientMessage(playerid, ROJO, "Uso correcto: /encarcelar [id] [minutos]");
  }
  if(Jailed[id] == true)
  {
  SendClientMessage(playerid, ROJO, "Ese jugador ya está encarcelado!");
  }
  else
  {
  if(PlayerInfo[playerid][faccion] != FACCION_PLC) return MensajeError(playerid, "Este comando no lo puedes utilizar");
  if(sscanf(params, "id", params[0], params[1])) return MensajeError(playerid, "/arrestar [Player ID] [Minutos]");
  if(params[0] == playerid) return MensajeError(playerid, "No puedes arrestarte a ti mismo.");
  if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "El jugador elegido no está conectado");
  if(!IsPlayerNear(playerid, params[0], 2.0)) return MensajeError(playerid, "El jugador elegido no está cerca");
  if(params[1] <= 0) return MensajeError(playerid, "El tiempo de condena debe ser superior a 0 minutos.");
  SendClientMessage(params[0], -1, "Fuiste arrestado en la comisaría de {00CCFF}Los Santos.");
  SendClientMessageEx(params[0], -1, "El juez dictó la sentencia de la condena: {00CCFF}%d {FFFFFF}años {00CCFF}(%d minutos)", params[1], params[1]);
  SetPlayerInterior(params[0], 6);
  SetPlayerPos(params[0], 264.6288, 77.5742, 1001.0391);
  new tiempo_ms = params[1] * 60000;
  PlayerInfo[params[0]][jailminutes] = GetTickCount() + tiempo_ms;
  SetTimerEx("UnJail", 60000 * tiempo, false, "d", id);
  format(string, sizeof(string), "Has encarcelado al ID: %d!", id);
  SendClientMessage(playerid, VERDE, string);
  //SendClientMessage(id, ROJO, "Has sido encarcelado!");
  }
  return 1;
}

/* CMDS REALES */
CMD:info(playerid, params[])
{
    new string[542];
	strcat(string, ""GREEN"(es para que ve la puta del santi lo que hice)\n\n");
	strcat(string, "\t{FFFFFF}1. Sistema de admin\n");
	strcat(string, "\t{FFFFFF}2. Job de Camionero\n");
	strcat(string, "\t{FFFFFF}3. Velocimetro\n");
	strcat(string, "\t{FFFFFF}4. Faccion poli\n");
	strcat(string, "\t{FFFFFF}5. Comandos  nuevos\n\n");
	strcat(string, ""YELLOW"¿:D?");

	ShowPlayerDialog(playerid, DIALOG_DUDAS, DIALOG_STYLE_MSGBOX, "Actualizaciones Actual v1.1", string, "Continuar", "Cerrar");
	format(DudeMsg[playerid], 128, "%s", params);
	return 1;
	}
CMD:expresion(playerid, params[])
{
        if(sscanf(params, "d", params[0])) return MensajeError(playerid, "/expresion [1-6] (/expresion 6 para borrar la expresión)");
        switch(params[0])
        {
            case 1: ApplyAnimation(playerid, "PED", "facanger", 4.1, 0, 1, 1, 1, 1, 1);
            case 2: ApplyAnimation(playerid, "PED", "facsurpm", 4.1, 0, 1, 1, 1, 1, 1);
            case 3: ApplyAnimation(playerid, "PED", "facsurp", 4.1, 0, 1, 1, 1, 1, 1);
            case 4: ApplyAnimation(playerid, "PED", "facgum", 4.1, 0, 1, 1, 1, 1, 1);
            case 5: ApplyAnimation(playerid, "PED", "facurios", 4.1, 0, 1, 1, 1, 1, 1);
            case 6: ClearAnimations(playerid);
            default: MensajeError(playerid, "/expresion [1-6] (/expresion 6 para borrar la expresión)");
        }
        return 1;
}


CMD:gps(playerid, params[])
{
	if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(BolsilloID[playerid][11] == 25 || BolsilloID[playerid][12] == 25)
    {
        ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS", "Vehículos personales\nTiendas de comida\nTiendas de ropa\nTiendas 24/7\nConcesionarios\nLugares de ocio\nServicios públicos\nTrabajos", "Siguiente", "Cancelar");
    }
    else SendClientMessage(playerid, -1, "Necesitas tener un GPS en la mano. (Puedes comprarlo en una tienda 24/7).");
	return 1;
}

CMD:motor(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!isnull(VehicleInfo[vehicleid][VD]))
		{
		    new co = 0;
		    for(new i = 0; i != 4; i++)
			{
				if(VehicleInfo[vehicleid][VKEY] == PlayerInfo[playerid][PlayerVehicleKey][i])
				{
				    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(playerid), false))
					{

					    co = 1;
				        new engine, vlights, alarm, doors, bonnet, boot, objective;
						GetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
						if(engine)
						{
							if(MyTimers[playerid][24] != -1) return 1;
							new str[145];
					      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} gira la llave de su vehículo y apaga el motor.", PlayerName(playerid));
					 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
					 		SendClientMessage(playerid, -1, "Al apagar tu vehículo, este quedará aparcado aquí, hasta que vuelva a arrancar el motor.");
					 		SendClientMessage(playerid, -1, "Si está mal aparcado la grúa podría llevarselo.");
							MyTimers[playerid][24] = SetTimerEx("SetVehicleParamsPlayer", 500, false, "idddddddd", playerid, vehicleid, 0, vlights, alarm, doors, bonnet, boot, objective);
						}
						else
						{
						    if(MyTimers[playerid][24] != -1) return 1;
						    new str[145];
					      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} gira la llave de su vehículo...", PlayerName(playerid));
					 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
							MyTimers[playerid][24] = SetTimerEx("SetVehicleParamsPlayer", 1000, false, "idddddddd", playerid, vehicleid, 1, vlights, alarm, doors, bonnet, boot, objective);
						}
					}
				}
			}
			if(co == 0) InfoMSG(playerid, 3000, "No tienes las llaves de este vehículo.");
		}
		else
		{
			new engine, vlights, alarm, doors, bonnet, boot, objective;
			GetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
			if(engine) SetVehicleParamsEx(vehicleid, 0, vlights, alarm, doors, bonnet, boot, objective);
			else SetVehicleParamsEx(vehicleid, 1, vlights, alarm, doors, bonnet, boot, objective);

		}
	}
	return 1;
}

CMD:cajero(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	new c = GetClosestATM(playerid);
	SetPlayerCheckpoint(playerid, Cajeros[c][0], Cajeros[c][1], Cajeros[c][2], 1.0);
	SendClientMessage(playerid, -1, "Se ha marcado de rojo el cajero más cercano.");
	return 1;
}

CMD:apagar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
    {
        new vehicleid = GetPlayerVehicleID(playerid);
        if(isnull(VehicleAudio[vehicleid])) return SendClientMessage(playerid, -1, "La música de este vehículo ya está apagada.");
		format(VehicleAudio[vehicleid], 145, "");
		StopAudioStreamForPlayer(playerid);
		new str[145];
		format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} apaga la radio/música del vehículo.", PlayerName(playerid));
		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
		
		foreach(new i : Player)
		{
		    if(i != playerid)
		    {
				if(GetPlayerVehicleID(i) == vehicleid)
				{
	                StopAudioStreamForPlayer(i);
				}
			}
		}
	}
	else SendClientMessage(playerid, -1, "No puedes usar este comando si no eres el conductor del vehículo.");
	return 1;
}

CMD:bol(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	MostrarBolsillos(playerid);
	return 1;
}

CMD:bolsillo(playerid, params[])
{
	return cmd_bol(playerid, params);
}

CMD:inventario(playerid, params[])
{
	return cmd_bol(playerid, params);
}

funcion:FinishAnimation(playerid)
{
    RemovePlayerAttachedObject(playerid, 6);
	ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	return 1;
}

CMD:dar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(sscanf(params, "du", params[0], params[1])) return SendClientMessage(playerid, -1, "Si quieres dar lo que tienes en la mano derecha, {FFFF00}/dar 1 [PID] {FFFFFF}si quieres dar lo que hay en la izquierda, {FFFF00}/dar 2 [PID].");
	if(!IsPlayerConnected(params[1])) return SendClientMessage(playerid, -1, "Jugador desconectado.");
    if(playerid == params[1]) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	if(IsPlayerNPC(params[1])) return SendClientMessage(playerid, -1, "Jugador desconectado.");
	if(!PlayerNearPlayer(playerid, params[1], 1.0)) return SendClientMessageEx(playerid, -1, "Tienes que estar cerca de {FFFF00}%s", FirstName(params[1]));
	if(PlayerInfo[params[1]][PlayerStatus] == STATE_DEAD1 || PlayerInfo[params[1]][PlayerStatus] == STATE_DEAD2) return SendClientMessageEx(playerid, -1, "{FFFF00}%s {FFFFFF}no puede coger cosas ahora.", FirstName(params[1]));
	if(BolsilloID[params[1]][11] != 0 && BolsilloID[params[1]][12] != 0) return SendClientMessageEx(playerid, -1, "{FFFF00}%s {FFFFFF}debe de tener alguna mano vacía.", FirstName(params[1]));
	switch(params[0])
	{
	    case 1:
	    {
	        if(BolsilloID[playerid][11] == 0) return SendClientMessage(playerid, -1, "No tienes nada en la mano derecha.");
	        new str[145];
	        format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} le da su %s a %s.", PlayerName(playerid), Objetos_Bolsillo[BolsilloID[playerid][11]][iname], FirstName(params[1]));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		if(BolsilloID[params[1]][11] == 0) BolsilloID[params[1]][11] = BolsilloID[playerid][11];
	 		else if(BolsilloID[params[1]][12] == 0) BolsilloID[params[1]][12] = BolsilloID[playerid][11];
	 		BolsilloID[playerid][11] = 0;
	    }
	    case 2:
	    {
	        if(BolsilloID[playerid][11] == 0) return SendClientMessage(playerid, -1, "No tienes nada en la mano izquierda.");
	        new str[145];
	        format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} le da su %s a %s.", PlayerName(playerid), Objetos_Bolsillo[BolsilloID[playerid][12]][iname], FirstName(params[1]));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		if(BolsilloID[params[1]][11] == 0) BolsilloID[params[1]][11] = BolsilloID[playerid][12];
	 		else if(BolsilloID[params[1]][12] == 0) BolsilloID[params[1]][12] = BolsilloID[playerid][12];
	 		BolsilloID[playerid][12] = 0;
	    }
	    default: SendClientMessage(playerid, -1, "Si quieres dar lo que tienes en la mano derecha, pon {FFFF00}/dar 1 [PlayerID] {FFFFFF}si quieres dar lo que hay en la izquierda, {FFFF00}/dar 2 [PlayerID].");
	}
	return 1;
}

CMD:tirar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Si quieres tirar lo que tienes en la mano derecha, pon {FFFF00}/tirar 1 {FFFFFF}si quieres tirar lo que hay en la izquierda, {FFFF00}/tirar 2.");
	switch(params[0])
	{
	    case 1:
	    {
	        if(BolsilloID[playerid][11] == 0) return SendClientMessage(playerid, -1, "No tienes nada en la mano derecha.");
	        new str[145];
	        format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} tira su %s.", PlayerName(playerid), Objetos_Bolsillo[BolsilloID[playerid][11]][iname]);
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		BolsilloID[playerid][11] = 0;
	    }
	    case 2:
	    {
	        if(BolsilloID[playerid][12] == 0) return SendClientMessage(playerid, -1, "No tienes nada en la mano izquierda.");
	        new str[145];
	        format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} tira su %s.", PlayerName(playerid), Objetos_Bolsillo[BolsilloID[playerid][12]][iname]);
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		BolsilloID[playerid][12] = 0;
	    }
	    default: SendClientMessage(playerid, -1, "Si quieres tirar lo que tienes en la mano derecha, pon {FFFF00}/tirar 1 {FFFFFF}si quieres tirar lo que hay en la izquierda, {FFFF00}/tirar 2.");
	}
	return 1;
}

CMD:usar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, -1, "Si quieres usar lo que tienes en la mano derecha, pon {FFFF00}/usar 1 {FFFFFF}si quieres usar lo que hay en la izquierda, {FFFF00}/usar 2.");
	switch(params[0])
	{
	    case 1:
	    {
	        if(BolsilloID[playerid][11] == 0) return SendClientMessage(playerid, -1, "No tienes nada en la mano derecha.");
	        new str[145];
	        new Float:health; GetPlayerHealth(playerid,health);
	        switch(BolsilloID[playerid][11])
	        {
	            case 1:
	            {
	                
			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza mixta.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;

			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 2:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza barbacoa.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 3:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza clásica.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 4:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza vegetariana.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 5:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una hamburguesa de pollo.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
                        SetPlayerAttachedObject(playerid,6,19094,6,0.068999,0.089999,0.037999,0.000000,-83.399963,-13.600013,0.444000,0.315000,0.389000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 6:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una hamburguesa de pescado.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
                        SetPlayerAttachedObject(playerid,6,19094,6,0.068999,0.089999,0.037999,0.000000,-83.399963,-13.600013,0.444000,0.315000,0.389000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 7:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una hamburguesa de ternera.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
                        SetPlayerAttachedObject(playerid,6,19094,6,0.068999,0.089999,0.037999,0.000000,-83.399963,-13.600013,0.444000,0.315000,0.389000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 8:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un pollo asado.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+3.0);
	            }
	            case 9:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} come alitas de pollo.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 10:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un donut.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
      				if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 11:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un donut de chocolate.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 12:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una rosquilla.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 13:
	            {
					if(BolsilloID[playerid][12] != 14) return SendClientMessage(playerid, -1, "Para fumar necesitas en una mano un mechero y en la otra un cigarrillo.");
					format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se fuma un cigarro.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		SendClientMessage(playerid, -1, "Presiona {FFFF00}F {FFFFFF}para dejar de fumar.");
			 		//BolsilloID[playerid][11] = 0;
			 		BolsilloID[playerid][12] = 0;
			 		SetPlayerHealth(playerid, health-2.5);
					if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	            }
	            case 14:
	            {
			      	if(BolsilloID[playerid][12] != 13) return SendClientMessage(playerid, -1, "Para fumar necesitas en una mano un mechero y en la otra un cigarrillo.");
					format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se fuma un cigarro.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		SendClientMessage(playerid, -1, "Presiona {FFFF00}F {FFFFFF}para dejar de fumar.");
			 		BolsilloID[playerid][11] = 0;
			 		//BolsilloID[playerid][12] = 0;
			 		SetPlayerHealth(playerid, health-2.5);
					if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	            }
	            case 15:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe una cerveza.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		SetPlayerDrunkLevel(playerid, 2500);
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    SetPlayerHealth(playerid, health-1.0);
	            }
	            case 16:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un refresco de naranja.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 17:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} bebe agua.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1951,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.5);
	            }
	            case 18:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un perrito caliente.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 19:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un refresco de limón.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 20:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un refresco de cola.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 21:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} masca un chicle.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
				    
	            }
	            case 22:
	            {
	                if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "Tienes que estar en el vehículo para utilizar el cable.");
					if(iPhone_CC[1][playerid] == 1)
					{
					    new vehicleid = GetPlayerVehicleID(playerid);
					    format(VehicleAudio[vehicleid], 145, "%s", Radio[random(sizeof(Radio))]);
	                    StopAudioStreamForPlayer(playerid);
	        			PlayAudioStreamForPlayer(playerid, VehicleAudio[vehicleid]);

						foreach(new i : Player)
						{
						    if(i != playerid)
						    {
								if(GetPlayerVehicleID(i) == vehicleid)
								{
					                StopAudioStreamForPlayer(i);
					                PlayAudioStreamForPlayer(i, VehicleAudio[vehicleid]);
								}
							}
						}
					    format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} conecta el iPhone al vehículo.", PlayerName(playerid));
			 			SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
					    SendClientMessage(playerid, -1, "Usa {FFFF00}/apagar {FFFFFF}para desconectar el cable.");
					    return 1;
					}
					if(iPhone_CC[2][playerid] == 1)
					{
					    new vehicleid = GetPlayerVehicleID(playerid);
					    format(VehicleAudio[vehicleid], 145, "%s", Music[random(sizeof(Music))]);
	                    StopAudioStreamForPlayer(playerid);
	        			PlayAudioStreamForPlayer(playerid, VehicleAudio[vehicleid]);

						foreach(new i : Player)
						{
						    if(i != playerid)
						    {
								if(GetPlayerVehicleID(i) == vehicleid)
								{
					                StopAudioStreamForPlayer(i);
					                PlayAudioStreamForPlayer(i, VehicleAudio[vehicleid]);
								}
							}
						}
					    format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} conecta el iPhone al vehículo.", PlayerName(playerid));
			 			SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
					    SendClientMessage(playerid, -1, "Usa {FFFF00}/apagar {FFFFFF}para desconectar el cable.");
					    return 1;
					}
					SendClientMessage(playerid, -1, "Para utilizar el cable debes de estar en el menú de música o radio en tu iPhone.");
	            }
	            case 23:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una ensalada.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+3.0);
	            }
	            case 24:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un café.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][11] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 25:
	            {
	                ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS", "Vehículos personales\nTiendas de comida\nTiendas de ropa\nTiendas 24/7\nConcesionarios\nLugares de ocio\nServicios públicos\nTrabajos", "Siguiente", "Cancelar");
	            }
	        }
	    }
	    case 2:
	    {
	        if(BolsilloID[playerid][12] == 0) return SendClientMessage(playerid, -1, "No tienes nada en la mano izquierda.");
	        new str[145];
	        new Float:health; GetPlayerHealth(playerid,health);
	        switch(BolsilloID[playerid][12])
	        {
	            case 1:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza mixta.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;

			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 2:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza barbacoa.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 3:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza clásica.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 4:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una pizza vegetariana.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					    SetPlayerAttachedObject(playerid,6,2702,6,0.032000,0.113999,-0.001000,0.000000,0.000000,4.200024,1.000000,1.000000,1.000000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 5:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una hamburguesa de pollo.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
                        SetPlayerAttachedObject(playerid,6,19094,6,0.068999,0.089999,0.037999,0.000000,-83.399963,-13.600013,0.444000,0.315000,0.389000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 6:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una hamburguesa de pescado.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
                        SetPlayerAttachedObject(playerid,6,19094,6,0.068999,0.089999,0.037999,0.000000,-83.399963,-13.600013,0.444000,0.315000,0.389000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 7:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una hamburguesa de ternera.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
                        SetPlayerAttachedObject(playerid,6,19094,6,0.068999,0.089999,0.037999,0.000000,-83.399963,-13.600013,0.444000,0.315000,0.389000);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.0);
	            }
	            case 8:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un pollo asado.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+3.0);
	            }
	            case 9:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} come alitas de pollo.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Chicken", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 10:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un donut.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
      				if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 11:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un donut de chocolate.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 12:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una rosquilla.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 13:
	            {
					if(BolsilloID[playerid][11] != 14) return SendClientMessage(playerid, -1, "Para fumar necesitas en una mano un mechero y en la otra un cigarrillo.");
					format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se fuma un cigarro.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		SendClientMessage(playerid, -1, "Presiona {FFFF00}F {FFFFFF}para dejar de fumar.");
			 		BolsilloID[playerid][11] = 0;
			 		//BolsilloID[playerid][12] = 0;
			 		SetPlayerHealth(playerid, health-2.5);
					if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	            }
	            case 14:
	            {
			      	if(BolsilloID[playerid][11] != 13) return SendClientMessage(playerid, -1, "Para fumar necesitas en una mano un mechero y en la otra un cigarrillo.");
					format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se fuma un cigarro.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		SendClientMessage(playerid, -1, "Presiona {FFFF00}F {FFFFFF}para dejar de fumar.");
			 		//BolsilloID[playerid][11] = 0;
			 		BolsilloID[playerid][12] = 0;
			 		SetPlayerHealth(playerid, health-2.5);
					if(!IsPlayerInAnyVehicle(playerid)) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	            }
	            case 15:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe una cerveza.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		SetPlayerDrunkLevel(playerid, 2500);
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    SetPlayerHealth(playerid, health-1.0);
	            }
	            case 16:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un refresco de naranja.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 17:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} bebe agua.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1951,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+2.5);
	            }
	            case 18:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come un perrito caliente.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,2806,6,0.060999,0.048000,0.000000,0.000000,0.000000,0.000000,0.065000,0.090000,0.135000);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+1.0);
	            }
	            case 19:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un refresco de limón.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 20:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un refresco de cola.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 21:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} masca un chicle.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;

	            }
	            case 22:
	            {
					SendClientMessage(playerid, -1, "Próximamente.");
					//CABLE IPHONE:COCHE
	            }
	            case 23:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se come una ensalada.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "FOOD", "EAT_Pizza", 4.1, 0, 1, 1, 1, 5000, 1);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 5000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+3.0);
	            }
	            case 24:
	            {

			      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} se bebe un café.", PlayerName(playerid));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		BolsilloID[playerid][12] = 0;
			 		if(!IsPlayerInAnyVehicle(playerid))
					{
					    KillTimer(MyTimers[playerid][28]);
					 	ApplyAnimation(playerid, "VENDING", "VEND_Drink2_P", 4.1, 0, 1, 1, 1, 5000, 1);
					 	SetPlayerAttachedObject(playerid,6,1950,5,0.082999,0.035999,-0.033999,179.100006,0.000000,0.000000,0.418999,0.389000,0.579999);
					 	MyTimers[playerid][28] = SetTimerEx("FinishAnimation", 3000, false, "i", playerid);
					}
				    if(health < 100.0) SetPlayerHealth(playerid, health+0.5);
	            }
	            case 25:
	            {
	                ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS", "Vehículos personales\nTiendas de comida\nTiendas de ropa\nTiendas 24/7\nConcesionarios\nLugares de ocio\nServicios públicos\nTrabajos", "Siguiente", "Cancelar");
	            }
	        }
	    }
	    default: SendClientMessage(playerid, -1, "Si quieres usar lo que tienes en la mano derecha, pon {FFFF00}/usar 1 {FFFFFF}si quieres usar lo que hay en la izquierda, {FFFF00}/usar 2.");
	}
	return 1;
}

CMD:abrir(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	new c = 0;
    for(new i = 0; i != 4; i++)
	{
		if(PlayerInfo[playerid][PlayerVehicleKey][i] != -1)
		{
			new Float:pos[3];
			GetVehiclePos(PlayerInfo[playerid][PlayerVehicle][i], pos[0], pos[1], pos[2]);
		 	if(IsPlayerInRangeOfPoint(playerid, 10.0, pos[0], pos[1], pos[2]))
		 	{
		 	    new engine, vlights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(PlayerInfo[playerid][PlayerVehicle][i], engine, vlights, alarm, doors, bonnet, boot, objective);
				if(doors)
				{
				    SetVehicleParamsEx(PlayerInfo[playerid][PlayerVehicle][i], engine, vlights, alarm, 0, bonnet, boot, objective);
				    new str[145];
				    format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} abre su %s.", PlayerName(playerid), GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		return 1;
				}
				else
				{
				    InfoMSG(playerid, 3000, "Las puertas ya están abiertas.");
				    return 1;
				}
		 	}
		 	else c = 1;
        }
    }
    if(c == 0) return SendClientMessage(playerid, -1, "No tienes ningún vehículo.");
	else if(c == 1) return SendClientMessage(playerid, -1, "No estás lo suficientemente cerca de tu vehículo.");
	return 1;
}

CMD:cerrar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	new c = 0;
    for(new i = 0; i != 4; i++)
	{
		if(PlayerInfo[playerid][PlayerVehicleKey][i] != -1)
		{
			new Float:pos[3];
			GetVehiclePos(PlayerInfo[playerid][PlayerVehicle][i], pos[0], pos[1], pos[2]);
		 	if(IsPlayerInRangeOfPoint(playerid, 10.0, pos[0], pos[1], pos[2]))
		 	{
		 	    new engine, vlights, alarm, doors, bonnet, boot, objective;
				GetVehicleParamsEx(PlayerInfo[playerid][PlayerVehicle][i], engine, vlights, alarm, doors, bonnet, boot, objective);
				if(!doors)
				{
				    SetVehicleParamsEx(PlayerInfo[playerid][PlayerVehicle][i], engine, vlights, alarm, 1, bonnet, boot, objective);
				    new str[145];
				    format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} cierra su %s.", PlayerName(playerid), GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
			 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
			 		return 1;
				}
				else
				{
				    InfoMSG(playerid, 3000, "Las puertas ya están cerradas.");
				    return 1;
				}
		 	}
		 	else c = 1;
        }
    }
    if(c == 0) return SendClientMessage(playerid, -1, "No tienes ningún vehículo.");
	else if(c == 1) return SendClientMessage(playerid, -1, "No estás lo suficientemente cerca de tu vehículo.");
	return 1;
}

CMD:kill(playerid, params[])
{
    if(!IsPlayerAdmin(playerid)) return 1;
    if(P_newuser[playerid] > 0) return 1;
	SetPlayerHealth(playerid, 0.0);
	return 1;
}

CMD:rendirse(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1)
	{
	    SetPlayerHealth(playerid, 0.0);
		return 1;
	}
	SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	return 1;
}



CMD:colocar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(IsPlayerInAnyVehicle(playerid)) return 1;
    if(PlayerInMenu[playerid][0] != -1) return 1;
    ShowPlayerDialog(playerid, DIALOG_ACCESORIOS, DIALOG_STYLE_LIST, "Eliga el toy a modificar", "Cascos, gorras, gorros, sombreros y máscaras.\nBandanas.\nGafas, lentes.", "Editar", "Cancelar");
    return 1;
}

CMD:me(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /me [acción]");
	SendClientMessage(playerid, -1, "Usa {FFFF00}!acción {FFFFFF}en lugar de de {FFFF00}/me acción{FFFFFF}.");
    new str[145];
  	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} %s.", PlayerName(playerid), params);
	SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	return 1;
}

CMD:localizar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	new string[512];
	new c = 0;
    for(new i = 0; i != 4; i++)
	{
		if(PlayerInfo[playerid][PlayerVehicleKey][i] != -1)
		{
	        if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 2 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 6 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 12) format(string, sizeof(string), "%s Vehículo #%d (%s)\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
	        else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 1) format(string, sizeof(string), "%s Vehículo #%d (%s) pendiente de recogida\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 3) format(string, sizeof(string), "%s Vehículo #%d (%s) destruido\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 4 || VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 10) format(string, sizeof(string), "%s Vehículo #%d (%s) en el depósito\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
            else if(VehicleInfo[PlayerInfo[playerid][PlayerVehicle][i]][VSTATUS] == 5) format(string, sizeof(string), "%s Vehículo #%d (%s) averiado\n", string, i, GetVehicleName(PlayerInfo[playerid][PlayerVehicle][i]));
			c = 1;
        }
        else format(string, sizeof(string), "%s Vehículo #%d (Vacío)\n", string, i);
    }
    if(c == 0) return SendClientMessage(playerid, -1, "No tienes ningún vehículo.");
    ShowPlayerDialog(playerid, DIALOG_LOCALIZA, DIALOG_STYLE_LIST, "Tus vehículos personales", string, "Localizar", "Cancelar");
	return 1;
}

CMD:iphone(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	if(iPhoneStatus[playerid] == 0)
	{
		SendClientMessage(playerid, -1, "Use la tecla {FFFF00}Y/N {FFFFFF}para entrar/salir de un menú, use {FFFF00}4 y 6 {FFFFFF}para moverse en el menú principal.");
		SendClientMessage(playerid, -1, "Si no tienes pad numérico puedes usar {FFFF00}CLICK IZQUIERO {FFFFFF}a pie, y {FFFF00}ESPACIO {FFFFFF}en un vehículo.");
		loop(0, 22, PHONE) TextDrawShowForPlayer(playerid, TD_iPhone[PHONE]);
        iPhoneStatus[playerid] = 1;
	}
	else
	{
	    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)//estbleciendo la llamada
	    {
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    HideIphoneMenu(playerid);
		    iPhoneStatus[playerid] = 0;

		    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    HideIphoneMenu(callto[playerid]);
		    iPhoneStatus[callto[playerid]] = 0;
		    return 1;
		}
		if(iPhoneCallStatus[playerid] == 5)
		{
			iPhoneCallStatus[playerid] = 0;
		    iPhoneStatus[playerid] = 0;
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
	     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
	        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);
		    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
		    called[playerid] = "";
		    callto[playerid] = 0;
		    iPhone_CC[0][playerid] = 0;
			iPhone_CC[1][playerid] = 0;
			iPhone_CC[2][playerid] = 0;
			return 1;
		}
	    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    HideIphoneMenu(playerid);
	    iPhoneStatus[playerid] = 0;
	}
	return 1;
}

CMD:llamar(playerid, params[])
{
	return cmd_iphone(playerid, params);
}

CMD:movil(playerid, params[])
{
	return cmd_iphone(playerid, params);
}

CMD:d(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /d [duda]");
    if(ChatLogDisabled[playerid]) return 1;
   	if(PlayerInfo[playerid][DudeChannel] == 0) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF}Tienes el canal de dudas desactivado. Puedes activarlo con el comando {00CCFF}/cduda.");

    if(DudeTime[playerid] > GetTickCount())
    {
		new Float:tiempo = floatdiv(floatsub(DudeTime[playerid], GetTickCount()), 60000);
		SendClientMessageEx(playerid, -1, "Debe de esperar {FFFF00}%.2f {FFFFFF}minuto(s) para volver a publicar otra duda.", tiempo);
		return 1;
	}

	new string[542];
	strcat(string, ""GREEN"Al usar el canal te comprometeras a aceptar las siguientes reglas:\n\n");
	strcat(string, "\t{00CCFF}1. En este canal solo podrás publicar dudas respecto del servidor (gamemode)\n");
	strcat(string, "\t{00CCFF}2. Este es un canal que puedes activar/desactivar en el /menu principal, en ajustes\n");
	strcat(string, "\t{00CCFF}3. Si publicas un mensaje que no tiene nada que ver con una duda, puedes ser advertido\n");
	strcat(string, "\t{00CCFF}4. Cuando publiques una duda, los otros jugadores te la podrán responder\n");
	strcat(string, "\t{00CCFF}5. Tan solo se puede publicar una duda cada 1 minuto(s)\n\n");
	strcat(string, ""YELLOW"¿Estás seguro de publicar la duda?");

	ShowPlayerDialog(playerid, DIALOG_DUDAS, DIALOG_STYLE_MSGBOX, "Canal de dudas", string, "Continuar", "Cerrar");
	format(DudeMsg[playerid], 128, "%s", params);
	return 1;
}

CMD:cduda(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(PlayerInfo[playerid][DudeChannel] == 0)
    {
        PlayerInfo[playerid][DudeChannel] = 1; //SaveValue(playerid, "DUDE", PlayerInfo[playerid][DudeChannel]);
        SendClientMessage(playerid, -1, "Canal de dudas {00CCFF}activado.");
    }
    else
    {
        PlayerInfo[playerid][DudeChannel] = 0; //SaveValue(playerid, "DUDE", PlayerInfo[playerid][DudeChannel]);
        SendClientMessage(playerid, -1, "Canal de dudas {00CCFF}desactivado.");
    }
	return 1;
}

CMD:rostro(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
 		if(!sscanf(params, "d", params[0]))
		{
		    switch(params[0])
		    {
		        case 1: ApplyAnimation(playerid,"PED","facanger",3.0,1,1,1,1,1);
		        case 2: ApplyAnimation(playerid,"PED","facgum",3.0,1,1,1,1,1);
		        case 3: ApplyAnimation(playerid,"PED","facsurp",3.0,1,1,1,1,1);
		        case 4: ApplyAnimation(playerid,"PED","facsurpm",3.0,1,1,1,1,1);
		        case 5: ApplyAnimation(playerid,"PED","factalk",3.0,1,1,1,1,1);
		        case 6: ApplyAnimation(playerid,"PED","facurios",3.0,1,1,1,1,1);
		        default: SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /rostro [1-6]");
      		}
		}
		else SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /rostro [1-6]");
	}
	return 1;
}

CMD:borracho(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid,"PED", "WALK_DRUNK",4.0,1,1,1,1,500);
	}
	return 1;
}

CMD:hablar(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,7,5,1,1,1);
	}
	return 1;
}

CMD:masturbar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.0, 1, 0, 0, 1, 0);
	}
	return SendClientMessage(playerid, -1, "Para continuar utiliza /masturbarend");
}

CMD:masturbarend(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "PAULNMAC", "wank_out", 4.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:arrestado(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation( playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1,500);
	}
	return 1;
}

CMD:amenazar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 0, 0, 0, 1,500);
	}
	return 1;
}

CMD:reirse(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0,0);
	}
	return 1;
}

CMD:agredido(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		ApplyAnimation(playerid, "POLICE", "crm_drgbst_01", 4.0, 0, 0, 0, 1, 0);
	}
	return 1;
}

CMD:herido(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid, "SWEET", "LaFin_Sweet", 4.0, 0, 1, 1, 1, 0);
		SendClientMessage(playerid, -1, "Para continuar utiliza /agonizar");
	}
	return 1;
}

CMD:asustado(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"PED","handscower",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:dolorido(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid,"PED","KO_shot_stom",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:vigilar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 1, 1, 1, 0, 4000);
	}
	return 1;
}

CMD:tumbarse(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid,"SUNBATHE", "Lay_Bac_in", 4.0, 0, 0, 0, 1, 0);
	}
	return 1;
}

CMD:cubrirse(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "ped", "cower", 4.0, 1, 0, 0, 0, 0);
	}
	return 1;
}

CMD:vomitar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:agonizar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "WUZI", "CS_Dead_Guy", 4.0, 0, 0, 0, 1, 0);
	}
	return 1;
}

CMD:levantarse(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "ped", "getup_front", 4.000000, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:rodar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"MD_CHASE","MD_HANG_Lnd_Roll",4.1,0,1,1,1,0);
	}
	return 1;
}

CMD:traficar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:beso(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 4.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:sentarse(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		ApplyAnimation(playerid, "SUNBATHE", "ParkSit_M_in", 4.000000, 0, 1, 1, 1, 0);
	}
	return 1;
}

CMD:stop(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	return 1;
}

CMD:depie(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "ped", "SEAT_up", 4.0, 0, 0, 1, 0, 0, 0);
	}
	return 1;
}

CMD:peineta(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation( playerid,"ped", "fucku", 4.0, 0, 1, 1, 1, 1 );
	}
	return 1;
}

CMD:siquiero(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:noquiero(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "GANGS", "Invite_No", 4.0, 0, 0, 0, 0, 0);
	}
	return 1;
}

CMD:comerciar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "DEALER", "shop_pay", 4.000000, 0, 1, 1, 0, 0);
	}
	return 1;
}

CMD:taichi(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop",  4.1,7,5,1,1,1);
	}
	return 1;
}

CMD:boxear(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "GYMNASIUM", "gym_shadowbox",  4.1,7,5,1,1,1);
	}
	return 1;
}

CMD:fuerza(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:llorar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,0,0,0,0,0);
	}
	return 1;
}

CMD:detener(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"POLICE","CopTraf_Stop",4.1,0,0,0,0,0);
	}
	return 1;
}

CMD:rapear(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"RAPPING","RAP_B_Loop",4.0,1,0,0,0,8000);
	}
	return 1;
}

CMD:alzar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:sapiar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"PED","roadcross_female",4.1,0,0,0,0,0);
	}
	return 1;
}

CMD:asiento(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid, "ped", "SEAT_down", 4.0, 0, 0, 0, 1, 0, 0);
	}
	return 1;
}

CMD:pensar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"COP_AMBIENT","Coplook_think",4.1,0,0,0,0,0);
	}
	return 1;
}

CMD:taxi(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"PED","IDLE_taxi",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:seacabo(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"PED","Shove_Partial",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:animar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"ON_LOOKERS","shout_02",4.1,7,5,1,1,1);
	}
	return 1;
}

CMD:quepasa(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:comodo(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    ApplyAnimation(playerid,"INT_HOUSE","LOU_In",4.1,0,1,1,1,1);
	}
	return 1;
}

CMD:bailar(playerid, params[])
{
    if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return SendClientMessage(playerid, -1, "No puedes usar este comando ahora.");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
 		if(!sscanf(params, "d", params[0]))
		{
		    switch(params[0])
		    {
		        case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
		        case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
		        case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
		        case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
		        default: SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /bailar [1-4]");
      		}
		}
		else SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /bailar [1-4]");
	}
	return 1;
}

/*CMD:conocer(playerid, params[])
	{
	    ShowPlayerDialog(playerid, DIALOG_KNOW, DIALOG_STYLE_MSGBOX, "Bienvenido", "Bienvenido", "Enpesar");
	    return 1;
}
*/
CMD:menu(playerid, params[])
{
        for(new i = 0; i != 24; i++) TextDrawShowForPlayer(playerid, CircularMenu[i]);
        SelectTextDraw(playerid, -1);
        return 1;
}

CMD:empezar(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	P_circularmenu_active[playerid] = 3;
    loop(0, 12, a) TextDrawHideForPlayer(playerid, CircularMenu[a]);
    TextDrawShowForPlayer(playerid, UserBox[0]);
    TextDrawShowForPlayer(playerid, UserBox[1]);
    TextDrawShowForPlayer(playerid, UserBox[2]);
    TextDrawShowForPlayer(playerid, UserBox[3]);
	SelectTextDraw(playerid, -1);
	SendClientMessage(playerid, -1, "Usa {00CCFF}'ESC' {FFFFFF}para cerrar la ventana.");
    PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][0], simbolos("Cosas básicas que hacer"));
    PlayerTextDrawShow(playerid, PlayerUserBox[playerid][0]);
    PlayerTextDrawShow(playerid, PlayerUserBox[playerid][1]);

    PlayerTextDrawSetString(playerid, PlayerUserBox[playerid][1], simbolos("Activar número telefónico~n~Crear una cuenta bancaria~n~Conseguir un trabajo~n~Comprar algo de comida"));
    
    if(PlayerInfo[playerid][phonenumber] == 0) PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][0], "ld_chat:thumbdn");
    else PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][0], "ld_chat:thumbup");
    
    if(PlayerInfo[playerid][BankA] == 0) PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][1], "ld_chat:thumbdn");
    else PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][1], "ld_chat:thumbup");
    
    if(PlayerInfo[playerid][Work] == 0) PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][2], "ld_chat:thumbdn");
    else PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][2], "ld_chat:thumbup");
    
    PlayerTextDrawSetString(playerid, CosasPorHacer[playerid][3], "ld_chat:thumbdn");
    loop(0, 4, l) PlayerTextDrawShow(playerid, CosasPorHacer[playerid][l]);
    return 1;
}

CMD:b(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /b [CHAT OOC]");
    new str[145];
    format(str, sizeof(str), "ID: %d | %s: (( %s ))", playerid, PlayerName(playerid), params);
    SendPlayersMessage(10.0, playerid, 0x00F090FF, str);
	return 1;
}

CMD:do(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /do [acción]");
    new str[145];
    format(str, sizeof(str), "* %s [ %s ]", PlayerName(playerid), params);
    SendPlayersMessage(10.0, playerid, 0xADFF2FAA, str);
	return 1;
}

CMD:yo(playerid, params[])
{
	return cmd_me(playerid, params);
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
    if(success == 0) InfoMSG(playerid, 1500, "Lo sentimos, ~b~el comando no existe.");
    return 1;
}

funcion:InfoMSG(playerid, time, text[])
{
	PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos(text));
	PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
	MyTimers[playerid][19] = SetTimerEx("RemoveMSGDraw", time, 0, "i", playerid);
	return 1;
}

funcion:RemoveMSGDraw(playerid) return PlayerTextDrawHide(playerid, ErrorCommand[playerid]);



public OnEnterExitModShop(playerid, enterexit, interiorid)
{
    if(enterexit == 1) 
    {
        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
            new vid = GetPlayerVehicleID(playerid);
			new name[24];
			GetPlayerName(playerid, name, MAX_PLAYER_NAME);
            P_modshop[playerid] = 1;
			if(!isnull(VehicleInfo[vid][VD]))
			{
			    if(strcmp(name, VehicleInfo[vid][VD], false))
				{
					InfoMSG(playerid, 3000, "Este vehículo no es tuyo,~n~no podrás modificarlo.");
					P_modshop[playerid] = -1;
				}
			}
			else
			{
				InfoMSG(playerid, 3000, "Este vehículo no es tuyo,~n~no podrás modificarlo.");
				P_modshop[playerid] = -1;
			}
            SetVehicleVirtualWorld(vid, playerid);
			SetPlayerVirtualWorld(playerid, playerid);
			foreach(new i : Player)
			{
				if(GetPlayerVehicleID(i) == vid)
				{
                    SetPlayerVirtualWorld(i, playerid);
				}
			}
			return 1;
		}
    }
    else if(enterexit == 0)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        {
		    new vid = GetPlayerVehicleID(playerid);
		    new name[24];
			GetPlayerName(playerid, name, MAX_PLAYER_NAME);
		    new componentid;
		    if(!isnull(VehicleInfo[vid][VD]))
			{
			    if(strcmp(name, VehicleInfo[vid][VD], false))
			    {
			        for (new i; i < 14; i++)
					{
					    componentid = GetVehicleComponentInSlot(vid, i);
					    if (componentid != 0) RemoveVehicleComponent(vid, componentid);
					}
					ChangeVehiclePaintjob(vid, VehicleInfo[vid][vpaintjob]);
					ChangeVehicleColor(vid, VehicleInfo[vid][vcolor1], VehicleInfo[vid][vcolor2]);
					ModVehicle(vid);
			    }
			}
			else
			{
				for (new i; i < 14; i++)
				{
				    componentid = GetVehicleComponentInSlot(vid, i);
				    if (componentid != 0) RemoveVehicleComponent(vid, componentid);
				}
			}
			if(P_modshop[playerid] != -1)
			{
			    if(PlayerInfo[playerid][dinero] != GetPlayerMoney(playerid))
			    {
            		PlayerInfo[playerid][dinero] = GetPlayerMoney(playerid);
            		//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				}
				P_modshop[playerid] = -1;
			}
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
            SetVehicleVirtualWorld(vid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			foreach(new i : Player)
			{
				if(GetPlayerVehicleID(i) == vid)
				{
                    SetPlayerVirtualWorld(i, 0);
				}
			}

			return 1;
		}
		
	}
    return 1;
}

funcion:HideDeadTD(playerid)
{
	loop(0, 8, i) TextDrawHideForPlayer(playerid, DeadTD[i]);
	return 1;
}

funcion:UpdateServerTime()
{
    ServerMinute++;
    if(ServerMinute == 60)
	{
		ServerTime ++;
		ServerMinute = 0;
	}
    if(ServerTime == 24) ServerTime = 0;
	foreach(new i : Player)
	{
		if(P_newuser[i] == -1)
		{
			SetPlayerTime(i, ServerTime, ServerMinute);
		}
 	}

	new str[64];
	format(str,sizeof(str),"4G________________%02d:%02d",ServerTime,ServerMinute);
	TextDrawSetString(TD_iPhone[18], str);
	format(str,sizeof(str),"%02d:%02d",ServerTime,ServerMinute);
	TextDrawSetString(TD_iPhone_Clock[0], str);
	TextDrawSetString(TD_iPhone[19], str);

	new Year, Month, Day;
	getdate(Year, Month, Day);
	format(str,sizeof(str),"%02d de %s de %d",Day, GetMonth(Month), Year);
	TextDrawSetString(TD_iPhone[20], str);
	TextDrawSetString(TD_iPhone_Clock[1], str);
	ActualizarTiempo();
	return 1;
}

SendPlayersMessage(Float:distancia, playerid, color, Knowtext[])
{
    new Float:pidx, Float:pidy, Float:pidz;
    new Float:ptox, Float:ptoy, Float:ptoz;
    new vwa = GetPlayerVirtualWorld(playerid);
    GetPlayerPos(playerid, pidx, pidy, pidz);
	foreach(new i : Player)
	{
	    new vwb = GetPlayerVirtualWorld(i);
	    GetPlayerPos(i, ptox, ptoy, ptoz);
	    if(ChatLogDisabled[i] == 0 && vwb == vwa && floatcmp(distancia, floatabs(floatsub(pidx, ptox))) == 1 && floatcmp(distancia, floatabs(floatsub(pidy, ptoy))) == 1 && floatcmp(distancia, floatabs(floatsub(pidz, ptoz))) == 1)
		{
  			SendClientMessage(i, color, Knowtext);
		}
    }
    return 1;
}

SendPlayersMessagePhone(Float:distancia, playerid, color, Knowtext[])
{
    new Float:pidx, Float:pidy, Float:pidz;
    new Float:ptox, Float:ptoy, Float:ptoz;
    new vwa = GetPlayerVirtualWorld(playerid);
    GetPlayerPos(playerid, pidx, pidy, pidz);
	foreach(new i : Player)
	{
	    if(i != playerid)
	    {
		    new vwb = GetPlayerVirtualWorld(i);
		    GetPlayerPos(i, ptox, ptoy, ptoz);
		    if(ChatLogDisabled[i] == 0 && vwb == vwa && floatcmp(distancia, floatabs(floatsub(pidx, ptox))) == 1 && floatcmp(distancia, floatabs(floatsub(pidy, ptoy))) == 1 && floatcmp(distancia, floatabs(floatsub(pidz, ptoz))) == 1)
			{
	  			SendClientMessage(i, color, Knowtext);
			}
		}
    }
    return 1;
}

stock Hide@(str[]) // Función para coger el nombre de un player y borrar el "_"
{
    new n[24];
	strmid(n, str, 0, strlen(str), 24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++) {
		if (n[i] == '_') n[i] = ' ';
	}
    return n;
}

stock RemoveBuildings(playerid)
{
	//camiones empresa
    RemoveBuildingForPlayer(playerid, 4982, 1892.5391, -2012.8281, 21.3750, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 1971.0938, -2027.9297, 11.6016, 0.25);
    RemoveBuildingForPlayer(playerid, 1308, 1971.4609, -1980.6094, 12.6406, 0.25);
    RemoveBuildingForPlayer(playerid, 5198, 1983.5313, -2085.1172, 18.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 5199, 1982.6406, -2038.1641, 14.7891, 0.25);
    RemoveBuildingForPlayer(playerid, 5200, 2014.8125, -2041.1406, 12.5391, 0.25);
    RemoveBuildingForPlayer(playerid, 5201, 1988.1406, -2003.4219, 15.7734, 0.25);
    RemoveBuildingForPlayer(playerid, 5202, 2050.3594, -2045.9297, 20.8672, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2073.8281, -2091.2344, 15.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2051.0547, -2089.6094, 15.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 3744, 2026.2500, -2093.3906, 15.1328, 0.25);
    RemoveBuildingForPlayer(playerid, 5313, 2043.9922, -2016.8672, 25.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 5316, 2043.9922, -2016.8672, 25.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2026.8359, -2099.4531, 13.3203, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2026.2500, -2093.3984, 15.0703, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2050.5938, -2099.4609, 13.3203, 0.25);
    RemoveBuildingForPlayer(playerid, 3578, 2074.0156, -2099.4453, 13.3203, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2073.8359, -2091.2188, 15.0703, 0.25);
    RemoveBuildingForPlayer(playerid, 3574, 2051.0469, -2089.6016, 15.0703, 0.25);
    RemoveBuildingForPlayer(playerid, 5189, 1983.5313, -2085.1172, 18.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 5337, 1995.4375, -2066.1484, 18.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 5375, 1995.4375, -2066.1484, 18.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 5138, 2050.3594, -2045.9297, 20.8672, 0.25);
//    RemoveBuildingForPlayer(playerid, 5186, 2014.8125, -2041.1406, 12.5391, 0.25);
    RemoveBuildingForPlayer(playerid, 1532, 1977.0547, -2035.8906, 12.5391, 0.25);
    RemoveBuildingForPlayer(playerid, 5140, 1982.6406, -2038.1641, 14.7891, 0.25);
    RemoveBuildingForPlayer(playerid, 1306, 2001.0234, -2024.2891, 19.7500, 0.25);
    RemoveBuildingForPlayer(playerid, 5136, 1988.1406, -2003.4219, 15.7734, 0.25);
    RemoveBuildingForPlayer(playerid, 5312, 2068.9609, -2013.4766, 24.1563, 0.25);
    RemoveBuildingForPlayer(playerid, 3286, 2042.1953, -1986.0859, 38.3281, 0.25);
   //unity
    RemoveBuildingForPlayer(playerid, 5033, 1745.2031, -1882.8516, 26.1406, 0.25);
    RemoveBuildingForPlayer(playerid, 5055, 1745.2031, -1882.8516, 26.1406, 0.25);
    RemoveBuildingForPlayer(playerid, 955, 1729.7891, -1943.0469, 12.9453, 0.25);
    RemoveBuildingForPlayer(playerid, 4853, 1736.9766, -1960.6563, 15.0547, 0.25);
    RemoveBuildingForPlayer(playerid, 963, 1747.0391, -1942.6641, 13.6094, 0.25);
    RemoveBuildingForPlayer(playerid, 962, 1757.1484, -1942.6563, 13.6094, 0.25);
    RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 5083, 1748.8438, -1883.0313, 14.1875, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1806.4297, -1901.8281, 16.3750, 0.25);

   //Ayuntamiento plaza
    RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
    RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
    RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);

	// Remove 24/7 machines
    RemoveBuildingForPlayer(playerid, 1776, -33.8750, -186.7656, 1003.6328, 0.25);
    RemoveBuildingForPlayer(playerid, 1775, -32.4453, -186.6953, 1003.6328, 0.25);

    // Remove all other machines
    for(new i = 0; i < sizeof(SPRUNKMachines); i++)
    {
        RemoveBuildingForPlayer(playerid, 955, SPRUNKMachines[i][0], SPRUNKMachines[i][1], SPRUNKMachines[i][2], 0.50);
        RemoveBuildingForPlayer(playerid, 956, SPRUNKMachines[i][0], SPRUNKMachines[i][1], SPRUNKMachines[i][2], 0.50);
    }

	//MALL BY SAMP
	RemoveBuildingForPlayer(playerid, 6130, 1117.5859, -1490.0078, 32.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 6255, 1117.5859, -1490.0078, 32.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 762, 1175.3594, -1420.1875, 19.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1166.3516, -1417.6953, 13.9531, 0.25);
	//
    RemoveBuildingForPlayer(playerid, 4629, 1405.1172, -1191.4063, 85.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 4586, 1405.1172, -1191.4063, 85.0313, 0.25);
	//Alhambra
	RemoveBuildingForPlayer(playerid, 1823, 482.0625, -25.0938, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 482.3906, -24.8672, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 482.0469, -23.2891, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 482.8906, -24.5547, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2290, 483.5156, -26.3516, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 484.1250, -24.6172, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 482.4453, -20.5938, 1002.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 482.2656, -20.5078, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 484.8359, -20.5000, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.5078, -20.3828, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 485.4531, -24.7031, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 486.3906, -25.2891, 1002.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 486.6797, -24.6406, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 486.8125, -24.7500, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 485.7422, -20.5938, 1002.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 486.0859, -20.5625, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2290, 487.8203, -26.3516, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 487.2031, -24.5859, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 487.1797, -25.1094, 1002.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 487.2266, -20.5391, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 488.4219, -25.1719, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 1754, 488.0313, -23.3906, 1002.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 488.2266, -20.5000, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2690, 489.1953, -20.7891, 1000.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 490.6328, -24.3906, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2372, 497.8438, -24.6563, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 1775, 495.9688, -24.3203, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 500.6250, -24.1563, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 500.7578, -23.7344, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 500.7969, -23.4922, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8359, -23.3359, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -23.6250, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -24.4766, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 501.0000, -23.7969, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 500.8047, -23.1484, 1000.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1541, 501.4375, -23.1563, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 501.1641, -23.7813, 1000.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -22.8203, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -22.0391, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1543, 500.8125, -21.8672, 1000.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1542, 501.4297, -22.1719, 1000.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 501.0469, -22.2813, 1000.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 501.1094, -22.8125, 1000.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -21.2500, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1541, 501.4375, -21.2266, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 501.1094, -21.2266, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8594, -21.6328, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -20.4453, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 502.8281, -22.1094, 1002.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.2656, -23.1328, 1000.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 503.2734, -22.7891, 1000.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.4688, -22.9453, 1000.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.3828, -23.0859, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 503.3906, -22.7422, 1001.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1545, 503.1484, -21.0938, 1001.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 503.3906, -20.9922, 1001.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.5859, -21.1484, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.3828, -21.3359, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.5859, -20.5703, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.3828, -20.7578, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 18090, 502.1016, -20.2266, 1002.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.2188, -19.4141, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 482.6094, -19.5156, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 477.2109, -16.1016, 1003.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 2173, 476.5313, -14.4453, 1002.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 477.3203, -13.9375, 1003.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 483.3359, -20.1094, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 483.6797, -20.1016, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 484.2266, -19.5547, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 484.1094, -19.9141, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 486.0938, -19.5938, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 487.3359, -20.1484, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 488.3281, -19.6094, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 487.6250, -19.9141, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 18089, 488.3828, -13.4063, 1000.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 493.3750, -18.1250, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.3516, -18.6641, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3906, -18.6563, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 494.1797, -17.6016, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3281, -16.5234, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.5391, -16.4219, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 18018, 493.3594, -14.8984, 999.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 495.9844, -17.4844, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9922, -16.0000, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9219, -18.1719, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 496.0156, -14.9688, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 495.6484, -14.5703, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.7891, -13.1797, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 496.1484, -13.8672, 1000.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.7656, -16.8359, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.4297, -16.7734, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 496.9375, -15.8828, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.0859, -17.9922, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.2813, -13.7422, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8359, -19.6875, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8594, -17.9844, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -18.8125, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -18.0078, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -19.6641, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 500.8828, -19.6875, 1000.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1541, 501.4375, -18.0625, 1000.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1542, 501.4297, -19.0078, 1000.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1547, 500.9766, -19.2344, 1000.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1548, 501.1250, -18.1172, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 500.8125, -17.2266, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 500.8906, -16.5625, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 501.5859, -16.5625, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 500.6953, -17.0469, 1000.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 501.0625, -16.4609, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 501.7422, -16.1484, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 501.1406, -16.2891, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 501.1406, -16.5469, 1000.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 2350, 499.8516, -16.1484, 1000.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 502.8281, -18.4375, 1002.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1545, 503.1484, -19.4297, 1001.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 502.5234, -16.1484, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 2707, 503.3281, -16.1484, 1002.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 503.3047, -16.8906, 1000.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 503.3906, -18.4531, 1001.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.3828, -18.7969, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.3906, -17.6172, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.3516, -17.8047, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1520, 503.4375, -17.1641, 1000.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 503.5859, -18.6094, 1002.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.5625, -17.6406, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 503.5625, -17.4453, 1001.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2780, 478.2188, -9.1250, 994.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2649, 477.8438, -7.7266, 1003.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.1953, -7.1719, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 478.6016, -7.6953, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1436, 479.5938, -8.9922, 1001.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 478.3359, -5.5859, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.2891, -5.4063, 1001.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 479.8203, -5.8125, 1001.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 480.7969, -5.1016, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 480.8594, -5.0156, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1436, 479.5938, -4.2969, 1002.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 482.5781, -3.2188, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.2266, -12.3906, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3672, -12.3984, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 493.3750, -11.9688, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 494.3281, -10.3672, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 493.2266, -10.2656, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9531, -9.3828, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 495.9531, -11.5078, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1823, 496.1016, -11.0859, 999.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.1172, -11.6172, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 2125, 497.0547, -9.4844, 1000.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1517, 496.8906, -10.4063, 1000.3438, 0.25);
	RemoveBuildingForPlayer(playerid, 2596, 499.9922, -8.9688, 1003.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 501.4141, -7.5547, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2779, 501.4688, -10.3672, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2778, 502.4063, -7.5313, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2681, 503.6484, -7.5156, 999.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 495.0391, -5.4063, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 495.0078, -5.4453, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1544, 495.2031, -5.3828, 1002.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 497.1563, -7.1094, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 496.3750, -5.6953, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.6797, -7.0156, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2653, 506.1406, -4.3672, 1004.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 2232, 494.0625, -2.5156, 1001.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 502.1641, -1.8906, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 499.8438, -1.6172, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 2670, 505.8125, -1.5625, 999.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1776, 500.5625, -1.3672, 1000.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1775, 501.8281, -1.4297, 1000.7344, 0.25);
	//GRUAS
	RemoveBuildingForPlayer(playerid, 16328, 709.2881, 915.8592, -14.8962, 10.0);
	RemoveBuildingForPlayer(playerid, 16329, 709.2881, 915.8592, -14.8962, 10.0);
	
	RemoveBuildingForPlayer(playerid, 1396, -1723.5781, 188.9219, 27.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 1397, -1728.9141, 188.9063, 22.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 10774, -1739.2109, 166.7109, 5.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 1376, -1728.9141, 188.9063, 22.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1386, -1728.9141, 188.9063, 35.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1377, -1754.3906, 188.9219, 29.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1378, -1723.5781, 188.9219, 27.0313, 0.25);
	
	//Pizzería ls decoración
	RemoveBuildingForPlayer(playerid, 1226, 2085.7500, -1809.7031, 16.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 2091.1641, -1826.8359, 12.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 2100.8125, -1764.3750, 21.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2105.0859, -1765.6094, 10.8047, 0.25);
	
	//mecanico taller
	RemoveBuildingForPlayer(playerid, 1215, 1195.3594, -1820.2734, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, 2632.3906, -2073.6406, 12.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, 2535.0938, -2131.8750, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3244, 2532.0313, -2074.6250, 12.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 2673.0859, -2114.9063, 36.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 2684.7656, -2088.0469, 20.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 2679.2344, -2106.9766, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2647.1016, -2073.3750, 12.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2658.7188, -2073.3750, 12.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2671.5000, -2073.3750, 12.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 3779, 2631.9141, -2098.5781, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3779, 2653.9375, -2092.3359, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2663.0547, -2121.6563, 30.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2665.7734, -2122.5078, 22.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2667.3594, -2120.7969, 19.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2669.3359, -2120.7969, 26.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2669.3359, -2120.7969, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2679.4375, -2121.6563, 21.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2675.8594, -2121.6563, 25.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2684.2031, -2122.5078, 22.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2685.0547, -2119.7891, 14.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 2685.1172, -2119.1016, 19.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3637, 2631.9141, -2098.5781, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3637, 2653.9375, -2092.3359, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 2673.0859, -2114.9063, 36.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 2679.2344, -2106.9766, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 2682.3203, -2114.5313, 39.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 2684.7656, -2088.0469, 20.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2647.1016, -2073.3750, 12.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2658.7188, -2073.3750, 12.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 2671.5000, -2073.3750, 12.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2367.6016, -1706.2891, 11.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2375.0625, -1715.7969, 11.2891, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 2379.1484, -1715.4219, 10.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 17876, 2393.0625, -1677.5234, 20.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1190.3047, -1389.8047, 15.5000, 0.25);
	
	//Spraycans
	/*RemoveBuildingForPlayer(playerid, 5422, 2071.4766, -1831.4219, 14.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 5340, 2644.8594, -2039.2344, 14.0391, 0.25);
	RemoveBuildingForPlayer(playerid, 5856, 1024.9844, -1029.3516, 33.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 5779, 1041.3516, -1025.9297, 32.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 6400, 488.2813, -1734.6953, 12.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 10575, -2716.3516, 217.4766, 5.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 11313, -1935.8594, 239.5313, 35.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 11319, -1904.5313, 277.8984, 42.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 10182, -1786.8125, 1209.4219, 25.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 9625, -2425.7266, 1027.9922, 52.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 9093, 2386.6563, 1043.6016, 11.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 7891, 1968.7422, 2162.4922, 12.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3294, -1420.5469, 2591.1563, 57.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 3294, -100.0000, 1111.4141, 21.6406, 0.25);
	RemoveBuildingForPlayer(playerid, 13028, 720.0156, -462.5234, 16.8594, 0.25);*/
	
	    //prsioón
    RemoveBuildingForPlayer(playerid, 3682, 247.9297, 1461.8594, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 192.2734, 1456.1250, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3682, 199.7578, 1397.8828, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 221.5703, 1374.9688, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 212.0781, 1426.0313, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 218.2578, 1467.5391, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1435.1953, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1410.5391, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1385.8906, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1361.2422, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3290, 190.9141, 1371.7734, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 183.7422, 1444.8672, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 222.5078, 1444.6953, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 221.1797, 1390.2969, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3288, 223.1797, 1421.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1459.6406, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3289, 207.5391, 1371.2422, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 220.6484, 1355.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 221.7031, 1404.5078, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 210.4141, 1444.8438, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3424, 262.5078, 1465.2031, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 220.6484, 1355.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1356.9922, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 190.9141, 1371.7734, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1392.1563, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 207.5391, 1371.2422, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1392.1563, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1390.5703, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1387.8516, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 199.7578, 1397.8828, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 221.5703, 1374.9688, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 221.1797, 1390.2969, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 203.9531, 1409.9141, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 199.3828, 1407.1172, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 204.6406, 1409.8516, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1404.2344, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1400.6563, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 221.7031, 1404.5078, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1409.0000, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3257, 223.1797, 1421.1875, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 212.0781, 1426.0313, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1426.9141, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1361.2422, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1385.8906, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1410.5391, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 183.7422, 1444.8672, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 210.4141, 1444.8438, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3258, 222.5078, 1444.6953, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 16086, 232.2891, 1434.4844, 13.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 192.2734, 1456.1250, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 183.0391, 1455.7500, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1459.6406, 17.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 198.0000, 1462.0156, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 180.2422, 1460.3203, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 180.3047, 1461.0078, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3256, 218.2578, 1467.5391, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 199.5859, 1463.7266, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 181.1563, 1463.7266, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 185.9219, 1462.8750, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 202.3047, 1462.8750, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 189.5000, 1462.8750, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1435.1953, 9.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1451.8281, 27.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 23.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1454.5469, 19.1484, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1456.1328, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 10.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3259, 262.5078, 1465.2031, 9.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1468.2109, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 3673, 247.9297, 1461.8594, 33.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1464.6328, 22.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 3674, 247.5547, 1471.0938, 35.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1472.9766, 19.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 252.8125, 1473.8281, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3675, 252.1250, 1473.8906, 16.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 16089, 342.1250, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16090, 315.7734, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16091, 289.7422, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16087, 358.6797, 1430.4531, 11.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 16088, 368.4297, 1431.0938, 5.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 16092, 394.1563, 1431.0938, 5.2734, 0.25);
	return 1;
}

stock PlayerNearPlayer(p1, p2, Float:distance)
{
	if(IsPlayerConnected(p1) && IsPlayerConnected(p2))
	{
		static Float:p[3];
		GetPlayerPos(p2, p[0], p[1], p[2]);
	 	if(IsPlayerInRangeOfPoint(p1, distance, p[0], p[1], p[2])) return 1;
	 	else return 0;
	}
	else return 0;
}

stock SendClientMessageEx(playerid, colour, const fmat[],  va_args<>)
{
	new str[256];
	va_format(str, sizeof (str), fmat, va_start<3>);
	return (playerid != -1) ? SendClientMessage(playerid, colour, str) : SendClientMessageToAll(colour, str);
}

stock GetPlayerIdFromName(playername[])
{
    foreach(new i : Player)
    {
        if(!strcmp(PlayerNameNormal(i), playername))
        {
            return i;
        }
    }
    return false;
}


funcion:SetPlayerPosAndFreeze(playerid, Float:x, Float:y, Float:z, freeze)
{
	if(freeze == 0)
	{
        SetPlayerPos(playerid, x, y, z);
        TogglePlayerControllable(playerid, false);
        MyTimers[playerid][14] = SetTimerEx("SetPlayerPosAndFreeze", 1500, false, "ifffd", playerid, x, y, z, 1);
    }
	else if(freeze == 1) TogglePlayerControllable(playerid, true);
	return 1;
}

stock GetSex(playerid)
{
	new n[24];
	if(PlayerInfo[playerid][sexo] == 0) n = "masculino";
	else n = "femenino";
	return n;
}

stock SetPlayerInteriorEx(playerid, i_interiorid, e_interior = 0)
{
	SetPlayerInterior(playerid, i_interiorid); //SaveValue(playerid, "INTERIORID", i_interiorid);
	PlayerInfo[playerid][Interior] = e_interior; //SaveValue(playerid, "INTERIOR", PlayerInfo[playerid][Interior]);
	return 1;
}

stock GetPlayerInteriorEx(playerid)
{
	return PlayerInfo[playerid][Interior];
}

funcion:BankContinue(playerid, t)
{
	switch(t)
	{
	    case 0:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[11]);
		    MyTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 1);
		}
		case 1:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[12]);
		    MyTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 2);
		}
		case 2:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[13]);
		    MyTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 3);
		}
		case 3:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[14]);
		    MyTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 4);
		}
		case 4:
		{
		    PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
		    TextDrawHideForPlayer(playerid, Bank[8]);
		    TextDrawHideForPlayer(playerid, Bank[9]);
		    TextDrawHideForPlayer(playerid, Bank[10]);
		    TextDrawHideForPlayer(playerid, Bank[11]);
		    TextDrawHideForPlayer(playerid, Bank[12]);
		    TextDrawHideForPlayer(playerid, Bank[13]);
		    TextDrawHideForPlayer(playerid, Bank[14]);
		    TextDrawShowForPlayer(playerid, Bank[15]);
		    TextDrawShowForPlayer(playerid, Bank[16]);
		    TextDrawShowForPlayer(playerid, Bank[17]);
		    TextDrawShowForPlayer(playerid, Bank[18]);
		    TextDrawShowForPlayer(playerid, Bank[19]);
		    new str[128];
		    format(str, 128, "Balance actual: $%d", PlayerInfo[playerid][dinerobank]);
		    PlayerTextDrawSetString(playerid, PlayerBank[playerid][0], str);
		    PlayerTextDrawSetString(playerid, PlayerBank[playerid][1], FirstName(playerid));
            PlayerTextDrawShow(playerid, PlayerBank[playerid][0]);
            PlayerTextDrawShow(playerid, PlayerBank[playerid][1]);
			SelectTextDraw(playerid, -1);
			KillTimer(MyTimers[playerid][17]);
		}
		case 5:
		{
			ChatLogDisabled[playerid] = false;
			loop(0, 11, l) TextDrawHideForPlayer(playerid, Bank[l]);
			P_bank_state[playerid] = -1;
			InfoMSG(playerid, 2500, "No tienes cuenta bancaria, ~n~~b~debes ir al banco ~w~para~n~crearte una.");
		}
	}
	return 1;
}

stock GetClosestATM(playerid)
{
    new hospitalid, Float:closest = GetPlayerDistanceFromPoint(playerid, Cajeros[0][0], Cajeros[0][1], Cajeros[0][2]);
    for(new i = 1; i < sizeof(Cajeros); i++)
    {
        if(GetPlayerDistanceFromPoint(playerid, Cajeros[i][0], Cajeros[i][1], Cajeros[i][2]) < closest)
        {
            closest = GetPlayerDistanceFromPoint(playerid, Cajeros[i][0], Cajeros[i][1], Cajeros[i][2]);
            hospitalid = i;
        }
    }
    return hospitalid;
}

funcion:ShowBankCash(playerid, time)
{
	if(time == -1)
	{
	    PlayerTextDrawHide(playerid, BankCash[playerid]);
	    return 1;
	}
	if(time == 0)
	{
	    new str[64];
		format(str, 64, "$%d", PlayerInfo[playerid][dinerobank]);
		PlayerTextDrawSetString(playerid, BankCash[playerid], str);
		PlayerTextDrawShow(playerid, BankCash[playerid]);
	    return 1;
	}
	new str[64];
	format(str, 64, "$%d", PlayerInfo[playerid][dinerobank]);
	PlayerTextDrawSetString(playerid, BankCash[playerid], str);
	PlayerTextDrawShow(playerid, BankCash[playerid]);
	MyTimers[playerid][18] = SetTimerEx("ShowBankCash", time, false, "id", playerid, -1);
	return 1;
}

stock IsValidName(name[])
{
	for(new c = 0; c < strlen(name); c++)
	{
	    switch(name[c])
	    {
	        case 'A' .. 'Z', 'a' .. 'z', '_': continue;
	        default: return false;
	    }
	}
	return true;
}

funcion:washcontinue(playerid, vehicleid, in)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	switch(in)
	{
		case 0:
		{
      		new Float:pos[3];
		    GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
		    if(-1778.0 < pos[1])
		    {
				MyTimers[playerid][20] = SetTimerEx("washcontinue", 500, 0, "idd", playerid, vehicleid, 1);
    			TogglePlayerControllable(playerid, false);
				SetVehicleZAngle(vehicleid, 0.0);
		        return 1;
		    }
		    SetVehicleVelocity(vehicleid, 0.0, 0.1, 0.0);
		    MyTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 0);
		}
		case 1:
		{
		    SetVehiclePos(vehicleid, 1911.147094, -1777.152465, 13.109889);
			PlayerPlaySound(playerid, 12600, 1911.147094, -1777.152465, 13.109889);
			SetPlayerCameraPos(playerid, 1909.0233, -1767.4805, 13.3087);
			SetPlayerCameraLookAt(playerid, 1909.3793, -1768.4137, 13.3187);
			SetDynamicObjectPos(CarWash[0], 1911, -1776, 10);
		    SetDynamicObjectPos(CarWash[1], 1914, -1776, 10);
		    SetDynamicObjectPos(CarWash[2], 1909.256713, -1773.727539, 12.382807);
		    SetDynamicObjectPos(CarWash[3], 1913.54663, -1779.261718, 12.382807);
			MoveDynamicObject(CarWash[2], 1909.256713, -1779.261718, 12.382807, 0.5);
			MoveDynamicObject(CarWash[3], 1913.54663, -1773.727539, 12.382807, 0.5);
		    MyTimers[playerid][20] = SetTimerEx("washcontinue", 15000, 0, "idd", playerid, vehicleid, 2);
		}
		case 2:
		{
		    SetDynamicObjectPos(CarWash[2], 0, 0, -100);
		    SetDynamicObjectPos(CarWash[3], 0, 0, -100);
		    SetObjectPos(CarWash[4], 1911.270751, -1778.91394, 14.152816);
		    MoveObject(CarWash[4], 1911.270751, -1773.727539, 14.152816, 0.5);
		    MyTimers[playerid][20] = SetTimerEx("washcontinue", 10000, 0, "idd", playerid, vehicleid, 3);
		}
		case 3:
		{
			InterpolateCameraPos(playerid, 1909.0233, -1767.4805, 13.3087, 1914.3645, -1763.0110, 15.5584, 5000);
			InterpolateCameraLookAt(playerid, 1909.3793, -1768.4137, 13.3187, 1913.9342, -1763.9115, 15.3034, 5000);
		    MyTimers[playerid][20] = SetTimerEx("washcontinue", 5000, 0, "idd", playerid, vehicleid, 4);
		}
		case 4:
		{
		    TogglePlayerControllable(playerid, true);
		    MyTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 5);
		    MyTimers[playerid][29] = SetTimerEx("washcontinue", 10000, 0, "idd", playerid, vehicleid, 6);
		}
		case 5:
		{
      		new Float:pos[3];
		    GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
		    if(-1769.7117 < pos[1])
		    {
		        KillTimer(MyTimers[playerid][29]);
		        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
		        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
		        SetObjectPos(CarWash[4], 0, 0, -100);
		        SetCameraBehindPlayer(playerid);
		        CarWashUsed = 0;
		        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
		        SetPlayerVirtualWorld(playerid, 0);
                foreach(new i : Player)
				{
					if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
					{
		                SetPlayerVirtualWorld(i, 0);
		                TogglePlayerControllable(i, true);
					}
				}
		        CarWashUsedBy[playerid] = 0;
				GameTextForPlayer(playerid, "~r~-25", 3000, 0);
				PlayerInfo[playerid][dinero] -= 25;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				PlayerPlaySound(playerid, 0, 1911.147094, -1777.152465, 13.109889);
		        return 1;
		    }
		    SetVehicleVelocity(vehicleid, 0.0, 0.1, 0.0);
		    MyTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 5);
		}
		case 6:
		{
		    KillTimer(MyTimers[playerid][20]);
	        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
	        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
	        SetObjectPos(CarWash[4], 0, 0, -100);
	        SetCameraBehindPlayer(playerid);
	        CarWashUsed = 0;
	        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
	        SetPlayerVirtualWorld(playerid, 0);
	        foreach(new i : Player)
			{
				if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
				{
	                SetPlayerVirtualWorld(i, 0);
	                TogglePlayerControllable(i, true);
				}
			}
	        CarWashUsedBy[playerid] = 0;
			GameTextForPlayer(playerid, "~r~-25", 3000, 0);
			PlayerInfo[playerid][dinero] -= 25;
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
			//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			PlayerPlaySound(playerid, 0, 1911.147094, -1777.152465, 13.109889);
		}
	}
	return 1;
}

stock SetPlayerToFacePlayer(playerid, targetid)
{

    new
        Float:pX,
        Float:pY,
        Float:pZ,
        Float:X,
        Float:Y,
        Float:Z,
        Float:ang;

    if(!IsPlayerConnected(playerid) || !IsPlayerConnected(targetid)) return 0;

    GetPlayerPos(targetid, X, Y, Z);
    GetPlayerPos(playerid, pX, pY, pZ);

    ang = 180.0-atan2(pX-X,pY-Y);

    SetPlayerFacingAngle(playerid, ang);

    return 1;

}

funcion:GrottiNextView(playerid, view)
{
	switch(view)
	{
	    case 0:
	    {
	        InterpolateCameraPos(playerid, 557.7495, -1304.7958, 1998.8300, 556.8339, -1305.6442, 1998.8300, 10000);
			InterpolateCameraLookAt(playerid, 558.4281, -1305.5282, 1998.5769, 557.5126, -1306.3766, 1998.5769, 10000);
			PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Solo acércate al mostrador para~n~__ver el catálogo, donde podrás~n~__elegir una variedad de~n~__vehículos deportivos...~n~~n~"));
			MyTimers[playerid][21] = SetTimerEx("GrottiNextView", 9000, 0, "id", playerid, 1);
	    }
	    case 1:
	    {
			PlayerTextDrawHide(playerid, TD_IO[playerid]);
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, 545.4426,-1318.3784,1996.5759);
			SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
            SetPlayerFacingAngle(playerid, 350);
            SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
	    	SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
            PlayerInfo[playerid][VGrotti] = 1; //SaveValue(playerid, "VGROTTI", PlayerInfo[playerid][VGrotti]);
            ChatLogDisabled[playerid] = false;
	    }
	}
	return 1;
}

funcion:BankNextView(playerid, view)
{
	switch(view)
	{
	    case 0:
	    {
	        InterpolateCameraPos(playerid, 1440.1262, -986.2506, 1643.3699, 1437.8888, -986.5042, 1643.0210, 10000);
			InterpolateCameraLookAt(playerid, 1439.6691, -987.1392, 1643.0908, 1437.4316, -987.3928, 1642.7419, 10000);
			PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Aquí podrás retirar, depositar~n~__y transferir dinero de tu~n~__cuenta bancaria...~n~~n~"));
			MyTimers[playerid][21] = SetTimerEx("BankNextView", 9000, 0, "id", playerid, 1);
	    }
	    case 1:
	    {
			PlayerTextDrawHide(playerid, TD_IO[playerid]);
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, 1414.798950, -988.716308, 1639.784301);
	        SetPlayerFacingAngle(playerid, 270.0);
    	    SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
	    	SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
	        SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
            PlayerInfo[playerid][VBank] = 1; //SaveValue(playerid, "VBANK", PlayerInfo[playerid][VBank]);
            ChatLogDisabled[playerid] = false;
	    }
	}
	return 1;
}

stock EnviarDuda(playerid, msg[])
{
	new str[145];
	format(str, 145, "[Canal de dudas: %s(%d)]: %s", PlayerName(playerid), playerid, msg);
	for(new i = 0; i != GetMaxPlayers(); i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerInfo[i][DudeChannel] == 1 && ChatLogDisabled[i] == 0)
	        {
				SendClientMessage(i, 0x3366CCFF, str);
			}
		}
	}
	return 1;
}

funcion:CargarAnim(playerid)
{
    PreloadAnimLib(playerid, "PED");
    PreloadAnimLib(playerid, "SHOP");
    PreloadAnimLib(playerid, "BAR");
    PreloadAnimLib(playerid, "BLOWJOBZ");
    PreloadAnimLib(playerid, "GANGS");
    PreloadAnimLib(playerid, "CLOTHES");
    PreloadAnimLib(playerid, "CRACK");
    PreloadAnimLib(playerid, "FOOD");
    PreloadAnimLib(playerid, "VENDING");
    PreloadAnimLib(playerid, "LAPDAN1");
	/*
    PreloadAnimLib(playerid,"AIRPORT");
    PreloadAnimLib(playerid,"ATTRACTORS");
    PreloadAnimLib(playerid,"BAR");
    PreloadAnimLib(playerid,"BASEBALL");
    PreloadAnimLib(playerid,"BD_FIRE");
    PreloadAnimLib(playerid,"BEACH");
    PreloadAnimLib(playerid,"BENCHPRESS");
    PreloadAnimLib(playerid,"BF_INJECTION");
    PreloadAnimLib(playerid,"BIKED");
    PreloadAnimLib(playerid,"BIKEH");
    PreloadAnimLib(playerid,"BIKELEAP");
    PreloadAnimLib(playerid,"BIKES");
    PreloadAnimLib(playerid,"BIKEV");
    PreloadAnimLib(playerid,"BIKE_DBZ");
    PreloadAnimLib(playerid,"BMX");
    PreloadAnimLib(playerid,"BOMBER");
    PreloadAnimLib(playerid,"BOX");
    PreloadAnimLib(playerid,"BSKTBALL");
    PreloadAnimLib(playerid,"BUDDY");
    PreloadAnimLib(playerid,"BUS");
    PreloadAnimLib(playerid,"CAMERA");
    PreloadAnimLib(playerid,"CAR");
    PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"CAR_CHAT");
    PreloadAnimLib(playerid,"CASINO");
    PreloadAnimLib(playerid,"CHAINSAW");
    PreloadAnimLib(playerid,"CHOPPA");
    PreloadAnimLib(playerid,"CLOTHES");
    PreloadAnimLib(playerid,"COACH");
    PreloadAnimLib(playerid,"COLT45");
    PreloadAnimLib(playerid,"COP_AMBIENT");
    PreloadAnimLib(playerid,"COP_DVBYZ");
    PreloadAnimLib(playerid,"CRACK");
    PreloadAnimLib(playerid,"CRIB");
    PreloadAnimLib(playerid,"DAM_JUMP");
    PreloadAnimLib(playerid,"DANCING");
    PreloadAnimLib(playerid,"DEALER");
    PreloadAnimLib(playerid,"DILDO");
    PreloadAnimLib(playerid,"DODGE");
    PreloadAnimLib(playerid,"DOZER");
    PreloadAnimLib(playerid,"DRIVEBYS");
    PreloadAnimLib(playerid,"FAT");
    PreloadAnimLib(playerid,"FIGHT_B");
    PreloadAnimLib(playerid,"FIGHT_C");
    PreloadAnimLib(playerid,"FIGHT_D");
    PreloadAnimLib(playerid,"FIGHT_E");
    PreloadAnimLib(playerid,"FINALE");
    PreloadAnimLib(playerid,"FINALE2");
    PreloadAnimLib(playerid,"FLAME");
    PreloadAnimLib(playerid,"FLOWERS");
    PreloadAnimLib(playerid,"FOOD");
    PreloadAnimLib(playerid,"FREEWEIGHTS");
    PreloadAnimLib(playerid,"GANGS");
    PreloadAnimLib(playerid,"GHANDS");
    PreloadAnimLib(playerid,"GHETTO_DB");
    PreloadAnimLib(playerid,"GOGGLES");
    PreloadAnimLib(playerid,"GRAFFITI");
    PreloadAnimLib(playerid,"GRAVEYARD");
    PreloadAnimLib(playerid,"GRENADE");
    PreloadAnimLib(playerid,"GYMNASIUM");
    PreloadAnimLib(playerid,"HAIRCUTS");
    PreloadAnimLib(playerid,"HEIST9");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"INT_OFFICE");
    PreloadAnimLib(playerid,"INT_SHOP");
    PreloadAnimLib(playerid,"JST_BUISNESS");
    PreloadAnimLib(playerid,"KART");
    PreloadAnimLib(playerid,"KISSING");
    PreloadAnimLib(playerid,"KNIFE");
    PreloadAnimLib(playerid,"LAPDAN1");
    PreloadAnimLib(playerid,"LAPDAN2");
    PreloadAnimLib(playerid,"LAPDAN3");
    PreloadAnimLib(playerid,"LOWRIDER");
    PreloadAnimLib(playerid,"MD_CHASE");
    PreloadAnimLib(playerid,"MD_END");
    PreloadAnimLib(playerid,"MEDIC");
    PreloadAnimLib(playerid,"MISC");
    PreloadAnimLib(playerid,"MTB");
    PreloadAnimLib(playerid,"MUSCULAR");
    PreloadAnimLib(playerid,"NEVADA");
    PreloadAnimLib(playerid,"ON_LOOKERS");
    PreloadAnimLib(playerid,"OTB");
    PreloadAnimLib(playerid,"PARACHUTE");
    PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"PAULNMAC");
    PreloadAnimLib(playerid,"PED");
    PreloadAnimLib(playerid,"PLAYER_DVBYS");
    PreloadAnimLib(playerid,"PLAYIDLES");
    PreloadAnimLib(playerid,"POLICE");
    PreloadAnimLib(playerid,"POOL");
    PreloadAnimLib(playerid,"POOR");
    PreloadAnimLib(playerid,"PYTHON");
    PreloadAnimLib(playerid,"QUAD");
    PreloadAnimLib(playerid,"QUAD_DBZ");
    PreloadAnimLib(playerid,"RAPPING");
    PreloadAnimLib(playerid,"RIFLE");
    PreloadAnimLib(playerid,"RIOT");
    PreloadAnimLib(playerid,"ROB_BANK");
    PreloadAnimLib(playerid,"ROCKET");
    PreloadAnimLib(playerid,"RUSTLER");
    PreloadAnimLib(playerid,"RYDER");
    PreloadAnimLib(playerid,"SCRATCHING");
    PreloadAnimLib(playerid,"SHAMAL");
    PreloadAnimLib(playerid,"SHOP");
    PreloadAnimLib(playerid,"SHOTGUN");
    PreloadAnimLib(playerid,"SILENCED");
    PreloadAnimLib(playerid,"SKATE");
    PreloadAnimLib(playerid,"SMOKING");
    PreloadAnimLib(playerid,"SNIPER");
    PreloadAnimLib(playerid,"SPRAYCAN");
    PreloadAnimLib(playerid,"STRIP");
    PreloadAnimLib(playerid,"SUNBATHE");
    PreloadAnimLib(playerid,"SWAT");
    PreloadAnimLib(playerid,"SWEET");
    PreloadAnimLib(playerid,"SWIM");
    PreloadAnimLib(playerid,"SWORD");
    PreloadAnimLib(playerid,"TANK");
    PreloadAnimLib(playerid,"TATTOOS");
    PreloadAnimLib(playerid,"TEC");
    PreloadAnimLib(playerid,"TRAIN");
    PreloadAnimLib(playerid,"TRUCK");
    PreloadAnimLib(playerid,"UZI");
    PreloadAnimLib(playerid,"VAN");
    PreloadAnimLib(playerid,"VENDING");
    PreloadAnimLib(playerid,"VORTEX");
    PreloadAnimLib(playerid,"WAYFARER");
    PreloadAnimLib(playerid,"WEAPONS");
    PreloadAnimLib(playerid,"WUZI");
    PreloadAnimLib(playerid,"WOP");
    PreloadAnimLib(playerid,"GFUNK");
    PreloadAnimLib(playerid,"RUNNINGMAN");*/
	return 1;
}
stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return 1;
}

stock AddCar(modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:vcangle, color1, color2)
{
	new veh;
    veh = CreateVehicle(modelid, spawn_x, spawn_y, spawn_z, vcangle, color1, color2, -1);
	return veh;
}

stock CreatePersonalCar(playerid, modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:vcangle, color1, color2, vslot, VW)
{
	new veh;
	veh = CreateVehicle(modelid, spawn_x, spawn_y, spawn_z, vcangle, color1, color2, -1);
	SetVehicleVirtualWorld(veh, VW);
	new str[20];
	new VEHKEYS = random(50000000);
	format(str, 20, "XRP%04d", VEHKEYS);
	SetVehicleNumberPlate(veh, str);
	SetVehicleToRespawn(veh);
    PlayerInfo[playerid][PlayerVehicle][vslot] = veh; // format(str, 20, "VEH%d", vslot); //SaveValue(playerid, str, PlayerInfo[playerid][PlayerVehicle][vslot]);
	PlayerInfo[playerid][PlayerVehicleKey][vslot] = VEHKEYS; // format(str, 20, "VKEY%d", vslot); //SaveValue(playerid, str, PlayerInfo[playerid][PlayerVehicleKey][vslot]);

	VehicleInfo[veh][slot] = vslot;
    format(VehicleInfo[veh][VD], 24, "%s", PlayerNameNormal(playerid));
    VehicleInfo[veh][VKEY] = VEHKEYS;
    VehicleInfo[veh][vposx] = spawn_x;
    VehicleInfo[veh][vposy] = spawn_y;
    VehicleInfo[veh][vposz] = spawn_z;
    VehicleInfo[veh][vangle] = vcangle;
	VehicleInfo[veh][vmodelid] = modelid;
	VehicleInfo[veh][vcolor1] = color1;
	VehicleInfo[veh][vcolor2] = color2;
	VehicleInfo[veh][vpaintjob] = 3;
	VehicleInfo[veh][VSTATUS] = 1; //Para recoger o sin recoger
	new vdpanels,vddoors,vdlights,vdtires;
	GetVehicleDamageStatus(veh,vdpanels,vddoors,vdlights,vdtires);
	VehicleInfo[veh][VehicleHealth] = 1000.0;
	VehicleInfo[veh][VPanels] = vdpanels;
	VehicleInfo[veh][VDoors] = vddoors;
	VehicleInfo[veh][VLights] = vdlights;
	VehicleInfo[veh][VTires] = vdtires;
    new Query[800], str2[600];
    format(str2, sizeof(str2), "INSERT INTO `VEHS` (`VKEY`,`VD`,`VPOSX`,`VPOSY`,`VPOSZ`,`VANGLE`,`VMODELID`,`VCOLOR1`,`VCOLOR2`,`VPAINTJOB`,`VM1`,`VM2`,`VM3`,`VM4`,`VM5`,`VM6`,`VM7`,`VM8`,`VM9`,`VM10`,`VM11`,`VM12`,`VM13`,`VM14`,`VM15`,`VM16`,`VM17`,`VSTATUS`,`VHEALTH`,`VPANELS`,`VDOORS`,`VLIGHTS`,`VTIRES`) ");
    strcat(Query, str2);
    format(str2, sizeof(str2), "VALUES('%d','%s','%f','%f','%f','%f','%d','%d','%d','3','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','0','1000.0','%d','%d','%d','%d')", VEHKEYS, PlayerNameNormal(playerid), spawn_x, spawn_y, spawn_z, vcangle, modelid, color1, color2, vdpanels,vddoors,vdlights,vdtires);
    strcat(Query, str2);
	db_query(Database, Query);
	return veh;
}

stock LoadPlayerCar(playerid)
{
    if(PlayerInfo[playerid][PlayerVehicle][0] == -1)
    {
		new Query[150],
			DBResult:Result;
		format(Query, sizeof(Query), "SELECT * FROM `VEHS` WHERE `VKEY` = '%d' AND `VD` = '%s'", PlayerInfo[playerid][PlayerVehicleKey][0], PlayerNameNormal(playerid));
		Result = db_query(Database, Query);
		if(db_num_rows(Result))
		{
		    new veh;
		    new V_VKEY, V_VD[24], Float:V_VPOSX, Float:V_VPOSY, Float:V_VPOSZ, Float:V_VANGLE,
		        V_MODEL, VCOL1, VCOL2, VPAINTJOB, VM1,VM2,VM3,VM4,VM5,VM6,VM7,VM8,VM9,VM10,VM11,VM12,VM13,VM14,VM15,VM16,VM17,VVSTATUS,Float:VVHEALTH,VVPANELS,VVDOORS,VVLIGHTS,VVTIRES;
		    new f[24];
			db_get_field(Result, 0, f, 24), V_VKEY = strval(f);
			db_get_field(Result, 1, f, 24), format(V_VD, 24, "%s", f);
			db_get_field(Result, 2, f, 24), V_VPOSX = floatstr(f);
			db_get_field(Result, 3, f, 24), V_VPOSY = floatstr(f);
			db_get_field(Result, 4, f, 24), V_VPOSZ = floatstr(f);
			db_get_field(Result, 5, f, 24), V_VANGLE = floatstr(f);
			db_get_field(Result, 6, f, 24), V_MODEL = strval(f);
			db_get_field(Result, 7, f, 24), VCOL1 = strval(f);
			db_get_field(Result, 8, f, 24), VCOL2 = strval(f);
			db_get_field(Result, 9, f, 24), VPAINTJOB = strval(f);
			db_get_field(Result, 10, f, 24), VM1 = strval(f);
			db_get_field(Result, 11, f, 24), VM2 = strval(f);
			db_get_field(Result, 12, f, 24), VM3 = strval(f);
			db_get_field(Result, 13, f, 24), VM4 = strval(f);
			db_get_field(Result, 14, f, 24), VM5 = strval(f);
			db_get_field(Result, 15, f, 24), VM6 = strval(f);
			db_get_field(Result, 16, f, 24), VM7 = strval(f);
			db_get_field(Result, 17, f, 24), VM8 = strval(f);
			db_get_field(Result, 18, f, 24), VM9 = strval(f);
			db_get_field(Result, 19, f, 24), VM10 = strval(f);
			db_get_field(Result, 20, f, 24), VM11 = strval(f);
			db_get_field(Result, 21, f, 24), VM12 = strval(f);
			db_get_field(Result, 22, f, 24), VM13 = strval(f);
			db_get_field(Result, 23, f, 24), VM14 = strval(f);
			db_get_field(Result, 24, f, 24), VM15 = strval(f);
			db_get_field(Result, 25, f, 24), VM16 = strval(f);
			db_get_field(Result, 26, f, 24), VM17 = strval(f);
            db_get_field(Result, 27, f, 24), VVSTATUS = strval(f);
            db_get_field(Result, 28, f, 24), VVHEALTH = floatstr(f);
            db_get_field(Result, 29, f, 24), VVPANELS = strval(f);
            db_get_field(Result, 30, f, 24), VVDOORS = strval(f);
            db_get_field(Result, 31, f, 24), VVLIGHTS = strval(f);
            db_get_field(Result, 32, f, 24), VVTIRES = strval(f);

	        db_free_result(Result);
			new str[20];
			format(str, 20, "XRP%04d", V_VKEY);

			veh = CreateVehicle(V_MODEL, V_VPOSX, V_VPOSY, V_VPOSZ, V_VANGLE, VCOL1, VCOL2, -1);
			SetVehicleNumberPlate(veh, str);
			SetVehicleToRespawn(veh);

			format(VehicleInfo[veh][VD], 24, "%s", V_VD);
			VehicleInfo[veh][VKEY] = V_VKEY;
		    VehicleInfo[veh][vposx] = V_VPOSX;
			VehicleInfo[veh][vposy] = V_VPOSY;
			VehicleInfo[veh][vposz] = V_VPOSZ;
			VehicleInfo[veh][vangle] = V_VANGLE;
			VehicleInfo[veh][vmodelid] = V_MODEL;
			VehicleInfo[veh][vcolor1] = VCOL1;
			VehicleInfo[veh][vcolor2] = VCOL2;
			VehicleInfo[veh][vpaintjob] = VPAINTJOB;
			VehicleInfo[veh][mod1] = VM1;
			VehicleInfo[veh][mod2] = VM2;
			VehicleInfo[veh][mod3] = VM3;
			VehicleInfo[veh][mod4] = VM4;
			VehicleInfo[veh][mod5] = VM5;
			VehicleInfo[veh][mod6] = VM6;
			VehicleInfo[veh][mod7] = VM7;
			VehicleInfo[veh][mod8] = VM8;
			VehicleInfo[veh][mod9] = VM9;
			VehicleInfo[veh][mod10] = VM10;
			VehicleInfo[veh][mod11] = VM11;
			VehicleInfo[veh][mod12] = VM12;
			VehicleInfo[veh][mod13] = VM13;
			VehicleInfo[veh][mod14] = VM14;
			VehicleInfo[veh][mod15] = VM15;
			VehicleInfo[veh][mod16] = VM16;
			VehicleInfo[veh][mod17] = VM17;
			VehicleInfo[veh][slot] = 0;
			VehicleInfo[veh][VSTATUS] = VVSTATUS;
			VehicleInfo[veh][VehicleHealth] = VVHEALTH;
			VehicleInfo[veh][VPanels] = VVPANELS;
			VehicleInfo[veh][VDoors] = VVDOORS;
			VehicleInfo[veh][VLights] = VVLIGHTS;
			VehicleInfo[veh][VTires] = VVTIRES;
			SetVehicleHealth(veh, VVHEALTH);
			ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    	ModVehicle(veh);
	    	UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
	    	
			PlayerInfo[playerid][PlayerVehicle][0] = veh; //SaveValue(playerid, "VEH0", PlayerInfo[playerid][PlayerVehicle][0]);
			PlayerInfo[playerid][PlayerVehicleKey][0] = V_VKEY; //SaveValue(playerid, "VKEY0", PlayerInfo[playerid][PlayerVehicleKey][0]);
	    	if(VehicleInfo[veh][VSTATUS] == 1)
			{
				SetVehicleVirtualWorld(veh, playerid);
				SendClientMessageEx(playerid, -1, "Tiene el vehículo {00CCFF}#%d {FFFFFF}pendiente de recogida, diríjase al punto rojo para recogerlo.", VehicleInfo[veh][slot]);
				SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
			}
			else if(VehicleInfo[veh][VSTATUS] == 3) { SetVehicleVirtualWorld(veh, playerid); }
			else if(VehicleInfo[veh][VSTATUS] == 10 || VehicleInfo[veh][VSTATUS] == 4)
			{
			    VehicleInfo[veh][VSTATUS] = 4;
			    new Counter = 0;
			    for(new i = 0; i < sizeof(GruasPosition); i++)
			    {
			        if(GruasPosition[i][GOcupado] == -1)
			        {
			    		DestroyVehicle(veh);
			    		veh = CreateVehicle(V_MODEL, GruasPosition[i][GPositionX], GruasPosition[i][GPositionY], GruasPosition[i][GPositionZ], GruasPosition[i][GAngle], VCOL1, VCOL2, -1);
						SetVehicleNumberPlate(veh, str);
						SetVehicleToRespawn(veh);
						ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    				ModVehicle(veh);
	    				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
	    				SetVehicleHealth(veh, VVHEALTH);
			    		GruasPosition[i][GOcupado] = veh;
			    		Counter = 1;
			    		break;
					}
				}
			    if(Counter == 0)
			    {
			        SetVehiclePos(veh, 2474.4165, -2099.6328, 13.2865);
	    			SetVehicleVirtualWorld(veh, playerid);
			    }
			    SetPlayerCheckpoint(playerid, 2467.223388, -2073.973632, 13.761137, 1.0);
				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d (%s) {FFFFFF}está en el depósito, ve allí para recogerlo ($150, punto rojo en el mapa).", VehicleInfo[veh][slot], GetVehicleName(veh));
			}
			else if(VehicleInfo[veh][VSTATUS] == 12)
            {
                new r = random(sizeof(VehicleGruaExt));
				format(str, 20, "XRP%04d", VehicleInfo[veh][VKEY]);
                DestroyVehicle(veh);
	    		veh = CreateVehicle(VehicleInfo[veh][vmodelid], VehicleGruaExt[r][0], VehicleGruaExt[r][1], VehicleGruaExt[r][2], VehicleGruaExt[r][3], VehicleInfo[veh][vcolor1], VehicleInfo[veh][vcolor2], -1);
				SetVehicleNumberPlate(veh, str);
				SetVehicleToRespawn(veh);
				ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
				ModVehicle(veh);
				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
				SetVehicleHealth(veh, VVHEALTH);
                VehicleInfo[veh][VSTATUS] = 6;
                SetVehicleParamsEx(veh, 0, 0, 0, 0, 0, 0, 0);
            }

		}
	}
	if(PlayerInfo[playerid][PlayerVehicle][1] == -1)
    {
		new Query[150],
			DBResult:Result;
		format(Query, sizeof(Query), "SELECT * FROM `VEHS` WHERE `VKEY` = '%d' AND `VD` = '%s'", PlayerInfo[playerid][PlayerVehicleKey][1], PlayerNameNormal(playerid));
		Result = db_query(Database, Query);
		if(db_num_rows(Result))
		{

		    new veh;
		    new V_VKEY, V_VD[24], Float:V_VPOSX, Float:V_VPOSY, Float:V_VPOSZ, Float:V_VANGLE,
		        V_MODEL, VCOL1, VCOL2, VPAINTJOB, VM1,VM2,VM3,VM4,VM5,VM6,VM7,VM8,VM9,VM10,VM11,VM12,VM13,VM14,VM15,VM16,VM17,VVSTATUS,Float:VVHEALTH,VVPANELS,VVDOORS,VVLIGHTS,VVTIRES;
		    new f[24];
			db_get_field(Result, 0, f, 24), V_VKEY = strval(f);
			db_get_field(Result, 1, f, 24), format(V_VD, 24, "%s", f);
			db_get_field(Result, 2, f, 24), V_VPOSX = floatstr(f);
			db_get_field(Result, 3, f, 24), V_VPOSY = floatstr(f);
			db_get_field(Result, 4, f, 24), V_VPOSZ = floatstr(f);
			db_get_field(Result, 5, f, 24), V_VANGLE = floatstr(f);
			db_get_field(Result, 6, f, 24), V_MODEL = strval(f);
			db_get_field(Result, 7, f, 24), VCOL1 = strval(f);
			db_get_field(Result, 8, f, 24), VCOL2 = strval(f);
			db_get_field(Result, 9, f, 24), VPAINTJOB = strval(f);
			db_get_field(Result, 10, f, 24), VM1 = strval(f);
			db_get_field(Result, 11, f, 24), VM2 = strval(f);
			db_get_field(Result, 12, f, 24), VM3 = strval(f);
			db_get_field(Result, 13, f, 24), VM4 = strval(f);
			db_get_field(Result, 14, f, 24), VM5 = strval(f);
			db_get_field(Result, 15, f, 24), VM6 = strval(f);
			db_get_field(Result, 16, f, 24), VM7 = strval(f);
			db_get_field(Result, 17, f, 24), VM8 = strval(f);
			db_get_field(Result, 18, f, 24), VM9 = strval(f);
			db_get_field(Result, 19, f, 24), VM10 = strval(f);
			db_get_field(Result, 20, f, 24), VM11 = strval(f);
			db_get_field(Result, 21, f, 24), VM12 = strval(f);
			db_get_field(Result, 22, f, 24), VM13 = strval(f);
			db_get_field(Result, 23, f, 24), VM14 = strval(f);
			db_get_field(Result, 24, f, 24), VM15 = strval(f);
			db_get_field(Result, 25, f, 24), VM16 = strval(f);
			db_get_field(Result, 26, f, 24), VM17 = strval(f);
            db_get_field(Result, 27, f, 24), VVSTATUS = strval(f);
            db_get_field(Result, 28, f, 24), VVHEALTH = floatstr(f);
            db_get_field(Result, 29, f, 24), VVPANELS = strval(f);
            db_get_field(Result, 30, f, 24), VVDOORS = strval(f);
            db_get_field(Result, 31, f, 24), VVLIGHTS = strval(f);
            db_get_field(Result, 32, f, 24), VVTIRES = strval(f);

	        db_free_result(Result);
			new str[20];
			format(str, 20, "XRP%04d", V_VKEY);

			veh = CreateVehicle(V_MODEL, V_VPOSX, V_VPOSY, V_VPOSZ, V_VANGLE, VCOL1, VCOL2, -1);
			SetVehicleNumberPlate(veh, str);
			SetVehicleToRespawn(veh);

			format(VehicleInfo[veh][VD], 24, "%s", V_VD);
			VehicleInfo[veh][VKEY] = V_VKEY;
		    VehicleInfo[veh][vposx] = V_VPOSX;
			VehicleInfo[veh][vposy] = V_VPOSY;
			VehicleInfo[veh][vposz] = V_VPOSZ;
			VehicleInfo[veh][vangle] = V_VANGLE;
			VehicleInfo[veh][vmodelid] = V_MODEL;
			VehicleInfo[veh][vcolor1] = VCOL1;
			VehicleInfo[veh][vcolor2] = VCOL2;
			VehicleInfo[veh][vpaintjob] = VPAINTJOB;
			VehicleInfo[veh][mod1] = VM1;
			VehicleInfo[veh][mod2] = VM2;
			VehicleInfo[veh][mod3] = VM3;
			VehicleInfo[veh][mod4] = VM4;
			VehicleInfo[veh][mod5] = VM5;
			VehicleInfo[veh][mod6] = VM6;
			VehicleInfo[veh][mod7] = VM7;
			VehicleInfo[veh][mod8] = VM8;
			VehicleInfo[veh][mod9] = VM9;
			VehicleInfo[veh][mod10] = VM10;
			VehicleInfo[veh][mod11] = VM11;
			VehicleInfo[veh][mod12] = VM12;
			VehicleInfo[veh][mod13] = VM13;
			VehicleInfo[veh][mod14] = VM14;
			VehicleInfo[veh][mod15] = VM15;
			VehicleInfo[veh][mod16] = VM16;
			VehicleInfo[veh][mod17] = VM17;
			VehicleInfo[veh][slot] = 1;
			VehicleInfo[veh][VSTATUS] = VVSTATUS;
			VehicleInfo[veh][VehicleHealth] = VVHEALTH;
			VehicleInfo[veh][VPanels] = VVPANELS;
			VehicleInfo[veh][VDoors] = VVDOORS;
			VehicleInfo[veh][VLights] = VVLIGHTS;
			VehicleInfo[veh][VTires] = VVTIRES;
			SetVehicleHealth(veh, VVHEALTH);
			ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    	ModVehicle(veh);
	    	UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
	    	
	    	PlayerInfo[playerid][PlayerVehicle][1] = veh; //SaveValue(playerid, "VEH1", PlayerInfo[playerid][PlayerVehicle][1]);
			PlayerInfo[playerid][PlayerVehicleKey][1] = V_VKEY; //SaveValue(playerid, "VKEY1", PlayerInfo[playerid][PlayerVehicleKey][1]);
	    	if(VehicleInfo[veh][VSTATUS] == 1)
			{
				SetVehicleVirtualWorld(veh, playerid);
				SendClientMessageEx(playerid, -1, "Tiene el vehículo {00CCFF}#%d {FFFFFF}pendiente de recogida, diríjase al punto rojo para recogerlo.", VehicleInfo[veh][slot]);
				SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
			}
			else if(VehicleInfo[veh][VSTATUS] == 3) { SetVehicleVirtualWorld(veh, playerid); }
			else if(VehicleInfo[veh][VSTATUS] == 10 || VehicleInfo[veh][VSTATUS] == 4)
			{
			    VehicleInfo[veh][VSTATUS] = 4;
			    new Counter = 0;
			    for(new i = 0; i < sizeof(GruasPosition); i++)
			    {
			        if(GruasPosition[i][GOcupado] == -1)
			        {
			    		DestroyVehicle(veh);
			    		veh = CreateVehicle(V_MODEL, GruasPosition[i][GPositionX], GruasPosition[i][GPositionY], GruasPosition[i][GPositionZ], GruasPosition[i][GAngle], VCOL1, VCOL2, -1);
						SetVehicleNumberPlate(veh, str);
						SetVehicleToRespawn(veh);
						ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    				ModVehicle(veh);
	    				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
	    				SetVehicleHealth(veh, VVHEALTH);
			    		GruasPosition[i][GOcupado] = veh;
			    		Counter = 1;
			    		break;
					}
				}
			    if(Counter == 0)
			    {
			        SetVehiclePos(veh, 2474.4165, -2099.6328, 13.2865);
	    			SetVehicleVirtualWorld(veh, playerid);
			    }
			    SetPlayerCheckpoint(playerid, 2467.223388, -2073.973632, 13.761137, 1.0);
				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d (%s) {FFFFFF}está en el depósito, ve allí para recogerlo ($150, punto rojo en el mapa).", VehicleInfo[veh][slot], GetVehicleName(veh));
			}
			else if(VehicleInfo[veh][VSTATUS] == 12)
            {
                new r = random(sizeof(VehicleGruaExt));
				format(str, 20, "XRP%04d", VehicleInfo[veh][VKEY]);
                DestroyVehicle(veh);
	    		veh = CreateVehicle(VehicleInfo[veh][vmodelid], VehicleGruaExt[r][0], VehicleGruaExt[r][1], VehicleGruaExt[r][2], VehicleGruaExt[r][3], VehicleInfo[veh][vcolor1], VehicleInfo[veh][vcolor2], -1);
				SetVehicleNumberPlate(veh, str);
				SetVehicleToRespawn(veh);
				ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
				ModVehicle(veh);
				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
				SetVehicleHealth(veh, VVHEALTH);
                VehicleInfo[veh][VSTATUS] = 6;
                SetVehicleParamsEx(veh, 0, 0, 0, 0, 0, 0, 0);
            }
			
		}
	}
	if(PlayerInfo[playerid][PlayerVehicle][2] == -1)
    {
		new Query[150],
			DBResult:Result;
		format(Query, sizeof(Query), "SELECT * FROM `VEHS` WHERE `VKEY` = '%d' AND `VD` = '%s'", PlayerInfo[playerid][PlayerVehicleKey][2], PlayerNameNormal(playerid));
		Result = db_query(Database, Query);
		if(db_num_rows(Result))
		{

		    new veh;
		    new V_VKEY, V_VD[24], Float:V_VPOSX, Float:V_VPOSY, Float:V_VPOSZ, Float:V_VANGLE,
		        V_MODEL, VCOL1, VCOL2, VPAINTJOB, VM1,VM2,VM3,VM4,VM5,VM6,VM7,VM8,VM9,VM10,VM11,VM12,VM13,VM14,VM15,VM16,VM17,VVSTATUS,Float:VVHEALTH,VVPANELS,VVDOORS,VVLIGHTS,VVTIRES;
		    new f[24];
			db_get_field(Result, 0, f, 24), V_VKEY = strval(f);
			db_get_field(Result, 1, f, 24), format(V_VD, 24, "%s", f);
			db_get_field(Result, 2, f, 24), V_VPOSX = floatstr(f);
			db_get_field(Result, 3, f, 24), V_VPOSY = floatstr(f);
			db_get_field(Result, 4, f, 24), V_VPOSZ = floatstr(f);
			db_get_field(Result, 5, f, 24), V_VANGLE = floatstr(f);
			db_get_field(Result, 6, f, 24), V_MODEL = strval(f);
			db_get_field(Result, 7, f, 24), VCOL1 = strval(f);
			db_get_field(Result, 8, f, 24), VCOL2 = strval(f);
			db_get_field(Result, 9, f, 24), VPAINTJOB = strval(f);
			db_get_field(Result, 10, f, 24), VM1 = strval(f);
			db_get_field(Result, 11, f, 24), VM2 = strval(f);
			db_get_field(Result, 12, f, 24), VM3 = strval(f);
			db_get_field(Result, 13, f, 24), VM4 = strval(f);
			db_get_field(Result, 14, f, 24), VM5 = strval(f);
			db_get_field(Result, 15, f, 24), VM6 = strval(f);
			db_get_field(Result, 16, f, 24), VM7 = strval(f);
			db_get_field(Result, 17, f, 24), VM8 = strval(f);
			db_get_field(Result, 18, f, 24), VM9 = strval(f);
			db_get_field(Result, 19, f, 24), VM10 = strval(f);
			db_get_field(Result, 20, f, 24), VM11 = strval(f);
			db_get_field(Result, 21, f, 24), VM12 = strval(f);
			db_get_field(Result, 22, f, 24), VM13 = strval(f);
			db_get_field(Result, 23, f, 24), VM14 = strval(f);
			db_get_field(Result, 24, f, 24), VM15 = strval(f);
			db_get_field(Result, 25, f, 24), VM16 = strval(f);
			db_get_field(Result, 26, f, 24), VM17 = strval(f);
            db_get_field(Result, 27, f, 24), VVSTATUS = strval(f);
            db_get_field(Result, 28, f, 24), VVHEALTH = floatstr(f);
            db_get_field(Result, 29, f, 24), VVPANELS = strval(f);
            db_get_field(Result, 30, f, 24), VVDOORS = strval(f);
            db_get_field(Result, 31, f, 24), VVLIGHTS = strval(f);
            db_get_field(Result, 32, f, 24), VVTIRES = strval(f);

	        db_free_result(Result);
			new str[20];
			format(str, 20, "XRP%04d", V_VKEY);

			veh = CreateVehicle(V_MODEL, V_VPOSX, V_VPOSY, V_VPOSZ, V_VANGLE, VCOL1, VCOL2, -1);
			SetVehicleNumberPlate(veh, str);
			SetVehicleToRespawn(veh);

			format(VehicleInfo[veh][VD], 24, "%s", V_VD);
			VehicleInfo[veh][VKEY] = V_VKEY;
		    VehicleInfo[veh][vposx] = V_VPOSX;
			VehicleInfo[veh][vposy] = V_VPOSY;
			VehicleInfo[veh][vposz] = V_VPOSZ;
			VehicleInfo[veh][vangle] = V_VANGLE;
			VehicleInfo[veh][vmodelid] = V_MODEL;
			VehicleInfo[veh][vcolor1] = VCOL1;
			VehicleInfo[veh][vcolor2] = VCOL2;
			VehicleInfo[veh][vpaintjob] = VPAINTJOB;
			VehicleInfo[veh][mod1] = VM1;
			VehicleInfo[veh][mod2] = VM2;
			VehicleInfo[veh][mod3] = VM3;
			VehicleInfo[veh][mod4] = VM4;
			VehicleInfo[veh][mod5] = VM5;
			VehicleInfo[veh][mod6] = VM6;
			VehicleInfo[veh][mod7] = VM7;
			VehicleInfo[veh][mod8] = VM8;
			VehicleInfo[veh][mod9] = VM9;
			VehicleInfo[veh][mod10] = VM10;
			VehicleInfo[veh][mod11] = VM11;
			VehicleInfo[veh][mod12] = VM12;
			VehicleInfo[veh][mod13] = VM13;
			VehicleInfo[veh][mod14] = VM14;
			VehicleInfo[veh][mod15] = VM15;
			VehicleInfo[veh][mod16] = VM16;
			VehicleInfo[veh][mod17] = VM17;
			VehicleInfo[veh][slot] = 2;
			VehicleInfo[veh][VSTATUS] = VVSTATUS;
			VehicleInfo[veh][VehicleHealth] = VVHEALTH;
			VehicleInfo[veh][VPanels] = VVPANELS;
			VehicleInfo[veh][VDoors] = VVDOORS;
			VehicleInfo[veh][VLights] = VVLIGHTS;
			VehicleInfo[veh][VTires] = VVTIRES;
			SetVehicleHealth(veh, VVHEALTH);
			ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    	ModVehicle(veh);
	    	UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);

			PlayerInfo[playerid][PlayerVehicle][2] = veh; //SaveValue(playerid, "VEH2", PlayerInfo[playerid][PlayerVehicle][2]);
			PlayerInfo[playerid][PlayerVehicleKey][2] = V_VKEY; //SaveValue(playerid, "VKEY2", PlayerInfo[playerid][PlayerVehicleKey][2]);
	    	if(VehicleInfo[veh][VSTATUS] == 1)
			{
				SetVehicleVirtualWorld(veh, playerid);
				SendClientMessageEx(playerid, -1, "Tiene el vehículo {00CCFF}#%d {FFFFFF}pendiente de recogida, diríjase al punto rojo para recogerlo.", VehicleInfo[veh][slot]);
				SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
			}
			else if(VehicleInfo[veh][VSTATUS] == 3) { SetVehicleVirtualWorld(veh, playerid); }
			else if(VehicleInfo[veh][VSTATUS] == 10 || VehicleInfo[veh][VSTATUS] == 4)
			{
			    VehicleInfo[veh][VSTATUS] = 4;
			    new Counter = 0;
			    for(new i = 0; i < sizeof(GruasPosition); i++)
			    {
			        if(GruasPosition[i][GOcupado] == -1)
			        {
			    		DestroyVehicle(veh);
			    		veh = CreateVehicle(V_MODEL, GruasPosition[i][GPositionX], GruasPosition[i][GPositionY], GruasPosition[i][GPositionZ], GruasPosition[i][GAngle], VCOL1, VCOL2, -1);
						SetVehicleNumberPlate(veh, str);
						SetVehicleToRespawn(veh);
						ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    				ModVehicle(veh);
	    				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
	    				SetVehicleHealth(veh, VVHEALTH);
			    		GruasPosition[i][GOcupado] = veh;
			    		Counter = 1;
			    		break;
					}
				}
			    if(Counter == 0)
			    {
			        SetVehiclePos(veh, 2474.4165, -2099.6328, 13.2865);
	    			SetVehicleVirtualWorld(veh, playerid);
			    }
			    SetPlayerCheckpoint(playerid, 2467.223388, -2073.973632, 13.761137, 1.0);
				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d (%s) {FFFFFF}está en el depósito, ve allí para recogerlo ($150, punto rojo en el mapa).", VehicleInfo[veh][slot], GetVehicleName(veh));
			}
			else if(VehicleInfo[veh][VSTATUS] == 12)
            {
                new r = random(sizeof(VehicleGruaExt));
				format(str, 20, "XRP%04d", VehicleInfo[veh][VKEY]);
                DestroyVehicle(veh);
	    		veh = CreateVehicle(VehicleInfo[veh][vmodelid], VehicleGruaExt[r][0], VehicleGruaExt[r][1], VehicleGruaExt[r][2], VehicleGruaExt[r][3], VehicleInfo[veh][vcolor1], VehicleInfo[veh][vcolor2], -1);
				SetVehicleNumberPlate(veh, str);
				SetVehicleToRespawn(veh);
				ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
				ModVehicle(veh);
				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
				SetVehicleHealth(veh, VVHEALTH);
                VehicleInfo[veh][VSTATUS] = 6;
                SetVehicleParamsEx(veh, 0, 0, 0, 0, 0, 0, 0);
            }
		}
	}
	if(PlayerInfo[playerid][PlayerVehicle][3] == -1)
    {
		new Query[150],
			DBResult:Result;
		format(Query, sizeof(Query), "SELECT * FROM `VEHS` WHERE `VKEY` = '%d' AND `VD` = '%s'", PlayerInfo[playerid][PlayerVehicleKey][3], PlayerNameNormal(playerid));
		Result = db_query(Database, Query);
		if(db_num_rows(Result))
		{

		    new veh;
		    new V_VKEY, V_VD[24], Float:V_VPOSX, Float:V_VPOSY, Float:V_VPOSZ, Float:V_VANGLE,
		        V_MODEL, VCOL1, VCOL2, VPAINTJOB, VM1,VM2,VM3,VM4,VM5,VM6,VM7,VM8,VM9,VM10,VM11,VM12,VM13,VM14,VM15,VM16,VM17,VVSTATUS,Float:VVHEALTH,VVPANELS,VVDOORS,VVLIGHTS,VVTIRES;
		    new f[24];
			db_get_field(Result, 0, f, 24), V_VKEY = strval(f);
			db_get_field(Result, 1, f, 24), format(V_VD, 24, "%s", f);
			db_get_field(Result, 2, f, 24), V_VPOSX = floatstr(f);
			db_get_field(Result, 3, f, 24), V_VPOSY = floatstr(f);
			db_get_field(Result, 4, f, 24), V_VPOSZ = floatstr(f);
			db_get_field(Result, 5, f, 24), V_VANGLE = floatstr(f);
			db_get_field(Result, 6, f, 24), V_MODEL = strval(f);
			db_get_field(Result, 7, f, 24), VCOL1 = strval(f);
			db_get_field(Result, 8, f, 24), VCOL2 = strval(f);
			db_get_field(Result, 9, f, 24), VPAINTJOB = strval(f);
			db_get_field(Result, 10, f, 24), VM1 = strval(f);
			db_get_field(Result, 11, f, 24), VM2 = strval(f);
			db_get_field(Result, 12, f, 24), VM3 = strval(f);
			db_get_field(Result, 13, f, 24), VM4 = strval(f);
			db_get_field(Result, 14, f, 24), VM5 = strval(f);
			db_get_field(Result, 15, f, 24), VM6 = strval(f);
			db_get_field(Result, 16, f, 24), VM7 = strval(f);
			db_get_field(Result, 17, f, 24), VM8 = strval(f);
			db_get_field(Result, 18, f, 24), VM9 = strval(f);
			db_get_field(Result, 19, f, 24), VM10 = strval(f);
			db_get_field(Result, 20, f, 24), VM11 = strval(f);
			db_get_field(Result, 21, f, 24), VM12 = strval(f);
			db_get_field(Result, 22, f, 24), VM13 = strval(f);
			db_get_field(Result, 23, f, 24), VM14 = strval(f);
			db_get_field(Result, 24, f, 24), VM15 = strval(f);
			db_get_field(Result, 25, f, 24), VM16 = strval(f);
			db_get_field(Result, 26, f, 24), VM17 = strval(f);
            db_get_field(Result, 27, f, 24), VVSTATUS = strval(f);
            db_get_field(Result, 28, f, 24), VVHEALTH = floatstr(f);
            db_get_field(Result, 29, f, 24), VVPANELS = strval(f);
            db_get_field(Result, 30, f, 24), VVDOORS = strval(f);
            db_get_field(Result, 31, f, 24), VVLIGHTS = strval(f);
            db_get_field(Result, 32, f, 24), VVTIRES = strval(f);

	        db_free_result(Result);
			new str[20];
			format(str, 20, "XRP%04d", V_VKEY);

			veh = CreateVehicle(V_MODEL, V_VPOSX, V_VPOSY, V_VPOSZ, V_VANGLE, VCOL1, VCOL2, -1);
			SetVehicleNumberPlate(veh, str);
			SetVehicleToRespawn(veh);

			format(VehicleInfo[veh][VD], 24, "%s", V_VD);
			VehicleInfo[veh][VKEY] = V_VKEY;
		    VehicleInfo[veh][vposx] = V_VPOSX;
			VehicleInfo[veh][vposy] = V_VPOSY;
			VehicleInfo[veh][vposz] = V_VPOSZ;
			VehicleInfo[veh][vangle] = V_VANGLE;
			VehicleInfo[veh][vmodelid] = V_MODEL;
			VehicleInfo[veh][vcolor1] = VCOL1;
			VehicleInfo[veh][vcolor2] = VCOL2;
			VehicleInfo[veh][vpaintjob] = VPAINTJOB;
			VehicleInfo[veh][mod1] = VM1;
			VehicleInfo[veh][mod2] = VM2;
			VehicleInfo[veh][mod3] = VM3;
			VehicleInfo[veh][mod4] = VM4;
			VehicleInfo[veh][mod5] = VM5;
			VehicleInfo[veh][mod6] = VM6;
			VehicleInfo[veh][mod7] = VM7;
			VehicleInfo[veh][mod8] = VM8;
			VehicleInfo[veh][mod9] = VM9;
			VehicleInfo[veh][mod10] = VM10;
			VehicleInfo[veh][mod11] = VM11;
			VehicleInfo[veh][mod12] = VM12;
			VehicleInfo[veh][mod13] = VM13;
			VehicleInfo[veh][mod14] = VM14;
			VehicleInfo[veh][mod15] = VM15;
			VehicleInfo[veh][mod16] = VM16;
			VehicleInfo[veh][mod17] = VM17;
			VehicleInfo[veh][slot] = 3;
			VehicleInfo[veh][VSTATUS] = VVSTATUS;
			VehicleInfo[veh][VehicleHealth] = VVHEALTH;
			VehicleInfo[veh][VPanels] = VVPANELS;
			VehicleInfo[veh][VDoors] = VVDOORS;
			VehicleInfo[veh][VLights] = VVLIGHTS;
			VehicleInfo[veh][VTires] = VVTIRES;
			SetVehicleHealth(veh, VVHEALTH);
			ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    	ModVehicle(veh);
	    	UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);

			PlayerInfo[playerid][PlayerVehicle][3] = veh; //SaveValue(playerid, "VEH3", PlayerInfo[playerid][PlayerVehicle][3]);
			PlayerInfo[playerid][PlayerVehicleKey][3] = V_VKEY; //SaveValue(playerid, "VKEY3", PlayerInfo[playerid][PlayerVehicleKey][3]);
	    	if(VehicleInfo[veh][VSTATUS] == 1)
			{
				SetVehicleVirtualWorld(veh, playerid);
                SendClientMessageEx(playerid, -1, "Tiene el vehículo {00CCFF}#%d {FFFFFF}pendiente de recogida, diríjase al punto rojo para recogerlo.", VehicleInfo[veh][slot]);
				SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
			}
			else if(VehicleInfo[veh][VSTATUS] == 3) { SetVehicleVirtualWorld(veh, playerid); }
			else if(VehicleInfo[veh][VSTATUS] == 10 || VehicleInfo[veh][VSTATUS] == 4)
			{
			    VehicleInfo[veh][VSTATUS] = 4;
			    new Counter = 0;
			    for(new i = 0; i < sizeof(GruasPosition); i++)
			    {
			        if(GruasPosition[i][GOcupado] == -1)
			        {
			    		DestroyVehicle(veh);
			    		veh = CreateVehicle(V_MODEL, GruasPosition[i][GPositionX], GruasPosition[i][GPositionY], GruasPosition[i][GPositionZ], GruasPosition[i][GAngle], VCOL1, VCOL2, -1);
						SetVehicleNumberPlate(veh, str);
						SetVehicleToRespawn(veh);
						ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
	    				ModVehicle(veh);
	    				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
	    				SetVehicleHealth(veh, VVHEALTH);
			    		GruasPosition[i][GOcupado] = veh;
			    		Counter = 1;
			    		break;
					}
				}
			    if(Counter == 0)
			    {
			        SetVehiclePos(veh, 2474.4165, -2099.6328, 13.2865);
	    			SetVehicleVirtualWorld(veh, playerid);
			    }
			    SetPlayerCheckpoint(playerid, 2467.223388, -2073.973632, 13.761137, 1.0);
				SendClientMessageEx(playerid, -1, "Tu vehículo {00CCFF}#%d (%s) {FFFFFF}está en el depósito, ve allí para recogerlo ($150, punto rojo en el mapa).", VehicleInfo[veh][slot], GetVehicleName(veh));
			}
			else if(VehicleInfo[veh][VSTATUS] == 12)
            {
                new r = random(sizeof(VehicleGruaExt));
				format(str, 20, "XRP%04d", VehicleInfo[veh][VKEY]);
                DestroyVehicle(veh);
	    		veh = CreateVehicle(VehicleInfo[veh][vmodelid], VehicleGruaExt[r][0], VehicleGruaExt[r][1], VehicleGruaExt[r][2], VehicleGruaExt[r][3], VehicleInfo[veh][vcolor1], VehicleInfo[veh][vcolor2], -1);
				SetVehicleNumberPlate(veh, str);
				SetVehicleToRespawn(veh);
				ChangeVehiclePaintjob(veh, VehicleInfo[veh][vpaintjob]);
				ModVehicle(veh);
				UpdateVehicleDamageStatus(veh, VVPANELS,VVDOORS,VVLIGHTS,VVTIRES);
				SetVehicleHealth(veh, VVHEALTH);
                VehicleInfo[veh][VSTATUS] = 6;
                SetVehicleParamsEx(veh, 0, 0, 0, 0, 0, 0, 0);
            }
			
		}
	}
	return 1;
}

stock SavePlayerCar(playerid)
{
	for(new i = 0; i != 4; i++)
	{
		if(PlayerInfo[playerid][PlayerVehicleKey][i] != -1)
		{
		    new Query[800], Float:p[5], str[600];
		    new veh = PlayerInfo[playerid][PlayerVehicle][i];
		    new vdpanels,vddoors,vdlights,vdtires;
			GetVehicleDamageStatus(veh,vdpanels,vddoors,vdlights,vdtires);
			GetVehiclePos(veh, p[0], p[1], p[2]);
			GetVehicleZAngle(veh, p[3]);
			GetVehicleHealth(veh, p[4]);
		    format(Query, sizeof(Query), "UPDATE `VEHS` SET ");
		    format(str, 600, "`VPOSX` = '%f', `VPOSY` = '%f', `VPOSZ` = '%f', `VANGLE` = '%f', `VCOLOR1` = '%d', `VCOLOR2` = '%d', `VPAINTJOB` = '%d', `VM1` = '%d', `VM2` = '%d', `VM3` = '%d', `VM4` = '%d', `VM5` = '%d', `VM6` = '%d', `VM7` = '%d', `VM8` = '%d', `VM9` = '%d', ", p[0], p[1], p[2], p[3],
			VehicleInfo[veh][vcolor1],
			VehicleInfo[veh][vcolor2],
			VehicleInfo[veh][vpaintjob],
			VehicleInfo[veh][mod1],
			VehicleInfo[veh][mod2],
			VehicleInfo[veh][mod3],
			VehicleInfo[veh][mod4],
			VehicleInfo[veh][mod5],
			VehicleInfo[veh][mod6],
			VehicleInfo[veh][mod7],
			VehicleInfo[veh][mod8],
			VehicleInfo[veh][mod9]);
			strcat(Query, str);
			format(str, 600, "`VM10` = '%d', `VM11` = '%d', `VM12` = '%d', `VM13` = '%d', `VM14` = '%d', `VM15` = '%d', `VM16` = '%d', `VM17` = '%d', `VSTATUS` = '%d', `VHEALTH` = '%f', `VPANELS` = '%d', `VDOORS` = '%d', ", VehicleInfo[veh][mod10], VehicleInfo[veh][mod11], VehicleInfo[veh][mod12], VehicleInfo[veh][mod13], VehicleInfo[veh][mod14], VehicleInfo[veh][mod15], VehicleInfo[veh][mod16], VehicleInfo[veh][mod17], VehicleInfo[veh][VSTATUS], p[4], vdpanels, vddoors);
			strcat(Query, str);
			format(str, 600, "`VLIGHTS` = '%d', `VTIRES` = '%d' WHERE `VKEY` = '%d' AND `VD` = '%s'", vdlights, vdtires, PlayerInfo[playerid][PlayerVehicleKey][i], PlayerNameNormal(playerid));
			strcat(Query, str);
			db_query(Database, Query);
		}
	}
}

funcion:DestroyPlayerVehicle(vehicleid)
{
	new ocupado = 0;
	foreach(new i : Player)
	{
    	if(IsPlayerInVehicle(i, vehicleid)) ocupado = 1;
	}
	if(ocupado == 0)
	{
	    format(VehicleInfo[vehicleid][VD], 24, "");
	    VehicleInfo[vehicleid][VKEY] = -1;
	    VehicleInfo[vehicleid][vposx] = 0.0;
	    VehicleInfo[vehicleid][vposy] = 0.0;
	    VehicleInfo[vehicleid][vposz] = 0.0;
	    VehicleInfo[vehicleid][vangle] = 0.0;
	    VehicleInfo[vehicleid][vmodelid] = 0;
	    VehicleInfo[vehicleid][vcolor1] = 0;
	    VehicleInfo[vehicleid][vcolor2] = 0;
	    VehicleInfo[vehicleid][vpaintjob] = 0;
	    VehicleInfo[vehicleid][mod1] = 0;
	    VehicleInfo[vehicleid][mod2] = 0;
	    VehicleInfo[vehicleid][mod3] = 0;
	    VehicleInfo[vehicleid][mod4] = 0;
	    VehicleInfo[vehicleid][mod5] = 0;
	    VehicleInfo[vehicleid][mod6] = 0;
	    VehicleInfo[vehicleid][mod7] = 0;
	    VehicleInfo[vehicleid][mod8] = 0;
	    VehicleInfo[vehicleid][mod9] = 0;
	    VehicleInfo[vehicleid][mod10] = 0;
	    VehicleInfo[vehicleid][mod11] = 0;
	    VehicleInfo[vehicleid][mod12] = 0;
	    VehicleInfo[vehicleid][mod13] = 0;
	    VehicleInfo[vehicleid][mod14] = 0;
	    VehicleInfo[vehicleid][mod15] = 0;
	    VehicleInfo[vehicleid][mod16] = 0;
	    VehicleInfo[vehicleid][mod17] = 0;
	    VehicleInfo[vehicleid][slot] = -1;
	    VehicleInfo[vehicleid][VSTATUS] = -1;
	    VehicleInfo[vehicleid][VehicleHealth] = 0.0;
	    VehicleInfo[vehicleid][VPanels] = 0;
	    VehicleInfo[vehicleid][VDoors] = 0;
	    VehicleInfo[vehicleid][VLights] = 0;
	    VehicleInfo[vehicleid][VTires] = 0;
	    
  		DestroyVehicle(vehicleid);
	}
	else DestroyVehiclesTimer[vehicleid] = SetTimerEx("DestroyPlayerVehicle", 300000, false, "d", vehicleid);
}

funcion:SaveComponent(playerid, vehicleid,componentid)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
    	    
		for(new s=0; s<20; s++) {
			if(componentid == spoiler[s][0]) {
				VehicleInfo[vehicleid][mod1] = componentid;
    		}
		}
		for(new s=0; s<3; s++) {
			if(componentid == nitro[s][0]) {
				VehicleInfo[vehicleid][mod2] = componentid;
    		}
		}
		for(new s=0; s<23; s++) {
			if(componentid == fbumper[s][0]) {
				VehicleInfo[vehicleid][mod3] = componentid;
    		}
		}
		for(new s=0; s<22; s++) {
			if(componentid == rbumper[s][0]) {
				VehicleInfo[vehicleid][mod4] = componentid;
    		}
		}
		for(new s=0; s<28; s++) {
			if(componentid == exhaust[s][0]) {
				VehicleInfo[vehicleid][mod5] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == bventr[s][0]) {
				VehicleInfo[vehicleid][mod6] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == bventl[s][0]) {
				VehicleInfo[vehicleid][mod7] = componentid;
    		}
		}
		for(new s=0; s<4; s++) {
			if(componentid == bscoop[s][0]) {
				VehicleInfo[vehicleid][mod8] = componentid;
    		}
		}
		for(new s=0; s<17; s++) {
			if(componentid == rscoop[s][0]) {
				VehicleInfo[vehicleid][mod9] = componentid;
    		}
		}
		for(new s=0; s<21; s++) {
			if(componentid == lskirt[s][0]) {
				VehicleInfo[vehicleid][mod10] = componentid;
    		}
		}
		for(new s=0; s<21; s++) {
			if(componentid == rskirt[s][0]) {
				VehicleInfo[vehicleid][mod11] = componentid;
    		}
		}
		for(new s=0; s<1; s++) {
			if(componentid == hydraulics[s][0]) {
				VehicleInfo[vehicleid][mod12] = componentid;
    		}
		}
		for(new s=0; s<1; s++) {
			if(componentid == vbase[s][0]) {
				VehicleInfo[vehicleid][mod13] = componentid;
    		}
		}
		for(new s=0; s<4; s++) {
			if(componentid == rbbars[s][0]) {
				VehicleInfo[vehicleid][mod14] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == fbbars[s][0]) {
				VehicleInfo[vehicleid][mod15] = componentid;
    		}
		}
		for(new s=0; s<17; s++) {
			if(componentid == wheels[s][0]) {
				VehicleInfo[vehicleid][mod16] = componentid;
    		}
		}
		for(new s=0; s<2; s++) {
			if(componentid == lights[s][0]) {
				VehicleInfo[vehicleid][mod17] = componentid;
    		}
		}
	}
	return 0;
}

stock GetVehicleModelGrotti(id)
{
	switch(id)
	{
	    case 0: return 506;
	    case 1: return 451;
	    case 2: return 429;
	    case 3: return 411;
	    case 4: return 541;
	    case 5: return 415;
	    case 6: return 603;
	}
	return -1;
}

stock GetVehiclePriceGrotti(id)
{
	switch(id)
	{
	    case 0: return 300000;
	    case 1: return 350000;
	    case 2: return 190000;
	    case 3: return 450000;
	    case 4: return 260000;
	    case 5: return 420000;
	    case 6: return 80000;
	}
	return -1;
}

stock GetVehicleOwner(vehicleid)
{
	if(!isnull(VehicleInfo[vehicleid][VD]))
	{
	    foreach(new i : Player)
	    {
		    for(new d = 0; d != 4; d++)
			{
			    if(!strcmp(VehicleInfo[vehicleid][VD], PlayerNameNormal(i), false))
				{
					if(VehicleInfo[vehicleid][VKEY] == PlayerInfo[i][PlayerVehicleKey][d])
					{
					    return i;
					}
				}
			}
		}
	}
	return -1;
}

stock ActualizarTiempo()
{
 	new weather[64],idwea;
	GetServerVarAsString("weather", weather, sizeof(weather));
	idwea = strval(weather);
	if(idwea >= 0 && idwea <= 7) TextDrawSetString(TD_iPhone_Time[0],"Soleado");
	else if(idwea == 8) TextDrawSetString(TD_iPhone_Time[0],"Tormentoso");
	else if(idwea == 9) TextDrawSetString(TD_iPhone_Time[0],"Niebla");
	else if(idwea == 10) TextDrawSetString(TD_iPhone_Time[0],"Soleado");
	else if(idwea == 11) TextDrawSetString(TD_iPhone_Time[0],"Caluroso");
	else if(idwea >= 12 && idwea <= 15) TextDrawSetString(TD_iPhone_Time[0],"Aburro");
	else if(idwea == 16) TextDrawSetString(TD_iPhone_Time[0],"Lluvia");
	else if(idwea >= 17 && idwea <= 18) TextDrawSetString(TD_iPhone_Time[0],"Caluroso");
	else if(idwea == 19) TextDrawSetString(TD_iPhone_Time[0],"Arena");
	else if(idwea == 20) TextDrawSetString(TD_iPhone_Time[0],"Niebla");
	else if(idwea == 21) TextDrawSetString(TD_iPhone_Time[0],"Muy oscuro");
	else if(idwea == 22) TextDrawSetString(TD_iPhone_Time[0],"Muy oscuro");
	else if(idwea >= 23 && idwea <= 26) TextDrawSetString(TD_iPhone_Time[0],"Naranja");
	else if(idwea >= 27 && idwea <= 29) TextDrawSetString(TD_iPhone_Time[0],"Soleado");
	else if(idwea >= 30 && idwea <= 32) TextDrawSetString(TD_iPhone_Time[0],"Oscuro");
	else if(idwea == 33) TextDrawSetString(TD_iPhone_Time[0],"Oscuro");
	else if(idwea == 34) TextDrawSetString(TD_iPhone_Time[0],"Azul");
	else if(idwea == 35) TextDrawSetString(TD_iPhone_Time[0],"Marron");
	else if(idwea >= 36 && idwea <= 38) TextDrawSetString(TD_iPhone_Time[0],"Brillante");
	else if(idwea == 39) TextDrawSetString(TD_iPhone_Time[0],"Muy Brillante");
	else if(idwea >= 40 && idwea <= 42) TextDrawSetString(TD_iPhone_Time[0],"Azul/Morado");
	else if(idwea == 43) TextDrawSetString(TD_iPhone_Time[0],"Toxico");
	else if(idwea == 44) TextDrawSetString(TD_iPhone_Time[0],"Negro");
	else if(idwea == 45) TextDrawSetString(TD_iPhone_Time[0],"Negro");
	return 1;
}

stock GetMonth(Month)
{
    new MonthStr[15];
    switch(Month)
    {
        case 1:  MonthStr = "Enero";
        case 2:  MonthStr = "Febrero";
        case 3:  MonthStr = "Marzo";
        case 4:  MonthStr = "Abril";
        case 5:  MonthStr = "Mayo";
        case 6:  MonthStr = "Junio";
        case 7:  MonthStr = "Julio";
        case 8:  MonthStr = "Agosto";
        case 9:  MonthStr = "Septiembre";
        case 10: MonthStr = "Octubre";
        case 11: MonthStr = "Noviembre";
        case 12: MonthStr = "Diciembre";
    }
    return MonthStr;
}


stock ShowIphoneMenu(playerid, menuid)
{
	switch(menuid)
	{
	    case 1:
	    {
	        TextDrawShowForPlayer(playerid, TD_iPhone_Clock[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Clock[1]);
	    }
	    case 2:
	    {
	        //iPhone_CC[3][playerid] = 1;
	        //firstperson[playerid] = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	        //AttachObjectToPlayer(firstperson[playerid],playerid, 0.0, 0.12, 0.7, 0.0, 0.0, 0.0);
	        //AttachCameraToObject(playerid, firstperson[playerid]);
	    }
	    case 3:
	    {
	        iPhone_CC[0][playerid] = 1;
	        TextDrawShowForPlayer(playerid, TD_iPhone_Gallery);
			PlayerTextDrawShow(playerid, PTD_iPhone_Gallery[playerid]);
	    }
	    case 4:
	    {
	        TextDrawShowForPlayer(playerid, TD_iPhone_Time[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Time[1]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Time[2]);
	    }
	    case 5:
	    {
	        //SelectTextDraw(playerid, -1);
	        //PlayerTextDrawShow(playerid, PTD_iPhone_Calculator[playerid]);
	        //loop(0, sizeof(TD_iPhone_Calculator), PHONE) TextDrawShowForPlayer(playerid, TD_iPhone_Calculator[PHONE]);
	    }
	    case 6:
	    {
	        //GetPlayerZone(playerid);
	        TextDrawShowForPlayer(playerid, TD_iPhone_GPS);
	        PlayerTextDrawShow(playerid, PTD_iPhone_GPS[playerid]);
	    }
	    case 7:
	    {
	        iPhone_CC[1][playerid] = 1;
	        TextDrawShowForPlayer(playerid, TD_iPhone_Radio[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Radio[1]);
	    }
	    case 8:
	    {
	        SendClientMessage(playerid, -1, "Presiona {FFFF00}C / H {FFFFFF}para reproducir tu propia música (también se reproducirá en el coche).");
	        iPhone_CC[2][playerid] = 1;
	        TextDrawShowForPlayer(playerid, TD_iPhone_Music[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Music[1]);
	    }
	    case 9: TextDrawShowForPlayer(playerid, TD_iPhone_Map);
	    case 10:
	    {
	        SelectTextDraw(playerid, -1);
	        loop(0, sizeof(TD_iPhone_Call), PHONE) TextDrawShowForPlayer(playerid, TD_iPhone_Call[PHONE]);
	        PlayerTextDrawShow(playerid, PTD_iPhone_Call[playerid]);
	    }
	    case 11:
	    {
	        TextDrawShowForPlayer(playerid, TD_iPhone_Internet[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Internet[1]);
	    }
	}
	return 1;
}

stock HideIphoneMenu(playerid)
{
	if(iPhoneCallStatus[playerid] == 1) return 1;
	if(iPhoneCallStatus[playerid] == 5)
	{
		iPhoneCallStatus[playerid] = 0;
	    iPhoneStatus[playerid] = 0;
        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
	    called[playerid] = "";
	    callto[playerid] = 0;
	    iPhone_CC[0][playerid] = 0;
		iPhone_CC[1][playerid] = 0;
		iPhone_CC[2][playerid] = 0;
		return 1;
	}
	else if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)
	{
	    iPhoneCallStatus[playerid] = 0;
	    iPhoneCallStatus[callto[playerid]] = 0;
	    iPhoneStatus[playerid] = 0;
        iPhoneStatus[callto[playerid]] = 0;

        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);

		loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
	    PlayerTextDrawHide(callto[playerid], PTD_iPhone_Call[callto[playerid]]);
     	TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[1]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[callto[playerid]][0]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[callto[playerid]][1]);

        PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
        PlayerTextDrawSetString(playerid, PTD_iPhone_Call[callto[playerid]], "_");

		SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
		called[playerid] = "";
		
		iPhone_CC[0][callto[playerid]] = 0;
		iPhone_CC[1][callto[playerid]] = 0;
		iPhone_CC[2][callto[playerid]] = 0;
		called[callto[playerid]] = "";
        callto[callto[playerid]] = 0;
	    callto[playerid] = 0;
	    
	    iPhone_CC[0][playerid] = 0;
		iPhone_CC[1][playerid] = 0;
		iPhone_CC[2][playerid] = 0;
	    return 1;
	}
	/*else if(iPhoneCallStatus[playerid] == 3)
	{
	    iPhoneCallStatus[playerid] = 0;
	    iPhoneCallStatus[callto[playerid]] = 0;
	    iPhoneStatus[playerid] = 0;
        iPhoneStatus[callto[playerid]] = 0;

        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);

		loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
	    PlayerTextDrawHide(callto[playerid], PTD_iPhone_Call[callto[playerid]]);
     	TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[1]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][1]);

		SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
		called[playerid] = "";
		called[callto[playerid]] = "";
        callto[callto[playerid]] = 0;
	    callto[playerid] = 0;
	    return 1;
	}*/
    CancelSelectTextDraw(playerid);
	TextDrawHideForPlayer(playerid, TD_iPhone_Clock[0]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Clock[1]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Gallery);
	PlayerTextDrawHide(playerid, PTD_iPhone_Gallery[playerid]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Time[0]);
    TextDrawHideForPlayer(playerid, TD_iPhone_Time[1]);
    TextDrawHideForPlayer(playerid, TD_iPhone_Time[2]);
    TextDrawHideForPlayer(playerid, TD_iPhone_GPS);
    PlayerTextDrawHide(playerid, PTD_iPhone_GPS[playerid]);
    TextDrawHideForPlayer(playerid, TD_iPhone_Radio[0]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Radio[1]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Music[0]);
 	TextDrawHideForPlayer(playerid, TD_iPhone_Music[1]);
 	TextDrawHideForPlayer(playerid, TD_iPhone_Map);
 	TextDrawHideForPlayer(playerid, TD_iPhone_Internet[0]);
  	TextDrawHideForPlayer(playerid, TD_iPhone_Internet[1]);
  	//PlayerTextDrawHide(playerid, PTD_iPhone_Calculator[playerid]);
   	//loop(0, sizeof(TD_iPhone_Calculator), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone_Calculator[PHONE]);
   	loop(0, sizeof(TD_iPhone_Call), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone_Call[PHONE]);
    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
   	//var1[playerid] = "";
    //var2[playerid] = "";
    called[playerid] = "";
    TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "");
    //PlayerTextDrawSetString(playerid, PTD_iPhone_Calculator[playerid], "0");
    //DeletePVar(playerid,"tovar");
	iPhone_CC[0][playerid] = 0;
	iPhone_CC[1][playerid] = 0;
	iPhone_CC[2][playerid] = 0;
	if(iPhone_CC[3][playerid] == 1)
	{
	    iPhone_CC[3][playerid] = 0;
		SetCameraBehindPlayer(playerid);
		//DestroyObject(firstperson[playerid]);
	}
	return 1;
}




stock UpdateCoordinates(playerid, aMenuX, aMenuY)
{
	switch(aMenuX)
	{
	    case 0:
	    {
	        switch(aMenuY)
	        {
	            case 0:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Reloj");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[1][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[1][playerid]);
					return 1;
	            }
	            case 1:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "El tiempo");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[4][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[4][playerid]);
					return 4;
	            }
	            case 2:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Radio");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[7][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[7][playerid]);
					return 7;
	            }
	            case 3:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Llamar");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[10][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[10][playerid]);
					return 10;
	            }
	        }
	    }
	    case 1:
	    {
	        switch(aMenuY)
	        {
	            case 0:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Camara");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[2][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[2][playerid]);
					return 2;
	            }
	            case 1:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Calculadora");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[5][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[5][playerid]);
					return 5;
	            }
	            case 2:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Musica");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[8][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[8][playerid]);
					return 8;
	            }
	            case 3:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Internet");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[11][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[11][playerid]);
					return 11;
	            }
	        }
	    }
	    case 2:
	    {
	        switch(aMenuY)
	        {
	            case 0:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Galeria");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[3][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[3][playerid]);
					return 3;
	            }
	            case 1:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "GPS");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[6][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[6][playerid]);
					return 6;
	            }
	            case 2:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Mapa");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[9][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[9][playerid]);
					return 9;
	            }
	            case 3:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "SMS");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[12][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[12][playerid]);
					return 12;
	            }
	        }
	    }
	}
	return 0;
}

stock CreatePlayerIphone(playerid)
{
	PTD_iPhone[0][playerid] = CreatePlayerTextDraw(playerid, 550.133544, 233.225967, "Not selected");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[0][playerid], 0.276333, 1.346963);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[0][playerid], 2);
	PlayerTextDrawColor(playerid, PTD_iPhone[0][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[0][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone[0][playerid], 255);
	PlayerTextDrawFont(playerid, PTD_iPhone[0][playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone[0][playerid], 1);

	PTD_iPhone[1][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 254.681549, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[1][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[1][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[1][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[1][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[1][playerid], 4);

	PTD_iPhone[2][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 254.681549, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[2][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[2][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[2][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[2][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[2][playerid], 4);

	PTD_iPhone[3][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 254.681549, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[3][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[3][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[3][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[3][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[3][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[3][playerid], 4);

	PTD_iPhone[4][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 284.445159, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[4][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[4][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[4][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[4][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[4][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[4][playerid], 4);

	PTD_iPhone[5][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 284.445159, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[5][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[5][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[5][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[5][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[5][playerid], 4);

	PTD_iPhone[6][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 284.445159, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[6][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[6][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[6][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[6][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[6][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[6][playerid], 4);

	PTD_iPhone[7][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 314.208770, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[7][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[7][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[7][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[7][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[7][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[7][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[7][playerid], 4);

	PTD_iPhone[8][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 314.208770, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[8][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[8][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[8][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[8][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[8][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[8][playerid], 4);

	PTD_iPhone[9][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 314.208770, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[9][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[9][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[9][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[9][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[9][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[9][playerid], 4);

	PTD_iPhone[10][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 348.338378, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[10][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[10][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[10][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[10][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[10][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[10][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[10][playerid], 4);

	PTD_iPhone[11][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 348.338378, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[11][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[11][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[11][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[11][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[11][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[11][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[11][playerid], 4);

	PTD_iPhone[12][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 348.338378, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[12][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[12][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[12][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[12][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[12][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[12][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[12][playerid], 4);

	PTD_iPhone[13][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 255.526031, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[13][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[13][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[13][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[13][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[13][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[13][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[13][playerid], 4);

	PTD_iPhone[14][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 255.526031, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[14][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[14][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[14][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[14][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[14][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[14][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[14][playerid], 4);

	PTD_iPhone[15][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 255.526031, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[15][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[15][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[15][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[15][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[15][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[15][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[15][playerid], 4);

	PTD_iPhone[16][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 285.289642, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[16][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[16][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[16][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[16][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[16][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[16][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[16][playerid], 4);

	PTD_iPhone[17][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 285.289642, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[17][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[17][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[17][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[17][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[17][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[17][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[17][playerid], 4);

	PTD_iPhone[18][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 285.289642, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[18][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[18][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[18][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[18][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[18][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[18][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[18][playerid], 4);

	PTD_iPhone[19][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 315.053253, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[19][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[19][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[19][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[19][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[19][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[19][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[19][playerid], 4);

	PTD_iPhone[20][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 315.053253, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[20][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[20][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[20][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[20][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[20][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[20][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[20][playerid], 4);

	PTD_iPhone[21][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 315.053253, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[21][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[21][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[21][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[21][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[21][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[21][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[21][playerid], 4);

	PTD_iPhone[22][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 349.182861, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[22][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[22][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[22][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[22][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[22][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[22][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[22][playerid], 4);

	PTD_iPhone[23][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 349.182861, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[23][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[23][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[23][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[23][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[23][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[23][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[23][playerid], 4);

	PTD_iPhone[24][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 349.182861, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[24][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[24][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[24][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[24][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[24][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[24][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[24][playerid], 4);

	PTD_iPhone[25][playerid] = CreatePlayerTextDraw(playerid, 518.700134, 257.085144, "ld_grav:timer");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[25][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[25][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[25][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[25][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[25][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[25][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[25][playerid], 4);

	PTD_iPhone[26][playerid] = CreatePlayerTextDraw(playerid, 543.000000, 258.140777, "hud:radar_gym");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[26][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[26][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[26][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[26][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[26][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[26][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[26][playerid], 4);

	PTD_iPhone[27][playerid] = CreatePlayerTextDraw(playerid, 567.699951, 257.611114, "hud:radar_enemyattack");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[27][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[27][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[27][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[27][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[27][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[27][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[27][playerid], 4);

	PTD_iPhone[28][playerid] = CreatePlayerTextDraw(playerid, 518.500183, 287.118560, "hud:radar_fire");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[28][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[28][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[28][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[28][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[28][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[28][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[28][playerid], 4);

	PTD_iPhone[29][playerid] = CreatePlayerTextDraw(playerid, 542.966796, 287.288879, "hud:radar_modgarage");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[29][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[29][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[29][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[29][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[29][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[29][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[29][playerid], 4);

	PTD_iPhone[30][playerid] = CreatePlayerTextDraw(playerid, 567.633361, 287.359222, "hud:arrow");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[30][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[30][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[30][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[30][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[30][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[30][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[30][playerid], 4);

	PTD_iPhone[31][playerid] = CreatePlayerTextDraw(playerid, 518.900207, 316.781402, "hud:radar_flag");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[31][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[31][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[31][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[31][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[31][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[31][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[31][playerid], 4);

	PTD_iPhone[32][playerid] = CreatePlayerTextDraw(playerid, 542.866943, 317.151763, "hud:radar_datedisco");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[32][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[32][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[32][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[32][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[32][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[32][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[32][playerid], 4);

	PTD_iPhone[33][playerid] = CreatePlayerTextDraw(playerid, 567.500305, 317.007293, "hud:radar_light");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[33][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[33][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[33][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[33][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[33][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[33][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[33][playerid], 4);

	PTD_iPhone[34][playerid] = CreatePlayerTextDraw(playerid, 518.566955, 351.092498, "hud:radar_propertyg");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[34][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[34][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[34][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[34][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[34][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[34][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[34][playerid], 4);

	PTD_iPhone[35][playerid] = CreatePlayerTextDraw(playerid, 543.100280, 351.103698, "hud:radar_locosyndicate");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[35][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[35][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[35][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[35][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[35][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[35][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[35][playerid], 4);

	PTD_iPhone[36][playerid] = CreatePlayerTextDraw(playerid, 567.566833, 351.147979, "hud:radar_propertyr");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[36][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[36][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[36][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[36][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[36][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[36][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[36][playerid], 4);

	PTD_iPhone_Gallery[playerid] = CreatePlayerTextDraw(playerid, 511.266784, 249.677749, "loadsc1:loadsc1");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_Gallery[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone_Gallery[playerid], 78.666625, 70.518501);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_Gallery[playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone_Gallery[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_Gallery[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_Gallery[playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone_Gallery[playerid], 4);

	PTD_iPhone_GPS[playerid] = CreatePlayerTextDraw(playerid, 548.666931, 266.481384, "Los Santos");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_GPS[playerid], 0.253666, 1.322074);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_GPS[playerid], 2);
	PlayerTextDrawColor(playerid, PTD_iPhone_GPS[playerid], -5963521);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_GPS[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_GPS[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone_GPS[playerid], 255);
	PlayerTextDrawFont(playerid, PTD_iPhone_GPS[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone_GPS[playerid], 1);

	/*PTD_iPhone_Calculator[playerid] = CreatePlayerTextDraw(playerid, 583.899963, 268.370300, "0");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_Calculator[playerid], 0.267999, 1.599999);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_Calculator[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_iPhone_Calculator[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_Calculator[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_Calculator[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone_Calculator[playerid], 51);
	PlayerTextDrawFont(playerid, PTD_iPhone_Calculator[playerid], 2);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone_Calculator[playerid], 1);*/

	PTD_iPhone_Call[playerid] = CreatePlayerTextDraw(playerid, 586.666870, 264.651885, "_");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_Call[playerid], 0.333332, 1.239110);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_Call[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_iPhone_Call[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_Call[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_Call[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone_Call[playerid], 51);
	PlayerTextDrawFont(playerid, PTD_iPhone_Call[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone_Call[playerid], 1);


	PTD_iPhone_Info[playerid][0] = CreatePlayerTextDraw(playerid,523.000000, 256.000000, "");
	PlayerTextDrawBackgroundColor(playerid,PTD_iPhone_Info[playerid][0], 255);
	PlayerTextDrawFont(playerid,PTD_iPhone_Info[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid,PTD_iPhone_Info[playerid][0], 0.230000, 0.999999);
	PlayerTextDrawColor(playerid,PTD_iPhone_Info[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,PTD_iPhone_Info[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid,PTD_iPhone_Info[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_iPhone_Info[playerid][0], 0);

	PTD_iPhone_Info[playerid][1] = CreatePlayerTextDraw(playerid,523.000000, 297.000000, "");
	PlayerTextDrawBackgroundColor(playerid,PTD_iPhone_Info[playerid][1], 255);
	PlayerTextDrawFont(playerid,PTD_iPhone_Info[playerid][1], 2);
	PlayerTextDrawLetterSize(playerid,PTD_iPhone_Info[playerid][1], 0.250000, 1.399999);
	PlayerTextDrawColor(playerid,PTD_iPhone_Info[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,PTD_iPhone_Info[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid,PTD_iPhone_Info[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_iPhone_Info[playerid][1], 0);
	return 1;
}

stock DestroyPlayerIphone(playerid)
{
	loop(0, 37, PHONE) PlayerTextDrawDestroy(playerid, PTD_iPhone[PHONE][playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Gallery[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_GPS[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Call[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Info[playerid][0]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Info[playerid][1]);
	return 1;
}


stock MapIcons(playerid)
{
    SetPlayerMapIcon(playerid, 0, 542.3840,-1293.5125,17.2422, 55, 0, MAPICON_LOCAL); //GROTTI
    SetPlayerMapIcon(playerid, 1, 1153.948120, -1772.674682, 16.599193, 52, 0, MAPICON_LOCAL); //BANCO
    SetPlayerMapIcon(playerid, 2, 1833.149780, -1842.485717, 13.578125, 17, 0, MAPICON_LOCAL); //24/7 Unity
    SetPlayerMapIcon(playerid, 3, 1836.4471,-1682.3042,13.3476, 48, 0, MAPICON_LOCAL); //Alhambra
    SetPlayerMapIcon(playerid, 4, 1315.4854,-897.6839,39.5781, 17, 0, MAPICON_LOCAL); //24/7 Vinewood
    SetPlayerMapIcon(playerid, 5, 1352.3815,-1759.2286,13.5078, 17, 0, MAPICON_LOCAL); //24/7 Ayunta
    SetPlayerMapIcon(playerid, 6, 2244.3567,-1665.5562,15.4766, 45, 0, MAPICON_LOCAL); //binco
    SetPlayerMapIcon(playerid, 7, 1456.4344,-1137.6427,23.9484, 45, 0, MAPICON_LOCAL); //ZIP
    SetPlayerMapIcon(playerid, 8, 499.5753,-1360.6145,16.3664, 45, 0, MAPICON_LOCAL); //PROLAPS
    SetPlayerMapIcon(playerid, 9, 2112.7739,-1211.6287,23.9631, 45, 0, MAPICON_LOCAL); //SUBURBAN
    SetPlayerMapIcon(playerid, 10, 461.200073, -1500.823608, 31.059551, 45, 0, MAPICON_LOCAL); //VICTIM
    SetPlayerMapIcon(playerid, 11, 810.6630,-1616.1554,13.5469, 10, 0, MAPICON_LOCAL); //BURGERSHOT
    SetPlayerMapIcon(playerid, 12, 2105.4858,-1806.5336,13.5547, 29, 0, MAPICON_LOCAL); //PIZZASTACKED
    //SetPlayerMapIcon(playerid, 13, 2070.6365,-1793.7847,13.5469, 7, 0, MAPICON_LOCAL); //PELU1
    //SetPlayerMapIcon(playerid, 14, 2068.5840,-1779.7758,13.5596, 39, 0, MAPICON_LOCAL); //TATTO
    //SetPlayerMapIcon(playerid, 15, 823.9835,-1588.2754,13.5545, 7, 0, MAPICON_LOCAL); //PELU2
    SetPlayerMapIcon(playerid, 16, 928.7275,-1352.9547,13.3438, 14, 0, MAPICON_LOCAL); //CHUCKINBELL
    SetPlayerMapIcon(playerid, 17, 2421.3159,-1219.6179,25.5382, 21, 0, MAPICON_LOCAL); //PIGPEN
    SetPlayerMapIcon(playerid, 18, 2310.0977,-1643.5522,14.8270, 49, 0, MAPICON_LOCAL); //BAR GROOVE
    SetPlayerMapIcon(playerid, 19, 2229.8601,-1721.4545,13.5633, 54, 0, MAPICON_LOCAL); //GYMLS
    SetPlayerMapIcon(playerid, 20, 1555.142822, -1675.475341, 16.195312, 30, 0, MAPICON_LOCAL); //LSPD
    SetPlayerMapIcon(playerid, 21, 1481.037597, -1771.786376, 18.795755, 58, 0, MAPICON_LOCAL); //AYUNTA
    SetPlayerMapIcon(playerid, 22, 1038.286010, -1340.728027, 13.741346, 50, 0, MAPICON_LOCAL); //JIM RING
    SetPlayerMapIcon(playerid, 23, 1041.375854, -1026.381713, 32.101562, 27, 0, MAPICON_LOCAL); //TRANSFENDER LS
    SetPlayerMapIcon(playerid, 24, 1025.183959, -1029.424072, 32.101562, 63, 0, MAPICON_LOCAL); //PAYPAINT LS 1
    SetPlayerMapIcon(playerid, 25, 488.571289, -1734.686523, 11.155276, 63, 0, MAPICON_LOCAL); //PAYPAINT LS 2
    SetPlayerMapIcon(playerid, 26, 1945.528808, -1771.480590, 13.115675, 25, 0, MAPICON_LOCAL); //GASOLINERA
    SetPlayerMapIcon(playerid, 27, 2071.982421, -1831.096923, 13.274003, 63, 0, MAPICON_LOCAL); //PAYPAINT LS 3
    SetPlayerMapIcon(playerid, 28, 2643.670166, -2036.018432, 13.282378, 23, 0, MAPICON_LOCAL); //LOCOLOW LS
    SetPlayerMapIcon(playerid, 29, 2034.144042, -1408.787963, 17.164062, 22, 0, MAPICON_LOCAL); //HOSPITAL LS 1
    SetPlayerMapIcon(playerid, 30, 1183.658325, -1334.790283, 13.306521, 22, 0, MAPICON_LOCAL); //HOSPITAL LS 2
    SetPlayerMapIcon(playerid, 31, 2442.220458, -2089.272705, 13.273953, 11, 0, MAPICON_LOCAL); //GRÚAS
    return 1;
}


stock GetVehicleName(vehicleid)
{
    new String[24];
    format(String,sizeof(String),"%s",VehicleNames[GetVehicleModel(vehicleid) - 400]);
    return String;
}


funcion:SetVehicleParamsPlayer(playerid, vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective)
{
    MyTimers[playerid][24] = -1;
	if(engine)
	{
		if(VehicleInfo[vehicleid][VSTATUS] == 4) //deposito
		{
		    new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} no puede arrancar el vehículo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
		    InfoMSG(playerid, 3000, "Le han quitado la batería al vehículo.");
		    return 1;
		}
		else if(VehicleInfo[vehicleid][VSTATUS] == 5) //averiado
		{
		    new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} no puede arrancar el vehículo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
		    InfoMSG(playerid, 3000, "El motor está averiado.");
		    return 1;
		}
		else if(VehicleInfo[vehicleid][VSTATUS] == 2 || VehicleInfo[vehicleid][VSTATUS] == 6 || VehicleInfo[vehicleid][VSTATUS] == 12) //normal
		{
		    new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} arranca el motor de su vehículo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
		}
	}
	if(engine == 0)
	{
        if(VehicleInfo[vehicleid][VSTATUS] == 12)
        {
            SetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
			return 1;
        }
		VehicleInfo[vehicleid][VSTATUS] = 6; //Aparcado
	}
	else
	{
    	if(VehicleInfo[vehicleid][VSTATUS] == 12)
        {
            SetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
			return 1;
        }
		VehicleInfo[vehicleid][VSTATUS] = 2;
	}
	SetVehicleParamsEx(vehicleid, engine, vlights, alarm, doors, bonnet, boot, objective);
	
	return 1;
}


stock SmartAttacher(playerid, modelid)
{
	if(!IsPlayerConnected(playerid)) return -1;
	new skinid = GetPlayerSkin(playerid);
	switch(modelid)
	{
	    case 18921..18925: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Boinas
	    case 18926..18935: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Gorras
	    case 18939..18943: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinBackCaps[skinid][0], SkinBackCaps[skinid][1], SkinBackCaps[skinid][2], SkinBackCaps[skinid][3],SkinBackCaps[skinid][4], SkinBackCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Gorra atras
	    case 18960, 18961: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], 0.0, 90.0, 90.0, 1.000000, 1.000000, 1.000000); //Gorras
	    case 18955..18959: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000);//Gorras
		case 18944..18951: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][10], 0, 0, 180, 0, 10); //Sombreros
		case 18962: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], 0.0,0.0, 0.0, 1.000000, 1.000000, 1.000000);//Gorros de lona
		case 18970..18973: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], 90.0,90.0, 0.0, 1.000000, 1.000000, 1.000000);//Gorros de lona
		case 18967..18969:  SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], 90.0, 90.0, 0.0, 1.000000, 1.000000, 1.000000);//Gorros de lona
		case 18645, 18976, 18977, 18978, 18979:
	    {
	        switch(skinid)
            {
                #define SPAO{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, (%0), (%1), (%2), (%3), (%4), (%5));
                case 0, 65, 74, 149, 208, 273:  SPAO{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
                case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
                case 7, 10: SPAO{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
                case 9: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
                case 11..13: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
                case 15: SPAO{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
                case 17..21: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 40: SPAO{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 50, 100..103, 148, 150..189, 222: SPAO{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 51..54: SPAO{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 59..62: SPAO{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 77: SPAO{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
                case 85, 88, 89: SPAO{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 90..97: SPAO{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 132: SPAO{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 144..146: SPAO{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
                case 220: SPAO{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 223, 246: SPAO{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
                case 224..245: SPAO{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 294: SPAO{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
                case 295: SPAO{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
                case 296..298: SPAO{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 299: SPAO{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
            }
	    }
		case 18936..18938: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][4], 0.02); //Casco de guerrero
		case 19064..19066: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][10], 0, 0, 70, 94, 30, 1.0, 1.0, 1.0); //Santa gorro
		case 18953, 18954: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Gorro de frio/nieve
		case 18964..18966: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], 90.0, 90.0, 0.0, 1.000000, 1.000000, 1.000000); //Gorro de frio
		case 19036..19038: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, 0.093999, 0.026000, -0.004999, 93.800018, 82.199951, -3.300001, 1.098000, 1.139999, 1.173000);//SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, PosX[skinid][5], 0.02, 0, 90, 90); //Mascaras
		case 18974: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][3], 0.0258, 0, 90, 90); //Antifaz
		case 18952: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][4], 0.01); //Boxing
		case 18911..18920: AttachBandanaToPlayer(playerid, modelid, skinid);
		case 19006..19025: SetPlayerAttachedObjectEx(playerid, 2, modelid, 2, SkinOffSet[skinid][0], SkinOffSet[skinid][1], SkinOffSet[skinid][2], SkinOffSet[skinid][3], SkinOffSet[skinid][4], SkinOffSet[skinid][5], SkinOffSet[skinid][6], SkinOffSet[skinid][6], SkinOffSet[skinid][6]); //Gafas
		case 19067..19069: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], 90.0, 90.0, 0.0, 1.000000, 1.000000, 1.000000); //Gorro especial
	}
	return 1;
}


stock AttachBandanaToPlayer(playerid, modelid, skinid)
{
	switch(skinid)
	{

		case 0:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089999, 0.010000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
	    case 1:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.019980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 2:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.019980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 3:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.036980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 4:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.119000, 0.027980, -0.003010, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 5:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.098999, 0.039980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 6:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.097999, 0.025000, 0.001999, -90.600028, 0.800003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 7:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.031000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 8:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.031000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 9:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.043999, 0.015000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 10:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.022000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 11:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.022000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 12:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.014000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 13:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.014000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 14:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.036000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 15:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.067999, 0.004000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 16:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.031000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 17:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.031000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 18:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.047999, 0.019000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 19:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058999, 0.019000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 20:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.017000, -0.001000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 21:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.017000, -0.001000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 22:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.033000, 0.001999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 23:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.033000, 0.001999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 24:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.014000, -0.005000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 25:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.014000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 26:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.014000, 0.004999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 27:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.014000, 0.004999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 28:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.033000, -0.001000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 29:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.032999, 0.002999, -82.199974, 17.899999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 30:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.032999, 0.002999, -82.199974, 17.899999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 31:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.029999, -0.004000, -82.199974, 17.899999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 32:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065000, -0.011000, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 33:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.023000, 0.001999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 34:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.027999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 35:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.016999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 36:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.016999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 37:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.016999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 38:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.030999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 39:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.028000, -0.000000, -82.199974, 14.199999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 40:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.017000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 41:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.025000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 42:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.025000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 43:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.026000, 0.010999, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 44:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079000, 0.019000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 45:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.045000, 0.019000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 46:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.094000, 0.042999, 0.002999, -82.199974, 2.099999, -99.000000, 1.011000, 1.265999, 1.000000);
		}
		case 47:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.035000, -0.004999, -85.499992, 5.299999, -92.800048, 1.000000, 1.000000, 1.000000);
		}
		case 48:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.091999, 0.036000, -0.004999, -85.499992, 3.299999, -92.800048, 1.000000, 1.000000, 1.000000);
		}
		case 49:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.078999, 0.025000, -0.002999, -85.499992, 3.299999, -92.800048, 1.000000, 1.000000, 1.000000);
		}
		case 50:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, -0.008999, -0.006999, -85.499992, 3.299999, -92.800048, 1.072000, 1.000000, 1.140000);
		}
		case 51:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, 0.005000, -0.004999, -85.499992, 3.299999, -92.800048, 1.072000, 1.000000, 1.140000);
		}
		case 52:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, 0.005000, -0.004999, -85.499992, 3.299999, -92.800048, 1.072000, 1.000000, 1.140000);
		}
		case 53:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.032000, -0.003999, -85.499992, 3.299999, -92.800048, 0.942000, 1.000000, 0.886000);
		}
		case 55:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.066999, 0.026000, 0.002000, -85.499992, 3.299999, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 56:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.066999, 0.026000, 0.002000, -85.499992, 3.299999, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 57:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.109999, 0.041000, -0.000999, -85.499992, 3.299999, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 58:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.019000, -0.000999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 59:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.019000, -0.000999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 60:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.034000, -0.002999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 61:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.026000, -0.002999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 62:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089999, 0.035000, 0.009000, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 63:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.006000, -0.002999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 64:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.006000, -0.002999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 65:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.006000, -0.002999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 66:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.025000, -0.006999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 67:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.014000, -0.006999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 0.943000);
		}
		case 68:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.028000, -0.002999, -85.499992, 8.599997, -92.800048, 0.954000, 1.000000, 0.943000);
		}
		case 69:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.062999, 0.022000, 0.000000, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 70:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.022000, 0.000000, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 71:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, -0.000999, 0.000000, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 72:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.016000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 73:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.016000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 74:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089999, 0.010000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 75:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068999, 0.022000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 76:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068999, 0.022000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 77:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.025000, -0.004999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 78:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.007000, 0.006000, -85.499992, 18.799999, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 79:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.011000, 0.006000, -85.499992, 4.800003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 80:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.007000, 0.003000, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 81:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.007000, 0.003000, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 82:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085999, 0.025000, -0.002999, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 83:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085999, 0.025000, -0.002999, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 84:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085999, 0.025000, -0.002999, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 85:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.037000, -0.002999, -85.499992, 4.600003, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 86:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.011000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 87:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.040000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 88:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.028000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 89:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.086999, 0.011000, -0.004999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 90:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 91:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 92:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 93:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 94:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.031999, -0.000999, -0.002999, -85.499992, 12.300005, -92.800048, 0.875001, 1.000000, 1.015000);
		}
		case 95:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, -0.004999, -0.002999, -85.499992, 12.300005, -92.800048, 0.875001, 1.000000, 1.015000);
		}
		case 96:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.016000, -0.002999, -85.499992, 12.300005, -92.800048, 0.926000, 1.000000, 1.015000);
		}
		case 97:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.060999, 0.012000, -0.002999, -85.499992, 12.300005, -92.800048, 0.926000, 1.000000, 1.015000);
		}
		case 98:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.043000, -0.002999, -85.499992, 12.300005, -92.800048, 0.948000, 1.000000, 1.015000);
		}
		case 99:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.021000, -0.002999, -85.499992, 12.300005, -92.800048, 0.948000, 1.000000, 1.015000);
		}
		case 100:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.021000, -0.001999, -85.499992, 12.300005, -92.800048, 0.998000, 1.000000, 1.015000);
		}
		case 101:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.021000, -0.001999, -85.499992, 12.300005, -92.800048, 0.998000, 1.000000, 1.015000);
		}
		case 102:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.021000, -0.001999, -85.499992, 12.300005, -92.800048, 0.998000, 1.000000, 1.015000);
		}
		case 103:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 104:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 105:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 106:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 107:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 108:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.019000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 109:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.033000, -0.002999, -85.499992, 12.300005, -92.800048, 0.983000, 1.000000, 1.015000);
		}
		case 110:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.033000, -0.002999, -85.499992, 12.300005, -92.800048, 0.983000, 1.000000, 1.015000);
		}
		case 111:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.014000, -0.002999, -85.499992, 12.300005, -92.800048, 0.983000, 1.000000, 1.015000);
		}
		case 112:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.015000, -0.002999, -85.499992, 2.000007, -92.800048, 0.983000, 1.000000, 0.895000);
		}
		case 113:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.048000, 0.001000, -85.499992, 2.000007, -92.800048, 0.983000, 1.000000, 0.895000);
		}
		case 114:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.051000, -0.000999, -85.499992, 2.000007, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 115:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.051000, -0.000999, -85.499992, 2.000007, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 116:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.015000, 0.006000, -85.499992, 21.400005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 117:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058999, 0.031000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 118:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058999, 0.031000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 119:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 120:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 121:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 122:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 123:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.044000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 124:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.039000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 125:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.024000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 126:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.024000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 127:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.047000, 0.000000, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 128:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.047000, 0.000000, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 129:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, 0.025000, 0.000000, -85.499992, 11.700005, -92.800048, 0.801001, 1.000000, 0.895000);
		}
		case 130:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.042999, 0.027000, -0.003999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 131:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.042999, 0.027000, -0.003999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 132:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.009999, 0.000000, -0.003999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 133:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.019000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 134:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.066999, 0.002000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 135:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.018000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 136:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.012000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 137:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, -0.001999, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 138:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.029000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 139:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.029000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 140:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.036000, -0.001999, -85.499992, 18.700014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 141:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.016000, -0.001999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 142:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 143:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 144:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 145:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 146:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.023000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 147:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.011000, 0.005000, -85.499992, 14.000016, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 148:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.054999, 0.016000, -0.002999, -85.499992, 5.100017, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 149:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.091999, 0.016000, 0.000000, -85.499992, 5.100017, -92.800048, 1.039001, 1.000000, 1.019000);
		}
		case 150:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.016000, 0.000000, -85.499992, 5.100017, -92.800048, 1.039001, 1.000000, 1.019000);
		}
		case 151:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.020000, -0.001999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 1.077001);
		}
		case 152:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.007000, -0.001999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 153:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.017000, 0.004000, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 154:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.017000, 0.004000, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 155:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.092999, 0.028000, -0.002999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 156:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.092999, 0.028000, -0.002999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 157:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.028000, 0.004000, -85.499992, 5.100017, -92.800048, 1.073001, 1.000000, 0.989001);
		}
		case 158:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.028000, -0.004999, -85.499992, 5.100017, -92.800048, 1.073001, 1.000000, 0.989001);
		}
		case 159:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.028000, -0.004999, -85.499992, 5.100017, -92.800048, 1.073001, 1.000000, 0.989001);
		}
		case 160:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.015000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 161:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.029000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 162:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.029000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 163:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 164:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 165:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 166:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 167:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.033000, 0.002000, -85.499992, 22.500015, -92.800048, 0.818001, 1.000000, 0.989001);
		}
		case 168:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.033000, -0.008999, -85.499992, 16.900012, -92.800048, 0.843001, 1.000000, 0.989001);
		}
		case 169:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.015000, -0.000999, -85.499992, 16.900012, -92.800048, 0.909000, 1.000000, 0.989001);
		}
		case 170:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071999, 0.025000, -0.006999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 171:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071999, 0.025000, -0.006999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 172:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.050999, 0.025000, -0.002999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 173:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.002999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 174:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 175:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 176:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 177:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.028000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 178:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.056999, 0.028000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 179:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.035000, -0.008999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 180:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.035000, -0.008999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 181:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.104999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 182:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 183:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 184:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 185:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 186:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 187:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.017000, 0.007000, -85.499992, 14.300015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 188:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.017000, 0.000000, -85.499992, 14.300015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 189:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.017000, 0.000000, -85.499992, 14.300015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 190:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 191:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 192:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 193:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 194:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 195:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 196:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 197:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.017000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 198:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.017000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 199:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 200:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 201:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.060999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 202:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.097999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 203:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.086999, 0.030000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 204:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.086999, 0.025000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 205:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.025000, -0.002999, -85.499992, 14.800015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 206:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, 0.025000, -0.002999, -85.499992, 5.200016, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 207:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.025000, -0.002999, -85.499992, 5.200016, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 208:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.035000, -0.002999, -85.499992, 5.200016, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 209:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, 0.012000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 210:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, 0.012000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 211:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.053999, 0.021000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 212:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083999, 0.017000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 213:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083999, 0.024000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 214:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.013000, -0.000999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 215:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.013000, -0.000999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 216:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.013000, -0.000999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 217:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.013000, -0.003999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 218:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.027000, -0.003999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 219:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.021000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 220:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.040999, 0.039000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 221:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.020000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 222:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.028000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 223:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.040000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 224:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.019000, 0.001000, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 225:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.019000, 0.001000, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 226:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.019000, 0.001000, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 227:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.095999, 0.042000, -0.002999, -85.499992, 10.300015, -92.800048, 0.973000, 1.000000, 0.989001);
		}
		case 228:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.095999, 0.042000, -0.002999, -85.499992, 10.300015, -92.800048, 0.973000, 1.000000, 0.989001);
		}
		case 229:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.008000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 230:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.049999, 0.018000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 231:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.033000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 232:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, -0.000999, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 233:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.025000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 234:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.062999, -0.003999, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 235:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.042999, 0.003000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 236:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.021000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 237:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.006000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 238:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.027000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 239:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.097999, 0.015000, 0.004000, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 240:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071999, 0.021000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 241:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.048999, 0.000000, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 242:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.025999, 0.001999, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 243:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.025999, 0.001999, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 244:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.048999, 0.001999, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 245:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.063000, 0.026999, -0.001000, -86.900016, 9.399997, -94.800003, 1.095000, 1.000000, 1.000000);
		}
		case 246:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.063000, 0.043999, -0.001000, -86.900016, 9.399997, -94.800003, 0.939000, 1.000000, 1.000000);
		}
		case 247:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.087000, 0.034999, 0.003999, -86.900016, 9.399997, -94.800003, 0.982000, 1.000000, 1.000000);
		}
		case 248:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.087000, 0.034999, -0.001000, -86.900016, 9.399997, -94.800003, 0.982000, 1.000000, 1.000000);
		}
		case 249:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.078000, 0.034999, 0.006999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 250:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.078000, 0.031999, 0.000999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 251:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.063000, 0.031999, 0.000999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 252:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.094000, 0.023999, 0.002999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 253:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081000, 0.016999, 0.002999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 254:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.093000, 0.021999, 0.002999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 255:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079000, -0.001000, 0.002999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 256:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.056000, 0.024999, 0.002999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 257:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.067000, 0.024999, -0.001000, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 258:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074000, 0.033999, -0.001000, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 259:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074000, 0.033999, -0.001000, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 260:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084000, 0.014999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 261:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084000, 0.001999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 262:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068000, 0.022999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 263:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068000, 0.013999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 264:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068000, 0.034999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 265:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.002999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 266:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.002999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 267:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.002999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 268:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.006999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 269:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.006999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 270:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.006999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 271:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085000, 0.012999, 0.000999, -86.900016, 13.599996, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 272:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.107000, 0.026999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 273:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.018999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 274:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.002999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 275:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.002999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 276:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.002999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 277:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.040000, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 278:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.040000, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 279:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.040000, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 280:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 281:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 282:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 283:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 284:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.080000, 0.053999, 0.010999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 285:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.098000, 0.034999, 0.010999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 286:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079000, 0.010999, 0.000999, -86.900016, 4.699994, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 287:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074000, 0.037999, 0.004999, -86.900016, 4.699994, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 288:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089000, 0.014999, -0.000000, -86.900016, 4.699994, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 289:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071000, 0.014999, -0.000000, -86.900016, 14.299993, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 290:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071000, 0.036999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 291:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.036999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 292:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.018999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 293:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.025999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 294:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.025999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 295:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.025999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 296:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.030999, 0.000999, -86.900016, 15.999993, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 298:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.020989, -0.003010, -86.900009, 15.999990, -94.800003, 1.011999, 1.000000, 0.885990);
		}
		case 299:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.050989, 0.001990, -86.900009, 15.999990, -94.800003, 1.011999, 1.000000, 0.885990);
		}
	}
}

stock SetPlayerAttachedObjectEx(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0)
{
	new newindex;
	switch(index)
	{
	    case 0:	{ RemovePlayerAttachedObject(playerid, 0); newindex = 3; }
	    case 1:	{ RemovePlayerAttachedObject(playerid, 1); newindex = 4; }
	    case 2:	{ RemovePlayerAttachedObject(playerid, 2); newindex = 5; }
	}
    SetPlayerAttachedObject(playerid, newindex, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
    PlayerInfo[playerid][pToy][newindex] = 1; //Viendólo
    PlayerInfo[playerid][pToyModelID][newindex] = modelid;
    PlayerInfo[playerid][pToyBone][newindex] = bone;
    PlayerInfo[playerid][pToyX][newindex] = fOffsetX;
    PlayerInfo[playerid][pToyY][newindex] = fOffsetY;
    PlayerInfo[playerid][pToyZ][newindex] = fOffsetZ;
    PlayerInfo[playerid][pToyRX][newindex] = fRotX;
    PlayerInfo[playerid][pToyRY][newindex] = fRotY;
    PlayerInfo[playerid][pToyRZ][newindex] = fRotZ;
    PlayerInfo[playerid][pToySX][newindex] = fScaleX;
    PlayerInfo[playerid][pToySY][newindex] = fScaleY;
    PlayerInfo[playerid][pToySZ][newindex] = fScaleZ;
	return 1;
}

stock UpdateToy(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 0.0, Float:fScaleY = 0.0, Float:fScaleZ = 0.0)
{
	if(index > 2) return 1;
	if(PlayerInfo[playerid][pToy][index] != 1) return 1;
	//new str[24];
    SetPlayerAttachedObject(playerid, index, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
    PlayerInfo[playerid][pToy][index] = 1; // format(str, 24, "PTOY%d", index); //SaveValue(playerid, str, PlayerInfo[playerid][pToy][index]);
    PlayerInfo[playerid][pToyModelID][index] = modelid; // format(str, 24, "PTOYMID%d", index); //SaveValue(playerid, str, PlayerInfo[playerid][pToyModelID][index]);
    PlayerInfo[playerid][pToyBone][index] = bone; // format(str, 24, "PTOYBONE%d", index); //SaveValue(playerid, str, PlayerInfo[playerid][pToyBone][index]);
    PlayerInfo[playerid][pToyX][index] = fOffsetX; // format(str, 24, "PTOYX%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToyX][index]);
    PlayerInfo[playerid][pToyY][index] = fOffsetY; // format(str, 24, "PTOYY%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToyY][index]);
    PlayerInfo[playerid][pToyZ][index] = fOffsetZ; // format(str, 24, "PTOYZ%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToyZ][index]);
    PlayerInfo[playerid][pToyRX][index] = fRotX; // format(str, 24, "PTOYRX%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToyRX][index]);
    PlayerInfo[playerid][pToyRY][index] = fRotY; //format(str, 24, "PTOYRY%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToyRY][index]);
    PlayerInfo[playerid][pToyRZ][index] = fRotZ; // format(str, 24, "PTOYRZ%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToyRZ][index]);
    PlayerInfo[playerid][pToySX][index] = fScaleX; // format(str, 24, "PTOYSX%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToySX][index]);
    PlayerInfo[playerid][pToySY][index] = fScaleY; //format(str, 24, "PTOYSY%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToySY][index]);
    PlayerInfo[playerid][pToySZ][index] = fScaleZ; // format(str, 24, "PTOYSZ%d", index); //SaveFloat(playerid, str, PlayerInfo[playerid][pToySZ][index]);
	return 1;
}

stock ColocarToys(playerid)
{
	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
 	}
 	if(PlayerInfo[playerid][pToy][0] == 1) SetPlayerAttachedObject(playerid, 0, PlayerInfo[playerid][pToyModelID][0], PlayerInfo[playerid][pToyBone][0], PlayerInfo[playerid][pToyX][0], PlayerInfo[playerid][pToyY][0], PlayerInfo[playerid][pToyZ][0], PlayerInfo[playerid][pToyRX][0], PlayerInfo[playerid][pToyRY][0], PlayerInfo[playerid][pToyRZ][0], PlayerInfo[playerid][pToySX][0], PlayerInfo[playerid][pToySY][0], PlayerInfo[playerid][pToySZ][0]);
	if(PlayerInfo[playerid][pToy][1] == 1) SetPlayerAttachedObject(playerid, 1, PlayerInfo[playerid][pToyModelID][1], PlayerInfo[playerid][pToyBone][1], PlayerInfo[playerid][pToyX][1], PlayerInfo[playerid][pToyY][1], PlayerInfo[playerid][pToyZ][1], PlayerInfo[playerid][pToyRX][1], PlayerInfo[playerid][pToyRY][1], PlayerInfo[playerid][pToyRZ][1], PlayerInfo[playerid][pToySX][1], PlayerInfo[playerid][pToySY][1], PlayerInfo[playerid][pToySZ][1]);
    if(PlayerInfo[playerid][pToy][2] == 1) SetPlayerAttachedObject(playerid, 2, PlayerInfo[playerid][pToyModelID][2], PlayerInfo[playerid][pToyBone][2], PlayerInfo[playerid][pToyX][2], PlayerInfo[playerid][pToyY][2], PlayerInfo[playerid][pToyZ][2], PlayerInfo[playerid][pToyRX][2], PlayerInfo[playerid][pToyRY][2], PlayerInfo[playerid][pToyRZ][2], PlayerInfo[playerid][pToySX][2], PlayerInfo[playerid][pToySY][2], PlayerInfo[playerid][pToySZ][2]);
	return 1;
}


funcion:SaveValue(playerid, cadena[], valor)
{
	new Query[256];
	format(Query, 256, "UPDATE `USERS` SET `%s` = '%d' WHERE `NAME` = '%s'", cadena, valor, PlayerNameNormal(playerid));
	db_query(Database, Query);
	return 0;
}

funcion:SaveFloat(playerid, cadena[], Float:valor)
{
	new Query[256];
	format(Query, 256, "UPDATE `USERS` SET `%s` = '%f' WHERE `NAME` = '%s'", cadena, valor, PlayerNameNormal(playerid));
	db_query(Database, Query);
	return 0;
}

funcion:SaveString(playerid, cadena[], valor[])
{
	new Query[256];
	format(Query, 256, "UPDATE `USERS` SET `%s` = '%s' WHERE `NAME` = '%s'", cadena, valor, PlayerNameNormal(playerid));
	db_query(Database, Query);
	return 0;
}


stock Dar_Bolsillo(playerid, id)
{
	if(id == 0 || id == sizeof(Objetos_Bolsillo)) return 0;
    if(BolsilloID[playerid][11] != 0 && BolsilloID[playerid][12] != 0)
    {
        SendClientMessage(playerid, -1, "Necesitas una mano libre para coger esto.");
        return 0;
    }
    switch(id)
    {
        case 1:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza mixta.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 1;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 1;
        }
        case 2:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza barbacoa.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 2;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 2;
        }
        case 3:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza clásica.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 3;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 3;
        }
        case 4:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza vegetariana.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 4;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 4;
        }
        case 5:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una hamburguesa de pollo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 5;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 5;
        }
        case 6:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una hamburguesa de pescado.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 6;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 6;
        }
        case 7:
        {
        	new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una hamburguesa de ternera.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 7;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 7;
        }
        case 8:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un pollo asado.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 8;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 8;
        }
        case 9:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra alitas de pollo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 9;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 9;
        }
        case 10:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un donut.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 10;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 10;
        }
        case 11:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un donut de chocolate.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 11;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 11;
        }
        case 12:
        {
            
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una rosquilla.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 12;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 12;
        }
        case 13:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un mechero.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 13;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 13;
        }
        case 14:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un cigarrillo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 14;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 14;
        }
        case 15:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una cerveza.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 15;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 15;
        }
        case 16:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un refresco de naranja.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 16;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 16;
        }
        case 17:
        {
            
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una botella de agua.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 17;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 17;
        }
        case 18:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un perrito caliente.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 18;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 18;
        }
        case 19:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un refresco de limón.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 19;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 19;
        }
        case 20:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un refresco de cola.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 20;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 20;
        }
        case 21:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un chicle.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 21;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 21;
        }
        case 22:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un cable iPhone-Vehículo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 22;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 22;
        }
        case 23:
        {
            new str[145];
			format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una ensalada.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 23;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 23;
        }
        case 24:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un café.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	 		
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 24;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 24;
        }
        case 25:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un GPS.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 25;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 25;
        }
    }
    return 0;
}

stock MostrarBolsillos(playerid)
{
    new dialog[784], string[128];
	for(new i = 1; i < 13; i++)
	{
		if(i == 1)
		{
		    if(BolsilloID[playerid][i] != 0) format(dialog, sizeof(dialog), "{FFFFFF}1) - {FFFF00}%s {FFFFFF}", Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
		    else format(dialog, sizeof(dialog), "{FFFFFF}1) - Bolsillo vacío.");
		    continue;
		}
		if(i == 11)
		{
  			strcat(dialog, "\n|--------------------------------------------------------------|");
			if(BolsilloID[playerid][i] != 0) format(string, sizeof(string), "\n{FFFFFF}%Mano derecha - {FFFF00}%s {FFFFFF}", Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
  			else format(string, sizeof(string), "\n{FFFFFF}Mano derecha - desocupada.");
  			strcat(dialog, string);
  			continue;
		}
		if(i == 12)
		{
			if(BolsilloID[playerid][i] != 0) format(string, sizeof(string), "\n{FFFFFF}%Mano izquierda - {FFFF00}%s {FFFFFF}", Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
  			else format(string, sizeof(string), "\n{FFFFFF}Mano izquierda - desocupada.");
  			strcat(dialog, string);
  			break;
		}
		if(BolsilloID[playerid][i] != 0) format(string, sizeof(string), "\n{FFFFFF}%d) - {FFFF00}%s {FFFFFF}", i, Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
  		else format(string, sizeof(string), "\n{FFFFFF}%d) - Bolsillo vacío.", i);
  		strcat(dialog, string);
	}
	format(string, sizeof(string), "{FFFFFF}Bolsillos de %s", FirstName(playerid));
	ShowPlayerDialog(playerid, DIALOG_BOL, DIALOG_STYLE_LIST, string, dialog, "Seleccionar", "Salir");
	return 1;
}




/* cosas que matias se olvida

bol12____faccion
*/
