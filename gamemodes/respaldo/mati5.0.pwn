/*

 .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.
| .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
| |  _______     | || |     ____     | || |   _____      | || |  _________   | || |   ______     | || |   _____      | || |      __      | || |  ____  ____  | |
| | |_   __ \    | || |   .'    `.   | || |  |_   _|     | || | |_   ___  |  | || |  |_   __ \   | || |  |_   _|     | || |     /  \     | || | |_  _||_  _| | |
| |   | |__) |   | || |  /  .--.  \  | || |    | |       | || |   | |_  \_|  | || |    | |__) |  | || |    | |       | || |    / /\ \    | || |   \ \  / /   | |
| |   |  __ /    | || |  | |    | |  | || |    | |   _   | || |   |  _|  _   | || |    |  ___/   | || |    | |   _   | || |   / ____ \   | || |    \ \/ /    | |
| |  _| |  \ \_  | || |  \  `--'  /  | || |   _| |__/ |  | || |  _| |___/ |  | || |   _| |_      | || |   _| |__/ |  | || | _/ /    \ \_ | || |    _|  |_    | |
| | |____| |___| | || |   `.____.'   | || |  |________|  | || | |_________|  | || |  |_____|     | || |  |________|  | || ||____|  |____|| || |   |______|   | |
| |              | || |              | || |              | || |              | || |              | || |              | || |              | || |              | |
| '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
 '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'


Sheedow City Role Play creado por Jeff & RZone
Versión: en proceso de creación.
*/
#include <a_zones>
#include <a_samp>
#include <a_http>
#include <zcmd>
#include <streamer>
#include <a_actor>
#include <zcmd>
#include <YSI\y_ini>
#include <YSI\y_va>
#include <sscanf2>
#include <progress>
#include <a_mysql>
#include <foreach>


//---------Bots
// ----------> Bots
#define SHOP_UNITY  0
#define SHOP_VINE   1
#define SHOP_AYUNT  2

#define MySQL_Servidor "localhost"
#define MySQL_Usuario "root"
#define MySQL_BD "servidor"
#define MySQL_Clave ""

//limites
#define MAX_NPC         35
#define MAX_EVENTS      20
#define MAX_TOYS 	    6
#define MAX_FACCIONES 	6
#define MAX_CONTROLES   100
#define MAX_PLAYERS_SERVER 100

#define SERVER_NAME     "New Clan Role Play [Beta 0.v1] SA:MP"
#define GAMEMODE_TEXT   "New Clan GM"
#define MAPNAME         "Europa - America"
#undef MAX_PLAYERS
#define MAX_PLAYERS     50

#define PATH  "/eXtremeROL/conocidos/%s.ini"


//interiores
#define INT_NONE    0
#define INT_GROTTI  1
#define INT_BANCO   2
#define INT_CNN     3
#define INT_VIP     4
#define INT_BITCH   5
#define INT_247U    6
#define INT_ALHAM   7
#define INT_247VIN  8
#define INT_247AYU  9
#define INT_BINCO   10
#define INT_ZIP     11
#define INT_PROLAPS 12
#define INT_SUBURBA 13
#define INT_VICTIM  14
#define INT_BURGER  15
#define INT_PIZZA   16
#define INT_PELU    17
#define INT_TATTO   18
#define INT_PELU2   19
#define INT_BELL    20
#define INT_PIGPEN  21
#define INT_BARGR   22
#define INT_GYMLS   23
#define INT_LSPD    24
#define INT_AYUNT   25
#define INT_RING    26
#define INT_TAXI    27
#define INT_HOSP    28


#define DIALOG_REGISTER 20
#define DIALOG_LOGIN    21
#define DIALOG_EMAIL    22
#define DIALOG_ESPETOS  23
#define DIALOG_DUDAS    24
#define DIALOG_LAPTOP   25
#define DIALOG_NAME     26
#define DIALOG_LPOLICE  27
#define DIALOG_BURGER   28
#define DIALOG_PIZZA    29
#define DIALOG_HELADO   30
#define DIALOG_BEBIDA   31
#define DIALOG_MASCAR   32
#define DIALOG_GANZUA   33
#define DIALOG_SOGAS    34
#define DIALOG_VENDAS   35
#define DIALOG_CELULAR  36
#define DIALOG_DPIZZA   37
#define DIALOG_DBURG    38
#define DIALOG_DHELAD   39
#define DIALOG_DBEBID   40
#define DIALOG_DMASCAR  41
#define EQUIPAMIENTOLAPD2 43
#define CONTRATO  44
#define Dialog_Comandos 45
#define TRABAJOS 46
#define INFOJOB             47
#define DIALOG_GROTTI	48
#define DIALOG_RETIRAR  49
#define DIALOG_DEPOSIT  50
#define DIALOG_BANCO    51
#define DIALOG_RETIRAR2 52
#define DIALOG_DEPOSIT2 53
#define DIALOG_TRANSFERIR 70
#define DIALOG_BOL		55
#define DIALOG_MP3  56
#define DIALOG_GPS  57
#define Dialog_Taxi 58
#define Unirse_Taxi 59
#define Renunciar_Taxi 60
#define Dialog_TaxiM  61
#define CAMIOND 62

// FACCIONES
#define FACCION_PLC     1
#define FACCION_SAE     2
#define FACCION_MCN     3
#define FACCION_CNN     4
#define FACCION_SIC     5
#define FACCION_SHE     6
#define FACCION_CAM     7

// EMPLEOS
#define EMPLEO_TAX     11
#define EMPLEO_MIN     12
#define EMPLEO_JAR     13
#define EMPLEO_CAM     14
#define EMPLEO_BUS     15

// HOLDING(keys) & RELEASED(keys)
// HOLDING(keys)
#define HOLDING(%0) \
((newkeys & (%0)) == (%0))

#define RELEASED(%0) \
    (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))

//PRAGAMA(tabsize)
#pragma tabsize 0
#define funcion%0(%1) \
                     forward %0(%1); \
                                                        public %0(%1)

// OPTIMIZED FUNCIONS ( message - dialog - textdraw)
#define loop(%0,%1,%2) for(new %2 = %0; %2 < %1; %2++)
#define DELAY 100
#define DeleteChatForPlayer(%0,%1,%2) for(new %2 = 0; %2 != %1; %2++) SendClientMessage(%0, -1, " ")
#define Message                                                 SendClientMessage
#define Dialog                          ShowPlayerDialog
#define SDraw                           PlayerTextDrawShow
#define HDraw                           PlayerTextDrawHide

// ----- COLORES ------
#define Color_Amarillo      "{F4FA58}"
#define Color_Azulp         "{0489B1}"
#define Color_Blanco        "{F2F2F2}"
#define RED                 "{FF0000}"
#define GREEN               "{00FF00}"
#define BLUE                "{0000FF}"
#define YELLOW              "{FFFF00}"
#define WHITE               "{FFFFFF}"
#define LIGHTBLUE           "{27BCFF}"

//faccion
#define 			COLOR_FADE 					0xE6E6E6E6
#define 			COLOR_FADE1 				0xE6E6E6E6
#define 			COLOR_FADE2 				0xC8C8C8C8
#define 			COLOR_FADE3 				0xAAAAAAAA
#define 			COLOR_FADE4 				0x8C8C8C8C
#define 			COLOR_FADE5 				0x6E6E6E6E
#define 			COLOR_WHITE 				0xFFFFFFAA
#define 			COLOR_GREY 					0xAFAFAFAA
#define 			COLOR_PURPLE 				0xC2A2DAAA
#define 			TEAM_RADIO_COLOR 			0x9B9BFFFF
#define 			TEAM_HIT_COLOR 				0xFFFFFF00
#define 			TEAM_BLUE_COLOR 			0x8D8DFF00

#define 	COLOR_VERDECLARO    0x08E8BBAA
#define c2_color		0xFFC600FF
#define IC1 				(0xE6E6E6E6)
#define IC2 				(0xC8C8C8C8)
#define IC3 				(0xAAAAAAFF)
#define IC4 				(0x8C8C8C8C)
#define IC5 				(0x6E6E6E6E)
#define	c7_color			0x00FF00FF
#define INVISIBLE     		(0xFFFFFF00)
#define COLOR_RADIO 		(0x9B9BFFFF)
#define COLOR_DPTOS			(0xFF8282AA)
#define COLOR_ACCIONES 		(0xC2A2DAAA)
#define COLOR_POLICIA                   0x3399FF00
#define BLANCO                          0xFFFFFFFF
#define CELESTE                         0x0091FFFF
#define VIOLETA                         0x3200FC77
#define NARANJA                         0xFF6700B2
#define AMARILLO                        0xFFFF00B4
#define VERDE                           0x0DA000FF
#define AZUL                            0x0000FF98
#define FLUOR                           0xA7FF00FF
#define GRIS                            0xA7A9AAFF
#define ROJO                            0xFF0000FF
#define ROSA                            0xBA5390FF
#define PULPURA                         0xC2A2DAAA
#define AZULCLARO                       0x27BCFFFF
#define TEAM_RADIO_COLOR    0x9B9BFFFF
#define TEAM_FACCION_COLOR 0x9B9BFFFF
#define 			TEAM_RADIO_COLOR 			0x9B9BFFFF
#define 			TEAM_HIT_COLOR 				0xFFFFFF00
#define 			TEAM_BLUE_COLOR 			0x8D8DFF00

// ----- VARIABLES -----
//Actores
new Actor_GuardaEspalda;

//npc
new NPCS[MAX_NPC],
	NPC_USED[MAX_NPC];
new unwashable[89][0] = {
{403},{406},{408},{414},{417},
{423},{424},{425},{430},{431},
{432},{433},{435},{437},{441},
{443},{444},{446},{447},{448},
{452},{453},{454},{455},{456},
{457},{460},{461},{462},{463},
{464},{465},{468},{469},{471},
{472},{473},{476},{481},{484},
{485},{486},{487},{488},{493},
{497},{498},{501},{508},{509},
{510},{511},{512},{513},{514},
{515},{519},{520},{521},{522},
{523},{524},{530},{531},{532},
{539},{544},{548},{553},{556},
{557},{563},{564},{568},{571},
{572},{573},{574},{577},{578},
{581},{583},{586},{588},{592},
{593},{594},{595},{609}
};

//carwash
new CarWash[5],
	CarWashUsed,
	CarWashUsedBy[MAX_PLAYERS],
	Area_CarWash;
//interiores
//ladron
new RobadoReciente[MAX_PLAYERS];
new T1,T2,T3,T4,T5,T6,T7,T12,T22,T32,T42,T52,T62,T72,T13,T23,T33,T43,T53,T63,T73,T14,T24,T34,T44,T54,T64,T74,T15,T25,T35,T45,T55,T65,T75,T16,T26,T36,T46,T56,T66,T76,T17,T27,T37,T47,T57,T67,T77,T87,T18,T28,T38,T48,T58,T68,T78,T88,T19,T29,T39,T49,T59,T69,T79,T89,T110,T210,T310,T410,T510,T610,T710,T810,T111,T211,T311,T411,T511,T611,T711,T811,T112,T212,T312,T412,T512,T612,T712,T812;
new PuertaRobo1,PuertaRobo2,PuertaRobo3,PuertaRobo4,PuertaRobo5,PuertaRobo6,PuertaRobo7,PuertaRobo8,PuertaRobo9,PuertaRobo10,PuertaRobo11,PuertaRobo12;
new Forzada1,Forzada2,Forzada3,Forzada4,Forzada5,Forzada6,Forzada7,Forzada8,Forzada9,Forzada10,Forzada11,Forzada13;
new Entrando[MAX_PLAYERS],Quitando[MAX_PLAYERS],Objeto[MAX_PLAYERS];
new CasaAbierta,CasaAbierta2,CasaAbierta3,CasaAbierta4,CasaAbierta5,CasaAbierta6,CasaAbierta7,CasaAbierta8,CasaAbierta9,CasaAbierta10,CasaAbierta11,CasaAbierta13;
new Float:PosTP[MAX_PLAYERS][3];

//job armero
new ArmasEstado;
new TiempoVenta2[MAX_PLAYERS];
new Mats1[MAX_PLAYERS];
new Mats2[MAX_PLAYERS];
new Mats3[MAX_PLAYERS];
new PuntoMats[MAX_PLAYERS];

//job camion
new Chofer[MAX_VEHICLES] = INVALID_PLAYER_ID;
new Carga[MAX_PLAYERS];
new Cargas[MAX_PLAYERS];
new CamionCargado[MAX_VEHICLES] = 0;
new CamionID[MAX_PLAYERS];
new CargandoC[MAX_PLAYERS];
new Cargando2[MAX_PLAYERS];
new Area_Camionc;
new Float:PuntoCX[MAX_PLAYERS], Float:PuntoCY[MAX_PLAYERS], Float:PuntoCZ[MAX_PLAYERS];

//taxista
new Monto[MAX_PLAYERS],Ficha[MAX_PLAYERS];
new Taxista[MAX_PLAYERS], TM[MAX_PLAYERS];
new Pasajero[MAX_PLAYERS],LlamadaTaxi[MAX_PLAYERS];
//medico
new RopaMedi[MAX_PLAYERS];
new Reanimado[MAX_PLAYERS];
new Paciente[MAX_PLAYERS];
new PacienteAmbu[MAX_PLAYERS];
new MarcadoMedicos[MAX_PLAYERS];
new MedicoCP2[MAX_PLAYERS];
new MedicoCP[MAX_PLAYERS];

//policia
new EstadoRadio[MAX_PLAYERS];
new PeajesBloqueados, NombreBloqueoPeajes[32];
new Refuerzos[MAX_PLAYERS];
new EnServicioIC[MAX_PLAYERS];
new Contrato1[MAX_PLAYERS];
new Contrato2[MAX_PLAYERS][43];
new RadioPrendida[MAX_PLAYERS];
new Policias911 = 0, POLICIA;
new LlamadaMovil[MAX_PLAYERS];
new LlamadaMedicos[MAX_PLAYERS];
new BigEar[MAX_PLAYERS],Skin[MAX_PLAYERS];
new VariableCaido[MAX_PLAYERS],
 TimerEsposar[MAX_PLAYERS];
new Esposando[MAX_PLAYERS],
Oficial[MAX_PLAYERS],
BajandoV[MAX_PLAYERS];
new EnPatrulla[MAX_PLAYERS];

//
new Text:TD_BX[2];
//registro textdraw
new Text:TD_ST[10],
	PlayerText:PTD_ST[MAX_PLAYERS][2],
	Text:TD_PLAYERDATA[6],
	PlayerText:PTD_PD[MAX_PLAYERS],
	P_register_step[MAX_PLAYERS]=-1;

/* iPhone S */
new Text:TD_iPhone[26];
new Text:TD_iPhone_Clock[2];
new Text:TD_iPhone_Gallery;
new Text:TD_iPhone_Time[3];
new PlayerText:PTD_iPhone_Gallery[MAX_PLAYERS];
new PlayerText:PTD_iPhone[37][MAX_PLAYERS];
new Text:TD_iPhone_GPS;
new PlayerText:PTD_iPhone_GPS[MAX_PLAYERS];
new Text:TD_iPhone_Radio[2];
new Text:TD_iPhone_Music[2];
new Text:TD_iPhone_Map;
new Text:TD_iPhone_Internet[2];
new Text:TD_iPhone_Call[13];
new PlayerText:PTD_iPhone_Call[MAX_PLAYERS];
new Text:TD_iPhone_CallYesNo[2];
new PlayerText:PTD_iPhone_Info[MAX_PLAYERS][2];
new called[MAX_PLAYERS][11];
new callto[MAX_PLAYERS];
new iPhone_CC[4][MAX_PLAYERS];
new iPhoneStatus[MAX_PLAYERS];
new iPhoneCallStatus[MAX_PLAYERS];
new MenuX[MAX_PLAYERS];
new MenuY[MAX_PLAYERS];

new Gallery[][] =
{
        "loadsc1:loadsc1",
        "loadsc2:loadsc2",
        "loadsc3:loadsc3",
        "loadsc4:loadsc4",
        "loadsc5:loadsc5",
        "loadsc6:loadsc6",
        "loadsc7:loadsc7",
        "loadsc8:loadsc8",
        "loadsc9:loadsc9",
        "loadsc10:loadsc10",
        "loadsc11:loadsc11",
        "loadsc12:loadsc12",
        "loadsc13:loadsc13",
        "loadsc14:loadsc14"

};

new Radio[][] =
{
        "http://somafm.com/tags.pls",
		"http://bbc.co.uk/radio/listen/live/r1.asx",
		"http://www.listenlive.eu/cadenacope.m3u",
		"http://onair-ha1.krone.at/kronehit-dance.mp3.m3u",
		"http://www.m2radio.fr/pls/m2club.m3u",
		"http://mp3.kataweb.it:8000/M2O.m3u",
		"http://www.listenlive.eu/vrtklara-low.m3u",
		"http://icecast4.play.cz/evropa2-64.mp3.m3u",
		"http://broadcast.infomaniak.net/nrj-low.mp3.m3u"

};

new Music[][] =
{
        "https://dl.dropboxusercontent.com/s/nqxrnokp4zspsw5/Basto%20-%20Again%20and%20Again%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/ln10micl32ys6yj/Blasterjaxx%20%26amp%3B%20Badd%20Dimes%20-%20Titan%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/pj21s5kz5ad5k3d/DVBBS%20%26amp%3B%20Tony%20Junior%20-%20Immortal%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/g1iuqoot6z7qfn7/Martin%20Garrix%20-%20Proxy%20%28FREE%20DOWNLOAD%29.mp3",
		"https://dl.dropboxusercontent.com/s/68htnt08uzgceqr/Martin%20Garrix%20-%20Animals%20%28Original%20Mix%29.mp3",
		"https://dl.dropboxusercontent.com/s/nvzyebx9ydow2ow/Starkillers%20%26%20DJ%20BL3ND%20-%20Xception%20%28Official%20Music%20Video%29.mp3",
		"https://dl.dropboxusercontent.com/s/0iof8iei1qxdc4f/Starkillers%20%26amp%3B%20Inpetto%20-%20Game%20Over%20%28Original%20Mix%29.mp3"

};

//Veiculos de grotti/textdraws
new Float:VehicleGrottiSpawns[][] =
{
    {1745.5151, -2066.0608, -35.7212, -90.0},
    {1762.0151, -2066.0608, -35.7212, -90.0},
    {1729.0151, -2066.0608, -35.7212, -90.0},
    {1778.5151, -2066.0608, -35.7212, -90.0}
};
new Text:TD_GrottiCatalogo[9],
	PlayerText:PTD_GrottiCatalogo[MAX_PLAYERS][4];


//banco
new Text:Bank[20],
	PlayerText:PlayerBank[MAX_PLAYERS][2],
	PlayerText:BankCash[MAX_PLAYERS],
	P_bank_state[MAX_PLAYERS]=-1;
	//cajeros
	new Float:Cajeros[][] =
{
	{1410.21143, -1228.69971, 13.16360},
	{1224.61646, -1428.50427, 13.07948},
	{1222.61646, -1428.50427, 13.07950},
	{1220.61646, -1428.50427, 13.07950},
	{1218.61646, -1428.50427, 13.07950},
	{1161.02258, -1497.45313, 15.41748},
	{1498.90039, -1847.78955, 13.16123},
	{1380.03198, -1642.76318, 13.17232},
	{538.80273, -1740.98254, 11.93303},
	{1007.77338, -1295.86072, 13.14124},
	{1312.18127, -897.83740, 39.17719},
	{1734.48511, -1907.68274, 13.18131},
	{1763.64221, -2204.38379, 13.15179},
	{1585.76953, -2286.25854, 13.12480},
	{1831.72632, -1308.21704, 13.11254},
	{2043.84473, -1414.96716, 16.76000},
	{818.16, -1360.63, 1992.27},
	{819.09, -1360.63, 1992.27},
	{820.03, -1360.63, 1992.27},
	{821.08, -1360.63, 1992.27},
	{1996.85571, 991.90173, 10.37796},
	{1999.35571, 991.90167, 10.37800},
	{2001.85571, 991.90167, 10.37800},
	{2485.83130, 1324.93884, 10.43051},
	{2033.10327, 1887.10425, 11.63956},
	{2085.66553, 2059.63940, 10.64579},
	{1643.64844, 2250.88745, 10.65640},
	{1641.64844, 2250.88745, 10.65640},
	{-1463.74280, 1873.54175, 32.20494},
	{-2451.76270, 2252.21826, 4.56842},
	{-2449.76270, 2252.21826, 4.56840},
	{-1980.58179, 168.44235, 27.20170},
	{-1980.58179, 166.44240, 27.20170},
	{1417.71362, -980.47516, 1639.36353},
	{1421.21716, -980.44891, 1639.38550},
	{1424.63049, -980.52667, 1639.37146}
};
//binco
new	Menu:TOYSMENU,
	PlayerText:PTD_Toys[MAX_PLAYERS][7],
	PlayerInMenu[MAX_PLAYERS][3],
	Text:TD_Ropa[6],
	PlayerText:PTD_Ropa[MAX_PLAYERS];
//catalogos
new P_catalogogrotti[MAX_PLAYERS]=-1,
    P_catalogogrotti2[MAX_PLAYERS]=-1,
    LaptoMenu[MAX_PLAYERS]=-1,
    P_No_Message_Atraco[MAX_PLAYERS]=-1,
    P_circularmenu_active[MAX_PLAYERS]=-1,
	P_catalogobinco[MAX_PLAYERS]=-1,
	P_catalogozip[MAX_PLAYERS]=-1,
	P_modshop[MAX_PLAYERS]=-1,
	P_transid[MAX_PLAYERS]=-1,
	P_tienda[MAX_PLAYERS]=-1;


enum BolEnum
{
	iprecio,
	iname[24]
}

enum ptoys
{
	pToy[MAX_TOYS],
    pToyModelID[MAX_TOYS],
    pToyBone[MAX_TOYS],
    Float:pToyX[MAX_TOYS],
    Float:pToyY[MAX_TOYS],
    Float:pToyZ[MAX_TOYS],
    Float:pToyRX[MAX_TOYS],
    Float:pToyRY[MAX_TOYS],
    Float:pToyRZ[MAX_TOYS],
    Float:pToySX[MAX_TOYS],
    Float:pToySY[MAX_TOYS],
    Float:pToySZ[MAX_TOYS]
	};
new ToysInfo[MAX_PLAYERS][ptoys];
enum AttachmentEnum
{
    attachmodel,
	attachprice,
    attachname[64]
}

new RP_CASCOS[][AttachmentEnum] = {
{18936, 250, "Casco de guerrero"},
{18937, 250, "Casco de guerrero"},
{18938, 250, "Casco de guerrero"},
{18976, 199, "Casco de motocross"},
{18977, 150, "Casco rojo"},
{18978, 150, "Casco blanco"},
{18979, 150, "Casco morado"},
{18645, 160, "Casco fuego"}
};

new RP_GORRAS[][AttachmentEnum] = {
{18926, 89, "Gorra 1 hacia adelante"},
{18927, 59, "Gorra 2 hacia adelante"},
{18928, 150, "Gorra 3 hacia adelante"},
{18929, 59, "Gorra 4 hacia adelante"},
{18930, 59, "Gorra 5 hacia adelante"},
{18931, 129, "Gorra 6 hacia adelante"},
{18932, 69, "Gorra 7 hacia adelante"},
{18933, 89, "Gorra 8 hacia adelante"},
{18934, 50, "Gorra 9 hacia adelante"},
{18935, 35, "Gorra 10 hacia adelante"},
{18939, 129, "Gorra 11 hacia atras"},
{18940, 100, "Gorra 12 hacia atras"},
{18941, 199, "Gorra 13 hacia atras"},
{18942, 199, "Gorra 14 hacia atras"},
{18943, 199, "Gorra 15 hacia atras"},
{18961, 59, "Gorra 16 hacia adelante"},
{18925, 80, "Boina 1"},
{18924, 80, "Boina 2"},
{18923, 80, "Boina 3"},
{18922, 80, "Boina 4"},
{18921, 80, "Boina 5"},
{18960, 399, "Gorra 17 hacia adelante"}
};

new RP_GORROS[][AttachmentEnum] = {
{18952, 25, "Gorro de nieve"},
{18953, 10, "Gorro de frio 1"},
{18954, 15, "Gorro de frio 2"},
{18964, 20, "Gorro de frio 3"},
{18966, 23, "Gorro de frio 4"},
{18967, 39, "Gorro de lona 1"},
{18968, 39, "Gorro de lona 2"},
{18969, 39, "Gorro de lona 3"},
//{19064, 150, "Gorro de navidad 1"},
//{19065, 150, "Gorro de navidad 2"},
//{19066, 150, "Gorro de navidad 3"},
{19067, 180, "Gorro gangsta"},
{19068, 50, "Gorro especial 1"},
{19069, 50, "Gorro especial 2"}
};

new RP_SOMBREROS[][AttachmentEnum] = {
{18944, 80, "Sombrero 1"},
{18945, 60, "Sombrero 2"},
{18946, 59, "Sombrero 3"},
{18947, 59, "Sombrero 4"},
{18948, 89, "Sombrero 5"},
{18949, 89, "Sombrero 6"},
{18950, 100, "Sombrero 7"},
{18951, 50, "Sombrero 8"},
{18962, 299, "Sombrero 9"},
{18970, 250, "Sombrero 10"},
{18971, 150, "Sombrero 11"},
{18972, 189, "Sombrero 12"},
{18973, 170, "Sombrero 13"}
};

new RP_BANDANAS[][AttachmentEnum] = {
{18911, 80, "Bandana 1"},
{18912, 95, "Bandana 2"},
{18913, 99, "Bandana 3"},
{18914, 199, "Bandana 4"},
{18915, 99, "Bandana 5"},
{18916, 89, "Bandana 6"},
{18917, 150, "Bandana 7"},
{18918, 89, "Bandana 8"},
{18919, 50, "Bandana 9"},
{18920, 89, "Bandana 10"}
};

new RP_GAFAS[][AttachmentEnum] = {
{19006, 99, "Gafas 1"},
{19007, 99, "Gafas 2"},
{19008, 99, "Gafas 3"},
{19009, 99, "Gafas 4"},
{19010, 99, "Gafas 5"},
{19011, 25, "Gafas 6"},
{19012, 99, "Gafas 7"},
{19013, 25, "Gafas 8"},
{19014, 30, "Gafas 9"},
{19015, 99, "Gafas 10"},
{19016, 50, "Gafas 11"},
{19017, 299, "Gafas 12"},
{19018, 299, "Gafas 13"},
{19019, 299, "Gafas 14"},
{19020, 299, "Gafas 15"},
{19021, 299, "Gafas 16"},
{19022, 499, "Gafas 17"},
{19023, 499, "Gafas 18"},
{19024, 499, "Gafas 19"},
{19025, 499, "Gafas 20"}
};

new RP_MASKS[][AttachmentEnum] = {
{19421, 150, "Mascara blanca"},
{19037, 150, "Mascara roja"},
{19038, 150, "Mascara verde"}
};


/* */

static Float:PosX[300][12] = {
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.09, 0.06, 0.08, 0.088, 0.095, 0.097, 0.115, 0.1, 0.12, 0.13, 0.14, 0.16}, //-0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.14, 0.01, 0.03, 0.038, 0.045, 0.047, 0.065, 0.05, 0.07, 0.08, 0.09, 0.11}, //-0.06
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.1, 0.05, 0.07, 0.078, 0.085, 0.087, 0.105, 0.09, 0.11, 0.12, 0.13, 0.15}, //-0.02
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.07, 0.08, 0.1, 0.108, 0.115, 0.117, 0.135, 0.12, 0.14, 0.15, 0.16, 0.18}, //+0.01
{-0.15, 0.0, 0.02, 0.028, 0.035, 0.037, 0.055, 0.04, 0.06, 0.07, 0.08, 0.1}, //-0.07
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.06, 0.02, 0.11, 0.118, 0.125, 0.127, 0.145, 0.13, 0.15, 0.16, 0.17, 0.19}, //+0.02
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.12, 0.03, 0.05, 0.058, 0.065, 0.067, 0.085, 0.07, 0.09, 0.1, 0.11, 0.13}, //-0.04
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.07, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17},
{-0.08, 0.08, 0.09, 0.098, 0.105, 0.107, 0.125, 0.11, 0.13, 0.14, 0.15, 0.17}
};


static Float: SkinCaps[300][6] = {
{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
{0.136207, 0.006102, -0.013858, 0.612963, 0.000000, 0.000000}, //Skin - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
{0.167425, -0.006185, -0.004779, 0.612963, 0.000000, 0.000000}, //Skin - 3
{0.188546, -0.006185, -0.011507, 0.612963, 0.000000, 0.000000}, //Skin - 4
{0.188546, -0.006185, -0.011507, 0.612963, 0.000000, 0.000000}, //Skin - 5
{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
{0.157787, 0.012994, -0.014590, 0.612963, 0.000000, 0.000000},  //Skin - 7
{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
{0.139572, -0.003642, -0.002145, 0.612963, 0.000000, 10.335063}, //Skin - 12
{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
{0.104552, -0.015122, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 15
{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
{0.149627, 0.002943, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 17
{0.105319, 0.003517, -0.005275, 0.612963, 2.307199, 357.920410}, //Skin - 18
{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
{0.154598, -0.003549, -0.013304, 0.000000, 0.000000, 0.000000},  //Skin - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
{0.152029, -0.018331, -0.003139, 0.000000, 358.344604, 348.467559}, //Skin - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
{0.155160, -0.022985, -0.011249, 0.000000, 358.344604, 348.467559}, //Skin - 30
{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
{0.094003, -0.022985, -0.011249, 0.000000, 358.344604, 348.467559}, //Skin - 33
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
{0.133873, -0.019703, -0.000058, 0.000000, 358.344604, 348.467559},//Skin - 40
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
{0.164100, -0.040816, -0.011624, 357.030151, 358.344604, 342.811187},//Skin - 50
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
{0.138485, -0.012405, -0.011567, 357.030151, 358.344604, 342.811187},//Skin - 60
{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
{0.110634, 0.009623, -0.011624, 357.030151, 358.344604, 342.811187},//Skin - 64
{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
{0.117674, 0.014567, -0.011567, 357.030151, 358.344604, 342.811187}, //Skin - 73
{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
{0.134968, -0.020112, -0.003604, 357.030151, 358.344604, 342.811187},//Skin - 76
{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
{0.122285, -0.020112, -0.003604, 357.030151, 358.344604, 342.811187},//Skin - 86
{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
{0.144202, -0.021273, -0.005915, 357.030151, 358.344604, 342.811187},//Skin - 120
{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//skin - 129
{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
{0.140332, -0.013011, -0.004432, 354.106964, 357.498840, 352.802062}, //Skin - 273
{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
{0.189940, -0.004297, 0.001481, 354.106964, 357.498840, 352.802062},//Skin - 285
{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705},//Skin - 299
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};

static Float: SkinBackCaps[301][6] = {
{0.152561, 0.009771, -0.003578, 0.000000, 0.000000, 0.000000}, // CapBack1 - capblack 0
{0.154740, -0.000088, -0.007099, 0.000000, 0.000000, 353.034423}, // CapBack1 - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.171257, -0.000811, -0.001653, 356.842010, 357.498840, 350.228424}, // CapBack1 - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.184302, -0.008025, -0.003483, 356.842010, 357.498840, 350.228424}, // CapBack1 - 5
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.171452, 0.020331, -0.009405, 0.000000, 0.000000, 0.328186}, // CapBack1 - 7
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.165115, -0.006727, -0.005117, 0.000000, 0.000000, 350.829223}, // CapBack1 - 9
{0.139765, -0.006727, -0.008035, 0.000000, 0.000000, 350.829223}, // CapBack1 - 10
{0.164338, 0.010682, -0.006304, 0.000000, 0.000000, 1.317132}, // CapBack5 - 11
{0.168692, -0.012686, -0.006304, 0.000000, 0.000000, 2.620430}, // CapBack5 - 12
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.180397, -0.037633, -0.003055, 0.000000, 0.000000, 334.995819}, // CapBack5 - 14
{0.138529, -0.023847, -0.006882, 0.000000, 0.000000, 349.513183}, // CapBack5 - 15
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.165150, 0.008241, -0.002468, 0.000000, 0.000000, 359.865356}, // CapBack5 - 17
{0.125999, -0.006320, -0.007210, 0.000000, 0.000000, 351.895660}, // CapBack5 - 18
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.178122, -0.005292, -0.007210, 0.000000, 0.000000, 357.589874}, // CapBack5 - 20
{0.171341, -0.012229, -0.009898, 0.000000, 0.000000, 351.194061}, // CapBack5 - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.157626, -0.029724, -0.004464, 0.000000, 0.000000, 331.973846}, // CapBack5 - 25
{0.152022, -0.029724, -0.004464, 0.000000, 0.000000, 331.973846}, // CapBack5 - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.180999, -0.032568, -0.011626, 0.000000, 0.000000, 340.068969}, // CapBack5 - 30
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.127392, -0.045833, -0.011626, 0.000000, 0.000000, 332.066528}, // CapBack5 - 39
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.106016, -0.009698, -0.005557, 0.000000, 0.000000, 352.879241}, // CapBack5 - 43
{0.123384, -0.003855, -0.005557, 0.000000, 0.000000, 339.552703}, // CapBack5 - 44
{0.133027, -0.010028, -0.005557, 0.000000, 0.000000, 351.249084}, // CapBack5 - 45
{0.187303, 0.009308, -0.007567, 0.000000, 0.000000, 354.531066}, // CapBack5 - 46
{0.181427, -0.029691, -0.009906, 0.000000, 0.000000, 340.553741}, // CapBack5 - 47
{0.202131, -0.033994, -0.008840, 0.000000, 0.000000, 349.174133}, // CapBack5 - 48
{0.144064, -0.046047, -0.005176, 0.000000, 0.000000, 327.833953}, // CapBack5 - 49
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.156962, -0.014533, -0.005744, 0.000000, 0.000000, 339.649780}, // CapBack5 - 53
{0.170897, 0.032927, -0.004505, 0.000000, 0.000000, 4.658165}, // CapBack5 - 54
{0.170897, 0.000525, -0.008647, 0.000000, 0.000000, 4.658165}, // CapBack5 - 55
{0.170897, 0.000525, -0.008647, 0.000000, 0.000000, 4.658165}, // CapBack5 - 56
{0.204822, 0.013232, -0.007975, 0.000000, 0.000000, 358.332122}, // CapBack5 - 57
{0.137341, 0.002028, -0.007975, 0.000000, 0.000000, 358.332122}, // CapBack5 - 58
{0.186327, 0.028765, -0.006357, 0.000000, 0.000000, 9.349652}, // CapBack5 - 59
{0.167387, -0.014165, -0.010267, 0.000000, 0.000000, 347.202239}, // CapBack5 - 60
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.153622, 0.026057, 0.001912, 0.000000, 0.000000, 1.657262}, // CapBack5 - 62
{0.180733, 0.004340, -0.005340, 0.000000, 0.000000, 0.000000}, // CapBack1 - 63
{0.135751, 0.000370, -0.005340, 0.000000, 0.000000, 351.369049}, // CapBack1 - 64
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.151557, 0.003149, -0.004474, 0.000000, 0.000000, 343.369781}, // CapBack2 - 66
{0.148032, -0.000815, -0.004474, 0.000000, 0.000000, 347.334899}, // CapBack2 - 67
{0.148032, 0.018842, -0.007647, 0.000000, 0.000000, 355.218048}, // CapBack2 - 68
{0.169898, 0.006962, -0.006380, 0.000000, 0.000000, 4.303595}, // CapBack2 - 69
{0.153013, 0.012083, 0.000254, 0.000000, 0.000000, 348.646881}, // CapBack2 - 70
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.150600, 0.005597, -0.006945, 0.000000, 0.000000, 348.646881}, // CapBack2 - 72
{0.151958, 0.007609, -0.007373, 0.000000, 0.000000, 352.321228}, // CapBack2 - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.164638, -0.009942, -0.007373, 0.000000, 0.000000, 347.293334}, // CapBack2 - 75
{0.174797, -0.027673, -0.002500, 0.000000, 0.000000, 347.293334}, // CapBack2 - 76
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.145512, -0.005392, 0.000265, 0.000000, 0.000000, 349.725921}, // CapBack2 - 79
{0.135133, -0.015628, -0.005431, 0.000000, 0.000000, 349.725921}, // CapBack2 - 80
{0.135133, -0.015628, -0.005431, 0.000000, 0.000000, 349.725921}, // CapBack2 - 81
{0.208755, -0.028677, -0.005431, 0.000000, 0.000000, 335.827545}, // CapBack2 - 82
{0.198342, -0.028677, -0.005431, 0.000000, 0.000000, 335.827545}, // CapBack2 - 83
{0.207749, -0.028677, -0.005431, 0.000000, 0.000000, 335.827545}, // CapBack2 - 84
{0.186061, -0.017886, -0.009003, 0.000000, 0.000000, 342.158477}, // CapBack2 - 85
{0.119761, -0.000590, -0.006898, 356.842010, 357.498840, 350.228424}, // CapBack2 - 86
{0.162129, -0.029754, -0.009792, 0.000000, 0.000000, 335.401397}, // CapBack2 - 87
{0.162129, 0.006584, -0.005103, 0.000000, 0.000000, 350.173980}, // CapBack2 - 88
{0.173523, -0.018237, -0.008053, 0.000000, 0.000000, 1.074956}, // CapBack2 - 89
{0.173523, 0.004939, -0.005089, 0.000000, 0.000000, 1.074956}, // CapBack2 - 90
{0.173523, -0.002368, -0.005089, 0.000000, 0.000000, 1.074956}, // CapBack2 - 91
{0.191579, -0.039141, -0.005089, 0.000000, 0.000000, 353.232330}, // CapBack2 - 92
{0.190105, 0.007120, -0.005089, 0.000000, 0.000000, 8.263933}, // CapBack2 - 93
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.140587, -0.020173, -0.002521, 0.000000, 0.000000, 354.900054}, // CapBack2 - 95
{0.166945, -0.018467, -0.006057, 0.000000, 0.000000, 340.769165}, // CapBack2 - 96
{0.149077, -0.028112, -0.006057, 0.000000, 0.000000, 340.769165}, // CapBack2 - 97
{0.169777, -0.007985, -0.006057, 0.000000, 0.000000, 340.769165}, // CapBack2 - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.196824, -0.009257, -0.006057, 0.000000, 0.000000, 356.336090}, // CapBack2 - 100
{0.177550, -0.027981, -0.006057, 0.000000, 0.000000, 343.939056}, // CapBack2 - 101
{0.174734, 0.009933, -0.009756, 0.000000, 0.000000, 3.055547}, // CapBack2 - 102
{0.188160, -0.013580, -0.004421, 0.000000, 0.000000, 356.492431}, // CapBack2 - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.190762, -0.013580, -0.004421, 0.000000, 0.000000, 356.492431}, // CapBack2 - 105
{0.187602, -0.025435, -0.010075, 0.000000, 0.000000, 346.004516}, // CapBack2 - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.175870, -0.003954, -0.007077, 0.000000, 0.000000, 346.004516}, // CapBack2 - 108
{0.172407, -0.013431, -0.010775, 0.000000, 0.000000, 346.004516}, // CapBack2 - 109
{0.172407, -0.013431, -0.010775, 0.000000, 0.000000, 346.004516}, // CapBack2 - 110
{0.150013, 0.003311, -0.006409, 0.000000, 0.000000, 352.270080}, // CapBack2 - 111
{0.141717, -0.009559, -0.006409, 0.000000, 0.000000, 352.270080}, // CapBack2 - 112
{0.185393, -0.023785, -0.004980, 0.000000, 0.000000, 345.606567}, // CapBack2 - 113
{0.185393, -0.000169, -0.010926, 0.000000, 0.000000, 351.197326}, // CapBack2 - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.182650, 0.004789, -0.010926, 0.000000, 0.000000, 357.257171}, // CapBack2 - 116
{0.134004, 0.017698, -0.005831, 0.000000, 0.000000, 357.257171}, // CapBack2 - 117
{0.134004, 0.017698, -0.005831, 0.000000, 0.000000, 357.257171}, // CapBack2 - 118
{0.156197, 0.006800, -0.005671, 351.351135, 357.498840, 350.228424}, // CapBack2 - 119
{0.178981, -0.028772, -0.004536, 0.000000, 0.000000, 346.605316}, // CapBack2 - 120
{0.183907, -0.011432, -0.004536, 0.000000, 0.000000, 355.820770}, // CapBack2 - 121
{0.165320, -0.005021, -0.004536, 0.000000, 0.000000, 355.820770}, // CapBack2 - 122
{0.200145, -0.002194, -0.008751, 0.000000, 0.000000, 358.896423}, // CapBack2 - 123
{0.182011, 0.001444, -0.002327, 0.000000, 0.000000, 357.818420}, // CapBack2 - 124
{0.151200, 0.008420, -0.005776, 0.000000, 0.000000, 357.818420}, // CapBack2 - 125
{0.187609, 0.001857, -0.004008, 0.000000, 0.000000, 7.271462}, // CapBack2 - 126
{0.188872, -0.010934, -0.006273, 0.000000, 0.000000, 354.714599}, // CapBack2 - 127
{0.187277, -0.010814, -0.012647, 0.000000, 0.000000, 342.365417}, // CapBack2 - 128
{0.133478, 0.005174, -0.012647, 0.000000, 0.000000, 358.076538}, // CapBack2 - 129
{0.096691, -0.040395, -0.006268, 0.000000, 0.000000, 328.075073}, // CapBack2 - 130
{0.159023, -0.001297, -0.003358, 0.000000, 0.000000, 354.126007}, // CapBack2 - 131
{0.052064, -0.014930, -0.003462, 0.000000, 0.000000, 345.376892}, // CapBack2 - 132
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.165563, -0.013992, -0.003462, 0.000000, 0.000000, 356.365600}, // CapBack2 - 134
{0.146837, -0.006449, -0.006697, 0.000000, 0.000000, 349.979614}, // CapBack2 - 135
{0.146837, -0.001257, -0.006697, 0.000000, 0.000000, 353.938903}, // CapBack2 - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.179458, 0.018936, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 138
{0.179458, 0.018936, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 139
{0.182565, 0.010967, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 140
{0.182565, 0.009535, -0.006697, 0.000000, 0.000000, 13.018135}, // CapBack2 - 141
{0.182565, -0.002640, -0.006697, 0.000000, 0.000000, 359.800872}, // CapBack2 - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.228769, -0.002640, -0.011189, 0.000000, 0.000000, 359.800872}, // CapBack2 - 144
{0.171856, 0.000946, -0.001703, 0.000000, 0.000000, 359.800872}, // CapBack2 - 145
{0.154141, -0.004233, -0.008664, 0.000000, 0.000000, 355.798858}, // CapBack2 - 146
{0.149305, -0.024469, 0.000980, 0.000000, 0.000000, 351.391906}, // CapBack2 - 147
{0.176194, -0.021742, -0.003060, 0.000000, 0.000000, 351.391906}, // CapBack2 - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.187446, -0.014221, -0.003060, 0.000000, 0.000000, 2.834435}, // CapBack2 - 150
{0.197199, 0.001229, -0.003060, 0.000000, 0.000000, 2.834435}, // CapBack2 - 151
{0.172892, -0.015298, -0.003060, 0.000000, 0.000000, 2.834435}, // CapBack2 - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.138590, 0.002724, -0.005538, 0.000000, 0.000000, 2.834435}, // CapBack2 - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.219108, -0.037769, -0.001686, 0.000000, 0.000000, 354.529266}, // CapBack2 - 156
{0.155086, 0.003292, 0.001146, 0.000000, 0.000000, 354.529266}, // CapBack2 - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.145796, -0.011042, -0.004201, 0.000000, 0.000000, 354.529266}, // CapBack2 - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.158876, 0.012828, -0.008527, 0.000000, 0.000000, 354.529266}, // CapBack2 - 162
{0.137763, -0.001837, -0.008527, 0.000000, 0.000000, 345.313812}, // CapBack2 - 163
{0.146060, -0.013492, -0.008527, 0.000000, 0.000000, 345.313812}, // CapBack2 - 164
{0.163246, -0.012942, -0.004973, 0.000000, 0.000000, 344.333374}, // CapBack2 - 165
{0.140111, 0.007943, -0.004973, 0.000000, 0.000000, 349.497924}, // CapBack2 - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.141848, 0.007943, -0.010143, 0.000000, 0.000000, 349.497924}, // CapBack2 - 168
{0.165495, 0.006009, -0.005755, 0.000000, 0.000000, 10.909480}, // CapBack2 - 169
{0.172246, 0.002606, -0.011039, 0.000000, 0.000000, 0.820177}, // CapBack2 - 170
{0.179460, -0.000000, -0.006654, 0.000000, 0.000000, 359.487091}, // CapBack2 - 171
{0.179460, -0.000000, -0.006654, 0.000000, 0.000000, 359.487091}, // CapBack2 - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.208994, -0.007943, -0.006654, 0.000000, 0.000000, 345.862579}, // CapBack2 - 174
{0.178250, -0.007943, -0.009599, 0.000000, 0.000000, 345.862579}, // CapBack2 - 175
{0.188804, -0.008412, -0.010471, 0.000000, 0.000000, 357.926025}, // CapBack2 - 176
{0.215245, -0.046786, -0.010471, 0.000000, 0.000000, 333.935485}, // CapBack2 - 177
{0.196470, 0.024980, -0.006861, 0.000000, 0.000000, 9.335173}, // CapBack2 - 178
{0.170804, 0.017931, -0.009900, 0.000000, 0.000000, 9.335173}, // CapBack2 - 179
{0.202440, -0.022104, -0.009900, 0.000000, 0.000000, 350.458648}, // CapBack2 - 180
{0.170491, -0.001973, -0.004454, 0.000000, 0.000000, 350.458648}, // CapBack2 - 181
{0.139138, 0.009438, -0.007567, 0.000000, 0.000000, 350.458648}, // CapBack2 - 182
{0.144261, 0.006484, -0.005938, 0.000000, 0.000000, 350.458648}, // CapBack2 - 183
{0.173439, 0.008749, -0.009442, 0.000000, 0.000000, 4.531515}, // CapBack2 - 184
{0.178510, -0.005743, -0.003814, 0.000000, 0.000000, 354.167968}, // CapBack2 - 185
{0.182519, -0.013562, -0.003814, 0.000000, 0.000000, 354.167968}, // CapBack2 - 186
{0.146338, -0.063390, -0.001417, 0.000000, 0.000000, 331.099212}, // CapBack2 - 187
{0.149057, -0.028143, -0.001417, 0.000000, 0.000000, 331.099212}, // CapBack2 - 188
{0.190356, -0.030107, -0.001417, 0.000000, 0.000000, 343.327667}, // CapBack2 - 189
{0.202054, -0.040251, -0.001417, 0.000000, 0.000000, 343.327667}, // CapBack2 - 190
{0.197020, -0.033725, -0.006150, 0.000000, 0.000000, 343.327667}, // CapBack2 - 191
{0.193556, -0.001809, -0.006150, 0.000000, 0.000000, 355.718383}, // CapBack2 - 192
{0.196684, -0.004270, -0.006150, 0.000000, 0.000000, 355.718383}, // CapBack2 - 193
{0.196684, -0.004270, -0.006150, 0.000000, 0.000000, 355.718383}, // CapBack2 - 194
{0.206905, 0.000445, -0.006150, 0.000000, 0.000000, 7.253017}, // CapBack2 - 195
{0.134116, 0.009748, -0.006150, 0.000000, 0.000000, 1.506720}, // CapBack2 - 196
{0.179956, -0.001632, -0.006150, 0.000000, 0.000000, 1.506720}, // CapBack2 - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.168909, -0.005808, -0.006150, 0.000000, 0.000000, 1.506720}, // CapBack2 - 199
{0.174613, 0.018596, -0.006150, 0.000000, 0.000000, 8.241870}, // CapBack2 - 200
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.186252, 0.025931, -0.006150, 359.226074, 0.000000, 16.592515}, // CapBack2 - 203
{0.163428, 0.002381, -0.010481, 1.199788, 0.000000, 354.398010}, // CapBack2 - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.163428, 0.008872, -0.010481, 1.199788, 0.000000, 354.398010}, // CapBack2 - 206
{0.112955, 0.013557, -0.004934, 1.199788, 0.000000, 354.398010}, // CapBack2 - 207
{0.155579, 0.006800, -0.001140, 351.351135, 357.498840, 350.228424}, // CapBack2 - 208
{0.160963, 0.002805, -0.004934, 1.199788, 0.000000, 359.006042}, // CapBack2 - 209
{0.128493, -0.003984, -0.004934, 1.199788, 0.000000, 359.006042}, // CapBack2 - 210
{0.176982, 0.023702, -0.004934, 1.199788, 0.000000, 14.166459}, // CapBack2 - 211
{0.128467, -0.008255, -0.004934, 1.199788, 0.000000, 343.645538}, // CapBack2 - 212
{0.185985, -0.003673, -0.005680, 1.199788, 0.000000, 358.541107}, // CapBack2 - 213
{0.176328, -0.009473, -0.004319, 1.199788, 0.000000, 358.541107}, // CapBack2 - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.181434, 0.009004, -0.004319, 1.199788, 0.000000, 10.780131}, // CapBack2 - 216
{0.161066, -0.037283, -0.004319, 1.199788, 0.000000, 328.898590}, // CapBack2 - 217
{0.149989, 0.001034, -0.007441, 1.199788, 0.000000, 352.247955}, // CapBack2 - 218
{0.158134, 0.033803, -0.004034, 1.199788, 0.000000, 23.654287}, // CapBack2 - 219
{0.137110, -0.021979, -0.006172, 1.199788, 0.000000, 336.757873}, // CapBack2 - 220
{0.221894, 0.006963, -0.006172, 1.199788, 0.000000, 7.847995}, // CapBack2 - 221
{0.204477, -0.043676, -0.006172, 1.199788, 0.000000, 350.189361}, // CapBack2 - 222
{0.207657, -0.008146, -0.006172, 1.199788, 0.000000, 350.189361}, // CapBack2 - 223
{0.190393, 0.000228, 0.001606, 1.199788, 0.000000, 11.879378}, // CapBack2 - 224
{0.190393, 0.000228, 0.001606, 1.199788, 0.000000, 11.879378}, // CapBack2 - 225
{0.163592, 0.006964, -0.009153, 1.199788, 0.000000, 11.879378}, // CapBack2 - 226
{0.182670, 0.016327, -0.005560, 1.199788, 0.000000, 359.033477}, // CapBack2 - 227
{0.200009, -0.013580, -0.005560, 1.199788, 0.000000, 347.257019}, // CapBack2 - 228
{0.151536, -0.004985, -0.003730, 1.199788, 0.000000, 1.332237}, // CapBack2 - 229
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.162618, 0.025505, -0.006327, 1.199788, 0.000000, 1.332237}, // CapBack2 - 231
{0.162618, -0.021187, -0.006327, 1.199788, 0.000000, 1.332237}, // CapBack2 - 232
{0.184628, 0.009246, -0.006327, 1.199788, 0.000000, 9.318798}, // CapBack2 - 233
{0.138607, -0.007896, -0.002440, 1.199788, 0.000000, 357.667327}, // CapBack2 - 234
{0.102028, -0.007896, -0.002440, 1.199788, 0.000000, 357.667327}, // CapBack2 - 235
{0.141433, 0.001568, -0.007129, 1.199788, 0.000000, 357.667327}, // CapBack2 - 236
{0.171422, 0.003976, -0.007129, 1.199788, 0.000000, 14.896168}, // CapBack2 - 237
{0.162112, -0.033918, -0.009757, 1.199788, 0.000000, 329.660644}, // CapBack2 - 238
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.195676, -0.000346, -0.009059, 1.199788, 0.000000, 359.219635}, // CapBack2 - 240
{0.225913, -0.093273, -0.009059, 1.199788, 0.000000, 338.582885}, // CapBack2 - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.119849, 0.008509, -0.004875, 1.199788, 0.000000, 351.250366}, // CapBack2 - 243
{0.142359, -0.007982, -0.002139, 1.199788, 0.000000, 338.201110}, // CapBack2 - 244
{0.213636, 0.020328, -0.002139, 1.199788, 0.000000, 9.539301}, // CapBack2 - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.191313, -0.025602, -0.008449, 1.199788, 0.000000, 345.625457}, // CapBack2 - 247
{0.218937, -0.025602, -0.008449, 1.199788, 0.000000, 345.625457}, // CapBack2 - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.171738, -0.008147, -0.009720, 1.199788, 0.000000, 351.946502}, // CapBack2 - 250
{0.171738, -0.008147, -0.004024, 1.199788, 0.000000, 351.946502}, // CapBack2 - 251
{0.191814, -0.018688, -0.001956, 1.199788, 0.000000, 351.946502}, // CapBack2 - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.191814, -0.018688, -0.001956, 1.199788, 0.000000, 349.399566}, // CapBack2 - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.172645, -0.018688, -0.001956, 1.199788, 0.000000, 349.399566}, // CapBack2 - 256
{0.164325, -0.017981, -0.006244, 1.199788, 0.000000, 339.549896}, // CapBack2 - 257
{0.182589, -0.038286, -0.006244, 1.199788, 0.000000, 339.549896}, // CapBack2 - 258
{0.185917, -0.047972, -0.006244, 1.199788, 0.000000, 339.549896}, // CapBack2 - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.128629, 0.020902, -0.006244, 1.199788, 0.000000, 358.125885}, // CapBack2 - 262
{0.179700, 0.011040, 0.000088, 1.199788, 0.000000, 12.603851}, // CapBack2 - 263
{0.216605, -0.099891, 0.000088, 1.199788, 0.000000, 342.666625}, // CapBack2 - 264
{0.147310, -0.000934, -0.005484, 1.199788, 0.000000, 357.229003}, // CapBack2 - 265
{0.158313, -0.000955, -0.006872, 1.199788, 0.000000, 357.229003}, // CapBack2 - 266
{0.166343, -0.003141, -0.006872, 1.199788, 0.000000, 2.876371}, // CapBack2 - 267
{0.171693, -0.050949, -0.009712, 1.199788, 0.000000, 340.129333}, // CapBack2 - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.178678, -0.035822, -0.005613, 1.199788, 0.000000, 334.835510}, // CapBack2 - 272
{0.134644, -0.001463, -0.003339, 351.351135, 357.498840, 350.228424}, // CapBack 2 - 273
{0.143802, -0.005543, -0.005613, 1.199788, 0.000000, 342.616333}, // CapBack2 - 274
{0.143802, -0.002142, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 275
{0.143802, -0.002142, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.154324, 0.004585, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 280
{0.141513, -0.001361, -0.006920, 1.199788, 0.000000, 342.616333}, // CapBack2 - 281
{0.178879, -0.032552, -0.007550, 1.199788, 0.000000, 339.513275}, // CapBack2 - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.148372, 0.012662, -0.003643, 1.199788, 0.000000, 352.562530}, // CapBack2 - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.169198, -0.008094, -0.004952, 1.199788, 0.000000, 355.882568}, // CapBack2 - 290
{0.197062, -0.010244, -0.008868, 1.199788, 0.000000, 347.195098}, // CapBack2 - 291
{0.129213, -0.005561, -0.008868, 1.199788, 0.000000, 347.195098}, // CapBack2 - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},
{0.184856, -0.017724, -0.004568, 1.199788, 0.000000, 340.720977}, // CapBack2 - 294
{0.164693, -0.035874, -0.004568, 1.199788, 0.000000, 338.932373}, // CapBack2 - 295
{0.162584, -0.071738, -0.009352, 1.199788, 0.000000, 324.114501}, // CapBack2 - 296
{0.201801, 0.013063, -0.004067, 1.199788, 0.000000, 11.497174}, // CapBack2 - 297
{0.170668, 0.000798, -0.008211, 1.199788, 0.000000, 0.166477}, // CapBack2 - 298
{0.189388, -0.034348, -0.008211, 1.199788, 0.000000, 338.146575}, // CapBack2 - 299
{0.189388, -0.034348, -0.008211, 1.199788, 0.000000, 338.146575} // CapBack2 - 299
};

new Float:SkinOffSet[301][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968, 1.000000}, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968, 1.000000}, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968, 1.000000}, // - 2
{0.099500, 0.047703, 0.000558, 280.687683, 90.938697, 169.126358, 1.000000}, // - 3
{0.126660, 0.017465, -0.004450, 281.516479, 103.193008, 168.312896, 1.167009}, // - 4
{0.109650, 0.017465, -0.004712, 281.516479, 106.686439, 168.312896, 1.167009}, // - 5
{0.101269, 0.028933, 0.000001, 281.516479, 91.839576, 168.312896, 1.000000}, // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968, 1.000000}, // - 7
{0.087873, 0.038192, -0.003603, 281.516479, 91.839576, 168.312896, 1.020467}, // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968, 1.000000},  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968, 1.000000}, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968, 1.000000}, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968, 1.000000}, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968, 1.000000},  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968, 1.000000}, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968, 1.000000}, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968, 1.000000}, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968, 1.000000}, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968, 1.000000}, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968, 1.000000}, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968, 1.000000}, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968, 1.000000}, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968, 1.000000}, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968, 1.000000}, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968, 1.000000}, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968, 1.000000}, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968, 1.000000},  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968, 1.000000}, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968, 1.000000}, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968, 1.000000},// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968, 1.000000}, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968, 1.000000}, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968, 1.000000}, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968, 1.000000}, // - 41
{0.087873, 0.037386, -0.003603, 281.516479, 91.839576, 168.312896, 1.093392}, // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968, 1.000000}, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968, 1.000000}, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968, 1.000000}, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968, 1.000000}, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968, 1.000000}, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968, 1.000000}, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968, 1.000000}, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968, 1.000000}, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968, 1.000000}, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968, 1.000000}, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968, 1.000000}, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968, 1.000000}, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968, 1.000000}, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968, 1.000000}, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000, 1.000000}, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000, 1.000000},  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000, 1.000000}, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000, 1.000000}, // - 64
{0.087873, 0.032505, -0.003603, 281.516479, 91.839576, 168.312896, 0.965358}, // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000, 1.000000},  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000, 1.000000},  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000, 1.000000}, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000, 1.000000}, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000, 1.000000},  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000, 1.000000}, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000, 1.000000},  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000, 1.000000},  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000, 1.000000}, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000, 1.000000}, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000, 1.000000}, // - 85
{0.025608, -0.003408, 281.516479, 106.686721, 167.551193, 0.965358}, // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000, 1.000000}, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000, 1.000000}, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000, 1.000000}, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000, 1.000000}, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000, 1.000000}, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000, 1.000000}, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000, 1.000000}, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000, 1.000000}, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000, 1.000000}, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000, 1.000000}, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000, 1.000000}, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000, 1.000000}, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000, 1.000000}, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000, 1.000000},  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000, 1.000000}, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000, 1.000000}, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000, 1.000000}, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000, 1.000000}, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000, 1.000000}, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000, 1.000000}, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000, 1.000000}, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000, 1.000000}, // - 118
{0.093011, 0.037032, -0.001987, 281.516479, 94.968688, 167.551193, 1.051324}, // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000, 1.000000}, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000, 1.000000}, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000, 1.000000}, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000, 1.000000}, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000, 1.000000},  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000, 1.000000}, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000, 1.000000},  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000, 1.000000},  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000, 1.000000}, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000, 1.000000}, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000, 1.000000}, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000, 1.000000}, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000, 1.000000}, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000, 1.000000}, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000, 1.000000}, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000, 1.000000}, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000, 1.000000}, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000, 1.000000}, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000, 1.000000}, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000, 1.000000}, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000, 1.000000}, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000, 1.000000}, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000, 1.000000},  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000, 1.000000}, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000, 1.000000},  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000, 1.000000}, // - 148
{0.099901, 0.011976, 0.001273, 281.516479, 97.607620, 167.551193, 1.190787}, // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000, 1.000000}, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000, 1.000000}, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000, 1.000000}, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000, 1.000000},  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000, 1.000000}, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}, // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000, 1.000000}, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000, 1.000000}, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000, 1.000000}, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000, 1.000000}, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000, 1.000000}, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000, 1.000000},  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000, 1.000000}, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000, 1.000000}, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000, 1.000000}, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000, 1.000000},  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000, 1.000000},  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000, 1.000000},  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000, 1.000000}, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000, 1.000000}, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000, 1.000000}, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000, 1.000000}, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000, 1.000000}, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000, 1.000000}, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000, 1.000000}, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000, 1.000000}, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000, 1.000000}, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000, 1.000000}, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000, 1.000000}, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000, 1.000000}, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000, 1.000000}, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000, 1.000000}, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000, 1.000000}, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000, 1.000000}, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000, 1.000000}, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000, 1.000000},  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000, 1.000000},  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000, 1.000000}, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000, 1.000000}, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000, 1.000000}, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000, 1.000000},  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000, 1.000000}, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000, 1.000000}, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000, 1.000000}, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000, 1.000000}, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000, 1.000000}, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000, 1.000000}, // - 207
{0.088610, 0.043561, 0.001273, 281.516479, 89.674781, 167.551193, 1.000000}, // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000, 1.000000}, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000, 1.000000}, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000, 1.000000}, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000, 1.000000},  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000, 1.000000}, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000, 1.000000}, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000, 1.000000}, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000, 1.000000}, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000, 1.000000},  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000, 1.000000}, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000, 1.000000}, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000, 1.000000}, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000, 1.000000}, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000, 1.000000}, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000, 1.000000}, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000, 1.000000}, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000, 1.000000}, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000, 1.000000}, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000, 1.000000}, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000, 1.000000}, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000, 1.000000}, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000, 1.000000}, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000, 1.000000},  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000, 1.000000}, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000, 1.000000}, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000, 1.000000},  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000, 1.000000}, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000, 1.000000},  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000, 1.000000}, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000, 1.000000},  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000, 1.000000}, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000, 1.000000}, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000, 1.000000}, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000, 1.000000},  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000, 1.000000}, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000, 1.000000}, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000, 1.000000},  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000, 1.000000},  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000, 1.000000}, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000, 1.000000}, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000, 1.000000}, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000, 1.000000}, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000, 1.000000}, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000, 1.000000},  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000, 1.000000},  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000, 1.000000},  // - 272
{0.080779, 0.028227, -0.001415, 281.516479, 91.776855, 167.551193, 1.061396}, // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000, 1.000000}, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000, 1.000000}, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000, 1.000000}, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000, 1.000000},  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000, 1.000000},  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000, 1.000000}, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000, 1.000000},  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000, 1.000000}, // - 288
{0.081684, 0.015000, 0.001780, 281.516479, 108.106758, 169.790878, 1.042815}, // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000, 1.000000}, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000, 1.000000}, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000, 1.000000}, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000, 1.000000}, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000, 1.000000},  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000, 1.000000}, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000, 1.000000}, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000, 1.000000},  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000, 1.000000}, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000, 1.000000},  // - 299
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000, 1.000000}  // - 299
};


/* */
//menu
new Menu:AlhambraMenu,
	Menu:PigPenMenu,
	Menu:BincoMenu,
	Menu:ZipMenu,
	Menu:PizzaStackedMenu,
	Menu:PizzaMenu,
	Menu:BebidasMenu,
	Menu:DonutMenu,
	Menu:ChickBellMenu,
	Menu:ChickMenu,
	Menu:BurgerShotMenu,
	Menu:BurgerMenu,
	Menu:HotdogMenu,
	Menu:ShopMenuN,
	Menu:TabacoMenu;
	
new ClotheMaleBinco[][] =
{
	{0, 0},
	{2, 85},
	{3, 60},
	{4, 50},
	{5, 50},
    {7, 75},
    {15, 60},
    {20, 130},
    {21, 100},
    {22, 75},
    {23, 75},
    {26, 65},
    {29, 150},
    {28, 60},
    {30, 100},
    {35, 60},
    {36, 65},
    {44, 45},
    {45, 25},
    {47, 90},
    {48, 95},
    {51, 100},
    {52, 100},
    {59, 220},
    {60, 95},
    {66, 85},
    {67, 90},
    {72, 80},
    {73, 75},
    {78, 15},
    {79, 15},
    {95, 50},
    {96, 60},
    {100, 160},
    {101, 79},
    {119, 80},
    {121, 90},
    {127, 40},
    {135, 20},
    {154, 25},
    {142, 50},
    {161, 55},
    {181, 80},
    {184, 60},
    {185, 80},
    {188, 90},
    {202, 100},
    {206, 100},
    {241, 80},
    {242, 80},
    {250, 100},
    {258, 80},
    {259, 80},
    {261, 75},
    {299, 80}
};

new ClotheMaleZip[][] =
{
	{0, 0},
	{3, 125},
	{17, 150},
	{46, 200},
	{61, 230},
	{82, 299},
	{83, 299},
	{84, 299},
	{98, 150},
	{113, 500},
	{124, 150},
	{147, 350},
	{170, 120},
	{171, 350},
	{187, 200},
	{189, 399},
	{223, 150},
	{227, 299},
	{228, 299},
	{240, 499},
	{249, 699},
	{255, 399}
};

new ClotheFemaleBinco[][] =
{
	{0, 0},
	{10, 55},
	{13, 75},
	{31, 70},
	{39, 60},
	{41, 80},
	{53, 80},
	{54, 65},
	{56, 85},
	{65, 70},
	{69, 75},
	{75, 65},
	{77, 25},
	{85, 150},
	{88, 75},
	{89, 65},
	{90, 85},
	{93, 105},
	{129, 65},
	{130, 65},
	{131, 80},
	{138, 80},
	{139, 80},
	{140, 85},
	{190, 100},
	{191, 100},
	{193, 190},
	{195, 70},
	{196, 65},
	{197, 65},
	{198, 85},
	{201, 85},
	{218, 60},
	{226, 95},
	{231, 80},
	{232, 65},
	{233, 155},
	{298, 95}
};

new ClotheFemaleZip[][] =
{
	{0, 0},
	{11, 370},
	{12, 450},
	{40, 350},
	{55, 350},
	{76, 395},
	{91, 450},
	{141, 310},
	{150, 450},
	{169, 450},
	{172, 305},
	{192, 250},
	{194, 199},
	{214, 599},
	{215, 350},
	{216, 450},
	{219, 499}
};

new Objetos_Bolsillo[][BolEnum] = {
	{0, "Vacío"},
	{15, "Pizza mixta"},//1
	{20, "Pizza barbacoa"},//2
	{10, "Pizza clásica"},//3
	{10, "Pizza vegetariana"},//4
	{15, "Hamburguesa de pollo"},//5
	{10, "Hamburguesa de pescado"},//6
	{10, "Hamburguesa de ternera"},//7
	{25, "Pollo asado"},//8
	{20, "Alitas de pollo"},//9
	{5, "Donut blanco"},//10
	{6, "Donut de chocolate"},//11
	{6, "Rosquilla"},//12
	{10, "Mechero"},//13
	{10, "Cigarillo"},//14
	{15, "Cerveza"},//15
	{10, "Refresco de naranja"},//16
	{5, "Botella de agua"},//17
	{10, "Perrito caliente"},//18
	{10, "Refresco de limón"},//19
	{15, "Refresco de cola"},//20
	{5, "Chicle"},//21
	{50, "Cable iPhone-coche"},//22
	{10, "Ensalada"},//23
	{5, "Café"},//24
	{150, "GPS"}
};

//otros
new gArma[MAX_PLAYERS];
new 	Alhambra_Pick,
	Conce_Pick1,
	Conce_Pick2,
	Binco_Pick,
	Victim_Pick1,
	Victim_Pick2,
	Zip_Pick,
	Prolaps_Pick,
	Suburban_Pick,
	PizzaStack_Pick1,
	PizzaStack_Pick2,
	PizzaStack_Pick3,
	BarGR_Pick,
	Donuts_Pick,
	PigPen_Pick,
	ChickBell_Pick1,
	ChickBell_Pick2,
	Burger_Pick,
	Hotdog_Pick,
	AyuntShop_Pick,
	UnityShop_Pick,
	VineShop_Pick;
new BolsilloID[MAX_PLAYERS][13];
new PlayerEvent[MAX_PLAYERS][MAX_EVENTS];
new dineropedido[MAX_PLAYERS];
new GuardaEspalda[MAX_PLAYERS];
new Float:DeathX[MAX_PLAYERS],Float:DeathY[MAX_PLAYERS],Float:DeathZ[MAX_PLAYERS];
new Jail[MAX_PLAYERS];
new Float:CameraPositions[][] =
{
    {1408.857299, -1632.013916, 135.030731, 1430.333129, -1623.923461, 137.190429, 1410.314453, -1627.295898, 135.816528, 1431.559448, -1619.127685, 137.895111},
    {1423.960693, -790.761047, 97.296607, 1422.713745, -802.571594, 93.713417, 1423.505004, -795.559020, 95.965515, 1422.459472, -807.558715, 93.459938},
    {1468.1969, -1714.5869, 21.8133, 1465.1074, -1716.8134, 21.8133, 1468.7809, -1715.3973, 21.9533, 1465.6914, -1717.6238, 21.9533},
    {1691.775024, -1760.483520, 51.646430, 1685.613769, -1750.009033, 49.212718, 1689.289428, -1756.257690, 50.664569, 1683.128173, -1745.783203, 48.230857},
    {1239.9844, -1312.6952, 61.7067, 1236.2928, -1306.7589, 61.7067, 1239.1367, -1313.2223, 61.2017, 1235.4452, -1307.2860, 61.2017},
    {1694.733764, -2286.287353, 48.846031, 1696.801757, -2286.243408, 72.494438, 1689.767822, -2286.203613, 48.269191, 1691.805175, -2286.213867, 72.678306}, //
    {1141.516235, -2006.309936, 89.270088, 1150.323608, -1998.296875, 92.549591, 1137.950683, -2009.554077, 87.942459, 1146.758056, -2001.541015, 91.221961},
    {1163.4066, -1651.3649, 61.6941, 1164.8997, -1657.4850, 60.0530, 1163.6432, -1652.3344, 61.4342, 1165.1362, -1658.4545, 59.7930},
    {1501.1635, -1735.7188, 52.0382, 1500.5176, -1731.0140, 51.2951, 1501.9237, -1735.0713, 51.7482, 1501.2778, -1730.3666, 51.0051},
    {1818.463012, -1669.808837, 22.066495, 1820.971435, -1673.945068, 21.014766, 1820.996582, -1673.986450, 21.004339, 1823.505004, -1678.122680, 19.952610},
    {1605.174072, -2106.205566, 58.206455, 1605.174072, -2106.205566, 58.206455, 1609.583740, -2104.772460, 56.335178, 1609.632568, -2104.453857, 56.773700}
};
new ChatLogDisabled[MAX_PLAYERS];
new Text:TD_NN,
	PlayerText:TD_IO[MAX_PLAYERS],
	Text:TD_EY[3];
new AdminChat[MAX_PLAYERS];
new P_newuser[MAX_PLAYERS]=-1;
new EnAuto[MAX_PLAYERS];
new Handcuffed[MAX_PLAYERS], PoliceDoor[2];
new PlayerText:LTPolice0[MAX_PLAYERS],PlayerText:LTPolice1[MAX_PLAYERS],PlayerText:LTPolice2[MAX_PLAYERS],PlayerText:LTPolice3[MAX_PLAYERS],PlayerText:LTPolice4[MAX_PLAYERS],PlayerText:LTPolice5[MAX_PLAYERS],PlayerText:LTPolice7[MAX_PLAYERS];
new TuberiasMySQL;

new RandomMen[] =
{
    60,
    7,
    48,
    59,
	299
};

new RandomWoman[] =
{
    298,
    12,
    55,
    93,
	148
};


new
        Train,
    VehiclePoliceST,
    Camionn1ST,
    Camionn1END,
    LTPoliceNS,
    VehiclePoliceEND,
    VehicleBusST,
    VehicleBusEND,
        Text:ResetPassword,
        Text:StartDraw[13],
        KeyCarCode[MAX_VEHICLES],
        codecarkey = 1,
        PlayerText:PlayerStartDraw[3][MAX_PLAYERS],
        Text:WelcomeTD[4],
        PlayerText:DataTD[MAX_PLAYERS],
        PlayerText:Conceptos[7][MAX_PLAYERS],
        StarterPickupID[MAX_PLAYERS],
        Text:CircularMenu[24],
        AyuntamientoNuevo[3],
    PlayaAyuntamientoNueva[2],
    CreditObject[MAX_PLAYERS],
    VeronaMall,
    Poste[1],
    Bandera[1],
    Text:CerrarCreditos,
        PrisonDoors[4],
        VirtualTimers[MAX_PLAYERS][50],
        ServerTime = 12,
        HaveTaser[MAX_PLAYERS],
        Tased[MAX_PLAYERS],
        PlayerMuted[MAX_PLAYERS],
        PlayerBar:EngineVeh[MAX_PLAYERS],
        PlayerBar:Reanimar[MAX_PLAYERS],
        engine, lights, alarm, doors, bonnet, boot, objective,
        vEngine[MAX_VEHICLES],
        PlayerText:ErrorCommand[MAX_PLAYERS],
        DudeTime[MAX_PLAYERS],
        DudeMsg[MAX_PLAYERS],
        Text:Starter[4]
;
enum EntradasEnum
{
	ID,
    Float:EX,
	Float:EY,
    Float:EZ,
    Float:SX,
    Float:SY,
    Float:SZ,
    Float:EAngle,
    Float:SAngle,
	Apertura,
	Cierre,
	Freeze,
	EInteriorID
}

new Entradas[][EntradasEnum] = {
{INT_NONE, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 0}, //NONE
{INT_GROTTI, 545.4426,-1318.3784,1996.5759, 542.3840, -1293.5125,17.2422, 350.0, 350.0, 8, 22, 1, 1}, //GROTTI
{INT_BANCO, 1414.798950, -988.716308, 1639.784301, 1153.948120, -1772.674682, 16.599193, 270.0, 0.0, 8, 22, 1, 1}, //BANCO
{INT_CNN, 646.0635,-1356.4440,4002.5896, 648.8630,-1360.6012,13.5863, 270.0, 70.0, 0, 0, 1, 1}, //CNN
{INT_VIP, 852.8785,-1372.0012,1993.0859, 1654.2700,-1654.8944,22.5156, 90.0, 180.0, 0, 0, 1, 1}, //VIP PLACE
{INT_BITCH, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0, 0, 0, 2}, //BITCH
{INT_247U, -25.7535, -187.7502, 1004.1781, 1833.149780, -1842.485717, 13.578125, 0.0, 90.0, 0, 0, 0, 17}, //24/7UNITY
{INT_ALHAM, 490.257934, -23.031440, 993.276672, 1836.4471,-1682.3042,13.3476, 270.0, 90.0, 0, 0, 1, 17}, //ALHAMBRA
{INT_247VIN, 6.0969,-31.7571,1003.5494, 1315.4854,-897.6839,39.5781, 360.0, 180.0, 0, 0, 0, 10}, //24/7VINEWOOD
{INT_247AYU, -27.2896,-31.7540,1003.5573, 1352.3815,-1759.2286,13.5078, 0.0, 0.0, 0, 0, 0, 4}, //24/7AYUNTA
{INT_BINCO, 207.6649,-110.9614,1005.1328, 2244.3567,-1665.5562,15.4766, 360.0, 360.0, 8, 22, 0, 15}, //BINCO
{INT_ZIP, 161.2850,-97.0387,1001.8047, 1456.4344,-1137.6427,23.9484, 0.0, 220.0, 8, 22, 0, 18}, //ZIP
{INT_PROLAPS, 206.9300,-140.3754,1003.5078, 499.5753,-1360.6145,16.3664, 360.0, 360.0, 8, 22, 0, 3}, //PROLAPS
{INT_SUBURBA, 203.7609,-50.6566,1001.8047, 2112.7739,-1211.6287,23.9631, 360.0, 180.0, 8, 22, 0, 1}, //SUBURBAN
{INT_VICTIM, 227.5633,-8.0725,1002.2109, 461.200073, -1500.823608, 31.059551, 106.0, 30.0, 8, 22, 0, 5}, //VICTIM
{INT_BURGER, 362.8626,-75.1578,1001.5078, 810.6630,-1616.1554,13.5469, 300.0, 270.0, 0, 0, 0, 10}, //BURGER
{INT_PIZZA, 372.2221,-133.5210,1001.4922, 2105.4858,-1806.5336,13.5547, 360.0, 90.0, 0, 0, 0, 5}, //PIZZERÍA
{INT_PELU, 411.9010,-54.4360,1001.8984, 2070.6365,-1793.7847,13.5469, 360.0, 260.0, 8, 22, 0, 12}, //PELUQERÍA 1
{INT_TATTO, -204.4305,-9.0783,1002.2734, 2068.5840,-1779.7758,13.5596, 360.0, 280.0, 8, 22, 0, 17}, //TATTO
{INT_PELU2, 411.5989,-23.1412,1001.8047, 823.9835,-1588.2754,13.5545, 360.0, 140.0, 8, 22, 0, 2}, //PELUQUERÍA 2
{INT_BELL, 364.9832,-11.8308,1001.8516, 928.7275,-1352.9547,13.3438, 0.0, 90.0, 0, 0, 0, 9}, //BELL
{INT_PIGPEN, 1204.7631,-13.8169,1000.9219, 2421.3159,-1219.6179,25.5382, 360.0, 180.0, 0, 0, 0, 2}, //PIGPEN
{INT_BARGR, 501.9994,-67.7072,998.7578, 2310.0977,-1643.5522,14.8270, 180.0, 150.0, 0, 0, 0, 11}, //BAR GROOVE
{INT_GYMLS, 772.4008,-5.5150,1000.7287, 2229.8601,-1721.4545,13.5633, 0.0, 125.0, 8, 22, 0, 5}, //GYMLS
{INT_LSPD, 246.783996,63.900199,1003.640625, 1555.142822, -1675.475341, 16.195312, 260.0, 90.0, 0, 0, 1, 6}, //LSPD
{INT_AYUNT, 390.414337, 174.018325, 1008.382812, 1481.037597, -1771.786376, 18.795755, 90.0, 0.0, 8, 22, 0, 3}, //AYUNTAMIENTO
{INT_RING, 377.000366, -193.303802, 1000.632812, 1038.286010, -1340.728027, 13.741346, 0.0, 0.0, 0, 0, 0, 17},
{INT_TAXI, 1751.5405, -1886.8923, 13.5808, 1557.468750, -1676.613159, 1990.540039, 0.0, 0.0, 0, 0, 0, 0},
{INT_HOSP, 1172.0704, -1323.6190, 15.2772, 1162.8776, -1343.1964, 657.0542, 0.0, 0.0, 0, 0, 0, 0} //Jim RingINT_HOSP
};


//0,3,4
enum ctrInfo
{
    ctlCreado,
    Float:ctlX,
    Float:ctlY,
    Float:ctlZ,
    ctlObjeto,
};
new ControlInfo[MAX_CONTROLES][ctrInfo];

enum aInfo{
	aID, // ID del coche Lllave
	igID, // ID del coche para SA-MP (GTA)
 	aModelo,
  	Float:aCoordX,
   	Float:aCoordY,
    Float:aCoordZ,
    Float:aAngulo,
    aColor1,
    aColor2,
    aFaccionID,
    aRenta,
    aInteriorID,
    aDuenio[32],
    aGasolina,
    aMotor,
    aCerrado,
    aRoto,
    aPrestado[3],
    aMaletero,
    aMaleteroID[5],
    aMaleteroCantidad[5],
    aMaleteroTipo[5],
    Float:aDanio,
    aRadio,
    aEmisora,
    aEquipo,
    aTrabajo,
    aTiempo,
    aComponente[12],
	aDuenioRenta[32], // Tiempo en Renta
	aPaintjob
};
new AutoInfo[MAX_VEHICLES][aInfo];

enum PInfo
{
        Float:posx,
        Float:posy,
        Float:posz,
        Float:angle,
        interiorid,
        virtualworldid,
        adminlvl,
        email[64],
        passtext[33],
        // Armas
	pwp0,
	pwp1,
	pwp2,
	pwp3,
	pwp4,
	pwp5,
	pwp6,
	pwp7,
	pwp8,
	pwp9,
	pwp10,
	pwp11,
	pwp12,
	VGrotti,
	VBank,
	Agonizando,
		PlayerVehicle[4],
	PlayerVehicleKey[4],
	miembro,
    rango,
    Cargos,
    pModelo,
    Placa,
    Duty,
    Conexion,
    Registrado,
	job,
	vipjob,
    pass,
    pass2,
    dinero,
    dinerobank,
    banco,
    movil,
    dni,
    sexo,
    edad,
    skin,
    origen,
    faccion,
    carcel,
    Busqueda,
    lider,
    rank,
    jailminutes,
    Float:vida,
    Float:chaleco,
    advrazon1[64],
    advrazon2[64],
    advrazon3[64],
    warnings,
    DudeChannel,
    KeyCar1,
    KeyCar2,
    KeyCar3,
    Pizza,
    Hamburgesa,
    Helado,
    Bebida,
    //agregar
    jBarreta,
    jDestornillador,
   	pNivelLadron,
	pexpladron,
    jMartillo,
    piezas,
    pNivelArmero,
	pExpArmero,
    pMedicamentos,
	pCrack,
	pMateriales,
    pNivelCamionero,
    pExpCamionero,
    bankt,
    vip,
    BankA, //si tenes cuenta bancaria
    nivel,
    arrestado,
   	pTiempoCarcelM,
	pTiempoCarcelS,
	pTiempoJail,
	pTiempoJailS,
    pMaskuse,
};
new PlayerInfo[MAX_PLAYERS][PInfo];

main()
{
        print("-------------------------------------------------------------------");
        print("* Información: Gamemode Roleplay.\n\n* Créditos.\n* Creado por [J]eff\n");
        print("-------------------------------------------------------------------");
}

funcion Legal(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{


			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
            HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
            KillTimer(Cargas[playerid]);
            VirtualTimers[playerid][6] = -1;
            	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				Cargando2[playerid] = 0;
				KillTimer(Cargas[playerid]);
				SetPlayerCheckpoint(playerid, 1858.8275, -1856.1090, 13.0585, 7.0);
				PuntoCX[playerid] = 1832.3918; PuntoCY[playerid] = -1832.4200; PuntoCZ[playerid] = 13.1546;
			PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
				CargandoC[playerid] = 0;
				KillTimer(VirtualTimers[playerid][1]);
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				Chofer[CamionID[playerid]] = playerid;
				CamionCargado[CamionID[playerid]] = 1;
				Carga[playerid] = 1;
				SetPVarInt(playerid, "CCamion", 0);
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}


forward EstadoRobo(playerid);
public EstadoRobo(playerid)
{
	if(RobadoReciente[playerid] == 1)
	{


		RobadoReciente[playerid] = 0;
	}
}


forward Aviso(playerid);
public Aviso(playerid)
{
	new string[200],caso = random(3),zone[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	switch(caso)
	{


		case 0:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
		case 1:
		{


			format(string, 200,"[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de San Fierro (%s)",zone);
			SendRadioMessage(1,TEAM_BLUE_COLOR,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
	}
}

forward Aviso2(playerid);
public Aviso2(playerid)
{
	new string[200],caso = random(3),zone[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	switch(caso)
	{


		case 0:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
		case 1:
		{


			format(string, 200,"[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de Las Venturas (%s)",zone);
			SendRadioMessage(1,TEAM_BLUE_COLOR,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
	}
}
forward Aviso3(playerid);
public Aviso3(playerid)
{
	new string[200],caso = random(3);
	switch(caso)
	{


		case 0:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
		case 1:
		{


			format(string, 200,"[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de Las Venturas (El Quebrados)");
			SendRadioMessage(1,TEAM_BLUE_COLOR,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
	}
}
forward Aviso4(playerid);
public Aviso4(playerid)
{
	new string[200],caso = random(3),zone[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
	switch(caso)
	{


		case 0:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
		case 1:
		{


			format(string, 200,"[Central de Policía] {FFFFFF}¡ATENCION! Informan de un robo a una propiedad en progreso en la ciudad de Los Santos (%s)",zone);
			SendRadioMessage(1,TEAM_BLUE_COLOR,string,INVALID_PLAYER_ID);
			SendClientMessage(playerid,-1,"Los vecinos han avisado a la policía, ¡date prisa!");
		}
		case 2:
		{


			SendClientMessage(playerid,-1,"Nadie ha avisado a la policía, puedes continuar robando");
		}
	}
}

forward CargarCasa1(); // SF
public CargarCasa1()
{
	if(!IsValidObject(T1) && !IsValidObject(T2) && !IsValidObject(T3) && !IsValidObject(T4) && !IsValidObject(T5) && !IsValidObject(T6) && !IsValidObject(T7))
	{

		T1 = CreateObject(1429, -2280.60376, -14.82680, 38.03000,   0.00000, 0.00000, 70.61990);
		T2 = CreateObject(1518, -2280.63721, -16.44526, 38.05420,   0.00000, 0.00000, 120.36000);
		T3 = CreateObject(2912, -2278.36792, -14.86620, 37.29990,   0.00000, 0.00000, -1.62000);
		T4 = CreateObject(2190, -2280.72827, -15.26394, 37.77455,   0.00000, 0.00000, 50.69999);
		T5 = CreateObject(1788, -2280.53418, -16.19723, 37.44304,   0.00000, 0.00000, -49.37999);
		T7 = CreateObject(1790, -2280.39893, -14.92786, 37.45214,   0.00000, 0.00000, 88.37997);
		T6 = CreateObject(2028, -2278.22900, -16.77450, 37.40304,   0.00000, 0.00000, 0.00000);
		Forzada1 = 0;
	}
	else
	{

		Forzada1 = 0;
	}
}

forward CargarCasa2(); // LV
public CargarCasa2()
{
	if(!IsValidObject(T12) && !IsValidObject(T22) && !IsValidObject(T32) && !IsValidObject(T42) && !IsValidObject(T52) && !IsValidObject(T62) && !IsValidObject(T72))
	{


		T12 = CreateObject(1429, 942.56305, 1976.67395, 11.34690,   0.00000, 0.00000, -62.10000);
		T22 = CreateObject(1518, 942.44531, 1974.96301, 11.42232,   0.00000, 0.00000, -112.56001);
		T32 = CreateObject(2912, 939.79364, 1974.82947, 10.62529,   0.00000, 0.00000, 0.00000);
		T52 = CreateObject(1788, 942.32104, 1976.73279, 10.83022,   0.00000, 0.00000, -85.32000);
		T72 = CreateObject(1790, 942.38721, 1975.06116, 10.73031,   0.00000, 0.00000, -90.17999);
		T62 = CreateObject(2028, 940.09308, 1977.05005, 10.82510,   0.00000, 0.00000, 0.00000);
		T42 = CreateObject(2190, 939.99139, 1977.32190, 11.11951,   0.00000, 0.00000, 0.00000);
		Forzada2 = 0;
	}
	else
	{


		Forzada2 = 0;
	}
}

forward CargarCasa3(); // SF
public CargarCasa3()
{
	if(!IsValidObject(T13) && !IsValidObject(T23) && !IsValidObject(T33) && !IsValidObject(T43) && !IsValidObject(T53) && !IsValidObject(T63) && !IsValidObject(T73))
	{


		T13 = CreateObject(1429, -2394.00562, -15.47150, 36.23100,   0.00000, 0.00000, 0.00000);
		T23 = CreateObject(1518, -2395.78857, -15.53133, 36.23100,   0.00000, 0.00000, 0.00000);
		T33 = CreateObject(2912, -2395.92505, -19.09909, 34.42548,   0.00000, 0.00000, 0.00000);
		T43 = CreateObject(2190, -2394.71484, -15.21817, 35.98800,   0.00000, 0.00000, 0.00000);
		T53 = CreateObject(1788, -2395.75928, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
		T63 = CreateObject(2028, -2394.01709, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
		T73 = CreateObject(1790, -2394.86279, -15.45650, 35.19190,   0.00000, 0.00000, 0.00000);
		Forzada3 = 0;
	}
	else
	{


		Forzada3 = 0;
	}
}
forward CargarCasa4(); // LS
public CargarCasa4()
{
	if(!IsValidObject(T14) && !IsValidObject(T24) && !IsValidObject(T34) && !IsValidObject(T44) && !IsValidObject(T54) && !IsValidObject(T64) && !IsValidObject(T74))
	{


		T14 = CreateObject(1429, 2368.61401, -1131.40259, 30.97320,   0.00000, 0.00000, 160.32001);
		T24 = CreateObject(1518, 2370.30200, -1131.43127, 30.97320,   0.00000, 0.00000, 201.35999);
		T34 = CreateObject(2912, 2370.40674, -1129.14221, 28.96821,   0.00000, 0.00000, 0.00000);
		T44 = CreateObject(2190, 2369.12378, -1131.64221, 30.68020,   0.00000, 0.00000, 164.82001);
		T54 = CreateObject(1788, 2368.51880, -1131.42798, 29.94000,   0.00000, 0.00000, 0.00000);
		T64 = CreateObject(2028, 2370.12720, -1131.46106, 29.94000,   0.00000, 0.00000, 0.00000);
		T74 = CreateObject(1790, 2369.39893, -1131.51331, 29.46600,   0.00000, 0.00000, 0.00000);
		Forzada4 = 0;
	}
	else
	{


		Forzada4 = 0;
	}
}
forward CargarCasa5(); // SF
public CargarCasa5()
{
	if(!IsValidObject(T15) && !IsValidObject(T25) && !IsValidObject(T35) && !IsValidObject(T45) && !IsValidObject(T55) && !IsValidObject(T65) && !IsValidObject(T75))
	{


		T15 = CreateObject(1429, -2730.06982, -59.74450, 7.20490,   0.00000, 0.00000, 196.14000);
		T25 = CreateObject(1518, -2731.72534, -59.64209, 7.20490,   0.00000, 0.00000, 178.20003);
		T35 = CreateObject(2912, -2731.85327, -57.35418, 6.03176,   0.00000, 0.00000, 0.00000);
		T45 = CreateObject(2190, -2731.16846, -59.89901, 6.93235,   0.00000, 0.00000, 174.30002);
		T55 = CreateObject(1788, -2730.06030, -59.85120, 6.16510,   0.00000, 0.00000, 0.00000);
		T65 = CreateObject(2028, -2730.97656, -59.74975, 6.60280,   0.00000, 0.00000, -2.40000);
		T75 = CreateObject(1790, -2731.64380, -59.69650, 6.16510,   0.00000, 0.00000, -5.64000);
		Forzada5 = 0;
	}
	else
	{


		Forzada5 = 0;
	}
}
forward CargarCasa6(); // SF
public CargarCasa6()
{
	if(!IsValidObject(T16) && !IsValidObject(T26) && !IsValidObject(T36) && !IsValidObject(T46) && !IsValidObject(T56) && !IsValidObject(T66) && !IsValidObject(T76))
	{


		T16 = CreateObject(1429, -2731.07056, -164.54240, 7.68000,   0.00000, 0.00000, 196.80000);
		T26 = CreateObject(1518, -2732.74170, -164.46756, 7.68000,   0.00000, 0.00000, 164.58005);
		T36 = CreateObject(2912, -2733.24390, -163.87219, 6.20990,   0.00000, 0.00000, 0.00000);
		T46 = CreateObject(2190, -2732.13647, -164.68983, 7.42307,   0.00000, 0.00000, 182.57997);
		T56 = CreateObject(1788, -2731.10449, -164.46933, 7.08504,   0.00000, 0.00000, 0.00000);
		T66 = CreateObject(2028, -2731.81323, -164.44690, 6.67120,   0.00000, 0.00000, 0.00000);
		T76 = CreateObject(1790, -2732.57373, -164.33932, 7.12180,   0.00000, 0.00000, 0.00000);
		Forzada6 = 0;
	}
	else
	{


		Forzada6 = 0;
	}
}
forward CargarCasa7(); // SF
public CargarCasa7()
{
	if(!IsValidObject(T17) && !IsValidObject(T27) && !IsValidObject(T37) && !IsValidObject(T47) && !IsValidObject(T57) && !IsValidObject(T67) && !IsValidObject(T77) && !IsValidObject(T87))
	{


		T17 = CreateObject(1429, -2629.54468, -179.99631, 7.29060,   0.00000, 0.00000, -194.58000);
		T27 = CreateObject(1518, -2627.77612, -179.88831, 7.34060,   0.00000, 0.00000, 179.82001);
		T37 = CreateObject(2912, -2629.09912, -177.54271, 6.13897,   0.00000, 0.00000, 0.00000);
		T47 = CreateObject(2190, -2628.99829, -180.01790, 7.05720,   0.00000, 0.00000, 136.97997);
		T57 = CreateObject(1788, -2628.57056, -179.98410, 6.70580,   0.00000, 0.00000, 0.00000);
		T67 = CreateObject(2028, -2627.81958, -179.93315, 6.28380,   0.00000, 0.00000, 0.00000);
		T77 = CreateObject(1790, -2629.41846, -180.00290, 6.27380,   0.00000, 0.00000, 0.00000);
		T87 = CreateObject(2226, -2626.89502, -178.56140, 7.10630,   0.00000, 0.00000, -89.34000);
		Forzada7 = 0;
	}
	else
	{


		Forzada7 = 0;
	}
}
forward CargarCasa8(); // LS
public CargarCasa8()
{
	if(!IsValidObject(T18) && !IsValidObject(T28) && !IsValidObject(T38) && !IsValidObject(T48) && !IsValidObject(T58) && !IsValidObject(T68) && !IsValidObject(T78) && !IsValidObject(T88))
	{


		T18 = CreateObject(1429, 2481.20239, -1987.11511, 14.57980,   0.00000, 0.00000, 7.80000);
		T28 = CreateObject(1518, 2482.81030, -1987.17395, 14.59980,   0.00000, 0.00000, -11.82000);
		T38 = CreateObject(2912, 2483.55371, -1988.90125, 12.62243,   0.00000, 0.00000, 0.00000);
		T48 = CreateObject(2190, 2482.27319, -1986.94861, 14.31840,   0.00000, 0.00000, 0.00000);
		T58 = CreateObject(1788, 2481.10767, -1987.15283, 13.52780,   0.00000, 0.00000, 0.00000);
		T68 = CreateObject(2028, 2481.93018, -1987.23987, 13.08109,   0.00000, 0.00000, 0.00000);
		T78 = CreateObject(1790, 2482.70459, -1987.20215, 13.52780,   0.00000, 0.00000, 0.00000);
		T88 = CreateObject(2226, 2481.90552, -1987.28687, 13.89582,   0.00000, 0.00000, 0.00000);
		Forzada8 = 0;
	}
	else
	{


		Forzada8 = 0;
	}
}
forward CargarCasa9(); // LV
public CargarCasa9()
{
	if(!IsValidObject(T19) && !IsValidObject(T29) && !IsValidObject(T39) && !IsValidObject(T49) && !IsValidObject(T59) && !IsValidObject(T69) && !IsValidObject(T79) && !IsValidObject(T89))
	{


		T19 = CreateObject(1429, 2063.59229, 694.51794, 11.72188,   0.00000, 0.00000, 226.20001);
		T29 = CreateObject(1518, 2062.58716, 694.51733, 11.68535,   0.00000, 0.00000, 140.21996);
		T39 = CreateObject(2912, 2062.75684, 697.35150, 10.50180,   0.00000, 0.00000, 0.00000);
		T49 = CreateObject(2190, 2065.25928, 695.16791, 11.41595,   0.00000, 0.00000, -102.53999);
		T59 = CreateObject(1788, 2064.98291, 696.86658, 11.05390,   0.00000, 0.00000, -90.18000);
		T69 = CreateObject(2028, 2064.99878, 695.47626, 11.09334,   0.00000, 0.00000, 2.22000);
		T79 = CreateObject(1790, 2065.06763, 696.31372, 10.60810,   0.00000, 0.00000, -89.10000);
		T89 = CreateObject(2226, 2064.92896, 696.84113, 11.41406,   0.00000, 0.00000, -90.53997);
		Forzada9 = 0;
	}
	else
	{


		Forzada9 = 0;
	}
}

forward CargarCasa10(); // LV
public CargarCasa10()
{
	if(!IsValidObject(T110) && !IsValidObject(T210) && !IsValidObject(T310) && !IsValidObject(T410) && !IsValidObject(T510) && !IsValidObject(T610) && !IsValidObject(T710) && !IsValidObject(T810))
	{


		T110 = CreateObject(1429, -1449.86682, 2645.77490, 56.87230,   0.00000, 0.00000, 8.10000);
		T210 = CreateObject(1518, -1448.15234, 2645.76807, 56.92000,   0.00000, 0.00000, -20.88000);
		T310 = CreateObject(2912, -1450.80640, 2642.91479, 55.52976,   0.00000, 0.00000, 0.00000);
		T410 = CreateObject(2190, -1447.24390, 2643.42358, 56.43425,   0.00000, 0.00000, -115.86000);
		T510 = CreateObject(1788, -1448.96399, 2645.68677, 56.28100,   0.00000, 0.00000, 0.00000);
		T610 = CreateObject(2028, -1449.89099, 2645.64771, 55.88598,   0.00000, 0.00000, 0.00000);
		T710 = CreateObject(1790, -1448.14539, 2645.64087, 55.85600,   0.00000, 0.00000, 0.00000);
		T810 = CreateObject(2226, -1449.01904, 2645.76733, 56.64311,   0.00000, 0.00000, 0.00000);
		Forzada10 = 0;
	}
	else
	{


		Forzada10 = 0;
	}
}

forward CargarCasa11();
public CargarCasa11()
{
	if(!IsValidObject(T111) && !IsValidObject(T211) && !IsValidObject(T311) && !IsValidObject(T411) && !IsValidObject(T511) && !IsValidObject(T611) && !IsValidObject(T711) && !IsValidObject(T811))
	{


		T111 = CreateObject(1429, 2449.55127, 748.03583, 11.59460,   0.00000, 0.00000, 17.82000);
		T211 = CreateObject(1518, 2450.14136, 744.82159, 11.68140,   0.00000, 0.00000, 179.76010);
		T311 = CreateObject(2912, 2451.90234, 744.93500, 10.50751,   0.00000, 0.00000, 0.00000);
		T411 = CreateObject(2190, 2451.08398, 748.15344, 11.34481,   0.00000, 0.00000, -24.42000);
		T511 = CreateObject(1788, 2451.04199, 744.81927, 11.45350,   0.00000, 0.00000, 0.00000);
		T611 = CreateObject(2028, 2450.17651, 744.80139, 11.02900,   0.00000, 0.00000, 0.00000);
		T711 = CreateObject(1790, 2449.46973, 744.86401, 11.03670,   0.00000, 0.00000, 0.00000);
		T811 = CreateObject(2226, 2450.95361, 745.03302, 10.97582,   0.00000, 0.00000, 179.15996);
		Forzada11 = 0;
	}
	else
	{


		Forzada11 = 0;
	}
}
forward CargarCasa12();
public CargarCasa12()
{
	if(!IsValidObject(T112) && !IsValidObject(T212) && !IsValidObject(T312) && !IsValidObject(T412) && !IsValidObject(T512) && !IsValidObject(T612) && !IsValidObject(T712) && !IsValidObject(T812))
	{
		T112 = CreateObject(1429, 1551.74329, 2125.47021, 11.63880,   0.00000, 0.00000, 189.96001);
		T212 = CreateObject(1518, 1548.79712, 2126.56348, 11.71195,   0.00000, 0.00000, 88.32000);
		T312 = CreateObject(2912, 1549.17517, 2125.53687, 10.52266,   0.00000, 0.00000, 0.00000);
		T412 = CreateObject(2190, 1549.98438, 2125.36279, 11.40880,   0.00000, 0.00000, 148.31998);
		T512 = CreateObject(1788, 1551.68274, 2125.49561, 10.65987,   0.00000, 0.00000, 359.89899);
		T612 = CreateObject(2028, 1550.86938, 2125.50562, 11.06830,   0.00000, 0.00000, 0.00000);
		T712 = CreateObject(1790, 1550.05835, 2125.53931, 10.65990,   0.00000, 0.00000, 0.00000);
		T812 = CreateObject(2226, 1548.88672, 2127.70361, 11.40324,   0.00000, 0.00000, 84.47999);
		Forzada13 = 0;
	}
	else
	{
		Forzada13 = 0;
	}
}

forward CerrarPuerta();
public CerrarPuerta()
{
	CasaAbierta = 0;
	MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 269.1064);
}
forward CerrarPuerta2();
public CerrarPuerta2()
{
	CasaAbierta2 = 0;
	MoveDynamicObject(PuertaRobo2, 931.28186, 1974.06372, 10.61430, 100.0,   0.00000, 0.00000, 0.00000);
}
forward CerrarPuerta3();
public CerrarPuerta3()
{
	CasaAbierta3 = 0;
	MoveDynamicObject(PuertaRobo3,  -2394.86670, -12.35760, 34.27060, 100.0,  0.00000, 0.00000, 269.82654);
}
forward CerrarPuerta4();
public CerrarPuerta4()
{
	CasaAbierta4 = 0;
	MoveDynamicObject(PuertaRobo4, 2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 0.0000);
}
forward CerrarPuerta5();
public CerrarPuerta5()
{
	CasaAbierta5 = 0;
	MoveDynamicObject(PuertaRobo5, -2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 269.9401);
}
forward CerrarPuerta6();
public CerrarPuerta6()
{
	CasaAbierta6 = 0;
	MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 269.8600);
}
forward CerrarPuerta7();
public CerrarPuerta7()
{
	CasaAbierta7 = 0;
	MoveDynamicObject(PuertaRobo7,-2621.3928, -172.5019, 3.6263, 100.0, 0.0000, 0.0000,-90.0000);
}
forward CerrarPuerta8();
public CerrarPuerta8()
{
	CasaAbierta8 = 0;
	MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0, 0.0000, 0.0000,0.1800);
}

forward CerrarPuerta9();
public CerrarPuerta9()
{
	CasaAbierta9 = 0;
	MoveDynamicObject(PuertaRobo9,2066.60132, 696.35382, 10.44800, 100.0,  0.00000, 0.00000, 0.00000);
}
forward CerrarPuerta10();
public CerrarPuerta10()
{
	CasaAbierta10 = 0;
	MoveDynamicObject(PuertaRobo10,-1449.19824, 2647.20459, 55.48900, 100.0,  0.00000, 0.00000, 90.00000);
}
forward CerrarPuerta11();
public CerrarPuerta11()
{
	CasaAbierta11 = 0;
	MoveDynamicObject(PuertaRobo11,2450.66992, 741.87122, 10.44350, 100.0,  0.00000, 0.00000, 90.00000);
}
forward CerrarPuerta13();
public CerrarPuerta13()
{
	CasaAbierta13 = 0;
	MoveDynamicObject(PuertaRobo12,1550.56689, 2122.29785, 10.45270, 100.0,  0.00000, 0.00000, 87.60001);
}

forward Forzado(playerid);
public Forzado(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
    Cargando2[playerid] +=25;
    SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
    UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
	if(Cargando2[playerid]  >= 100)
	{
    HidePlayerProgressBar(playerid, EngineVeh[playerid]);
    SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
    KillTimer(Cargas[playerid]);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta = 1;
					SetTimer("CerrarPuerta",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Cerradura ~g~Abierta", 3000, 3);
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Cerradura ~r~Cerrada", 3000, 3);
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta = 1;
					SetTimer("CerrarPuerta",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Cerradura ~g~Abierta", 3000, 3);
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Cerradura ~r~Cerrada", 3000, 3);
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta = 1;
			SetTimer("CerrarPuerta",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			GameTextForPlayer(playerid, "~w~Cerradura ~g~Abierta", 3000, 3);
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo1, -2277.5667, -9.4666, 37.2482, 100.0, 0.0000, 0.0000, 184.9418);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	}
	return 1;
}

forward Forzado2(playerid);
public Forzado2(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta2 = 1;
					SetTimer("CerrarPuerta2",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo2, 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta2 = 1;
					SetTimer("CerrarPuerta2",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo2, 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta2 = 1;
			SetTimer("CerrarPuerta2",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,20.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo2, 931.2819, 1974.0637, 10.6143, 100.0, 0.0000, 0.0000, 165.7200);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado3(playerid);
public Forzado3(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta3 = 1;
					SetTimer("CerrarPuerta3",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,10.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo3, -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta3 = 1;
					SetTimer("CerrarPuerta3",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo3, -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta3 = 1;
			SetTimer("CerrarPuerta3",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo3, -2394.8667, -12.3576, 34.2706, 100.0, 0.0000, 0.0000, 177.3064);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado4(playerid);
public Forzado4(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta4 = 1;
					SetTimer("CerrarPuerta4",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo4,2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta4 = 1;
					SetTimer("CerrarPuerta4",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo4,2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta4 = 1;
			SetTimer("CerrarPuerta4",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo4,2373.0024, -1138.5510, 29.0312, 100.0, 0.0000, 0.0000, 87.0000);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado5(playerid);
public Forzado5(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta5 = 1;
					SetTimer("CerrarPuerta5",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo5,-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta5 = 1;
					SetTimer("CerrarPuerta5",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo5,-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta5 = 1;
			SetTimer("CerrarPuerta5",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo5,-2728.5708, -50.4009, 6.0173, 100.0, 0.0000, 0.0000, 179.7599);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado6(playerid);
public Forzado6(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta6 = 1;
					SetTimer("CerrarPuerta6",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta6 = 1;
					SetTimer("CerrarPuerta6",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta6 = 1;
			SetTimer("CerrarPuerta6",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo6,-2728.5442, -155.0267, 6.2020, 100.0, 0.0000, 0.0000, 178.0000);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado7(playerid);
public Forzado7(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{

			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta7 = 1;
					SetTimer("CerrarPuerta7",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo7,-2621.3928, -172.5019, 3.6263, 100.0, 0.0000, 0.0000, -180.4399);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta7 = 1;
					SetTimer("CerrarPuerta7",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo7,-2621.3928, -172.5019, 3.6263, 100.0, 0.0000, 0.0000, -180.4399);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta7 = 1;
			SetTimer("CerrarPuerta7",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo7,-2621.3928, -172.5019, 3.6263, 100.0, 0.0000, 0.0000, -180.4399);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado8(playerid);
public Forzado8(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta8 = 1;
					SetTimer("CerrarPuerta8",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta8 = 1;
					SetTimer("CerrarPuerta8",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta8 = 1;
			SetTimer("CerrarPuerta8",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo8,2484.4492, -1996.0295, 13.2080, 100.0,   0.00000, 0.00000, 80.52003);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado9(playerid);
public Forzado9(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta9 = 1;
					SetTimer("CerrarPuerta9",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo9,2066.6013, 696.3538, 10.4480, 100.0,   0.00000, 0.00000,  103.9800);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta9 = 1;
					SetTimer("CerrarPuerta9",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo9,2066.6013, 696.3538, 10.4480, 100.0,   0.00000, 0.00000,  103.9800);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta9 = 1;
			SetTimer("CerrarPuerta9",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo9,2066.6013, 696.3538, 10.4480, 100.0,   0.00000, 0.00000,  103.9800);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado10(playerid);
public Forzado10(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta10 = 1;
					SetTimer("CerrarPuerta10",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo10,-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta10 = 1;
					SetTimer("CerrarPuerta10",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo10,-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta10 = 1;
			SetTimer("CerrarPuerta10",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo10,-1449.1982, 2647.2046, 55.4890, 100.0,   0.00000, 0.00000,  197.2201);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}

forward Forzado11(playerid);
public Forzado11(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta11 = 1;
					SetTimer("CerrarPuerta11",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo11,2450.6699, 741.8712, 10.4435,100.0,   0.00000, 0.00000,  9.8400);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta11 = 1;
					SetTimer("CerrarPuerta11",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo11,2450.6699, 741.8712, 10.4435,100.0,   0.00000, 0.00000,  9.8400);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta11 = 1;
			SetTimer("CerrarPuerta11",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo11,2450.6699, 741.8712, 10.4435,100.0,   0.00000, 0.00000,  9.8400);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}
forward Forzado13(playerid);
public Forzado13(playerid)
{
	new Float:Pos[3],Query[200];
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	TogglePlayerControllable(playerid,1);
	SetPVarInt(playerid, "IsFrozen", 1);
	switch(PlayerInfo[playerid][pNivelLadron])
	{

		case 1:
		{


			new intento = random(3);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta13 = 1;
					SetTimer("CerrarPuerta13",10000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo12,1550.5669, 2122.2979, 10.4527,100.0,   0.00000, 0.00000,  4.7400);
					SendClientMessage(playerid,-1,"Tienes 10 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(4);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 3:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
				case 2:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 2:
		{


			new intento = random(2);
			switch(intento)
			{


				case 0:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					CasaAbierta13 = 1;
					SetTimer("CerrarPuerta13",15000,false);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					MoveDynamicObject(PuertaRobo12,1550.5669, 2122.2979, 10.4527,100.0,   0.00000, 0.00000,  4.7400);
					SendClientMessage(playerid,-1,"Tienes 15 segundos para robar objetos de la propiedad");
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
					new exp = random(3);
					switch(exp)
					{


						case 0: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 1: { SendClientMessage(playerid,-1,"Esta vez no ganaste ningun punto de habilidad"); }
						case 2:
						{


							if(PlayerInfo[playerid][pexpladron] < 49)
							{


								SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								PlayerInfo[playerid][pexpladron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
							else if(PlayerInfo[playerid][pexpladron] >= 49)
							{


								SendClientMessage(playerid,-1,"Felicidades, has aumentado tu nivel en este trabajo");
								PlayerInfo[playerid][pexpladron] = 0;
								PlayerInfo[playerid][pNivelLadron]++;
								format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d',`NivelLadron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],PlayerInfo[playerid][pNivelLadron],pName);
								mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
							}
						}
					}
				}
				case 1:
				{


					new string[1000],pName[24];
					GetPlayerName(playerid,pName,24);
					for(new i=0;i<MAX_PLAYERS;i++)
					{


						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{


							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					format(string, sizeof(string), "%s no logra forzar la cerradura.",pName);
					ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
					LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
				}
			}
		}
		case 3:
		{


			new string[1000],pName[24];
			GetPlayerName(playerid,pName,24);
			CasaAbierta13 = 1;
			SetTimer("CerrarPuerta13",20000,false);
			for(new i=0;i<MAX_PLAYERS;i++)
			{


				if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
				{


					PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Alarma.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
				}
			}
			format(string, sizeof(string), "%s logró forzar la cerradura.",pName);
			ProxDetector(30.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			MoveDynamicObject(PuertaRobo12,1550.5669, 2122.2979, 10.4527,100.0,   0.00000, 0.00000,  4.7400);
			SendClientMessage(playerid,-1,"Tienes 20 segundos para robar objetos de la propiedad");
			LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
			if(PlayerInfo[playerid][pexpladron] < 49)
			{


				SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
				PlayerInfo[playerid][pexpladron]++;
				format(Query, 200, "UPDATE `Cuenta` SET `expladron`='%d' WHERE `Username`='%s'",PlayerInfo[playerid][pexpladron],pName);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
			}
			else if(PlayerInfo[playerid][pexpladron] >= 49) return SendClientMessage(playerid,-1,"Has llegado al nivel máximo actual de este trabajo");
		}
	}
	return 1;
}
	
forward TiempoVender2(playerid);
public TiempoVender2(playerid)
{
	TiempoVenta2[playerid] = 0;
 return 1;
}

forward Legal2(playerid);
public Legal2(playerid)
{
				 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid] >= 100)
		{


			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
            HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
            KillTimer(Cargas[playerid]);
            	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				SetPlayerCheckpoint(playerid,1338.6766,-912.8005,35.6672,7.0);
				PuntoCX[playerid] = 1338.6766; PuntoCY[playerid] = -912.8005; PuntoCZ[playerid] = 35.6672;
            PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 1;
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 1;
				Cargando2[playerid] = 0;
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
}

forward Legal3(playerid);
public Legal3(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid] >= 100)
		{


			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
            HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
            KillTimer(Cargas[playerid]);
            	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				SetPlayerCheckpoint(playerid,455.0953,-1502.9357,30.8655,7.0);
				PuntoCX[playerid] = 455.0953; PuntoCY[playerid] = -1502.9357; PuntoCZ[playerid] = 30.8655;
		PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 2;
				Chofer[CamionID[playerid]] = playerid;
				Carga[playerid] = 2;
				Cargando2[playerid] = 0;
				SetPVarInt(playerid, "Camionero", 1);
			}
		}
	}

forward Legal4(playerid);
public Legal4(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{


			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
            HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
            KillTimer(Cargas[playerid]);
           	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
			SetPlayerCheckpoint(playerid,810.9319,-1391.0319,13.8416,7.0);
			PuntoCX[playerid] = 810.9319; PuntoCY[playerid] = -1391.0319; PuntoCZ[playerid] = 13.8416;
			PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
			TogglePlayerControllable(playerid, 1);
			SetPVarInt(playerid, "IsFrozen", 1);
			CamionCargado[CamionID[playerid]] = 2;
			Chofer[CamionID[playerid]] = playerid;
			Carga[playerid] = 2;
			Cargando2[playerid] = 0;
			SetPVarInt(playerid, "Camionero", 1);
			}
		}
}
forward Legal5(playerid);
public Legal5(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{
			if(CamionID[playerid] != INVALID_PLAYER_ID)
			{
   HidePlayerProgressBar(playerid, EngineVeh[playerid]);
   SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
   KillTimer(Cargas[playerid]);
   GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
   SetPlayerCheckpoint(playerid,488.1939,-1277.0747,15.9604,7.0);
   PuntoCX[playerid] = 488.1939; PuntoCY[playerid] = -1277.0747; PuntoCZ[playerid] = 15.9604;
   PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
   PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
   CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				Chofer[CamionID[playerid]] = playerid;
				CamionCargado[CamionID[playerid]] = 2;
				Carga[playerid] = 2;
				Cargando2[playerid] = 0;
				SetPVarInt(playerid, "Camionero", 1);
			}
}
}
forward Legal6(playerid);
public Legal6(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{
		if(CamionID[playerid] != INVALID_PLAYER_ID)
		{
         HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
           KillTimer(Cargas[playerid]);
          	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				SetPlayerCheckpoint(playerid,1342.3486, -1753.9712, 12.5546,7.0);
				PuntoCX[playerid] = 488.1939; PuntoCY[playerid] = -1277.0747; PuntoCZ[playerid] = 15.9604;
				PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
			TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				Chofer[CamionID[playerid]] = playerid;
				CamionCargado[CamionID[playerid]] = 2;
				Carga[playerid] = 2;
				Cargando2[playerid] = 0;
				SetPVarInt(playerid, "Camionero", 1);
			}
}
}

forward Ilegal1(playerid);
public Ilegal1(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{
		if(CamionID[playerid] != INVALID_PLAYER_ID)
		{
         HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
           KillTimer(Cargas[playerid]);
          	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				SetPlayerCheckpoint(playerid,2249.3113, -2015.5472, 12.9157,7.0);
				PuntoCX[playerid] = 2169.3521; PuntoCY[playerid] = -2275.2957; PuntoCZ[playerid] = 13.1360;
				HidePlayerProgressBar(playerid, EngineVeh[playerid]);
				PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	            PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
		    	CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 3;
				Carga[playerid] = 3;
				Cargando2[playerid] = 0;
				Chofer[CamionID[playerid]] = playerid;
				SetPVarInt(playerid, "Camionero", 1);
			}
	}
}

forward Ilegal2(playerid);
public Ilegal2(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{
		if(CamionID[playerid] != INVALID_PLAYER_ID)
		{
         HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
           KillTimer(Cargas[playerid]);
          	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				SetPlayerCheckpoint(playerid,2480.9316,-2115.3042,13.2740,7.0);
				PuntoCX[playerid] = 2480.9316; PuntoCY[playerid] = -2115.3042; PuntoCZ[playerid] = 13.2740;
				PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
			CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 3;
				Carga[playerid] = 3;
				Chofer[CamionID[playerid]] = playerid;
				Cargando2[playerid] = 0;
				SetPVarInt(playerid, "Camionero", 1);
			}
	}
}
forward Ilegal3(playerid);
public Ilegal3(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{
		if(CamionID[playerid] != INVALID_PLAYER_ID)
		{
         HidePlayerProgressBar(playerid, EngineVeh[playerid]);
            SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
           KillTimer(Cargas[playerid]);
          	GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
				SetPlayerCheckpoint(playerid, 2659.9167, -1591.9866, 12.6515,7.0);
				PuntoCX[playerid] = 2169.3521; PuntoCY[playerid] = -2275.2957; PuntoCZ[playerid] = 13.1360;
			PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
			CargandoC[playerid] = 0;
				TogglePlayerControllable(playerid, 1);
				SetPVarInt(playerid, "IsFrozen", 1);
				CamionCargado[CamionID[playerid]] = 3;
				Carga[playerid] = 3;
				Chofer[CamionID[playerid]] = playerid;
				Cargando2[playerid] = 0;
				SetPVarInt(playerid, "Camionero", 1);
			}
	}
}
forward Ilegal4(playerid);
public Ilegal4(playerid)
{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid]  >= 100)
		{
		if(CamionID[playerid] != INVALID_PLAYER_ID)
		{
         HidePlayerProgressBar(playerid, EngineVeh[playerid]);
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
         KillTimer(Cargas[playerid]);
 	     GameTextForPlayer(playerid, "~w~Camion ~g~Cargado", 3000, 3);
		 SetPlayerCheckpoint(playerid, 2443.4106, -1420.5247, 23.0605,7.0);
	     PuntoCX[playerid] = 2169.3521; PuntoCY[playerid] = -2275.2957; PuntoCZ[playerid] = 13.1360;
	     PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para entregar la carga");
         PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
		CargandoC[playerid] = 0;
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		CamionCargado[CamionID[playerid]] = 4;
		Carga[playerid] = 4;
		Cargando2[playerid] = 0;
		Chofer[CamionID[playerid]] = playerid;
		SetPVarInt(playerid, "Camionero", 1);
			}
		}
}


forward DescargandoCamion(playerid);
public DescargandoCamion(playerid)
{
	new autoid;
	autoid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CAMION(autoid) || Esuncamionn1(autoid))
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		 Cargando2[playerid] +=25;
         SetPlayerProgressBarValue(playerid, EngineVeh[playerid], Cargando2[playerid]);
         UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
		if(Cargando2[playerid] >= 100)
		{
		HidePlayerProgressBar(playerid, EngineVeh[playerid]);
        SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
		Cargando2[playerid] = 0;
		KillTimer(Cargas[playerid]);
		TogglePlayerControllable(playerid, 1);
		SetPVarInt(playerid, "IsFrozen", 1);
		SendClientMessage(playerid, -1, "{00FF3F}Camión descargado{FFFFFF}, vuelve a la central");
		PlayerTextDrawSetString(playerid, ErrorCommand[playerid]," ve al ~r~punto en el mapa ~w~para recibir tu paga");
		 PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
		SetPlayerCheckpoint(playerid, 2170.0105, -2297.6560, 12.7173, 7.0);
		PuntoCX[playerid] = 2170.0105; PuntoCY[playerid] = -2297.6560; PuntoCZ[playerid] = 12.7173;
		}
	}
	return 1;
}


forward Taximetro(playerid);
public Taximetro(playerid)
{
	new veh = GetPlayerVehicleID(playerid);
	if(TAXI(veh) && GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
	{


		if(PlayerInfo[playerid][dinero] >= Ficha[Taxista[playerid]])
		{


			new cuenta,string[256];
			cuenta = Monto[Taxista[playerid]]+Ficha[Taxista[playerid]];
			QuitarDinero(playerid, Ficha[Taxista[playerid]]);
			DarDinero(Taxista[playerid],Ficha[Taxista[playerid]]);
			Monto[Taxista[playerid]] = cuenta;
			format(string,256,"Monto $%d",Monto[Taxista[playerid]]);
			PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos(string));
	        PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
		}
		else
		{
			InfoMSG(playerid, 3000,  "Te has quedado sin dinero para pagar el taxi");
			InfoMSG(Taxista[playerid], 3000,"Tu pasajero se ha quedado sin dinero");
			RemovePlayerFromVehicle(playerid);
			KillTimer(TM[playerid]);
		}
	}
	else
	{


		KillTimer(TM[playerid]);
	}
}



forward Entrandos(playerid);
public Entrandos(playerid)
{
	if(Entrando[playerid] == 1)
	{
		GetPlayerPos(playerid, PosTP[playerid][0],PosTP[playerid][1],PosTP[playerid][2]);
		Entrando[playerid] = 0;
	}
}

forward Encerrando(playerid);
public Encerrando(playerid)
{
	if(EstaConectado(playerid)) return 1;
	if(Entrando[playerid] == 0)
	{

		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	BajandoV[playerid] = 1;
	SetPlayerHealth(playerid,100.0);
	if(PlayerInfo[playerid][Cargos] == 1)
	{


		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 4;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}5 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		QuitarArmas(playerid);
		VariableCaido[playerid] = 0;
		if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
		}
	}
	else if(PlayerInfo[playerid][Cargos] == 2)
	{


		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 9;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}10 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		QuitarArmas(playerid);
		Jail[playerid] = 1;
		if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
		}
	}
	else if(PlayerInfo[playerid][Cargos] == 3)
	{


		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 14;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}15 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		QuitarArmas(playerid);
		SetPlayerColor(playerid, COLOR_WHITE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		Jail[playerid] = 1;
		if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
		}
	}
	else if(PlayerInfo[playerid][Cargos] == 4)
	{


		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 19;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}20 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		QuitarArmas(playerid);
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
		}
	}
	else if(PlayerInfo[playerid][Cargos] == 5)
	{


		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 24;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}25 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
		}
	}
	else if(PlayerInfo[playerid][Cargos] == 6)
	{


		new celda = random(4);
		PlayerInfo[playerid][pTiempoCarcelM] = 29;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}30 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,15.0,-1589.5292,716.2191,-5.6688) || IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 223.0108,109.8135,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 219.0009,110.3388,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 215.2188,109.1792,999.0156);
				SetPlayerInterior(playerid, 10);
				SetPlayerVirtualWorld(playerid, 5);
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875))
		{


			if(celda == 0)
			{


				SetPlayerPos(playerid, 197.6199, 174.8677, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 1)
			{


				SetPlayerPos(playerid, 193.5631, 174.8843, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 2)
			{


				SetPlayerPos(playerid, 194.5337, 163.1250, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
			else if(celda == 3)
			{


				SetPlayerPos(playerid, 198.6272, 162.4750, 1002.6390);
				SetPlayerInterior(playerid, 3);
				SetPlayerVirtualWorld(playerid, 7);
			}
		}
	}
	return 1;
}

forward Encerrando2(playerid);
public Encerrando2(playerid)
{
	if(EstaConectado(playerid)) return 1;
	if(Entrando[playerid] == 0)
	{

		Entrando[playerid] = 1;
		SetTimerEx("Entrandos",3000,false,"d",playerid);
	}
	if(PlayerInfo[playerid][Cargos] == 1)
	{


		PlayerInfo[playerid][pTiempoCarcelM] = 4;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}5 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		QuitarArmas(playerid);
		VariableCaido[playerid] = 0;
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);
		SetPlayerHealth(playerid,100.0);
	}
	else if(PlayerInfo[playerid][Cargos] == 2)
	{


		PlayerInfo[playerid][pTiempoCarcelM] = 9;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}10 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		QuitarArmas(playerid);
		Jail[playerid] = 1;
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(PlayerInfo[playerid][Cargos] == 3)
	{


		PlayerInfo[playerid][pTiempoCarcelM] = 14;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}15 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		QuitarArmas(playerid);
		SetPlayerColor(playerid, COLOR_WHITE);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		Jail[playerid] = 1;
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(PlayerInfo[playerid][Cargos] == 4)
	{


		PlayerInfo[playerid][pTiempoCarcelM] = 19;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}20 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		QuitarArmas(playerid);
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);

	}
	else if(PlayerInfo[playerid][Cargos] == 5)
	{


		PlayerInfo[playerid][pTiempoCarcelM] = 24;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}25 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);
	}
	else if(PlayerInfo[playerid][Cargos] == 6)
	{


		PlayerInfo[playerid][pTiempoCarcelM] = 29;
		PlayerInfo[playerid][pTiempoCarcelS] = 60;
		QuitarArmas(playerid);
		PlayerInfo[playerid][arrestado]++;
		SendClientMessage(playerid, -1, "{D50000}Fuistes detenido{FFFFFF}, tendrás que cumplir una condena de {58ACFA}30 minutos {FFFFFF}para ser liberado.");
		SendClientMessage(playerid, -1, "Para ver cuanto tiempo te falta para cumplir la condena, usa {58ACFA}/tiempo");
		SendClientMessage(playerid, -1, "La policía les quita a los detenidos, sus armas y drogas.");
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		PlayerInfo[playerid][Cargos] = 0;
		SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos]);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SetPlayerColor(playerid, COLOR_WHITE);
		Jail[playerid] = 1;
		SetPlayerPos(playerid, 227.3367,109.3470,999.0156);
		SetPlayerInterior(playerid, 10);
		SetPlayerVirtualWorld(playerid, 1);
	}
	return 1;
}



forward Guardar_Datos(playerid);
public Guardar_Datos(playerid)
{
new query[200], Float:ha[3];
GetPlayerHealth(playerid, ha[0]);
GetPlayerArmour(playerid, ha[1]);
PlayerInfo[playerid][interiorid] = GetPlayerInterior(playerid);
GetPlayerPos(playerid, PlayerInfo[playerid][posx], PlayerInfo[playerid][posy], PlayerInfo[playerid][posz]);
GetPlayerFacingAngle(playerid, PlayerInfo[playerid][angle]);
new pName[24]; GetPlayerName(playerid, pName, 24);   PlayerInfo[playerid][skin] = GetPlayerSkin(playerid);

format(query, 200, "UPDATE `Cuenta` SET `posx`= %f,`posy`= %f,`posz`= %f,`angle`= %f WHERE `nombre`='%s'", PlayerInfo[playerid][posx],
PlayerInfo[playerid][posy], PlayerInfo[playerid][posz], PlayerInfo[playerid][angle], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `sexo`=%d,`edad`=%d,`skin`=%d,`vida`=%f,`chaleco`=%f,`adminlvl`=%d,`interiorid`=%d,`virtualworldid`=%d WHERE `nombre`='%s'",PlayerInfo[playerid][sexo],
PlayerInfo[playerid][edad], PlayerInfo[playerid][skin], ha[0], ha[1],PlayerInfo[playerid][adminlvl],
PlayerInfo[playerid][interiorid],PlayerInfo[playerid][virtualworldid], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `pwp0`=%d,`pwp1`=%d,`pwp2`=%d,`pwp3`=%d,`pwp4`=%d,`pwp5`=%d,`pwp6`=%d,`pwp7`=%d,`pwp8`=%d WHERE `nombre`='%s'",PlayerInfo[playerid][pwp0],
PlayerInfo[playerid][pwp1], PlayerInfo[playerid][pwp2], PlayerInfo[playerid][pwp3], PlayerInfo[playerid][pwp4],PlayerInfo[playerid][pwp5],
PlayerInfo[playerid][pwp6],PlayerInfo[playerid][pwp7],PlayerInfo[playerid][pwp8], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `pwp9`=%d,`pwp10`=%d,`pwp11`=%d,`pwp12`=%d,`Agonizando`=%d,`miembro`=%d,`rango`=%d,`cargos`=%d WHERE `nombre`='%s'",PlayerInfo[playerid][pwp9],
PlayerInfo[playerid][pwp10], PlayerInfo[playerid][pwp11], PlayerInfo[playerid][pwp12], PlayerInfo[playerid][Agonizando],PlayerInfo[playerid][miembro],PlayerInfo[playerid][rango],
PlayerInfo[playerid][Cargos], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);


format(query, 200, "UPDATE `Cuenta` SET `pmodelo`=%d,`placa`=%d,`duty`=%d,`job`=%d,`vipjob`=%d,`dinero`=%d,`dinerobank`=%d,`banco`=%d WHERE `nombre`='%s'",PlayerInfo[playerid][pModelo],
PlayerInfo[playerid][Placa], PlayerInfo[playerid][Duty], PlayerInfo[playerid][job], PlayerInfo[playerid][vipjob],PlayerInfo[playerid][dinero],PlayerInfo[playerid][dinerobank],
PlayerInfo[playerid][banco], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `movil`=%d,`dni`=%d,`carcel`=%d,`jailminutes`=%d,`dudechannel`=%d,`keycar1`=%d,`keycar2`=%d WHERE `nombre`='%s'",PlayerInfo[playerid][movil],
PlayerInfo[playerid][dni], PlayerInfo[playerid][carcel], PlayerInfo[playerid][jailminutes], PlayerInfo[playerid][DudeChannel],PlayerInfo[playerid][KeyCar1],PlayerInfo[playerid][KeyCar2], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);

format(query, 200, "UPDATE `Cuenta` SET `keycar3`=%d,`pizza`=%d,`hamburgesa`=%d,`helado`=%d,`bebida`=%d WHERE `nombre`='%s'",PlayerInfo[playerid][KeyCar3],
PlayerInfo[playerid][Pizza],PlayerInfo[playerid][Hamburgesa],PlayerInfo[playerid][Helado],PlayerInfo[playerid][Bebida], pName);
mysql_function_query(TuberiasMySQL, query, true, "OnQueryFinish", "ii", 0, playerid);
return 1;
}


public OnGameModeInit()
{
    printf("Iniciando conexión MySQL: (Servidor: '%s', Usuario: '%s', Clave: '%s', Base de Datos: '%s')", MySQL_Servidor, MySQL_Usuario, MySQL_Clave, MySQL_BD);
	TuberiasMySQL = mysql_connect(MySQL_Servidor, MySQL_Usuario, MySQL_BD,MySQL_Clave);
	if(mysql_ping() == 1) //Comprobamos si se conectó
	{
		printf("Conexión a la base de datos realizada correctamente.");
	}
	else //Caso contrario:
	{
	    print("Conexión a la base de datos no realizada.");
		mysql_close(); //Cerramos la conexión
		SendRconCommand("exit"); //Cerramos la consola para evitar bug's
	}

        SetGameModeText(GAMEMODE_TEXT);
        SendRconCommand("hostname "SERVER_NAME"");
        SendRconCommand("mapname "MAPNAME"");

        SetWorldTime(ServerTime);
        SetTimer("UpdateServer", 1800000, true);
        EnableStuntBonusForAll(0);
        DisableInteriorEnterExits();
        ManualVehicleEngineAndLights();
        UsePlayerPedAnims();
        
    ConnectNPC("NPC_001", "atraco1_1");
    ConnectNPC("NPC_003", "247ayunta");
    ConnectNPC("NPC_004", "247vinewood");
    
        	//MENUS
	AlhambraMenu = CreateMenu("Alhambra", 1, 15.0, 115.0, 125.0, 0.0);
	AddMenuItem(AlhambraMenu, 0, "Sprunk");
	AddMenuItem(AlhambraMenu, 0, "Cerveza");
	AddMenuItem(AlhambraMenu, 0, "Vodka");
	AddMenuItem(AlhambraMenu, 0, "Whisky");

	PigPenMenu = CreateMenu("PigPen", 1, 15.0, 115.0, 125.0, 0.0);
	AddMenuItem(PigPenMenu, 0, "Sprunk");
	AddMenuItem(PigPenMenu, 0, "Cerveza");
	AddMenuItem(PigPenMenu, 0, "Vodka");
	AddMenuItem(PigPenMenu, 0, "Whisky");

    BincoMenu = CreateMenu("Tienda", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(BincoMenu, 0, "Accesorios");
    AddMenuItem(BincoMenu, 0, "Ropas");

    ZipMenu = CreateMenu("Tienda", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(ZipMenu, 0, "Accesorios");
    AddMenuItem(ZipMenu, 0, "Ropas");

    TOYSMENU = CreateMenu("Accesorios", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(TOYSMENU, 0, "Cascos");
    AddMenuItem(TOYSMENU, 0, "Gorras");
    AddMenuItem(TOYSMENU, 0, "Gorros");
    AddMenuItem(TOYSMENU, 0, "Sombreros");
    AddMenuItem(TOYSMENU, 0, "Bandanas");
    AddMenuItem(TOYSMENU, 0, "Gafas");
    AddMenuItem(TOYSMENU, 0, "Mascaras");

    PizzaStackedMenu = CreateMenu("Pizzas", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(PizzaStackedMenu, 0, "Pizzas");
    AddMenuItem(PizzaStackedMenu, 0, "Bebidas");

    PizzaMenu = CreateMenu("Pizzas", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(PizzaMenu, 0, "Pizza"); SetMenuColumnHeader(PizzaMenu, 1, "Precio");
    AddMenuItem(PizzaMenu, 0, "Pizza mixta"); AddMenuItem(PizzaMenu, 1, "$15");
    AddMenuItem(PizzaMenu, 0, "Pizza barbacoa"); AddMenuItem(PizzaMenu, 1, "$20");
    AddMenuItem(PizzaMenu, 0, "Pizza clasica"); AddMenuItem(PizzaMenu, 1, "$10");
    AddMenuItem(PizzaMenu, 0, "Pizza vegetariana"); AddMenuItem(PizzaMenu, 1, "$10");
    AddMenuItem(PizzaMenu, 0, "Ensalada"); AddMenuItem(PizzaMenu, 1, "$10");

    BebidasMenu = CreateMenu("Bebidas", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(BebidasMenu, 0, "Bebida"); SetMenuColumnHeader(BebidasMenu, 1, "Precio");
    AddMenuItem(BebidasMenu, 0, "Cerveza"); AddMenuItem(BebidasMenu, 1, "$15");
    AddMenuItem(BebidasMenu, 0, "Refresco de naranja"); AddMenuItem(BebidasMenu, 1, "$10");
    AddMenuItem(BebidasMenu, 0, "Refresco de limon"); AddMenuItem(BebidasMenu, 1, "$10");
    AddMenuItem(BebidasMenu, 0, "Refresco de cola"); AddMenuItem(BebidasMenu, 1, "$15");
    AddMenuItem(BebidasMenu, 0, "Cafe"); AddMenuItem(BebidasMenu, 1, "$5");
    AddMenuItem(BebidasMenu, 0, "Botella de agua"); AddMenuItem(BebidasMenu, 1, "$5");

    DonutMenu = CreateMenu("Donuts", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(DonutMenu, 0, "Donut"); SetMenuColumnHeader(DonutMenu, 1, "Precio");
    AddMenuItem(DonutMenu, 0, "Donut blanco"); AddMenuItem(DonutMenu, 1, "$5");
    AddMenuItem(DonutMenu, 0, "Donut chocolate"); AddMenuItem(DonutMenu, 1, "$6");
    AddMenuItem(DonutMenu, 0, "Rosquilla"); AddMenuItem(DonutMenu, 1, "$6");
    AddMenuItem(DonutMenu, 0, "Cafe"); AddMenuItem(DonutMenu, 1, "$5");

	ChickBellMenu = CreateMenu("ChickenBell", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(ChickBellMenu, 0, "Comida");
    AddMenuItem(ChickBellMenu, 0, "Bebidas");

    ChickMenu = CreateMenu("ChickenBell", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(ChickMenu, 0, "Comida"); SetMenuColumnHeader(ChickMenu, 1, "Precio");
    AddMenuItem(ChickMenu, 0, "Pollo asado"); AddMenuItem(ChickMenu, 1, "$25");
    AddMenuItem(ChickMenu, 0, "Alitas de pollo"); AddMenuItem(ChickMenu, 1, "$20");
    AddMenuItem(ChickMenu, 0, "Ensalada"); AddMenuItem(ChickMenu, 1, "$10");

    BurgerShotMenu = CreateMenu("Burger", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(BurgerShotMenu, 0, "Hamburguesas");
    AddMenuItem(BurgerShotMenu, 0, "Bebidas");

    BurgerMenu = CreateMenu("Burger", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(BurgerMenu, 0, "Hamburguesas"); SetMenuColumnHeader(BurgerMenu, 1, "Precio");
    AddMenuItem(BurgerMenu, 0, "Hamburguesa de pollo"); AddMenuItem(BurgerMenu, 1, "$15");
    AddMenuItem(BurgerMenu, 0, "Hamburguesa de pescado"); AddMenuItem(BurgerMenu, 1, "$10");
    AddMenuItem(BurgerMenu, 0, "Hamburguesa de ternera"); AddMenuItem(BurgerMenu, 1, "$10");
    AddMenuItem(BurgerMenu, 0, "Ensalada"); AddMenuItem(BurgerMenu, 1, "$10");

    HotdogMenu = CreateMenu("Hotdogs", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(HotdogMenu, 0, "Hotdog $10");
    AddMenuItem(HotdogMenu, 0, "Bebidas");

    ShopMenuN = CreateMenu("Tienda", 1, 15.0, 115.0, 125.0, 0.0);
    AddMenuItem(ShopMenuN, 0, "Bebidas");
    AddMenuItem(ShopMenuN, 0, "GPS $150");
    AddMenuItem(ShopMenuN, 0, "Tabaco");

	TabacoMenu = CreateMenu("Tabaco", 2, 15.0, 115.0, 125.0, 0.0);
    SetMenuColumnHeader(TabacoMenu, 0, "Objeto"); SetMenuColumnHeader(TabacoMenu, 1, "Precio");
    AddMenuItem(TabacoMenu, 0, "Cigarrillo"); AddMenuItem(TabacoMenu, 1, "$10");
    AddMenuItem(TabacoMenu, 0, "Mechero"); AddMenuItem(TabacoMenu, 1, "$10");

     SetTimer("Lugarespick", 1000, 1);
//pickup
	CreatePickup(19133, 1, 1204.8596, 12.2682, 1000.9991, 0); // Bitch
	CreatePickup(1212, 1, 1437.143798, -997.824829, 1639.791137, 0); // Banco 1
    CreatePickup(1212, 1, 1433.200439, -997.829040, 1639.791137, 0); // Banco 2
    CreatePickup(1212, 1, 1429.596923, -997.829467, 1639.784301, 0); // Banco 3
    Alhambra_Pick = CreatePickup(0, 1, 481.611053, -10.849586, 1000.679687-7.403, 0);//Alahambra
    CreatePickup(1239, 1, 361.829895, 173.562728, 1008.0, 0);//InfoAyunta
    Conce_Pick1 = CreatePickup(0, 1, 560.660095, -1310.996093, 1996.575927, 0); //Concesionario 1
    Conce_Pick2 = CreatePickup(0, 1, 560.660095, -1313.875244, 1996.575927, 0); //Concesionario 2
    Binco_Pick = CreatePickup(0, 1, 217.469360, -98.421447, 1005.257812, 0); //Binco 1
    Victim_Pick1 = CreatePickup(0, 1, 206.654342, -3.857390, 1001.210937, 0); //Victim1
    Victim_Pick2 = CreatePickup(0, 1, 206.305984, -12.398782, 1001.217773, 0); //Victim2
	Zip_Pick = CreatePickup(0, 1, 181.209182, -87.911384, 1002.030700, 0); //ZIP
	Prolaps_Pick = CreatePickup(0, 1, 199.650726, -127.131729, 1003.515197, 0); //Prolaps
	Suburban_Pick = CreatePickup(0, 1, 214.175384, -41.355842, 1002.023437, 0); //Suburban
    PizzaStack_Pick1 = CreatePickup(0, 1, 377.228118, -118.802841, 1001.499511, 0); //Pizza stacked pick 1
    PizzaStack_Pick2 = CreatePickup(0, 1, 375.244934, -118.804130, 1001.499511, 0); //Pizza stacked pick 2
    PizzaStack_Pick3 = CreatePickup(0, 1, 373.237823, -118.803184, 1001.492187, 0); //Pizza stacked pick 3
    BarGR_Pick =  CreatePickup(0, 1, 497.719116, -76.040863, 998.757812, 0); //Bar Groove
    PigPen_Pick =  CreatePickup(0, 1, 1215.061279, -13.353262, 1000.921875, 0); //PigPen
    Donuts_Pick =  CreatePickup(0, 1, 379.239440, -187.924850, 1000.632812, 0); //Donuts
    ChickBell_Pick1 = CreatePickup(0, 1, 368.798034, -6.018355, 1001.851562, 0); //ChickenBell1
    ChickBell_Pick2 = CreatePickup(0, 1, 371.651885, -6.016441, 1001.858886, 0); //ChickenBell1
    Burger_Pick = CreatePickup(0, 1, 377.137695, -67.435173, 1001.507812, 0); //Burger
    Hotdog_Pick = CreatePickup(0, 1, 1000.164672, -1850.040405, 12.814621, 0); //Hotdog
    AyuntShop_Pick = CreatePickup(0, 1, -30.552667, -28.992704, 1003.557250, 0); //24/7Ayunta
    UnityShop_Pick = CreatePickup(0, 1, -28.767684, -185.135284, 1003.546875, 0); //24/7Unity
    VineShop_Pick = CreatePickup(0, 1, 2.580548, -29.013784, 1003.549438, 0); //24/7Vine

         //job guarda espalda
        Actor_GuardaEspalda = CreateActor(6, 2228.43335, -1715.09155, 13.51350, 90);
        ApplyActorAnimation(Actor_GuardaEspalda, "DEALER", "shop_pay", 4.1, 0, 0, 0, 0, 0); // Pay anim
        CreateDynamicCP(2227.3914, -1715.0405, 13.5135, 0.5);
        CreateActor(267, 1544.2856, -1631.8447, 13.3599, 90.0);
        CreateActor(267, 1579.7195, -1635.2616, 13.3599, 0);
        
        //job taxista
         CreateActor(55, 1566.75293, -1669.71069, 1990.54614, 90.0);
         CreateActor(59, 1566.75366, -1673.53772, 1990.54614, 90.0);
         CreateActor(55, 1566.69775, -1677.32056, 1990.54614, 90.0);
         CreateActor(55, 1566.84277, -1680.31653, 1990.54614, 90.0);
         CreateActor(59, 1566.68787, -1684.17615, 1990.54614, 90.0);

    
        Create3DTextLabel("{99FF00}Asador de espetos\nPresiona {CCFF00}'F/ENTER'", 0x008080FF, 412.108551, -1854.582153, 3.690110, 50.0, 0, 0);
	   	// ----> Labels
	   	
	   	//atender taxi
	   		Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ser.\n{5EFF00}Atendido", 0xFFFFFFFF, 1563.9891, -1684.0284, 1990.5461, 2.0, 0, 0); // camioneros
   	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ser.\n{5EFF00}Atendido", 0xFFFFFFFF, 1563.9891, -1680.3165, 1990.5461, 2.0, 0, 0); // camioneros // camioneros
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ser.\n{5EFF00}Atendido", 0xFFFFFFFF, 1563.9891, -1677.3206, 1990.5461, 2.0, 0, 0); // Victim
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ser.\n{5EFF00}Atendido", 0xFFFFFFFF, 1563.9891, -1673.5377, 1990.5461, 2.0, 0, 0); // Burger Shot
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ser.\n{5EFF00}Atendido", 0xFFFFFFFF, 1563.9891, -1669.7107, 1990.5461, 2.0, 0, 0); // Pizzeria
	   	
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}job camionero", 0xFFFFFFFF, 1991.5011, -2100.8479, 13.059551, 5.0, 0, 0); // camioneros
   	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Empleo Texita", 0xFFFFFFFF, 1751.5405, -1886.8923, 13.5808, 5.0, 0, 0); // camioneros // camioneros
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Victim", 0xFFFFFFFF, 461.200073, -1500.823608, 31.059551, 5.0, 0, 0); // Victim
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Burger Shot", 0xFFFFFFFF, 810.6630, -1616.1554, 13.5469, 5.0, 0, 0); // Burger Shot
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Pizzeria", 0xFFFFFFFF, 2105.4858, -1806.5336, 13.5547, 5.0, 0, 0); // Pizzeria
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Peluquería", 0xFFFFFFFF, 2070.6365, -1793.7847, 13.5469, 5.0, 0, 0); // Peluquería
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Tattoo studio", 0xFFFFFFFF, 2068.5840, -1779.7758, 13.5596, 5.0, 0, 0); // Tattoo studio
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Peluquería 2", 0xFFFFFFFF, 823.9835, -1588.2754, 13.5545, 5.0, 0, 0); // Peluquería 2
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Clukin' Bells", 0xFFFFFFFF, 928.7275, -1352.9547, 13.3438, 5.0, 0, 0); // Clukin' Bells
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Pig Pen (Prostíbulo)", 0xFFFFFFFF, 2421.3159, -1219.6179, 25.5382, 5.0, 0, 0); // Pig Pen (Prostíbulo)
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Groove Bar", 0xFFFFFFFF, 2310.0977, -1643.5522, 14.8270, 5.0, 0, 0); // Groove Bar
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Cantos Gym", 0xFFFFFFFF, 2229.8601, -1721.4545, 13.5633, 5.0, 0, 0); // Cantos Gym
	Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Lugar V.I.P", 0xFFFFFFFF, 1654.2700, -1654.8944, 22.5156, 5.0, 0, 0); // Vip
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Dept. Noticias", 0xFFFFFFFF, 648.8630, -1360.6012, 13.5863, 5.0, 0, 0); // CNN
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Banco de Los Santos", 0xFFFFFFFF, 1153.948120, -1772.674682, 16.599193, 5.0, 0, 0); // Banco
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Grotti", 0xFFFFFFFF, 542.3840, -1293.5125, 17.2422, 5.0, 0, 0); // Grotti
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Baile privado", 0xFFFFFFFF, 1204.8596, 12.2682, 1000.9991, 5.0, 0, 0); // Bitch
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}24/7 Unity", 0xFFFFFFFF, 1833.149780, -1842.485717, 13.578125, 5.0, 0, 0); // 24/7 Unity
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Alhambra", 0xFFFFFFFF, 1836.4471, -1682.3042, 13.3476, 5.0, 0, 0); // Alhambra
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}24/7 Vinewood", 0xFFFFFFFF, 1315.4854, -897.6839, 39.5781, 5.0, 0, 0); // 24/7 Vinewood
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}24/7 Ayuntamiento", 0xFFFFFFFF, 1352.3815, -1759.2286, 13.5078, 5.0, 0, 0); // 24/7 Ayuntamiento
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Binco", 0xFFFFFFFF, 2244.3567, -1665.5562, 15.4766, 5.0, 0, 0); // Binco
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Zip", 0xFFFFFFFF, 1456.4344, -1137.6427, 23.9484, 5.0, 0, 0); // Zip
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}ProLaps", 0xFFFFFFFF, 499.5753, -1360.6145, 16.3664, 5.0, 0, 0); // ProLaps
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}SubUrban", 0xFFFFFFFF, 2112.7739, -1211.6287, 23.9631, 5.0, 0, 0); // SubUrban
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Jims Ring", 0xFFFFFFFF, 1038.286010, -1340.728027, 13.741346, 5.0, 0, 0); // JimRing
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1714.56897, -1862.00928, 13.40750, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1479.56226, -1620.46985, 13.90706, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1995.02405, -1452.68469, 13.43710, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1187.30322, -930.41052, 42.92493, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 615.66272, -1228.28015, 18.19140, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 849.83258, -1796.12292, 13.67352, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 1443.42688, -2286.75879, 13.39686, 5.0, 0, 0); // INFO
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para ver.\n{5EFF00}Información", 0xFFFFFFFF, 2849.94849, -1967.06055, 10.92459, 5.0, 0, 0); // INFO



    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 1437.143798, -997.824829, 1639.791137, 1.5, 0, 0); // Banco1
    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 1433.200439, -997.829040, 1639.791137, 1.5, 0, 0); // Banco2
    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 1429.596923, -997.829467, 1639.784301, 1.5, 0, 0); // Banco3
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}LSPD", 0xFFFFFFFF, 1555.142822, -1675.475341, 16.195312, 5.0, 0, 0); // LSPD
    Create3DTextLabel("Presiona '{5EFF00}~k~~VEHICLE_ENTER_EXIT~{FFFFFF}' para entrar.\n{5EFF00}Ayuntamiento", 0xFFFFFFFF, 1481.037597, -1771.786376, 18.795755, 5.0, 0, 0); //Ayuntamiento
    Create3DTextLabel("Presiona '{5EFF00}F/INTRO{FFFFFF}' para ser atendido.", 0xFFFFFFFF, 361.829895, 173.562728, 1008.382812, 1.5, 0, 0); // Info ayunta
	
	
		// PUestos de info
	CreateDynamicObject(1444, 1714.56897, -1862.00928, 13.40750,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 1479.56226, -1620.46985, 13.90706,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 1995.02405, -1452.68469, 13.43710,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1444, 1187.30322, -930.41052, 42.92493,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 615.66272, -1228.28015, 18.19140,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(1444, 849.83258, -1796.12292, 13.67352,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1444, 1443.42688, -2286.75879, 13.39686,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1444, 2849.94849, -1967.06055, 10.92459,   0.00000, 0.00000, 0.00000);


	//taxi

	/*SAPD Map Interior por Raul Lara*/
	//Piso segundas plantas
	new LSPD_OBJECT[27];

 //SAPD
	LSPD_OBJECT[26] = CreateObject(19370, 1576.6994, -1677.4489, 1995.7229, 0.0000, 0.0000, 180.0);
	SetObjectMaterialText(LSPD_OBJECT[26], "Taxi", 0, 140, "Verdana", 215, 1, -1, 0, 1);

	LSPD_OBJECT[0] = CreateObject(18981, 1556.44995, -1663.09998, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[1] = CreateObject(18981, 1556.46997, -1688.09998, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[2] = CreateObject(18981, 1577.12000, -1701.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[3] = CreateObject(18981, 1577.12000, -1676.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[4] = CreateObject(18981, 1576.95996, -1651.87000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[5] = CreateObject(18981, 1565.05005, -1637.39001, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[6] = CreateObject(18981, 1543.07996, -1642.81006, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[7] = CreateObject(18981, 1544.05005, -1651.09998, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[8] = CreateObject(18981, 1543.98999, -1700.06006, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[9] = CreateObject(18981, 1564.21997, -1713.90002, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[10] = CreateObject(18981, 1539.21997, -1713.90002, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[11] = CreateObject(18981, 1576.95996, -1626.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[12] = CreateObject(18981, 1540.05005, -1637.39001, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[13] = CreateObject(18981, 1544.54004, -1708.34998, 2000.00000,   0.00000, 0.00000, 0.00000);

	LSPD_OBJECT[14] = CreateObject(18981, 1567.47998, -1696.09998, 1989.04004,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[15] = CreateObject(18981, 1567.50000, -1671.16003, 1989.04004,   0.00000, 90.00000, 0.00000);

	LSPD_OBJECT[16] = CreateObject(18981, 1569.22998, -1701.79004, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[17] = CreateObject(18981, 1569.22998, -1715.64001, 1993.92004,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[18] = CreateObject(18981, 1569.35999, -1651.18994, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[19] = CreateObject(18981, 1569.35999, -1626.18994, 1993.90002,   0.00000, 90.00000, 0.00000);
	CreateObject(18981, 1569.35999, -1651.19995, 1983.71997,   0.00000, 90.00000, 0.00000);
	CreateObject(18981, 1569.35999, -1651.19995, 1988.20996,   0.00000, 90.00000, 0.00000);

	LSPD_OBJECT[20] = CreateObject(18981, 1569.31006, -1701.75000, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[21] = CreateObject(18981, 1544.40002, -1702.84998, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[22] = CreateObject(18981, 1568.62000, -1676.88000, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[23] = CreateObject(18981, 1568.02002, -1627.33997, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[24] = CreateObject(18981, 1544.33997, -1643.18005, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[25] = CreateObject(18981, 1569.41003, -1651.93005, 1999.97998,   0.00000, 90.00000, 0.00000);

		/*SAPD Map Interior por Raul Lara*/
	//Piso segundas plantas
	SetObjectMaterial(LSPD_OBJECT[16], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[17], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[18], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[19], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	//Paredes
	SetObjectMaterial(LSPD_OBJECT[0], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[1], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[2], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[3], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[4], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[5], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[6], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[7], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[8], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[9], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[10], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[11], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[12], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[13], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	//Techo
	SetObjectMaterial(LSPD_OBJECT[20], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[21], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[22], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[23], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[24], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[25], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	//Piso Lobby
	SetObjectMaterial(LSPD_OBJECT[14], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);
	SetObjectMaterial(LSPD_OBJECT[15], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);	/*SAPD Map Interior por Raul Lara*/
	//Piso segundas plantas
	SetObjectMaterial(LSPD_OBJECT[16], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[17], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[18], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[19], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	//Paredes
	SetObjectMaterial(LSPD_OBJECT[0], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[1], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[2], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[3], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[4], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[5], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[6], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[7], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[8], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[9], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[10], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[11], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[12], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	SetObjectMaterial(LSPD_OBJECT[13], 0, 14853, "gen_pol_vegas", "office_wallnu1", 0);
	//Techo
	SetObjectMaterial(LSPD_OBJECT[20], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[21], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[22], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[23], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[24], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[25], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	//Piso Lobby
	SetObjectMaterial(LSPD_OBJECT[14], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);
	SetObjectMaterial(LSPD_OBJECT[15], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);

/*	LSPD_OBJECT[1] = CreateObject(18981, 1569.22998, -1701.79004, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[2] = CreateObject(18981, 1569.22998, -1715.64001, 1993.92004,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[3] = CreateObject(18981, 1569.35999, -1651.18994, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[4] = CreateObject(18981, 1569.35999, -1626.18994, 1993.90002,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[5] = CreateObject(18981, 1569.31006, -1701.75000, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[6] = CreateObject(18981, 1544.40002, -1702.84998, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[7] = CreateObject(18981, 1568.62000, -1676.88000, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[8] = CreateObject(18981, 1568.02002, -1627.33997, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[9] = CreateObject(18981, 1544.33997, -1643.18005, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[10] = CreateObject(18981, 1569.41003, -1651.93005, 1999.97998,   0.00000, 90.00000, 0.00000);
	LSPD_OBJECT[11] = CreateObject(18981, 1576.95996, -1626.88000, 2000.00000,   0.00000, 0.00000, 0.00000);
	LSPD_OBJECT[12] = CreateObject(18981, 1540.05005, -1637.39001, 2000.00000,   0.00000, 0.00000, 90.00000);
	LSPD_OBJECT[13] = CreateObject(18981, 1544.54004, -1708.34998, 2000.00000,   0.00000, 0.00000, 0.00000);

	SetObjectMaterial(LSPD_OBJECT[1], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetDynamicObjectMaterial(LSPD_OBJECT[2], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[3], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);
	SetObjectMaterial(LSPD_OBJECT[4], 0, 10941, "silicon2_sfse", "ws_stationfloor", 0);

	//Techo
	SetObjectMaterial(LSPD_OBJECT[5], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[6], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[7], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[8], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[9], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	SetObjectMaterial(LSPD_OBJECT[10], 0, 14853, "gen_pol_vegas", "mp_police_win", 0);
	//Piso Lobby
	SetObjectMaterial(LSPD_OBJECT[11], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);
	SetObjectMaterial(LSPD_OBJECT[12], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);
		SetObjectMaterial(LSPD_OBJECT[13], 0, 14853, "gen_pol_vegas", "blue_carpet_256", 0);
 	//SAPD
//	LSPD_OBJECT[26] = CreateObject(19370, 1576.6994, -1677.4489, 1995.7229, 0.0000, 0.0000, 180.0);
//	SetObjectMaterialText(LSPD_OBJECT[26], "TAXI", 0, 140, "Verdana", 215, 1, -1, 0, 1);

*/

		CreateObject(18981, 1569.35999, -1651.19995, 1983.71997,   0.00000, 90.00000, 0.00000);
	CreateObject(18981, 1569.35999, -1651.19995, 1988.20996,   0.00000, 90.00000, 0.00000);

CreateObject(1536, 1567.28979, -1664.43774, 1989.57996,   0.00000, 0.00000, 0.00000);
CreateObject(1536, 1570.29004, -1664.39502, 1989.57996,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1536, 1557.04004, -1678.10999, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1536, 1557.04004, -1675.10999, 1989.57996,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(19375, 1560.00000, -1689.21997, 1994.31006,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1560.00000, -1663.72998, 1994.31006,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1574.04004, -1689.33997, 1994.31006,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1573.97998, -1663.75000, 1994.31006,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2191, 1576.10999, -1665.15002, 1989.52002,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2191, 1576.10999, -1667.15002, 1989.52002,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(2172, 1572.98999, -1684.84998, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2357, 1565.44995, -1669.54004, 1989.93994,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2357, 1565.45996, -1673.81995, 1989.93994,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2357, 1565.46997, -1678.06995, 1989.93994,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2357, 1565.47998, -1682.32996, 1989.93994,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1564.77002, -1681.10999, 1985.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2357, 1565.45996, -1683.76001, 1989.95996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(3857, 1564.73999, -1685.17004, 1990.84985,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(2172, 1572.97998, -1682.94995, 1989.57996,   0.00000, 0.00000, 89.82000);
CreateDynamicObject(2172, 1572.95996, -1678.90002, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2172, 1572.96997, -1677.01001, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2172, 1573.03003, -1672.89001, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2172, 1573.03003, -1670.98999, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2172, 1573.07996, -1667.18994, 1989.57996,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2172, 1572.05005, -1683.82996, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2172, 1572.04004, -1681.93005, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2172, 1572.06995, -1677.90002, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2172, 1572.06995, -1675.98999, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2172, 1572.10999, -1671.89001, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2172, 1572.12000, -1669.95996, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(2172, 1572.17004, -1666.18005, 1989.57996,   0.00000, 0.00000, 270.00000);
CreateDynamicObject(19375, 1564.76001, -1671.78003, 1985.19995,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19356, 1564.73999, -1687.53003, 1991.29004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3857, 1564.73999, -1670.25195, 1990.84985,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(1811, 1570.77002, -1672.39001, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1570.82996, -1670.39001, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1570.83997, -1676.12000, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1570.68005, -1678.58997, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1574.30005, -1676.31995, 1990.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1574.34998, -1678.42004, 1990.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1574.54004, -1682.63000, 1990.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1574.51001, -1684.89001, 1990.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1811, 1570.51001, -1682.45996, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1570.41003, -1684.81006, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1570.56995, -1666.48999, 1990.13000,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1811, 1574.31006, -1666.66003, 1990.13000,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2356, 1567.30005, -1669.58997, 1989.54004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 1567.37000, -1673.48999, 1989.54004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 1567.30005, -1677.37000, 1989.54004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 1567.43005, -1680.33997, 1989.54004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2356, 1567.42004, -1683.97998, 1989.54004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 1558.77002, -1664.20996, 1989.53003,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1703, 1557.47998, -1667.57996, 1989.53003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 1557.43005, -1672.27002, 1989.53003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 1560.94995, -1688.63000, 1989.53003,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1703, 1557.47998, -1687.56006, 1989.53003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1703, 1557.47998, -1682.52002, 1989.53003,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(8169, 1575.33997, -1652.01001, 1990.58997,   15.00000, 90.00000, 270.00000);
CreateDynamicObject(8169, 1572.81995, -1652.02002, 1990.58997,   15.00000, 90.00000, 270.00000);
CreateDynamicObject(630, 1557.67004, -1669.32996, 1990.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, 1557.50000, -1664.46997, 1990.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, 1557.68994, -1684.01001, 1990.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(630, 1557.91003, -1688.57996, 1990.59998,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2357, 1559.82996, -1668.50000, 1989.92004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(2357, 1559.77002, -1684.43994, 1989.92004,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19356, 1564.74402, -1687.53003, 1992.01855,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19356, 1564.73999, -1665.43005, 1991.29004,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19356, 1564.74402, -1665.43005, 1992.01855,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3857, 1564.73999, -1677.70996, 1990.84985,   0.00000, 0.00000, 135.00000);
CreateDynamicObject(19375, 1568.67932, -1689.26318, 1994.31006,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19375, 1567.56238, -1663.80945, 1994.31006,   0.00000, 0.00000, 90.00000);


		//Areas
	Area_CarWash = CreateDynamicRectangle(1909.005737, -1781.180664, 1913.502319, -1784.899291, 0);
	
	Area_Camionc = CreateDynamicRectangle (2160.1108, -2281.3726, 13.3559, 0);
//	Area_Camionc = CreateDynamicRectangle(1909.005737, -1781.180664, 1913.502319, -1784.899291, 0);
//	Area_Camionc = CreateDynamicRectangle(1909.005737, -1781.180664, 1913.502319, -1784.899291, 0);
	//

    CarWash[0] = CreateDynamicObject(18747, 0, 0, -100, 0, 0, 90);
    CarWash[1] = CreateDynamicObject(18747, 0, 0, -100, 0, 0, 90);
	CarWash[2] = CreateDynamicObject(18687, 0, 0, -100, 0, 0, -90);
    CarWash[3] = CreateDynamicObject(18687, 0, 0, -100, 0, 0, 90);
    CarWash[4] = CreateObject(18707, 0, 0, -100, 0, 0, 0);
    CreateDynamicObject(1250, 1908.84998, -1783.68945, 13.40625,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1239, 1909.45374, -1783.84558, 13.91913,   0.00000, 0.00000, 90.00000);
	
        PoliceDoor[0] = CreateDynamicObject(968, 1544.69873, -1630.80969, 13.10678,   0.00000, 90.00000, 90.00000);
        PoliceDoor[1] = CreateDynamicObject(3037, 1589.34912, -1638.28577, 14.27757,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(1495, 1582.60925, -1638.04272, 12.46317,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1584.18201, -1639.78088, 15.64673,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1584.18201, -1639.78088, 12.21590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1592.68201, -1639.78088, 15.64670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1592.68201, -1639.78088, 12.21590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1592.68201, -1642.78088, 15.64670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1592.68201, -1642.78088, 12.21590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19364, 1584.58545, -1642.86438, 15.64670,   0.00000, 0.00000, 15.00000);
        CreateDynamicObject(19364, 1584.58545, -1642.86438, 12.21590,   0.00000, 0.00000, 15.00000);
        CreateDynamicObject(19364, 1594.25916, -1644.32385, 15.64670,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(19364, 1594.25916, -1644.32385, 12.21590,   0.00000, 0.00000, 90.00000);
        new bbva1 = CreateDynamicObject(19353, 1154.4190, -1773.0747, 20.1537, 0.0000, 0.0000, 90.0064);
        SetDynamicObjectMaterialText(bbva1, 0, "BBVA", 140, "Arial", 220, 1, -16776961, 0, 1);
        new policia1 = CreateDynamicObject(19353, 1555.1279, -1675.7032, 21.2107, 0.0000, 0.0000, -179.7884);
        SetDynamicObjectMaterialText(policia1, 0, "POLICÍA", 140, "Arial", 150, 1, -16776961, 0, 1);
        new oficinas = CreateDynamicObject(19353, 1786.2697, -1295.6928, 17.8128, 0.0000, 0.0000, 89.8007);
        SetDynamicObjectMaterialText(oficinas, 0, "OFICINAS", 140, "Arial", 120, 1, -8092540, 0, 1);
        new ex_publi = CreateDynamicObject(4230, 1597.90625, -1699.75000, 30.21094,   0.00000, 0.00000, 0.00000);
        SetDynamicObjectMaterial(ex_publi, 2, 19172, "samppictures", "samppicture1");
        SetDynamicObjectMaterialText(ex_publi, 1, "Sheedow \nRole Play", 120, "Impact", 75, 0, 0xFF00CCFF, 0xFFFFFFFF, 1);
        CreateDynamicObject(4230, 1597.80713, -1699.78784, 30.21090,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(4230, 1597.80713, -1699.78784, 30.21090,   0.00000, 0.00000, 0.00000);
        SetDynamicObjectMaterialText(ex_publi+1, 1, "\n\n  Una nueva forma...", 120, "Impact", 25, 0, 0xFF00CCFF, 0, 0);
        SetDynamicObjectMaterialText(ex_publi+2, 1, "\n\n ...de jugar roleplay ", 120, "Impact", 25, 0, 0xFF00CCFF, 0, 2);

 //Banco Los Santos
	CreateDynamicObject(14789, 1424.69031, -1004.06616, 1643.01868,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(2774, 1433.02625, -1004.64392, 1635.81982,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1429.29700, -1004.61865, 1641.28113,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1443.60449, -979.68213, 1640.29773,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1429.33716, -979.54529, 1639.72339,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1449.31409, -984.50500, 1648.02319,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1413.91406, -984.51538, 1643.07349,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1886, 1448.51013, -1003.64294, 1647.09399,   19.76704, 0.00000, -136.64162);
	CreateDynamicObject(1886, 1414.70654, -980.60443, 1647.06165,   19.76704, 0.00000, -316.64163);
	CreateDynamicObject(2774, 1430.41687, -999.01727, 1638.72241,   0.00000, -90.24080, 0.00000);
	CreateDynamicObject(2774, 1408.14929, -998.99683, 1638.72241,   0.00000, -90.24080, -179.99997);
	CreateDynamicObject(2774, 1443.57727, -986.63464, 1638.72339,   0.00000, -90.24080, -89.99998);
	CreateDynamicObject(2774, 1443.60449, -998.99817, 1647.79749,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11359, 1414.35620, -988.98535, 1639.79590,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(2774, 1413.92737, -986.01172, 1643.04700,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2774, 1413.76367, -992.08539, 1643.67334,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(626, 1427.55457, -997.32300, 1640.76648,   0.00000, 0.00000, 134.99997);
	CreateDynamicObject(626, 1427.48828, -990.75250, 1640.84155,   0.00000, 0.00000, 134.99997);
	CreateDynamicObject(2773, 1427.75671, -995.78119, 1639.31018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1427.69495, -992.84143, 1639.31018,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1427.59692, -989.12860, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1429.86316, -982.92737, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(626, 1427.66528, -983.12860, 1640.84155,   0.00000, 0.00000, 236.24998);
	CreateDynamicObject(2773, 1432.75586, -982.99078, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(626, 1434.64832, -983.18890, 1640.84155,   0.00000, 0.00000, 236.24998);
	CreateDynamicObject(2773, 1437.09143, -983.05499, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(2773, 1440.04028, -983.01276, 1639.31018,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(3462, 1448.46692, -993.01447, 1640.29797,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3462, 1448.51208, -982.99261, 1640.18152,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(626, 1441.63623, -997.04773, 1640.74146,   0.00000, 0.00000, -213.74998);
	CreateDynamicObject(14632, 1443.64868, -995.93463, 1638.66772,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(14632, 1432.15637, -1018.01526, 1639.98816,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2773, 1435.18384, -996.75928, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1435.15247, -993.93256, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1439.33862, -996.65869, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1439.28894, -994.00067, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1723, 1426.28015, -994.86359, 1638.70728,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1723, 1426.24463, -991.15045, 1638.73230,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(1723, 1422.27747, -996.93506, 1638.68225,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(1723, 1422.27930, -993.21002, 1638.65723,   0.00000, 0.00000, -270.00000);
	CreateDynamicObject(2637, 1424.23242, -992.17358, 1638.83875,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2637, 1424.22852, -995.70416, 1638.83875,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(3657, 1432.63330, -987.73901, 1639.20239,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3657, 1432.63110, -986.97723, 1639.20239,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(3657, 1438.11157, -986.97754, 1639.20239,   0.00000, 0.00000, -179.99997);
	CreateDynamicObject(3657, 1438.08630, -987.73071, 1639.22742,   0.00000, 0.00000, -359.99997);
	CreateDynamicObject(2961, 1439.02832, -999.82666, 1639.21130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2961, 1433.50562, -999.82764, 1639.30139,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2946, 1414.35522, -990.51349, 1638.75562,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2946, 1414.38025, -987.39252, 1638.75500,   0.00000, 0.00000, -180.00002);
	CreateDynamicObject(2963, 1424.16528, -1004.81567, 1640.78113,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2963, 1426.80676, -1004.83252, 1640.82690,   0.00000, 0.00000, 89.99998);
	CreateDynamicObject(1886, 1414.73059, -993.52301, 1646.90857,   17.18873, 0.00000, 67.49998);
	CreateDynamicObject(2773, 1431.41455, -996.84583, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2773, 1431.47339, -994.01709, 1639.30151,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(632, 1434.73535, -987.75751, 1639.13123,   0.00000, 0.00000, -146.25000);
	CreateDynamicObject(2773, 1441.22864, -993.04297, 1639.30151,   0.00000, 0.00000, -89.99998);
	CreateDynamicObject(2824, 1424.29724, -992.05493, 1639.24768,   0.00000, 0.00000, 78.75002);
	CreateDynamicObject(19325, 1443.32288, -983.22131, 1641.53308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1443.57727, -986.63464, 1644.36646,   0.00000, -90.24080, -89.99998);
	CreateDynamicObject(2774, 1443.57727, -986.63464, 1645.98853,   0.00000, -90.24080, -89.99998);
	CreateDynamicObject(19325, 1443.32288, -989.85730, 1641.53308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 1443.32288, -996.49731, 1641.53308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2774, 1430.41687, -999.01727, 1644.36646,   0.00000, -90.24080, 0.00000);
	CreateDynamicObject(2774, 1430.41687, -999.01727, 1645.98853,   0.00000, -90.24080, 0.00000);
	CreateDynamicObject(2774, 1408.14929, -998.99683, 1644.36646,   0.00000, -90.24080, -180.00000);
	CreateDynamicObject(2774, 1408.14929, -998.99683, 1645.98853,   0.00000, -90.24080, -180.00000);
	CreateDynamicObject(19325, 1439.60913, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1432.98413, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1426.35913, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1419.73413, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19325, 1413.10913, -998.59747, 1641.53308,   0.00000, 0.00000, 90.00000);


	//Cajeros
	CreateDynamicObject(2942, 1417.71362, -980.47516, 1639.36353,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1421.21716, -980.44891, 1639.38550,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1424.63049, -980.52667, 1639.37146,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(2942, 1410.21143, -1228.69971, 13.16360,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1224.61646, -1428.50427, 13.07948,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1222.61646, -1428.50427, 13.07950,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1220.61646, -1428.50427, 13.07950,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1218.61646, -1428.50427, 13.07950,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1161.02258, -1497.45313, 15.41748,   0.00000, 0.00000, 247.50285);
	CreateDynamicObject(2942, 1498.90039, -1847.78955, 13.16123,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1380.03198, -1642.76318, 13.17232,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, 538.80273, -1740.98254, 11.93303,   0.00000, 0.00000, 172.75285);
	CreateDynamicObject(2942, 1007.77338, -1295.86072, 13.14124,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1312.18127, -897.83740, 39.17719,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1734.48511, -1907.68274, 13.18131,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, 1763.64221, -2204.38379, 13.15179,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1585.76953, -2286.25854, 13.12480,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, 1831.72632, -1308.21704, 13.11254,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2942, 2043.84473, -1414.96716, 16.76000,   0.00000, 0.00000, -90.00000);

	CreateDynamicObject(2942, 818.16, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 819.09, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 820.03, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 821.08, -1360.63, 1992.27,   0.00, 0.00, 0.00);
	CreateDynamicObject(2942, 1996.85571, 991.90173, 10.37796,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 1999.35571, 991.90167, 10.37800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 2001.85571, 991.90167, 10.37800,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 2485.83130, 1324.93884, 10.43051,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, 2033.10327, 1887.10425, 11.63956,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2942, 2085.66553, 2059.63940, 10.64579,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2942, 1643.64844, 2250.88745, 10.65640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, 1641.64844, 2250.88745, 10.65640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2942, -1463.74280, 1873.54175, 32.20494,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, -2451.76270, 2252.21826, 4.56842,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, -2449.76270, 2252.21826, 4.56840,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2942, -1980.58179, 168.44235, 27.20170,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2942, -1980.58179, 166.44240, 27.20170,   0.00000, 0.00000, -90.00000);

        //Ayunta alineado ner0x
        CreateDynamicObject(620, 1497.36621, -1710.62134, 11.83590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1496.71667, -1692.58301, 11.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1496.73657, -1698.64429, 11.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1496.73657, -1705.10327, 11.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(620, 1497.36621, -1686.93469, 11.83590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(620, 1461.38464, -1686.93469, 11.83590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(620, 1461.20215, -1710.62134, 11.83590,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1460.72510, -1692.15320, 11.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1460.72510, -1698.53381, 11.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1460.72510, -1704.36536, 11.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(673, 1500.96570, -1620.58582, 12.39840,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(673, 1458.27576, -1620.81897, 12.39840,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1258, 1468.80774, -1699.41687, 13.69530,   0.00000, 0.00000, 88.49999);
        CreateDynamicObject(1258, 1488.66956, -1698.74878, 13.69530,   0.00000, 0.00000, 270.95996);
        CreateDynamicObject(712, 1479.94812, -1665.95422, 22.25781,   356.85840, 0.00000, 3.14159);
        CreateDynamicObject(1231, 1479.69531, -1696.74207, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1280, 1466.52393, -1621.44238, 13.45310,   3.14160, 0.00000, 180.30000);
        CreateDynamicObject(1280, 1466.54956, -1615.22363, 13.45310,   3.14160, 0.00000, 181.32010);
        CreateDynamicObject(1280, 1492.48547, -1621.44238, 13.45310,   356.85840, 0.00000, -0.87840);
        CreateDynamicObject(1280, 1492.48547, -1615.22363, 13.45310,   356.85840, 0.00000, -0.87840);
        CreateDynamicObject(625, 1494.40405, -1611.63977, 13.69530,   356.85840, 0.00000, 3.14160);
        CreateDynamicObject(625, 1467.82214, -1611.52014, 13.69530,   356.85840, 0.00000, 3.14160);
        CreateDynamicObject(625, 1470.60010, -1688.38013, 13.69530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(625, 1490.38269, -1688.38013, 13.69530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(625, 1490.43457, -1709.50366, 13.69530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(625, 1470.77393, -1709.14172, 13.69530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1479.69531, -1706.13635, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1479.69531, -1687.14575, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1479.69531, -1679.07471, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1479.69531, -1714.36584, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(625, 1494.40405, -1624.68677, 13.69530,   356.85840, 0.00000, 3.14160);
        CreateDynamicObject(625, 1467.77856, -1624.72876, 13.69530,   356.85840, 0.00000, 3.14160);
        CreateDynamicObject(1231, 1479.28308, -1618.22827, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1479.28308, -1608.37500, 15.62500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1232, 1492.53809, -1627.61719, 15.53130,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1232, 1492.53809, -1608.37500, 15.37500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1232, 1465.84521, -1627.64380, 15.53130,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1232, 1466.05750, -1618.16858, 15.53130,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1232, 1492.53809, -1618.66418, 15.53130,   0.00000, 0.00000, 0.00000);
//interior hospital
new hospital[26];
//techo
hospital[0] = CreateObject(18766, 1166.41309, -1344.19141, 660.98779,   90.00000, 0.00000, 0.00000);
hospital[1] = CreateObject(18766, 1156.41040, -1344.26428, 660.98779,   90.00000, 0.00000, 0.00000);
hospital[2] = CreateObject(18766, 1156.48547, -1349.14197, 660.98779,   90.00000, 0.00000, 0.00000);
hospital[3] = CreateObject(18766, 1166.43408, -1349.13135, 660.98779,   90.00000, 0.00000, 0.00000);
hospital[4] = CreateObject(18766, 1156.34351, -1354.12451, 660.98779,   90.00000, 0.00000, 0.00000);
hospital[5] = CreateObject(18766, 1166.39075, -1354.12830, 660.98779,   90.00000, 0.00000, 0.00000);
//paredes
hospital[6] = CreateObject(18766, 1170.89722, -1341.54846, 658.53113,   0.00000, 0.00000, 90.00000);
hospital[7] = CreateObject(18766, 1170.86853, -1351.24829, 658.53113,   0.00000, 0.00000, 90.00000);
hospital[8] = CreateObject(18766, 1166.38831, -1356.37854, 658.53113,   0.00000, 0.00000, 0.00000);
hospital[9] = CreateObject(18766, 1156.45447, -1356.43506, 658.53113,   0.00000, 0.00000, 0.00000);
hospital[10] = CreateObject(18766, 1152.97131, -1351.63110, 658.53113,   0.00000, 0.00000, 90.00000);
hospital[11] = CreateObject(18766, 1158.34912, -1341.78894, 658.53113,   0.00000, 0.00000, 0.00000);
hospital[12] = CreateObject(18766, 1168.26025, -1341.79626, 658.53113,   0.00000, 0.00000, 0.00000);
hospital[13] = CreateObject(18766, 1152.96619, -1341.80237, 658.53113,   0.00000, 0.00000, 90.00000);
SetObjectMaterial(hospital[6], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[7], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[8], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[9], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[10], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[11], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[12], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
SetObjectMaterial(hospital[13], 0, 4600, "theatrelan2", "gm_labuld2_b", 0xFFFFFFFF);
//marco
hospital[13] = CreateObject(18762, 1156.80042, -1354.27991, 660.45862,   0.00000, 90.00000, 90.00000);
hospital[14] = CreateObject(18762, 1156.78796, -1354.41748, 656.50262,   0.00000, 90.00000, 90.00000);
hospital[15] = CreateObject(18762, 1159.17358, -1351.39648, 656.50262,   0.00000, 90.00000, 0.00000);
hospital[16] = CreateObject(18762, 1164.17639, -1351.40686, 656.50262,   0.00000, 90.00000, 0.00000);
hospital[17] = CreateObject(18762, 1167.13745, -1351.38171, 658.43457,   0.00000, 0.00000, 0.00000);
hospital[18] = CreateObject(18762, 1167.10486, -1354.03540, 660.45862,   0.00000, 90.00000, 90.00000);
hospital[19] = CreateObject(18762, 1167.13428, -1354.31482, 656.50262,   0.00000, 90.00000, 90.00000);
hospital[20] = CreateObject(18762, 1156.77905, -1351.38220, 658.43457,   0.00000, 0.00000, 0.00000);
//piso
//primer tono
hospital[20] = CreateObject(18766, 1169.11694, -1344.72644, 655.63312,   90.00000, 0.00000, 0.00000);
hospital[21] = CreateObject(18766, 1156.52954, -1344.72644, 655.63312,   90.00000, 0.00000, 0.00000);
SetObjectMaterial(hospital[20], 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);
SetObjectMaterial(hospital[21], 0, 12954, "sw_furniture", "CJ_WOOD5", 0xFFFFFFFF);

hospital[22] = CreateObject(19377, 1166.08557, -1347.01489, 656.00159,   0.00000, 90.00000, 0.00000);
hospital[23] = CreateObject(19377, 1166.11804, -1356.60266, 656.00159,   0.00000, 90.00000, 0.00000);
hospital[24] = CreateObject(19377, 1155.69934, -1356.56128, 656.00159,   0.00000, 90.00000, 0.00000);
hospital[25] = CreateObject(19377, 1155.61011, -1346.95056, 656.00159,   0.00000, 90.00000, 0.00000);
SetObjectMaterial(hospital[22], 0, 10932, "station_sfse", "ws_stationfloor", 0xFFFFFFFF);
SetObjectMaterial(hospital[23], 0, 10932, "station_sfse", "ws_stationfloor", 0xFFFFFFFF);
SetObjectMaterial(hospital[24], 0, 10932, "station_sfse", "ws_stationfloor", 0xFFFFFFFF);
SetObjectMaterial(hospital[25], 0, 10932, "station_sfse", "ws_stationfloor", 0xFFFFFFFF);
//techo
SetObjectMaterial(hospital[0], 0, 10789, "xenon_sfse", "dt_ceiling1", 0xFFFFFFFF);
SetObjectMaterial(hospital[1], 0, 10789, "xenon_sfse", "dt_ceiling1", 0xFFFFFFFF);
SetObjectMaterial(hospital[2], 0, 10789, "xenon_sfse", "dt_ceiling1", 0xFFFFFFFF);
SetObjectMaterial(hospital[3], 0, 10789, "xenon_sfse", "dt_ceiling1", 0xFFFFFFFF);
SetObjectMaterial(hospital[4], 0, 10789, "xenon_sfse", "dt_ceiling1", 0xFFFFFFFF);
SetObjectMaterial(hospital[5], 0, 10789, "xenon_sfse", "dt_ceiling1", 0xFFFFFFFF);
//el resto de los objectos
CreateDynamicObject(4015, 1654.59375, -1637.74219, 28.64063,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(4603, 1660.03906, -1400.87500, 32.82031,   356.85840, 0.00000, 3.14159);
CreateDynamicObject(2811, 1168.96411, -1343.17114, 656.08398,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2811, 1154.94739, -1343.47229, 656.08398,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(2198, 1164.82153, -1355.33545, 655.99432,   0.00000, 0.00000, 900.00000);
CreateDynamicObject(2198, 1161.94055, -1355.35632, 655.99432,   0.00000, 0.00000, 900.00000);
CreateDynamicObject(2198, 1159.11145, -1355.39648, 655.99432,   0.00000, 0.00000, 900.00000);
CreateDynamicObject(1806, 1164.20911, -1354.14331, 656.08313,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1806, 1161.15955, -1354.08936, 656.08313,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1806, 1158.35547, -1354.22949, 656.08313,   0.00000, 0.00000, 180.00000);
CreateDynamicObject(1726, 1165.57715, -1343.29639, 656.03809,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1168.22620, -1343.88916, 656.08209,   0.00000, 0.00000, -90.00000);
CreateDynamicObject(1726, 1155.86206, -1343.62354, 656.03809,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1726, 1155.27271, -1346.23889, 656.03809,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(1726, 1158.21301, -1343.66052, 656.03809,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1566, 1162.07776, -1342.30957, 657.41010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1566, 1153.89758, -1355.87024, 657.41010,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1566, 1167.75549, -1355.84705, 657.41010,   0.00000, 0.00000, 0.00000);

     
    //ceda el paso
        //unity station
        CreateDynamicObject(4853, 1736.97656, -1955.90356, 15.05470,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(4853, 1828.47656, -1955.90356, 15.05470,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(4882, 1705.95056, -1956.13428, 17.37777,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8657, 1764.46680, -1942.05298, 13.59360,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8657, 1795.49719, -1942.05298, 13.59360,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(4853, 1644.97656, -1955.90356, 15.05470,   0.00000, 0.00000, 0.00000);
       CreateDynamicObject(4028, 1741.24634, -1897.01343, 25.26094,   0.00000, 0.00000, -90.00000);
        new replace = CreateDynamicObject(18981, 1738.36084, -1912.93152, 12.06021,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1728.34167, -1931.65637, 12.06020,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1774.06299, -1872.48413, 12.00300,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1799.06299, -1872.48413, 12.00300,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1753.34167, -1931.65637, 12.06020,   0.00000, 90.00000, 0.00000);
        SetDynamicObjectMaterial(replace, 0, 4821, "union_las", "lasunion994");
        SetDynamicObjectMaterial(replace+1, 0, 4821, "union_las", "lasunion994");
        SetDynamicObjectMaterial(replace+2, 0, 4821, "union_las", "lasunion994");
        SetDynamicObjectMaterial(replace+3, 0, 4821, "union_las", "lasunion994");
        SetDynamicObjectMaterial(replace+4, 0, 4821, "union_las", "lasunion994");
        CreateDynamicObject(5409, 1794.78894, -1917.65906, 16.90874,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(620, 1769.42358, -1867.23376, 11.17810,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(620, 1786.42358, -1867.23376, 11.17810,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1676, 1796.80310, -1894.82898, 14.11156,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1676, 1793.04065, -1894.79004, 14.11160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1676, 1789.42261, -1894.81946, 14.11160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1676, 1786.18628, -1894.77539, 14.11039,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1794.79700, -1889.19104, 12.43569,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 1794.79700, -1902.19104, 12.43570,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(18980, 1735.14917, -1935.04553, 3.11624,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18980, 1736.14917, -1935.04553, 3.11620,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(948, 1811.36877, -1884.20703, 12.59253,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(948, 1811.36877, -1895.70703, 12.59250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19467, 1810.91992, -1852.46362, 12.39670,   -60.00000, 0.00000, 90.00000);
        //aerols
        CreateDynamicObject(988, 1964.33667, -2189.68481, 13.65230,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(988, 1958.83667, -2189.68481, 13.65230,   0.00000, 0.00000, 180.00000);
        // 24 -7 (Unity)
        CreateDynamicObject(1251, 1842.85229, -1872.42114, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1839.61682, -1872.45154, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1836.45154, -1872.39758, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1841.47693, -1852.13403, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1833.27356, -1872.43420, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1835.07117, -1852.13586, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1838.27588, -1852.14551, 12.42160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1942.66406, -1878.04761, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1854.72144, -1864.30762, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1837.37988, -1877.83618, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1841.56409, -1877.96082, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1845.34827, -1877.92944, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1848.85095, -1877.96399, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1852.16492, -1877.59521, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 1836.75354, -1884.56689, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1846.27356, -1884.56689, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1856.75354, -1884.56689, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1867.28210, -1884.58411, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1946.25867, -1884.65771, 12.47400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1877.51099, -1884.60352, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1887.83936, -1884.60376, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1898.18494, -1884.60071, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1908.04211, -1884.68176, 12.41400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1914.84167, -1884.59827, 12.43400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1921.96887, -1884.70642, 12.43400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1928.88635, -1884.70215, 12.45400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1938.81372, -1884.69885, 12.45400,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(869, 1863.79114, -1878.25146, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1866.14343, -1878.18213, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1903.56995, -1877.90698, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1906.94043, -1877.92737, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1910.35522, -1877.87537, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1913.72729, -1877.92139, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1917.19592, -1877.88940, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1920.80945, -1877.71448, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1924.65613, -1877.69153, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1928.44434, -1877.87732, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1932.46521, -1877.94727, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1936.67517, -1878.03943, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1939.77673, -1878.07385, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1834.12646, -1852.95630, 12.91660,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1834.16760, -1851.23303, 12.91660,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1834.13611, -1852.06018, 12.91660,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1834.12646, -1853.79626, 12.91660,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1834.12646, -1854.75635, 12.91660,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1834.12646, -1855.63635, 12.91660,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1911.14612, -1878.18860, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1832.59814, -1878.54968, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1837.70056, -1878.49780, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1842.40100, -1878.45471, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1847.28760, -1878.39380, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1852.83997, -1878.48682, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1863.90320, -1878.19421, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1905.47131, -1878.66760, 9.94230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1833.68433, -1878.06494, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 1850.46399, -1864.47974, 12.76940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1831.29907, -1869.66260, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1831.31018, -1872.65088, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1828.66028, -1867.80225, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1830.14697, -1867.82385, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1831.13037, -1860.24194, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1829.80737, -1860.24988, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 1801.88281, -1817.30469, 13.35156,   356.85840, 0.00000, 3.14159);
        CreateDynamicObject(646, 1832.05933, -1847.39697, 13.87500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 1832.05444, -1837.45618, 13.87500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1845.38660, -1861.35168, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1845.38660, -1864.17224, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1845.38660, -1866.98059, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1845.38660, -1869.81226, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1845.38660, -1872.64832, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1827.26440, -1867.72534, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1831.46655, -1867.88477, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1828.50171, -1860.27124, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1827.13965, -1860.25427, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1832.47095, -1860.24194, 12.66300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1833.16235, -1845.76294, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1833.16235, -1849.31152, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1833.16235, -1839.32947, 13.00740,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 1833.16235, -1835.83923, 13.00740,   0.00000, 0.00000, 0.00000);

        // Pizzería (LS)
        CreateDynamicObject(869, 2101.31055, -1764.80432, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2097.70898, -1826.98950, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.70190, -1781.71997, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2097.55249, -1778.33838, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2098.18286, -1775.02026, 12.92670,   0.00000, 0.00000, -14.76000);
        CreateDynamicObject(869, 2098.74561, -1771.57117, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2099.96265, -1768.30505, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2103.37500, -1765.97290, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.99243, -1780.81067, 12.92670,   0.00000, 0.00000, 79.55999);
        CreateDynamicObject(700, 2123.48169, -1828.98572, 12.00450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.00928, -1787.91956, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2122.64453, -1782.45398, 12.37966,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2115.13062, -1782.50110, 12.37966,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2097.57544, -1788.09973, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.89063, -1824.18262, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2094.34717, -1827.91101, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2094.25586, -1830.05859, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2122.58569, -1829.02393, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2094.08984, -1824.42468, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2098.21240, -1829.72461, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2102.02222, -1829.56689, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2105.62354, -1829.61755, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2109.76929, -1829.51746, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2113.96924, -1829.33948, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2118.25342, -1829.11938, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 2092.58203, -1824.44373, 12.00450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 2092.52148, -1830.33594, 12.00450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 2099.11304, -1829.10107, 12.00450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 2107.78442, -1829.10132, 12.00450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 2115.78784, -1829.38757, 12.00450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2099.73438, -1766.86438, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2096.64575, -1823.47363, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2095.21826, -1789.43591, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2095.93286, -1781.89307, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2098.19312, -1773.90625, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2098.82520, -1806.94543, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2092.53174, -1828.09692, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2099.69482, -1810.59326, 13.81640,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2093.46069, -1806.86072, 13.81640,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2097.12598, -1806.86072, 13.81640,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2099.65747, -1802.55261, 13.81640,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2091.78467, -1806.89758, 13.91170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2118.83643, -1782.63538, 12.37966,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2111.60962, -1782.56494, 12.37966,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2108.03735, -1782.74146, 12.37966,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2104.51367, -1782.84546, 12.37966,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.99243, -1789.20215, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2095.60620, -1786.21753, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.24512, -1783.67529, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2094.87695, -1789.08691, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2095.10840, -1788.19604, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2095.79004, -1785.64526, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2095.79004, -1785.64526, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2096.59985, -1783.00708, 12.92670,   0.00000, 0.00000, 79.55999);
        CreateDynamicObject(869, 2096.59985, -1783.00708, 12.92670,   0.00000, 0.00000, 79.55999);
        CreateDynamicObject(869, 2095.88721, -1785.81958, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2097.89819, -1776.62878, 12.92670,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2098.47852, -1774.17212, 12.92670,   0.00000, 0.00000, -114.42003);
        CreateDynamicObject(869, 2099.40063, -1770.19751, 12.92670,   0.00000, 0.00000, -114.42003);
        CreateDynamicObject(1408, 2096.74609, -1802.67493, 13.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1408, 2094.34155, -1802.67493, 13.10160,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1408, 2096.54346, -1810.54773, 13.11720,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1408, 2094.56226, -1810.54773, 13.11720,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 2095.36597, -1806.96765, 13.00000,   0.00000, 0.00000, 0.00000);

        //Estación de autobuses
        new alsa = CreateDynamicObject(19353, 2091.6943, -1936.0585, 16.7529, 0.0000, 0.0000, -180);
        SetDynamicObjectMaterialText(alsa, 0, "ALSA", 140, "Arial", 190, 1, -16776961, 0, 1);
        CreateDynamicObject(19353, 2097.3312, -1916.6547, 16.4643, 0.0000, 0.0000, 90.0);
        SetDynamicObjectMaterialText(alsa+1, 0, "ALSA", 140, "Arial", 190, 1, -16776961, 0, 1);
        CreateDynamicObject(19353, 2101.8825, -1929.0711, 16.3706, 0.0000, 0.0000, 0.0);
        SetDynamicObjectMaterialText(alsa+2, 0, "ALSA", 140, "Arial", 190, 1, -16776961, 0, 1);
        CreateDynamicObject(19353, 2091.7246, -1920.8950, 16.2603, 0.0000, 0.0000, 180);
        SetDynamicObjectMaterialText(alsa+3, 0, "ALSA AUTOCARES", 140, "Arial", 64, 1, -16776961, 0, 1);
        CreateDynamicObject(8661, 2163.34961, -1942.65820, 12.51063,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2162.89648, -1925.79736, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2187.08008, -1931.11646, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2144.09277, -1907.89648, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2154.54053, -1907.81787, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(973, 2177.56738, -1939.12732, 13.35650,   0.00000, 0.00000, 40.00000);
        CreateDynamicObject(973, 2162.89648, -1929.63745, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2156.19702, -1929.64172, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2165.07251, -1927.69373, 12.92690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2154.24707, -1927.75659, 12.92690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2161.82593, -1927.96143, 12.92690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2162.89648, -1925.79736, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2162.89648, -1929.63745, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2156.19702, -1929.64172, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1257, 2145.55566, -1909.55225, 13.76600,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1257, 2155.29565, -1909.55225, 13.76600,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1257, 2164.63574, -1909.55225, 13.76600,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1257, 2173.11572, -1909.55225, 13.76600,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 2182.02295, -1917.42896, 11.75530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 2173.67749, -1912.52368, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2163.85767, -1912.52368, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2154.01758, -1912.52368, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2177.01758, -1912.52368, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2182.00293, -1927.72900, 11.75530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 2182.00293, -1931.40906, 11.75530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1229, 2175.58496, -1911.49817, 13.64750,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1229, 2148.88452, -1911.41614, 13.64750,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1229, 2158.43481, -1911.42676, 13.64750,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1229, 2167.46362, -1911.32837, 13.64750,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(641, 2191.14038, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2092.87988, -1905.82019, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2159.78149, -1927.83496, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2152.10400, -1926.31677, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2152.10400, -1929.09680, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2177.91919, -1938.19043, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2166.79980, -1929.33691, 13.12340,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2166.79980, -1927.87695, 13.12340,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2166.79980, -1926.27686, 13.12340,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2121.41382, -1907.79480, 12.43840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(3578, 2138.64355, -1907.45483, 11.75530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 2126.89771, -1907.89136, 11.75530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 2113.50708, -1912.85767, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2101.07495, -1917.69006, 11.75530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3626, 2196.89136, -1970.04407, 14.00000,   356.85840, 0.00000, 3.14159);
        CreateDynamicObject(3626, 2098.00000, 9614.00000, -1920.00000,   270.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2091.68994, -1935.68506, 10.10080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2096.07129, -1940.69653, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2101.35522, -1936.51099, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2096.30713, -1921.38196, 18.80080,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19435, 2091.65088, -1928.69897, 14.01002,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19435, 2091.65088, -1928.69897, 17.03280,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2091.75830, -1935.68701, 12.58080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2091.75830, -1935.68701, 10.52080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2094.09497, -1940.84863, 13.24490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2091.97925, -1926.69885, 13.00490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2091.97925, -1922.69885, 13.00490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2094.05542, -1916.78589, 13.00490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(19435, 2091.83081, -1928.69897, 13.99280,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19435, 2091.95093, -1928.69897, 13.99280,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19435, 2092.04712, -1928.70911, 13.99280,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19435, 2091.75098, -1928.69897, 17.03280,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19435, 2092.05078, -1928.69897, 17.03280,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2091.81934, -1921.63428, 12.58080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2091.73950, -1921.63428, 12.58080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2096.07422, -1940.85986, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(19377, 2096.15405, -1940.85986, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2091.97925, -1935.57886, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2098.07495, -1940.86865, 13.24490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2099.47510, -1940.86865, 13.24490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(19377, 2091.89941, -1936.01428, 12.56080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2091.97925, -1931.55884, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2101.36523, -1932.59253, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2101.36523, -1938.95251, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2101.36523, -1926.07251, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2101.36523, -1922.53247, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2101.37671, -1918.67017, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2100.98853, -1921.56250, 12.58080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2096.56177, -1916.71765, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2091.97925, -1918.81885, 13.00490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3851, 2094.05542, -1916.78589, 13.00490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2098.05542, -1916.78589, 13.10490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2099.45532, -1916.78589, 13.10490,   -91.00000, 0.00000, 90.00000);
        CreateDynamicObject(19377, 2096.57422, -1940.85986, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(19377, 2096.59131, -1940.69653, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2091.97925, -1938.97888, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2143.79761, -1912.52368, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2125.45972, -1941.28516, 11.91530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2091.89941, -1921.63428, 12.58080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2100.98853, -1935.90247, 12.58080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1557, 2095.87378, -1916.66626, 12.41490,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1557, 2098.89404, -1916.63965, 12.43960,   0.00000, 0.00000, -180.00000);
        CreateDynamicObject(3578, 2106.05566, -1912.85315, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2104.51660, -1903.18884, 12.89570,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2102.73657, -1903.18884, 12.89570,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2105.18311, -1945.78357, 12.49840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2116.04565, -1946.00049, 12.49840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2124.34863, -1946.04919, 12.49840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(3578, 2121.98706, -1912.87769, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2106.00171, -1941.23645, 11.91530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2115.54077, -1941.26648, 11.91530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2131.31982, -1941.28516, 11.91530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2183.24878, -1904.12439, 14.35050,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2163.94873, -1904.12439, 14.35050,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2148.50879, -1904.12439, 14.31120,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2092.40356, -1913.96240, 14.35050,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(641, 2164.95239, -1927.91150, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2183.60034, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2176.18042, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2169.04028, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2161.86035, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2153.82031, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2145.36035, -1904.24207, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2156.19702, -1925.80176, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2134.52148, -1950.24756, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2152.43579, -1949.58240, 13.35650,   0.00000, 0.00000, 9.00000);
        CreateDynamicObject(973, 2159.99976, -1948.43604, 13.35650,   0.00000, 0.00000, 9.00000);
        CreateDynamicObject(973, 2168.44897, -1945.49487, 13.35650,   0.00000, 0.00000, 30.00000);
        CreateDynamicObject(973, 2194.69580, -1909.88721, 13.35650,   0.00000, 0.00000, 80.00000);
        CreateDynamicObject(1215, 2152.10400, -1927.69678, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2148.46313, -1949.84961, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2172.48291, -1942.76538, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2164.75122, -1947.09216, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2155.71680, -1948.87427, 13.07830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2153.71436, -1927.81226, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2092.87988, -1909.30017, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2092.87988, -1912.02014, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2092.87988, -1915.16016, 9.95020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2168.76245, -1909.63098, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2160.07373, -1909.58618, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2176.20557, -1940.15063, 13.35650,   0.00000, 0.00000, 39.39021);
        CreateDynamicObject(973, 2183.58301, -1933.45728, 13.35650,   0.00000, 0.00000, 50.00000);
        CreateDynamicObject(973, 2188.74951, -1926.12585, 13.35650,   0.00000, 0.00000, 60.00000);
        CreateDynamicObject(973, 2192.63037, -1917.98877, 13.35650,   0.00000, 0.00000, 70.00000);
        CreateDynamicObject(1256, 2192.60132, -1911.76172, 13.29517,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1256, 2108.99097, -1947.24182, 13.29520,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(1256, 2190.93945, -1917.80176, 13.29517,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2102.65796, -1907.87134, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2178.82397, -1909.80542, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2184.39819, -1910.47510, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2184.88672, -1927.89209, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2185.29688, -1918.18665, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1256, 2189.11279, -1923.11841, 13.29517,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1256, 2124.66504, -1947.18787, 13.29520,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(1256, 2105.54932, -1907.52722, 13.29520,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(973, 2143.00000, 3257.00000, -1951.00000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2143.00000, 3257.00000, -1950.00000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2099.08228, -1915.79321, 13.75450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2095.33423, -1915.61975, 13.75450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2105.47363, -1947.03198, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2192.31470, -1908.93665, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2191.24707, -1914.58350, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2189.47607, -1920.26892, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2187.47021, -1925.82458, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2128.40039, -1947.22485, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2103.38208, -1907.67737, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2128.40039, -1947.22485, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2106.71606, -1947.41699, 14.20120,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2129.94922, -1947.33154, 14.20120,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2122.04834, -1947.37231, 14.20120,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2114.79565, -1947.30652, 14.20120,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2112.97681, -1947.29504, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2143.32568, -1950.25146, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2127.54150, -1950.24756, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2118.92139, -1950.24756, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2110.84155, -1950.24756, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(973, 2100.54883, -1945.61243, 13.35650,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(973, 2104.84155, -1950.24756, 13.35650,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2105.86475, -1946.02026, 12.49840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2101.42627, -1928.70837, 12.24080,   45.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2158.13208, -1927.91602, 12.92690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2150.95605, -1909.29614, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2140.43018, -1909.41284, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2123.68872, -1907.90088, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2115.87671, -1907.95203, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 2108.67822, -1908.04077, 14.59110,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1256, 2117.02417, -1947.30603, 13.29520,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(646, 2120.58813, -1947.35449, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2122.09741, -1907.78052, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2117.28784, -1907.72498, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2114.21924, -1907.76953, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2110.14014, -1907.94922, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 2107.69800, -1907.92285, 13.78276,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1256, 2119.54639, -1907.72339, 13.29520,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(1256, 2105.62769, -1908.75891, 13.29520,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1256, 2112.23584, -1907.50073, 13.29520,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(1256, 2112.27417, -1908.83887, 13.29520,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1256, 2119.63232, -1908.94128, 13.29520,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3851, 2101.36523, -1929.99255, 13.16490,   -91.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2096.09131, -1940.57654, 12.58080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(19377, 2096.55786, -1945.57312, 12.44580,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2133.99536, -1946.04834, 12.49840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(3578, 2134.03979, -1941.28516, 11.91530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 2155.36865, -1918.18970, 12.52850,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 2172.87939, -1927.69873, 12.52850,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 2155.36182, -1937.20898, 12.52850,   0.00000, 0.00000, -90.02000);
        CreateDynamicObject(3578, 2143.49756, -1912.54370, 11.75530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2106.61133, -1903.18530, 12.89570,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2101.36621, -1928.70837, 12.24080,   45.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2101.50635, -1928.70837, 12.24080,   45.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2101.66626, -1928.70837, 12.24080,   45.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 2101.82642, -1928.70837, 12.24080,   45.00000, 0.00000, 0.00000);
        CreateDynamicObject(1315, 2134.95898, -1904.41711, 15.81250,   3.14160, 0.00000, 0.57080);
        CreateDynamicObject(1315, 2092.91406, -1891.37500, 15.81250,   3.14159, 0.00000, 1.57080);
        CreateDynamicObject(1315, 2111.69434, -1897.16431, 15.81250,   356.85840, 0.00000, -90.14160);
        CreateDynamicObject(1315, 2084.53125, -1905.49219, 15.81250,   356.85840, 0.00000, 3.14159);
        CreateDynamicObject(3627, 2124.18237, -1931.39026, 16.14126,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(19377, 2110.91382, -1907.79480, 12.43840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2100.41382, -1907.79480, 12.43840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2092.41382, -1907.79480, 12.42540,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2095.91382, -1917.29480, 12.43840,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(8661, 2123.34961, -1942.65820, 12.51060,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 2097.35815, -1929.10876, 12.50380,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8661, 2163.34961, -1922.68945, 12.51060,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 2123.34961, -1922.68945, 12.51060,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 2135.81616, -1913.99829, 12.46450,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 2136.72974, -1912.72278, 12.44630,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 2132.98315, -1912.72278, 12.44630,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 2129.22974, -1912.72278, 12.44630,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(966, 2135.91821, -1907.14319, 12.38615,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(968, 2135.91821, -1907.14319, 13.13990,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 2187.08008, -1921.61646, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2187.08008, -1911.97986, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2187.08008, -1904.97986, 12.45521,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2197.58008, -1908.97986, 12.45520,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2197.58008, -1918.47986, 12.45520,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2165.04053, -1907.81787, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2175.54053, -1907.81787, 12.43800,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2180.54053, -1907.81787, 12.42444,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2096.30713, -1930.88196, 18.80080,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(19377, 2096.30713, -1936.38196, 18.84005,   0.00000, 90.00000, 0.00000);



        //Parking subterraneo 01.
        new parking = CreateDynamicObject(19353, 1618.5252, -1722.0419, 11.4632, 0.0000, 0.0000, 90.0);
        SetDynamicObjectMaterialText(parking, 0, "PARKING", 140, "Arial", 135, 1, -16776961, 0, 1);
        CreateDynamicObject(19353, 1729.9172, -1747.1378, 2.9155, 0.0999, -90.0, 180);
        SetDynamicObjectMaterialText(parking+1, 0, "<", 140, "Arial", 250, 1, -1, 0, 1);
        CreateDynamicObject(19353, 1713.8779, -1747.1090, 2.9077, 0.0000, -90.0, -90);
        SetDynamicObjectMaterialText(parking+2, 0, "x", 140, "Arial", 250, 1, -1, 0, 1);
        CreateDynamicObject(19353, 1740.3038, -1747.0894, -1.1584, 0.0000, -90.0, -90);
        SetDynamicObjectMaterialText(parking+3, 0, "x", 140, "Arial", 250, 1, -1, 0, 1);
        CreateDynamicObject(19353, 1724.0415, -1747.0180, -1.1675, 1.1000, -90.0, 180);
        SetDynamicObjectMaterialText(parking+4, 0, "<", 140, "Arial", 250, 1, -1, 0, 1);
        CreateDynamicObject(18981, 1620.05408, -1753.94324, 11.83066,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1620.05408, -1778.94324, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1644.67322, -1763.17395, 11.83066,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1669.56921, -1761.17590, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1644.67322, -1788.17395, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1669.67322, -1786.17395, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1595.05408, -1753.94324, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1570.05408, -1753.94324, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1595.05408, -1778.94324, 11.83070,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(17310, 1618.87305, -1755.23694, 5.93377,   90.00000, 0.00000, 306.73508);
        CreateDynamicObject(18981, 1637.01868, -1776.73425, -0.80498,   0.00000, 0.00000, 23.17313);
        CreateDynamicObject(966, 1624.78564, -1679.95386, 12.27569,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(966, 1624.99072, -1722.45227, 2.79980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(966, 1626.06702, -1722.45227, 2.79980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(966, 1613.20947, -1722.45227, 2.79980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(968, 1626.19727, -1722.45435, 3.56530,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(968, 1606.69727, -1722.45435, 3.56530,   0.00000, -90.00000, 180.00000);
        CreateDynamicObject(967, 1618.65894, -1723.25439, 2.72394,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(967, 1618.65698, -1721.65259, 2.72390,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(18981, 1669.67322, -1779.17395, 8.40830,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1661.59998, -1772.67395, 8.48498,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1644.67322, -1763.17395, 8.40830,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1644.67322, -1788.17395, 8.40830,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1620.05408, -1753.94324, 8.40830,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1620.05408, -1778.94324, 8.40830,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18981, 1620.05408, -1734.44324, 8.43740,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(18766, 1619.36121, -1722.66492, 10.59098,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1609.36121, -1722.66492, 10.59100,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1621.90613, -1730.82104, 3.00974,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1615.69434, -1730.75598, 3.00970,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(973, 1618.20483, -1728.71252, 3.70888,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(973, 1619.07275, -1728.59314, 3.70890,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8661, 1697.85071, -1774.61536, 7.93773,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(18981, 1690.44690, -1785.08521, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1690.44690, -1786.08521, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1690.44690, -1787.08521, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1678.30933, -1769.59180, -4.33187,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1678.29053, -1768.58484, -4.33190,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1678.29053, -1767.58484, -4.33190,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8661, 1737.85071, -1774.61536, 2.98460,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1755.11536, 7.93770,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(8661, 1737.85071, -1755.11536, 2.98460,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(16640, 1719.02429, -1738.74939, 2.35738,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(16640, 1735.02429, -1738.74939, 2.35740,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8661, 1737.85071, -1755.11536, -1.10155,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1737.85071, -1774.61536, -1.10150,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1774.61536, -1.10150,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1755.11536, -1.10150,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1737.85071, -1755.11536, 2.98460,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(8661, 1737.85071, -1774.61536, 2.98460,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1774.61536, 2.98460,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1755.11536, 2.98460,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1755.11536, 2.98460,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1697.85071, -1774.61536, 2.98459,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8661, 1737.85071, -1755.11536, 7.93770,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(8661, 1737.85071, -1774.61536, 7.93770,   0.00000, 180.00000, 0.00000);
        CreateDynamicObject(18981, 1715.44690, -1785.08521, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1740.44690, -1785.08521, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1765.44690, -1785.08521, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1757.00195, -1772.63464, -0.80500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18981, 1757.00195, -1747.63464, -0.80500,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18981, 1679.82654, -1756.21912, -0.89940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18980, 1679.06555, -1769.03516, -4.33187,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1692.55725, -1745.35376, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18981, 1679.78748, -1781.48010, -9.51526,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1729.81238, -1764.36035, 3.00198,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1706.05896, -1745.83362, 3.77692,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1706.05896, -1745.83362, 8.78152,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1716.05896, -1745.83362, 8.19696,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1726.05896, -1745.83362, 8.19700,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1736.05896, -1745.83362, 8.19700,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1721.72949, -1745.76306, 4.16948,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18980, 1726.80884, -1745.82690, -3.35204,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18766, 1737.72949, -1745.76306, 3.77690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18981, 1755.51855, -1745.88232, -0.80500,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18766, 1745.22949, -1745.76306, 8.73090,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1709.07092, -1745.29663, 0.45940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1716.27307, -1745.58765, 0.45940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1732.29297, -1745.78210, 0.45940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1706.05896, -1745.83362, -1.08993,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1747.72949, -1745.76306, 3.77690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18980, 1696.36365, -1772.05933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1696.36365, -1755.55933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1710.33606, -1755.55933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1710.33606, -1772.05933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1717.59460, -1755.55933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1717.59460, -1772.05933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1726.15662, -1755.55933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1726.15662, -1772.05933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1733.44446, -1755.55933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1733.44446, -1772.05933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1748.94446, -1772.05933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1748.94446, -1755.55933, -3.04820,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(19425, 1697.56616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1757.30164, 3.01173,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1757.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1760.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1764.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1767.80164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1771.30164, 3.01170,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 1703.31628, -1766.43103, 3.72766,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1703.31628, -1761.93103, 3.72770,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1721.87549, -1766.43103, 3.72770,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1721.87549, -1761.93103, 3.72770,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1741.05359, -1761.93103, 3.72770,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1741.05359, -1766.43103, 3.72770,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 1677.53491, -1783.70190, 3.00200,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8843, 1695.53772, -1778.06714, 3.00200,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8843, 1736.03772, -1778.06714, 3.00200,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8843, 1753.04663, -1771.72437, 3.00200,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1744.93970, -1750.84973, 3.00200,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 1713.93970, -1750.84973, 3.00200,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 1688.59338, -1759.60876, 3.00200,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(8843, 1714.31238, -1764.36035, 3.00200,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(8843, 1695.53772, -1778.06714, -1.08024,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8843, 1736.03772, -1778.06714, -1.08020,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8843, 1753.04663, -1771.72437, -1.08020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1744.93970, -1750.84973, -1.08020,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 1729.81238, -1764.36035, -1.08020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8843, 1713.93970, -1750.84973, -1.08020,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8843, 1714.31238, -1764.36035, -1.08020,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(8843, 1688.59338, -1759.60876, -1.08020,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(19425, 1697.56616, -1757.30164, -1.08247,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1697.56616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1701.06616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1705.56616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1709.06616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1719.06616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1724.56616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1734.56616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1738.06616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1757.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1760.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1764.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1767.80164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1744.06616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1747.56616, -1771.30164, -1.08250,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 1741.05359, -1761.93103, -0.36976,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1741.05359, -1766.43103, -0.36980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1721.87549, -1761.93103, -0.36980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1721.87549, -1766.43103, -0.36980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1703.31628, -1761.93103, -0.36980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3578, 1703.31628, -1766.43103, -0.36980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1673.37891, -1775.93738, -10.87600,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1678.29626, -1767.72266, -0.46930,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1678.29626, -1766.72266, -0.46930,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18980, 1678.29626, -1765.72266, -0.46930,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(700, 1676.49011, -1786.14404, 12.33140,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 1676.49011, -1780.14404, 12.33140,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 1676.49011, -1774.14404, 12.33140,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(700, 1676.49011, -1766.14404, 12.33140,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(4638, 1681.77515, -1766.02588, 4.65160,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(17310, 1580.51465, -1755.11841, 5.93380,   90.00000, 0.00000, 73.51920);
        CreateDynamicObject(17310, 1773.55115, -1798.68567, 5.78275,   90.00000, 0.00000, 256.26636);
        CreateDynamicObject(8406, 1616.33838, -1599.76599, 17.65158,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8406, 1616.33838, -1677.26599, 18.33275,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(966, 1623.94995, -1722.45459, 2.79980,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(968, 1624.78564, -1679.95386, 13.01630,   0.00000, -90.00000, 180.00000);
        CreateDynamicObject(8406, 1612.45239, -1722.18811, 8.95786,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18758, 1731.98132, -1744.37244, -0.31371,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18757, 1720.98132, -1744.37244, 4.92989,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18756, 1720.98132, -1744.37244, 4.92260,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18758, 1720.98132, -1744.37244, 4.88917,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18757, 1731.98132, -1744.45740, 0.63091,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18756, 1731.98132, -1744.45740, 0.63090,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(18756, 1722.98132, -1744.37244, 7.90310,   90.00000, 0.00000, 90.00000);
        CreateDynamicObject(18756, 1720.48132, -1744.37244, 7.90310,   90.00000, 0.00000, 90.00000);
        CreateDynamicObject(18758, 1665.84033, -1770.87268, 14.12905,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18764, 1666.32727, -1769.38318, 14.81470,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18764, 1666.36609, -1772.39294, 14.81470,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18757, 1665.84033, -1770.87268, 14.30900,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18756, 1665.84033, -1770.87268, 14.30900,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(713, 1656.23071, -1762.65308, 11.85633,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(713, 1653.56665, -1782.50806, 11.85633,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1615.66699, -1720.98254, 2.85219,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1615.66699, -1721.48254, 2.85220,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1622.16699, -1728.48254, 2.85220,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19425, 1622.16699, -1727.98254, 2.85220,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1349, 1735.21375, -1755.87476, -0.64660,   90.00000, 0.00000, 319.87402);
        CreateDynamicObject(3627, 1609.33472, -1765.30127, 15.86863,   0.00000, 0.00000, 76.38013);
        CreateDynamicObject(18766, 1715.57202, -1745.75232, 3.77690,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(18766, 1728.57202, -1745.75232, 3.77690,   0.00000, 0.00000, 0.00000);

        //Creditos
    new Cr_Object = CreateDynamicObject(8661, 1152.53723, -2087.92334, -37.27034,   0.00000, 90.00000, -90.00000);
        CreateDynamicObject(8661, 1152.53723, -2087.92334, 42.33425,   0.00000, 90.00000, -90.00000);
        CreateDynamicObject(8661, 1152.53723, -2087.92334, 2.50363,   0.00000, 90.00000, -90.00000);
        SetDynamicObjectMaterial(Cr_Object, 0, 18646, "matcolours", "black", 0);
    SetDynamicObjectMaterial(Cr_Object+1, 0, 18646, "matcolours", "black", 0);
    SetDynamicObjectMaterial(Cr_Object+2, 0, 18646, "matcolours", "black", 0);

    new yeaa = CreateObject(19353, 1153.1020, -2087.8754, 54.6938, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa, "Sheedow Role Play 2013", 0, 140, "Arial", 32, 1, -16468988, 0, 1);

    CreateObject(19353, 1153.1020, -2087.8754, 53.1084, 0.0000, 0.0000, -90.000);           //grande = -1.5854*x
        SetObjectMaterialText(yeaa+1, "{FF6600}Programación", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.6200, 0.0000, 0.0000, -90.000);               //pequeño = -0.22*x
        SetObjectMaterialText(yeaa+2, "{FFFFFF}adri1", 0, 140, "Arial", 32, 0, -16468988, 0, 1);    //apar to name = -0.4884*x
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+3, "{FFFFFF}ner0x", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+4, "{FF6600}Mapas", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+5, "{FFFFFF}matiascapotte", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+6, "{FF6600}Otros", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+7, "{FFFFFF}-vacío-", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754,  52.4000-1-0.4884*1-1-0.4884*1-1, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+8, "{FF6600}Testing", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+9, "{FFFFFF}adri1", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+10, "{FFFFFF}ner0x", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+11, "{FFFFFF}matiascapotte", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754,  52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+12, "{FF6600}Agradecimientos", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1-0.4884, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+13, "{FFFFFF}SA-MP Forums", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1-0.4884-0.22, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+14, "{FFFFFF}SAMP Script", 0, 140, "Arial", 32, 0, -16468988, 0, 1);
        CreateObject(19353, 1153.1020, -2087.8754, 52.4000-1-0.4884*1-1-0.4884*1-1-0.4884-0.22*2-1-0.4884-0.22-1.5, 0.0000, 0.0000, -90.000);
        SetObjectMaterialText(yeaa+15, "Gracias por jugar en\nSheedow Role Play 2013\n\n\nFIN", 0, 140, "Arial", 32, 1, -16468988, 0, 1);
        // gasolinera (al lado de Alhambra)
        CreateDynamicObject(3666, 1941.69397, -1764.21509, 12.77700,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1941.69397, -1763.33923, 12.77700,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1941.64246, -1781.66467, 12.75680,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1941.64246, -1782.50134, 12.75680,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 1924.21301, -1762.51819, 15.17980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1952.05896, -1767.44214, 10.32300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1951.93591, -1777.24170, 10.32300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1951.95325, -1773.86926, 10.32300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1952.05029, -1770.46899, 10.32300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 1917.76343, -1801.98682, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(3660, 1922.69019, -1815.32495, 15.17980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 1950.63904, -1806.78003, 15.17980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 1942.08472, -1797.18616, 15.17980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 1941.33411, -1815.32495, 15.17980,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1935.39685, -1797.48853, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1930.30530, -1762.57349, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1912.71985, -1804.62854, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1912.32703, -1809.21252, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1912.90186, -1812.34546, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1923.59680, -1815.73975, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1929.13379, -1815.23743, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1934.63074, -1815.10229, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1939.86353, -1815.12109, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1945.38757, -1815.02502, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1950.45850, -1813.98450, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1950.82349, -1808.79382, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1950.60815, -1803.58154, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1950.64795, -1798.23425, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1945.10828, -1797.32800, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1940.43848, -1797.41650, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1911.47485, -1793.50610, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1934.21606, -1793.27271, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1932.95593, -1794.41870, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1918.92688, -1815.27710, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1914.32031, -1815.42114, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1932.08350, -1795.69873, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1913.41467, -1796.38855, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1912.85559, -1794.81067, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1923.68225, -1811.27625, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1914.48682, -1811.30261, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1948.08618, -1811.42151, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1918.79492, -1811.39648, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1928.74316, -1811.33008, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1933.86047, -1811.28735, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1938.95105, -1811.34973, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 1943.73474, -1811.33972, 12.62004,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.14990, -1821.96033, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1935.85022, -1794.47351, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1931.71680, -1759.53833, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1951.40942, -1794.51501, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.67676, -1763.49060, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.94922, -1807.21716, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.69336, -1814.71960, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.66418, -1799.03186, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.51050, -1777.69067, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1954.48340, -1770.95764, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1943.80652, -1794.60278, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1910.44312, -1795.14197, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1906.43579, -1789.58813, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 1911.98999, -1806.78516, 15.17980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 1902.86621, -1784.58679, 15.17980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(641, 1903.64880, -1792.77307, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1903.68359, -1786.92310, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1903.35498, -1781.81458, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1903.50842, -1775.49805, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1903.70020, -1769.94629, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1906.62488, -1780.81628, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1906.55371, -1771.00781, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 1929.60193, -1774.76672, 14.01400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 1941.63464, -1764.75757, 14.01400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 1941.58655, -1780.69934, 14.01400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(646, 1929.67139, -1778.41614, 14.01400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 1902.92285, -1771.93103, 15.17980,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(641, 1903.26428, -1763.15564, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1916.08044, -1762.46484, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1920.57178, -1762.50195, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1925.25757, -1762.46545, 11.95600,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1906.98181, -1763.48962, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1918.15479, -1760.03528, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1231, 1924.98499, -1759.70422, 13.93830,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(19377, 1927.02441, -1802.00427, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1937.13599, -1801.95923, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1945.97034, -1802.04333, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1945.38049, -1810.56177, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1935.11597, -1810.36243, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1924.74109, -1810.38501, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(19377, 1917.73962, -1810.53040, 12.47560,   0.00000, -90.00000, 0.00000);
        CreateDynamicObject(3666, 1910.13855, -1797.21741, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.07422, -1796.99316, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1906.17407, -1796.25208, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1904.92310, -1794.94702, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1909.62085, -1792.68384, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.63367, -1791.56482, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.65320, -1789.84277, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.62805, -1788.04138, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.62598, -1786.22070, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.64465, -1784.34082, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1908.65491, -1782.52661, 13.02190,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1952.01404, -1764.69055, 10.32300,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1941.69397, -1762.39050, 12.77700,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3666, 1941.64246, -1783.36279, 12.75680,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 1912.70862, -1800.72754, 11.95600,   0.00000, 0.00000, 0.00000);

 //Interior Grotti, por Raul Lara
    CreateDynamicObject(1557, 540.88397, -1294.31531, 16.19410,   0.00000, 0.00000, 0.00000);//Puertas
	CreateDynamicObject(1557, 543.88397, -1294.31531, 16.19410,   0.00000, 0.00000, 180.00000);//Puertas
	CreateDynamicObject(6099, 542.23, -1279.21, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(6099, 542.19, -1331.81, 2000.00,   0.00, 0.00, 90.00);
	CreateDynamicObject(6099, 501.03, -1305.10, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(6099, 583.06, -1300.78, 2000.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 519.22, -1304.66, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 529.68, -1314.07, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 529.68, -1304.45, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 540.13, -1304.47, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 540.15, -1314.09, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 550.63, -1314.14, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 550.62, -1304.55, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 561.11, -1314.18, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 561.08, -1304.57, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 571.57, -1314.10, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 571.55, -1304.47, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 519.38, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateObject(19379, 519.26, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 529.75, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 530.24, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateObject(19379, 540.23, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 550.70, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 561.16, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateObject(19379, 571.63, -1296.87, 1995.97,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 541.11, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 551.92, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 562.77, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 573.66, -1301.56, 1996.05,   0.00, 0.00, 180.00);
	CreateDynamicObject(6337, 550.05, -1293.74, 1998.88,   0.00, 0.00, 180.00);
	CreateDynamicObject(6337, 531.86, -1255.26, 1993.25,   0.00, 0.00, 50.00);
	CreateDynamicObject(6337, 563.87, -1255.14, 1993.25,   0.00, 0.00, 50.00);
	CreateDynamicObject(2885, 524.14, -1315.26, 2001.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(14407, 524.60, -1311.36, 1995.73,   0.00, 0.00, 270.00);
	CreateDynamicObject(19379, 513.37, -1316.32, 1998.88,   0.00, 90.00, 0.00);
	CreateDynamicObject(14407, 520.27, -1313.27, 1998.36,   0.00, 0.00, 90.00);
	CreateDynamicObject(2885, 524.06, -1314.48, 1998.69,   0.00, 0.00, 180.00);
	CreateDynamicObject(19379, 527.49, -1315.49, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 524.06, -1315.25, 2001.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(2885, 516.58, -1311.42, 2000.73,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 519.22, -1314.23, 1995.49,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 529.41, -1315.45, 1996.07,   0.00, 90.00, 270.00);
	CreateDynamicObject(2885, 529.55, -1308.85, 1996.07,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 522.86, -1308.85, 1996.07,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 516.19, -1308.85, 1996.07,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 527.46, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 517.02, -1306.88, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(2885, 516.60, -1311.53, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(14407, 520.67, -1317.34, 1995.60,   0.00, 0.00, 270.00);
	CreateDynamicObject(19379, 537.92, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.39, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.87, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.30, -1306.88, 2001.45,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 537.88, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.25, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.69, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.15, -1316.36, 2001.47,   0.00, 90.00, 0.00);
	CreateDynamicObject(18766, 518.72, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 528.67, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 538.56, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 548.38, -1304.50, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 558.09, -1304.49, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 567.95, -1304.49, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(18766, 527.23, -1317.26, 2001.02,   90.00, 0.00, 0.00);
	CreateDynamicObject(19379, 527.49, -1315.49, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 517.02, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 527.46, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 537.92, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 537.88, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.25, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 548.39, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.87, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 558.69, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.15, -1316.36, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 569.30, -1306.88, 2000.59,   0.00, 90.00, 0.00);
	CreateDynamicObject(970, 516.10, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 520.23, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 524.36, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 528.49, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 532.63, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 536.75, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 540.91, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 545.06, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 549.21, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 553.37, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 557.54, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 561.71, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 565.84, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 570.00, -1302.08, 2002.05,   0.00, 0.00, 0.00);
	//CreateDynamicObject(1703, 531.31, -1313.69, 90.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 530.12, -1315.21, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 530.12, -1310.92, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 529.10, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 525.75, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 522.27, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 518.84, -1308.13, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(2885, 529.38, -1315.37, 1996.07,   0.00, 90.00, 270.00);
	CreateDynamicObject(18070, 563.49, -1312.50, 1996.07,   0.00, 0.00, 270.00);
	CreateDynamicObject(2008, 561.80, -1311.69, 1995.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(2008, 561.77, -1314.78, 1995.75,   0.00, 0.00, 90.00);
	CreateDynamicObject(2162, 563.21, -1315.13, 1995.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(2162, 564.46, -1315.22, 1995.64,   0.00, 0.00, 0.00);
	CreateDynamicObject(2607, 564.61, -1309.69, 1996.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(2607, 563.80, -1309.47, 1996.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 562.76, -1309.61, 1996.58,   0.00, 0.00, 14.49);
	CreateDynamicObject(2816, 561.71, -1309.67, 1996.58,   0.00, 0.00, 325.12);
	CreateDynamicObject(18608, 558.71, -1304.45, 2009.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(18608, 541.78, -1304.77, 2009.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(18608, 524.44, -1305.56, 2009.24,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 565.25, -1305.67, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 566.25, -1307.63, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 566.66, -1305.27, 2001.52,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 566.63, -1306.69, 2001.52,   0.00, 0.00, 300.27);
	CreateDynamicObject(2165, 565.81, -1311.25, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 557.86, -1311.39, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 565.94, -1314.41, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 565.81, -1311.25, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 558.01, -1314.59, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2007, 568.57, -1318.32, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 567.57, -1318.31, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 565.35, -1318.26, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 564.37, -1318.26, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 563.38, -1318.25, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 562.38, -1318.24, 2001.56,   0.00, 0.00, 180.00);
	CreateDynamicObject(2186, 561.22, -1318.32, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2186, 559.12, -1318.37, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2357, 559.24, -1306.44, 2001.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(2357, 554.98, -1306.45, 2001.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 549.74, -1311.52, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 549.75, -1314.91, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 545.65, -1313.27, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2186, 548.27, -1318.33, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2186, 545.87, -1318.30, 2001.54,   0.00, 0.00, 180.00);
	CreateDynamicObject(2166, 539.44, -1312.57, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2173, 541.37, -1311.58, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 540.03, -1314.97, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 566.20, -1312.61, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 566.31, -1315.72, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 558.57, -1312.58, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 558.68, -1315.99, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 550.50, -1315.95, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 550.24, -1312.68, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 546.24, -1314.96, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 541.01, -1316.16, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 541.98, -1312.66, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 540.67, -1312.81, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(2357, 550.74, -1306.45, 2001.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 540.94, -1309.99, 1997.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 552.96, -1310.01, 1997.83,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 552.96, -1310.01, 1999.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(18762, 540.94, -1309.99, 1998.96,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 541.75, -1307.95, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 539.08, -1308.71, 1995.55,   0.00, 0.00, 270.00);
	CreateDynamicObject(1703, 542.44, -1310.71, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 539.74, -1311.47, 1995.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 554.82, -1310.84, 1995.55,   0.00, 0.00, 90.00);
	CreateDynamicObject(1703, 554.10, -1308.14, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 551.32, -1308.83, 1995.55,   0.00, 0.00, 270.00);
	CreateDynamicObject(1703, 552.04, -1311.62, 1995.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(1703, 554.93, -1318.27, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 551.76, -1318.27, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 541.08, -1318.28, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1703, 537.97, -1318.30, 1995.55,   0.00, 0.00, 180.00);
	CreateDynamicObject(1569, 543.87, -1318.85, 1995.57,   0.00, 0.00, 0.00);
	CreateDynamicObject(1569, 546.87, -1318.85, 1995.57,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 550.15, -1308.24, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 552.00, -1308.23, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 553.69, -1308.25, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 555.48, -1308.17, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 557.91, -1308.06, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 560.04, -1307.98, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 562.25, -1306.55, 2001.52,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 560.16, -1304.81, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 557.88, -1304.79, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 555.78, -1304.80, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 553.82, -1304.79, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 551.27, -1304.85, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 549.42, -1304.85, 2001.52,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 547.50, -1306.48, 2001.52,   0.00, 0.00, 90.00);
	CreateDynamicObject(2173, 561.51, -1313.08, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 561.75, -1314.09, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(2166, 541.35, -1308.15, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2173, 540.35, -1306.20, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 541.69, -1306.08, 2001.52,   0.00, 0.00, 255.79);
	CreateDynamicObject(2165, 533.75, -1311.96, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 533.69, -1315.38, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 528.61, -1311.82, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(2165, 528.37, -1315.20, 2001.53,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 534.23, -1313.32, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 534.18, -1316.67, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 529.13, -1313.04, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 528.90, -1316.39, 2001.52,   0.00, 0.00, 180.00);
	CreateDynamicObject(1811, 529.30, -1310.27, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 533.73, -1310.64, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 534.96, -1310.54, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 539.85, -1310.12, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 541.81, -1310.15, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 545.88, -1311.83, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 549.79, -1310.23, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 550.99, -1310.07, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 558.03, -1310.12, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 561.59, -1311.68, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(1811, 566.02, -1310.03, 2002.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 530.72, -1307.81, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 541.35, -1308.15, 2001.53,   0.00, 0.00, 90.00);
	CreateDynamicObject(2166, 533.15, -1304.59, 2001.53,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 530.97, -1307.04, 2001.52,   0.00, 0.00, 264.88);
	CreateDynamicObject(1714, 532.84, -1305.48, 2001.52,   0.00, 0.00, 101.01);
	CreateDynamicObject(2030, 521.73, -1308.85, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(2030, 517.38, -1304.87, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(2030, 517.04, -1309.86, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(2030, 524.07, -1305.23, 2001.93,   0.00, 0.00, 0.00);
	CreateDynamicObject(1704, 520.54, -1307.18, 2001.54,   0.00, 0.00, 19.88);
	CreateDynamicObject(1704, 523.84, -1308.65, 2001.54,   0.00, 0.00, 270.00);
	CreateDynamicObject(1704, 525.85, -1304.41, 2001.54,   0.00, 0.00, 283.77);
	CreateDynamicObject(1704, 525.27, -1307.08, 2001.54,   0.00, 0.00, 201.56);
	CreateDynamicObject(1704, 516.00, -1303.35, 2001.54,   0.00, 0.00, 19.88);
	CreateDynamicObject(1704, 519.04, -1304.78, 2001.54,   0.00, 0.00, 263.42);
	CreateDynamicObject(1704, 518.81, -1309.87, 2001.54,   0.00, 0.00, 263.42);
	CreateDynamicObject(1704, 515.34, -1308.56, 2001.54,   0.00, 0.00, 19.88);
	CreateDynamicObject(970, 520.04, -1311.67, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(970, 515.88, -1311.67, 2002.05,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 540.19, -1305.55, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(2816, 549.25, -1306.41, 2002.39,   0.00, 0.00, 90.00);
	CreateDynamicObject(2816, 552.51, -1306.33, 2002.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 555.49, -1306.76, 2002.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 559.07, -1306.31, 2002.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2816, 524.19, -1305.43, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(2816, 521.68, -1308.83, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(1704, 522.51, -1304.43, 2001.54,   0.00, 0.00, 51.35);
	CreateDynamicObject(2816, 517.54, -1304.75, 2002.33,   0.00, 0.00, 90.00);
	CreateDynamicObject(3989, 535.92, -1314.14, 2013.52,   180.00, 0.00, 90.0);
	CreateObject(19379, 565.19849, -1313.44434, 1995.38269,   0.00000, 90.00000, 0.00000);
    new GR_IN = CreateDynamicObject(8171, 558.45288, -1301.84851, 1994.75122,   0.00000, 90.00000, 90.00000);
    SetDynamicObjectMaterial(GR_IN, 0, 0, "null", "null");
    SetDynamicObjectMaterial(GR_IN, 1, 0, "null", "null");


        //playa de sville
        CreateDynamicObject(642, 435.48541, -1758.33521, 8.56080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 435.52429, -1758.28076, 7.61246,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 484.49457, -1755.31274, 14.40088,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 490.21307, -1756.06543, 14.40088,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 490.21310, -1756.06543, 13.55653,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 482.64169, -1767.27808, 13.59520,   0.00000, 0.00000, 23.00390);
        CreateDynamicObject(643, 484.49460, -1755.31274, 13.55552,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 486.62201, -1767.40393, 13.59520,   0.00000, 0.00000, 4.00460);
        CreateDynamicObject(643, 491.13239, -1767.22144, 13.59520,   0.00000, 0.00000, 36.32980);
        CreateDynamicObject(643, 491.38559, -1763.52026, 13.59524,   0.00000, 0.00000, 71.70818);
        CreateDynamicObject(643, 487.26181, -1764.12280, 13.59520,   0.00000, 0.00000, 103.19940);
        CreateDynamicObject(643, 483.24341, -1763.90820, 13.59520,   0.00000, 0.00000, 98.60420);
        CreateDynamicObject(621, 478.79108, -1772.46936, 3.04402,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 495.79111, -1772.46936, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 512.18408, -1772.85535, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 531.97382, -1775.11963, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 549.01074, -1776.60120, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 567.08905, -1778.59949, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 582.43604, -1781.80298, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 598.71124, -1784.72119, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 615.89313, -1787.43115, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(621, 636.68756, -1791.86572, 3.04400,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 512.45929, -1767.79858, 13.70017,   0.00000, 0.00000, 75.18667);
        CreateDynamicObject(643, 516.33716, -1768.35571, 13.70020,   0.00000, 0.00000, 67.37768);
        CreateDynamicObject(643, 519.97717, -1768.66528, 13.70020,   0.00000, 0.00000, 96.85519);
        CreateDynamicObject(643, 516.13556, -1759.48474, 13.70020,   0.00000, 0.00000, 96.85519);
        CreateDynamicObject(643, 522.00458, -1760.21533, 13.70020,   0.00000, 0.00000, 96.85519);
        CreateDynamicObject(14537, 429.66989, -1838.59802, 4.94671,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 424.06384, -1849.89417, 2.99733,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 430.95273, -1850.05505, 2.99730,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 437.56381, -1849.89417, 2.99730,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 424.09595, -1855.48877, 2.99733,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 424.22107, -1860.20007, 2.75612,   0.00000, 0.00000, 339.52145);
        CreateDynamicObject(643, 430.00314, -1855.21545, 2.90998,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 436.65204, -1854.70898, 2.90998,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(643, 434.86807, -1860.54578, 2.76264,   0.00000, 0.00000, 30.67370);
        CreateDynamicObject(643, 429.68179, -1859.25244, 2.79713,   0.00000, 0.00000, 30.67370);
        CreateDynamicObject(1481, 410.46729, -1854.52600, 3.35250,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(642, 424.06381, -1849.89417, 3.90719,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 430.95270, -1850.05505, 3.76657,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 437.56381, -1849.89417, 3.87357,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 411.52243, -1852.59229, 3.98283,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1810, 412.47687, -1852.39795, 2.60321,   0.00000, 0.00000, 33.63224);
        CreateDynamicObject(3467, 410.84744, -1853.09839, 3.34434,   0.00000, 0.00000, 43.25486);
        CreateDynamicObject(1639, 468.84259, -1849.07605, 2.91361,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(1639, 468.86139, -1842.97021, 2.91360,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1640, 479.92822, -1874.66760, 2.23533,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1641, 474.14276, -1876.00171, 2.19657,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1642, 510.82010, -1884.53613, 2.31510,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 458.87878, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 460.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 462.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 464.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 466.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 468.87881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1646, 470.37881, -1880.23792, 2.03920,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 459.85571, -1880.20410, 3.13128,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 463.85571, -1880.20410, 3.13130,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 467.85571, -1880.20410, 3.13130,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(642, 471.85571, -1880.20410, 3.13130,   0.00000, 0.00000, 0.00000);

        //prisión fortcarson exterior
        CreateDynamicObject(3749, 288.14139, 1411.57861, 14.56882,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(8149, 110.56751, 1406.39197, 12.48510,   0.00000, 0.00000, 0.50000);
        CreateDynamicObject(8148, 191.81569, 1485.24390, 12.48510,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8152, 208.32149, 1455.58911, 12.48510,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(987, 160.86678, 1432.89941, 9.42527,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(987, 288.85178, 1401.91943, 9.42530,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8155, 268.55685, 1363.50305, 12.48510,   0.00000, 0.00000, 179.50000);
        CreateDynamicObject(8148, 192.69859, 1336.32190, 12.48510,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8150, 225.65190, 1403.21338, 11.76890,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(8150, 225.65190, 1419.87341, 11.76890,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3749, 245.64140, 1411.57861, 14.56880,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3749, 203.48140, 1411.57861, 14.56880,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3749, 162.68140, 1411.57861, 14.56880,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 288.29187, 1431.50024, 9.42527,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(987, 150.32680, 1420.99939, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1409.09937, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1397.19934, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.41547, 1403.17761, 9.42530,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(987, 150.32680, 1385.29932, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1373.39929, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1361.49927, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3749, 150.64270, 1353.89209, 14.56880,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1335.99927, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3749, 150.64270, 1464.39209, 14.56880,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1432.89941, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1444.79944, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 150.32680, 1473.01941, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(4079, 253.94090, 1453.85669, 21.73030,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(4079, 204.54510, 1448.91235, 21.73030,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(16480, 260.32025, 1447.58826, 20.49623,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(16482, 199.95773, 1455.19604, 20.49620,   0.00000, 0.00000, 180.00000);
        CreateDynamicObject(16480, 260.32025, 1447.58826, 20.49623,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(16480, 199.95770, 1455.19604, 20.49620,   0.00000, 0.00000, 180.00000);
        PrisonDoors[0] = CreateDynamicObject(980, 288.65009, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);
        PrisonDoors[1] = CreateDynamicObject(980, 246.15010, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);
        PrisonDoors[2] = CreateDynamicObject(980, 204.33009, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(980, 162.85010, 1411.56982, 11.88040,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 160.86681, 1444.79944, 9.42530,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(987, 160.86681, 1456.69934, 9.42530,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(987, 219.34413, 1484.93176, 9.42530,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(13367, 114.36054, 1480.31946, 20.24940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(13367, 114.36050, 1340.57947, 20.24940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(13367, 284.36050, 1340.57947, 20.24940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(13367, 284.36050, 1428.29956, 20.24940,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(2627, 117.79669, 1456.40564, 9.58588,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2627, 119.09175, 1448.58215, 9.58590,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2627, 116.25794, 1443.84302, 9.58590,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2627, 116.25909, 1435.36230, 9.58590,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2627, 116.12229, 1439.01270, 9.58590,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2628, 131.76711, 1451.42712, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2628, 131.76711, 1448.36707, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2629, 131.76711, 1443.94714, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2630, 131.76711, 1439.86707, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2630, 131.76711, 1436.12708, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2630, 131.76711, 1433.06702, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2630, 131.76711, 1425.58716, 9.63530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(2631, 126.86128, 1418.94861, 9.62230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(2631, 118.70130, 1418.94861, 9.62230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(2631, 118.70130, 1413.16858, 9.62230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(2632, 118.70130, 1407.04858, 9.62230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(2632, 126.86130, 1408.40857, 9.62230,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(6959, 196.19568, 1368.28088, 9.66584,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(6960, 196.19569, 1368.28088, 11.79846,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3496, 216.22052, 1378.06055, 9.68207,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3496, 216.22050, 1358.00049, 9.68210,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3496, 177.80051, 1358.00049, 9.68210,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(3496, 177.80051, 1378.40051, 9.68210,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(987, 225.46680, 1335.99927, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 225.46680, 1347.89929, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 225.46680, 1359.79932, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3749, 226.07671, 1381.25085, 14.58370,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(987, 225.46680, 1391.07935, 9.42530,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(980, 225.66748, 1381.26550, 11.88040,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3268, 267.43716, 1386.58337, 9.24311,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3268, 267.43719, 1353.60339, 9.24310,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3050, 177.98509, 1423.18958, 12.73825,   0.00000, 0.00000, 315.58606);
        CreateDynamicObject(3050, 180.19136, 1420.97217, 12.73820,   0.00000, 0.00000, 315.58609);
        CreateDynamicObject(3050, 180.19136, 1420.97217, 9.70918,   0.00000, 0.00000, 315.58609);
        CreateDynamicObject(3050, 177.98511, 1423.18958, 9.70920,   0.00000, 0.00000, 315.58609);
        CreateDynamicObject(691, 298.16101, 1398.69861, 8.32853,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(691, 299.57538, 1425.55774, 8.32853,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(691, 310.41223, 1399.06860, 6.89011,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(691, 321.60385, 1398.19263, 5.50702,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(691, 311.19989, 1425.66565, 7.20362,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(691, 321.44418, 1425.23682, 6.55817,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(13367, 284.36050, 1397.35962, 20.24940,   0.00000, 0.00000, 0.00000);

        //Banderas
        Poste[0] = CreateDynamicObject(1308, 924.59442, -1862.36328, 6.85810,   0.00000, 0.00000, 0.00000);
        SetDynamicObjectMaterial(Poste[0], 0, 0, "null", "null");
        SetDynamicObjectMaterial(Poste[0], 3, 0, "null", "null");
        SetDynamicObjectMaterial(Poste[0], 4, 0, "null", "null");
        Bandera[0] = CreateDynamicObject(3467, 925.0814, -1862.3406, 18.8822,   0.00000, 90.00000, 0.00000);
        SetDynamicObjectMaterial(Bandera[0], 0, 18646, "matcolours", "red");
        SetDynamicObjectMaterial(Bandera[0], 1, 0, "null", "null");

        //Mecanico talle y grove
        CreateDynamicObject(9220, 2365.60010, -1711.68994, 15.20000,   0.00000, 0.00000, -180.02000);
        CreateDynamicObject(641, 2352.32007, -1702.01001, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2373.59009, -1721.73999, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2360.35010, -1722.26001, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2352.91992, -1722.28003, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2352.04004, -1716.44995, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2352.16992, -1711.70996, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2352.27002, -1707.14001, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2368.00000, -1722.21997, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2395.55005, -1742.58997, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2401.55005, -1742.33997, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2382.16992, -1742.39001, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2375.31006, -1742.22998, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2363.54004, -1742.27002, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2357.05005, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2342.33008, -1742.64001, 9.80000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2323.25000, -1742.03003, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1280, 2388.82080, -1742.07813, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2267.32397, -1742.09094, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2348.63892, -1742.02771, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2388.74731, -1742.72925, 12.84000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1280, 2267.36011, -1742.79004, 12.84000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1280, 2348.60376, -1742.68481, 12.84000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1215, 2321.93335, -1737.93994, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2322.01050, -1746.76306, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2319.34082, -1740.57251, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2305.48438, -1746.77234, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2318.95581, -1742.29907, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2319.31250, -1744.09253, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2320.39917, -1745.70642, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2298.51001, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2405.60522, -1746.74951, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2405.57520, -1737.98254, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2407.10840, -1739.00769, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2408.20386, -1740.66174, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2408.53247, -1742.38708, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2408.14990, -1744.18994, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2407.08130, -1745.69519, 13.10000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2333.58008, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2236.06689, -1738.06897, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2353.04004, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2393.92822, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2380.96997, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2393.94189, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2380.36011, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2352.79004, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        //CreateDynamicObject(997, 2367.59009, -1739.15002, 12.82000,   0.00000, 0.00000, 90.00000);
        //CreateDynamicObject(997, 2367.59009, -1745.63000, 12.76000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 2333.55005, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2293.89795, -1738.06848, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2262.98999, -1738.06897, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2236.08984, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2293.63354, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2263.02979, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2320.39502, -1738.99023, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2305.52002, -1737.84998, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2307.09888, -1739.01074, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2308.14258, -1740.46606, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2308.54077, -1742.22876, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2308.14673, -1744.07068, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2307.06763, -1745.69690, 13.04000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2335.78003, -1742.37000, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2227.92114, -1742.34351, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2304.46997, -1742.29004, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2289.95996, -1742.26001, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2283.90991, -1742.12000, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2276.30005, -1742.25000, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2270.82007, -1742.38000, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2264.37012, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1280, 2328.96973, -1742.06641, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2328.90454, -1742.71094, 12.84000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1280, 2294.10010, -1741.65002, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2279.38989, -1741.83997, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2294.18994, -1742.31995, 12.84000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1280, 2279.46997, -1742.43005, 12.84000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(641, 2258.70996, -1742.31995, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2243.40991, -1742.34998, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(641, 2235.19067, -1742.52759, 9.90000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2221.84229, -1744.16235, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2222.84229, -1739.01904, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2221.81006, -1740.55005, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2221.45557, -1742.34656, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2222.89233, -1745.70251, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1181.29004, -1311.82996, 12.87000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1182.60999, -1311.82996, 12.87000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1238, 1184.15002, -1311.82996, 12.87000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2274.37036, -1746.05969, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2281.49219, -1738.06897, 14.35000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1280, 2231.30933, -1741.93433, 12.83000,   0.00000, 0.00000, 990.00000);
        CreateDynamicObject(1280, 2231.34009, -1742.61340, 12.83000,   0.00000, 0.00000, 810.60004);
        CreateDynamicObject(1215, 2224.29761, -1746.67822, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2224.46387, -1737.91675, 12.89000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3578, 2624.75220, -2116.95654, 13.18084,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(11614, 2505.28564, -2137.85767, 15.56080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(12943, 2482.54126, -2136.05933, 12.59000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(12943, 2456.37036, -2136.05127, 12.59000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(12943, 2465.04663, -2136.01270, 12.59000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(12943, 2473.71851, -2135.93262, 12.59000,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(5409, 2501.01270, -2091.28589, 16.99000,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(11614, 2526.99170, -2137.89551, 15.56080,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 2483.10815, -2078.45264, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2514.24585, -2091.36621, 14.80410,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 2433.84277, -2095.10718, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2433.84277, -2082.53613, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2502.47363, -2078.43237, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2533.72168, -2075.71484, 14.80410,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 2506.03149, -2067.26660, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2483.10815, -2067.18726, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2486.81445, -2067.25977, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2514.58789, -2081.16235, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2514.19800, -2079.47168, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2512.76807, -2078.63037, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.72388, -2078.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1676, 2523.75830, -2082.87354, 14.14350,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1676, 2523.75830, -2085.77344, 14.14350,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1676, 2523.75830, -2090.31348, 14.14350,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1676, 2523.73828, -2092.81348, 14.12350,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3660, 2525.53882, -2067.26538, 14.80410,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3660, 2533.73291, -2091.78418, 14.80410,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(9193, 2421.36499, -2101.70337, 16.13080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(9193, 2421.03882, -2076.53760, 16.13080,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2429.10547, -2128.63550, 12.66580,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1251, 2429.12549, -2124.51538, 12.66580,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1251, 2429.12549, -2120.65552, 12.66580,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1251, 2429.12549, -2117.05542, 12.66580,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1251, 2429.10547, -2133.09546, 12.66580,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1251, 2434.96582, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2439.95264, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2444.47266, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2448.17261, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2435.51270, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2435.45264, -2140.21802, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2440.08594, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2444.74585, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1251, 2448.82568, -2108.64453, 12.66580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1361, 2523.75610, -2095.86450, 13.28520,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1361, 2523.81250, -2079.88672, 13.16930,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.79272, -2096.99390, 12.93860,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.79272, -2098.17383, 12.93860,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.79272, -2099.35400, 12.93860,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.79272, -2100.51392, 12.93860,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(987, 2424.10010, -2071.73462, 12.24770,   0.00000, 0.00000, 9990.00000);
        CreateDynamicObject(1215, 2419.38354, -2098.26367, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2422.73511, -2084.01953, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2421.39355, -2083.32813, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2420.04980, -2082.44580, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2418.95581, -2079.96753, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2423.54834, -2094.86816, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2421.93262, -2095.15259, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2420.59277, -2095.92358, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2419.85620, -2097.08179, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2419.28442, -2081.31543, 12.98260,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(987, 2424.16333, -2095.07495, 12.02775,   0.00000, 0.00000, 9990.00000);
        CreateDynamicObject(3096, 2423.76514, -2081.70776, 14.79720,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3096, 2423.74487, -2097.25024, 14.79720,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(3096, 2482.56323, -2143.87231, 14.97630,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3096, 2456.38916, -2143.85400, 15.08540,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3096, 2473.83154, -2143.65234, 15.08540,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3096, 2465.04492, -2143.86353, 15.08540,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(994, 2427.97559, -2104.39038, 13.24080,   -0.04000, 0.00000, 0.00000);
        CreateDynamicObject(994, 2434.27441, -2104.39038, 13.24080,   -0.04000, 0.00000, 0.00000);
        CreateDynamicObject(994, 2440.51294, -2104.39038, 13.24080,   -0.04000, 0.00000, 0.00000);
        CreateDynamicObject(994, 2450.59570, -2141.11792, 13.24080,   -0.04000, 0.00000, 90.00000);
        CreateDynamicObject(994, 2446.67285, -2104.39038, 13.24080,   -0.04000, 0.00000, 0.00000);
        CreateDynamicObject(994, 2450.32910, -2113.13574, 13.24080,   -0.04000, 0.00000, 90.00000);
        CreateDynamicObject(994, 2450.32910, -2106.99585, 13.24080,   -0.04000, 0.00000, 90.00000);
        CreateDynamicObject(994, 2450.57666, -2128.63403, 13.24080,   -0.04000, 0.00000, 90.00000);
        CreateDynamicObject(994, 2450.56201, -2134.84497, 13.24080,   -0.04000, 0.00000, 90.00000);
        CreateDynamicObject(638, 2447.83228, -2121.08838, 13.12100,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(638, 2450.33984, -2121.10547, 13.12100,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1215, 2452.09644, -2125.54834, 13.10100,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2450.07153, -2116.11084, 13.10100,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2451.64014, -2116.20068, 13.10100,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2450.48218, -2125.61768, 13.10100,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2431.18579, -2136.04956, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2429.71411, -2105.83545, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2426.31348, -2109.49438, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2426.30908, -2106.46655, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2429.87915, -2109.17188, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2426.89624, -2112.03711, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2427.57593, -2136.08423, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2427.91968, -2138.54956, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2428.17773, -2141.78052, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2431.92407, -2141.79321, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(869, 2431.41895, -2138.71167, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3515, 2428.36963, -2108.85815, 11.73580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3515, 2429.91431, -2139.33447, 11.73580,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3462, 2433.29834, -2136.21362, 13.69980,   0.00000, 0.00000, -150.02000);
        CreateDynamicObject(3462, 2432.49316, -2113.36841, 13.69980,   0.00000, 0.00000, 150.00000);
        CreateDynamicObject(869, 2430.54517, -2111.94653, 12.96380,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3242, 2452.97729, -2070.22900, 14.55020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3242, 2438.86816, -2070.22900, 14.55020,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 2439.31030, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 2453.49536, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 2457.57788, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(638, 2443.27075, -2073.88281, 13.17420,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3761, 2453.26245, -2135.68750, 14.54412,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3761, 2479.32495, -2137.00342, 14.57097,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3761, 2470.62744, -2136.08838, 14.57561,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3761, 2461.80908, -2135.56543, 14.61491,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.72388, -2077.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.72388, -2076.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.72388, -2075.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2523.72388, -2074.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2522.72388, -2074.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2521.72388, -2074.87598, 12.88180,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1215, 2520.72388, -2074.87598, 12.88180,   0.00000, 0.00000, 0.00000);

        //Ayuntamiento by Otacon
        AyuntamientoNuevo[0] = CreateDynamicObject(3980, 1481.18750, -1785.07031, 22.38281,   0.00000, 0.00000, 0.00000);
        AyuntamientoNuevo[1] = CreateDynamicObject(4002, 1479.86719, -1790.39844, 56.02344,   0.00000, 0.00000, 0.00000);
        AyuntamientoNuevo[2] = CreateDynamicObject(3997, 1479.33594, -1802.28906, 12.54688,   0.00000, 0.00000, 0.00000);
        //plaza ayunta by otacon
        PlayaAyuntamientoNueva[0] = CreateDynamicObject(4186, 1479.55469, -1693.14063, 19.57813,   0.00000, 0.00000, 0.00000);
        PlayaAyuntamientoNueva[1] = CreateDynamicObject(3985, 1479.56250, -1631.45313, 12.07813,   0.00000, 0.00000, 0.00000);
        SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 0, 8486, "ballys02", "Grass_128HV", 0); //Cespel
    //SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 1, 3437, "ballypillar01", "ballywall01_64", 0); //Paredes violetas
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 2, 8497, "vgseland", "greyground256", 0); //Bordes
    //SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 3, 6322, "law2_roadsb", "rodeo3sjm", 0); //Piso General
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[0], 4, 3985, "pershingsq", "duskyred_64", 0); //Bola Roja
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 0, 8486, "ballys02", "Grass_128HV", 0); //Cespel
    //SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 1, 3437, "ballypillar01", "ballywall01_64", 0); //Paredes violetas
    SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 2, 8497, "vgseland", "greyground256", 0); //Bordes
    //SetDynamicObjectMaterial(PlayaAyuntamientoNueva[1], 3, 6322, "law2_roadsb", "nicepavegras_LA", 0);  //Piso Generalral

        //Abajo
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 0, 1557, "dave_door_2b", "miragedoor1_256", 0); //Puertas Entrada
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 1, 8497, "vgseland", "greyground256", 0); //Techo General
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 2, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 3, 8497, "vgseland", "luxorwall01_128", 0); //Paredes Generales
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 4, 8497, "vgseland", "luxorwall01_128", 0); //Paredes Columnas Bordes
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 5, 8497, "vgseland", "greyground256", 0); //Techo Entrada
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 6, 5033, "union_las", "lasunion95", 0); //Ventanas Costados
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 8, 8497, "vgseland", "greyground256", 0); //Borde Abajo
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 9, 5033, "union_las", "lasunion95", 0); //Ventanas General
        SetDynamicObjectMaterial(AyuntamientoNuevo[0], 10, 8497, "vgseland", "greyground256", 0); //Ventanas Borde
        //Arriba
        SetDynamicObjectMaterial(AyuntamientoNuevo[1], 0, 8497, "vgseland", "luxorwall01_128", 0); //Paredes Generales
        SetDynamicObjectMaterial(AyuntamientoNuevo[1], 1, 4016, "pershingsq", "posh_eagle12_sfe", 0); //Ventanas General Frente
        SetDynamicObjectMaterial(AyuntamientoNuevo[1], 2, 8497, "vgseland", "greyground256", 0); //Techo Punta
        SetDynamicObjectMaterial(AyuntamientoNuevo[1], 3, 8497, "vgseland", "luxorwall01_128", 0); //Ventanas Punta
        SetDynamicObjectMaterial(AyuntamientoNuevo[1], 4, 8497, "vgseland", "greyground256", 0); //Techo Torre
        SetDynamicObjectMaterial(AyuntamientoNuevo[1], 5, 4016, "pershingsq", "posh_eagle12_sfe", 0); //Ventanas General Costado
        //Piso
        SetDynamicObjectMaterial(AyuntamientoNuevo[2], 0, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General Atras Debajo de Los edificios
        SetDynamicObjectMaterial(AyuntamientoNuevo[2], 1, 8486, "ballys02", "Grass_128HV", 0); //Tierra Plantas
        SetDynamicObjectMaterial(AyuntamientoNuevo[2], 2, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General Delante
        SetDynamicObjectMaterial(AyuntamientoNuevo[2], 3, 9931, "churchsfe", "church_sfe3", 0); //Borde Platas
        SetDynamicObjectMaterial(AyuntamientoNuevo[2], 4, 8497, "vgseland", "ab_tileDiamond", 0); //Piso General Atras

        //verona mall
        VeronaMall = CreateDynamicObject(19322, 1117.58, -1490.01, 32.72,   0.00, 0.00, 0.00);
    SetDynamicObjectMaterial(VeronaMall, 1, 10615, "hotelback_sfs", "crazy paving", 0);
    SetDynamicObjectMaterial(VeronaMall, 3, 10615, "hotelback_sfs", "crazy paving", 0);
    SetDynamicObjectMaterial(VeronaMall, 5, 10615, "hotelback_sfs", "crazy paving", 0);
    SetDynamicObjectMaterial(VeronaMall, 6, 5871, "cemetery_law", "brickgrey", 0);
    SetDynamicObjectMaterial(VeronaMall, 8, 16070, "des_stownmain1", "des_brick1", 0);//testing redbrick
    SetDynamicObjectMaterial(VeronaMall, 9, 5871, "cemetery_law", "brickgrey", 0);

        CreateDynamicObject(2543, 1168.18, -1436.39, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(2543, 1167.10, -1436.40, 14.79,   0.00, 0.00, 0.31);
    CreateDynamicObject(2538, 1172.31, -1435.32, 14.79,   0.00, 0.00, 180.34);
    CreateDynamicObject(2539, 1171.38, -1435.31, 14.79,   0.00, 0.00, 180.19);
    CreateDynamicObject(2540, 1169.56, -1435.36, 14.79,   0.00, 0.00, 180.17);
    CreateDynamicObject(2012, 1163.25, -1448.31, 14.75,   0.00, 0.00, -179.16);
    CreateDynamicObject(1987, 1163.13, -1436.34, 14.79,   0.00, 0.00, 361.06);
    CreateDynamicObject(1988, 1164.13, -1436.33, 14.79,   0.00, 0.00, 360.80);
    CreateDynamicObject(2871, 1164.79, -1443.96, 14.79,   0.00, 0.00, 177.73);
    CreateDynamicObject(2871, 1164.70, -1444.98, 14.79,   0.00, 0.00, 358.07);
    CreateDynamicObject(2942, 1155.52, -1464.68, 15.43,   0.00, 0.00, -71.22);
    CreateDynamicObject(1987, 1164.12, -1435.32, 14.77,   0.00, 0.00, 180.96);
    CreateDynamicObject(2530, 1171.13, -1443.79, 14.79,   0.00, 0.00, -182.16);
    CreateDynamicObject(1991, 1173.75, -1439.56, 14.79,   0.00, 0.00, 179.47);
    CreateDynamicObject(1996, 1169.82, -1439.50, 14.79,   0.00, 0.00, 179.10);
    CreateDynamicObject(1996, 1174.24, -1435.38, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1991, 1175.23, -1435.39, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(2542, 1163.78, -1443.92, 14.76,   0.00, 0.00, 178.77);
    CreateDynamicObject(2536, 1166.88, -1445.07, 14.70,   0.00, 0.00, -0.42);
    CreateDynamicObject(2542, 1163.70, -1444.93, 14.78,   0.00, 0.00, -1.74);
    CreateDynamicObject(1984, 1180.81, -1437.45, 14.56,   0.00, 0.00, 90.12);
    CreateDynamicObject(2012, 1166.31, -1448.28, 14.75,   0.00, 0.00, -180.12);
    CreateDynamicObject(2530, 1172.14, -1443.83, 14.79,   0.00, 0.00, -181.38);
    CreateDynamicObject(2530, 1173.14, -1443.85, 14.79,   0.00, 0.00, -180.96);
    CreateDynamicObject(2530, 1174.13, -1443.88, 14.79,   0.00, 0.00, -181.50);
    CreateDynamicObject(1981, 1170.76, -1439.52, 14.79,   0.00, 0.00, -181.74);
    CreateDynamicObject(1981, 1171.76, -1439.54, 14.79,   0.00, 0.00, -180.80);
    CreateDynamicObject(1981, 1172.75, -1439.55, 14.79,   0.00, 0.00, -180.84);
    CreateDynamicObject(2541, 1180.37, -1448.36, 14.79,   0.00, 0.00, 180.45);
    CreateDynamicObject(2543, 1182.78, -1444.98, 14.55,   0.00, 0.00, 270.44);
    CreateDynamicObject(2541, 1182.66, -1446.05, 14.71,   0.00, 0.00, -90.06);
    CreateDynamicObject(2543, 1182.55, -1443.77, 14.69,   0.00, 0.00, -90.84);
    CreateDynamicObject(1990, 1175.08, -1431.84, 14.79,   0.00, 0.00, 3.30);
    CreateDynamicObject(2012, 1160.10, -1448.35, 14.75,   0.00, 0.00, -179.94);
    CreateDynamicObject(2539, 1170.45, -1435.33, 14.79,   0.00, 0.00, 181.26);
    CreateDynamicObject(2545, 1161.82, -1431.84, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(2545, 1160.82, -1431.83, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(2545, 1159.81, -1431.86, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(2545, 1162.82, -1431.87, 14.91,   0.00, 0.00, -90.54);
    CreateDynamicObject(1988, 1163.13, -1435.34, 14.79,   0.00, 0.00, 541.46);
    CreateDynamicObject(1988, 1166.07, -1436.32, 14.79,   0.00, 0.00, 360.80);
    CreateDynamicObject(1987, 1165.07, -1436.33, 14.79,   0.00, 0.00, 361.06);
    CreateDynamicObject(1987, 1166.11, -1435.30, 14.77,   0.00, 0.00, 180.96);
    CreateDynamicObject(1988, 1165.07, -1435.31, 14.79,   0.00, 0.00, 540.44);
    CreateDynamicObject(2536, 1165.79, -1445.07, 14.70,   0.00, 0.00, -1.20);
    CreateDynamicObject(2536, 1167.83, -1445.07, 14.70,   0.00, 0.00, -0.06);
    CreateDynamicObject(2871, 1165.79, -1444.00, 14.79,   0.00, 0.00, 178.27);
    CreateDynamicObject(2871, 1166.81, -1444.03, 14.79,   0.00, 0.00, 179.35);
    CreateDynamicObject(2871, 1167.79, -1444.04, 14.79,   0.00, 0.00, 179.89);
    CreateDynamicObject(2543, 1168.13, -1435.36, 14.79,   0.00, 0.00, 180.05);
    CreateDynamicObject(2543, 1167.10, -1435.37, 14.79,   0.00, 0.00, 180.35);
    CreateDynamicObject(2012, 1177.30, -1445.31, 14.75,   0.00, 0.00, 359.93);
    CreateDynamicObject(1996, 1173.36, -1448.30, 14.79,   0.00, 0.00, 179.10);
    CreateDynamicObject(1981, 1174.33, -1448.32, 14.79,   0.00, 0.00, -181.74);
    CreateDynamicObject(1981, 1175.32, -1448.35, 14.79,   0.00, 0.00, -180.84);
    CreateDynamicObject(1981, 1176.30, -1448.37, 14.79,   0.00, 0.00, -180.84);
    CreateDynamicObject(1991, 1177.28, -1448.37, 14.79,   0.00, 0.00, 179.47);
    CreateDynamicObject(1996, 1178.33, -1448.36, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1991, 1179.33, -1448.37, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(1994, 1176.82, -1444.16, 14.79,   0.00, 0.00, -0.84);
    CreateDynamicObject(1995, 1178.81, -1444.20, 14.79,   0.00, 0.00, -1.26);
    CreateDynamicObject(2543, 1168.89, -1444.06, 14.79,   0.00, 0.00, 178.97);
    CreateDynamicObject(2543, 1169.91, -1444.07, 14.79,   0.00, 0.00, 179.69);
    CreateDynamicObject(2543, 1169.87, -1445.12, 14.79,   0.00, 0.00, -0.06);
    CreateDynamicObject(2543, 1168.86, -1445.11, 14.79,   0.00, 0.00, 0.31);
    CreateDynamicObject(2538, 1167.02, -1431.87, 14.79,   0.00, 0.00, 0.42);
    CreateDynamicObject(2539, 1166.03, -1431.89, 14.79,   0.00, 0.00, 0.70);
    CreateDynamicObject(2540, 1164.04, -1431.91, 14.79,   0.00, 0.00, 0.60);
    CreateDynamicObject(2539, 1165.03, -1431.91, 14.79,   0.00, 0.00, 1.02);
    CreateDynamicObject(2538, 1176.17, -1436.38, 14.79,   0.00, 0.00, 0.24);
    CreateDynamicObject(2539, 1174.22, -1436.37, 14.79,   0.00, 0.00, -0.06);
    CreateDynamicObject(2540, 1173.22, -1436.36, 14.79,   0.00, 0.00, 0.18);
    CreateDynamicObject(2539, 1175.20, -1436.38, 14.79,   0.00, 0.00, -2.06);
    CreateDynamicObject(2540, 1173.26, -1435.31, 14.79,   0.00, 0.00, 180.17);
    CreateDynamicObject(1991, 1175.74, -1439.58, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(1996, 1174.74, -1439.57, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1996, 1176.17, -1435.37, 14.79,   0.00, 0.00, 179.24);
    CreateDynamicObject(1991, 1177.16, -1435.38, 14.79,   0.00, 0.00, 179.57);
    CreateDynamicObject(2540, 1169.44, -1436.35, 14.79,   0.00, 0.00, 0.18);
    CreateDynamicObject(2539, 1170.43, -1436.35, 14.79,   0.00, 0.00, 0.90);
    CreateDynamicObject(2539, 1171.34, -1436.33, 14.79,   0.00, 0.00, 0.58);
    CreateDynamicObject(2538, 1172.22, -1436.32, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(2871, 1163.40, -1440.68, 14.79,   0.00, 0.00, 360.41);
    CreateDynamicObject(2536, 1164.49, -1440.73, 14.70,   0.00, 0.00, -1.20);
    CreateDynamicObject(2536, 1165.49, -1440.75, 14.70,   0.00, 0.00, -0.42);
    CreateDynamicObject(2536, 1166.50, -1440.75, 14.70,   0.00, 0.00, -0.06);
    CreateDynamicObject(2543, 1167.61, -1440.64, 14.79,   0.00, 0.00, 0.31);
    CreateDynamicObject(2543, 1173.10, -1440.68, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(2543, 1168.64, -1439.60, 14.79,   0.00, 0.00, 180.05);
    CreateDynamicObject(2543, 1167.67, -1439.61, 14.79,   0.00, 0.00, 180.35);
    CreateDynamicObject(2871, 1163.65, -1439.67, 14.79,   0.00, 0.00, 180.61);
    CreateDynamicObject(2871, 1164.68, -1439.67, 14.79,   0.00, 0.00, 179.77);
    CreateDynamicObject(2871, 1165.68, -1439.68, 14.79,   0.00, 0.00, 180.61);
    CreateDynamicObject(2871, 1166.68, -1439.66, 14.79,   0.00, 0.00, 180.61);
    CreateDynamicObject(1990, 1175.09, -1444.97, 14.79,   0.00, 0.00, -2.46);
    CreateDynamicObject(1990, 1174.07, -1444.94, 14.79,   0.00, 0.00, 0.48);
    CreateDynamicObject(1990, 1173.09, -1444.94, 14.79,   0.00, 0.00, -1.20);
    CreateDynamicObject(1990, 1172.11, -1444.92, 14.79,   0.00, 0.00, -1.14);
    CreateDynamicObject(1990, 1171.12, -1444.91, 14.79,   0.00, 0.00, -0.72);
    CreateDynamicObject(2530, 1175.13, -1443.91, 14.79,   0.00, 0.00, -181.50);
    CreateDynamicObject(1995, 1177.71, -1439.63, 14.79,   0.00, 0.00, 0.00);
    CreateDynamicObject(1994, 1176.73, -1439.63, 14.79,   0.00, 0.00, 0.06);
    CreateDynamicObject(1993, 1177.83, -1444.15, 14.79,   0.00, 0.00, 179.46);
    CreateDynamicObject(19323, 1117.58, -1490.01, 32.72,   0.00, 0.00, 0.00);
    CreateDynamicObject(2625, 1173.93, -1529.83, 23.06,   0.00, 0.00, 228.36);
    CreateDynamicObject(2371, 1159.52, -1531.73, 21.74,   0.00, 0.00, -40.00);
    CreateDynamicObject(2387, 1159.51, -1526.47, 21.71,   0.00, 0.00, 140.04);
    CreateDynamicObject(2394, 1160.24, -1531.50, 22.45,   0.00, 0.00, 50.00);
    CreateDynamicObject(2394, 1159.73, -1531.05, 22.45,   0.00, 0.00, 50.00);
    CreateDynamicObject(2620, 1165.36, -1537.03, 22.49,   0.00, 0.00, 0.00);
    CreateDynamicObject(2621, 1164.13, -1522.14, 22.51,   0.00, 0.00, 0.00);
    CreateDynamicObject(2621, 1163.91, -1529.77, 22.51,   0.00, 0.00, 0.00);
    CreateDynamicObject(2652, 1175.05, -1525.49, 22.25,   0.00, 0.00, 0.00);
    CreateDynamicObject(2381, 1168.55, -1521.11, 22.46,   0.00, 0.00, 50.00);
    CreateDynamicObject(2372, 1167.27, -1520.84, 21.74,   0.00, 0.00, -40.00);
    CreateDynamicObject(2381, 1167.48, -1520.21, 22.46,   0.00, 0.00, 50.00);
    CreateDynamicObject(2372, 1168.32, -1521.72, 21.74,   0.00, 0.00, -40.00);
    CreateDynamicObject(2693, 1165.34, -1515.64, 22.35,   0.00, 0.00, 0.00);
    CreateDynamicObject(2693, 1153.82, -1529.02, 22.35,   0.00, 0.00, 90.00);
    CreateDynamicObject(2649, 10918.97, -4055.88, -3029.91,   0.00, 0.00, 0.00);
    CreateDynamicObject(2692, 1161.48, -1536.98, 22.44,   0.00, 0.00, 180.00);
    CreateDynamicObject(2231, -1526.20, -1524.00, 21.73,   0.00, 0.00, 270.00);
    CreateDynamicObject(1649, 1152.49, -1529.16, 20.49,   0.00, 0.00, 226.66);
    CreateDynamicObject(2412, 1161.01, -1520.16, 21.75,   0.00, 0.00, 51.75);
    CreateDynamicObject(2412, 1158.14, -1523.46, 21.75,   0.00, 0.00, 48.00);
    CreateDynamicObject(2654, 1158.76, -1534.32, 21.96,   0.00, 0.00, 53.19);
    CreateDynamicObject(2654, 1158.72, -1534.31, 21.96,   0.00, 0.00, 53.19);
    CreateDynamicObject(2655, 1159.38, -1535.92, 22.88,   0.00, 0.00, 318.79);
    CreateDynamicObject(19329, 1155.13, -1440.40, 18.53,   0.00, 0.00, 89.23);
    CreateDynamicObject(2412, 1100.87, -1456.32, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(2412, 1100.94, -1458.95, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(2580, 1158.57, -1473.03, 18.55,   0.00, 0.00, 286.73);
    CreateDynamicObject(2412, 1101.00, -1441.01, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(2412, 1101.04, -1438.66, 14.79,   0.00, 0.00, 90.00);
    CreateDynamicObject(1649, 1152.49, -1529.16, 20.49,   0.00, 0.00, 226.66);
    CreateDynamicObject(2416, 1086.08, -1449.54, 14.77,   0.00, 0.00, 359.37);
    CreateDynamicObject(2415, 1083.39, -1449.69, 14.77,   0.00, 0.00, 359.52);
    CreateDynamicObject(2415, 1078.59, -1449.71, 14.77,   0.00, 0.00, 1.07);
    CreateDynamicObject(2455, 1077.74, -1453.26, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2425, 1082.83, -1453.15, 15.75,   0.00, 0.00, 0.28);
    CreateDynamicObject(2429, 1081.85, -1448.84, 15.41,   0.00, 0.00, 359.38);
    CreateDynamicObject(2663, 1084.19, -1453.16, 15.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(2420, 1086.07, -1460.48, 14.79,   0.00, 0.00, 179.31);
    CreateDynamicObject(2764, 1098.26, -1450.63, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2643, 1101.86, -1458.05, 18.72,   0.00, 0.00, 89.00);
    CreateDynamicObject(1847, 1167.24, -1448.36, 14.79,   0.00, 0.00, 180.00);
    CreateDynamicObject(1844, 1159.03, -1431.93, 14.79,   0.00, 0.00, 0.00);
    CreateDynamicObject(1847, 1177.18, -1448.37, 14.79,   0.00, 0.00, 180.00);
    CreateDynamicObject(1890, 1176.09, -1440.54, 14.79,   0.00, 0.00, 0.00);
    CreateDynamicObject(1842, 1171.25, -1447.84, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(1842, 1169.17, -1432.57, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(1842, 1157.02, -1447.78, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(1885, 1156.34, -1442.06, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2374, 1168.90, -1517.24, 22.93,   0.00, 0.00, 314.84);
    CreateDynamicObject(2377, 1155.12, -1531.95, 22.93,   0.00, 0.00, 135.00);
    CreateDynamicObject(2383, 1154.57, -1531.50, 22.93,   0.00, 0.00, 45.00);
    CreateDynamicObject(2389, 1154.02, -1531.05, 22.93,   0.00, 0.00, 135.00);
    CreateDynamicObject(2378, 1156.24, -1532.96, 22.93,   0.00, 0.00, 135.00);
    CreateDynamicObject(2396, 1156.74, -1533.42, 22.93,   0.00, 0.00, 135.00);
    CreateDynamicObject(2387, 1167.42, -1524.77, 21.71,   0.00, 0.00, 140.04);
    CreateDynamicObject(2375, 1171.87, -1520.13, 21.71,   0.00, 0.00, 139.37);
    CreateDynamicObject(18090, 1082.08, -1527.53, 24.23,   0.00, 0.00, 220.29);
    CreateDynamicObject(7666, 1098.05, -1415.90, 37.31,   0.00, 0.00, 299.66);
    CreateDynamicObject(7666, 1158.97, -1415.77, 37.31,   0.00, 0.00, 299.66);
    CreateDynamicObject(19325, 1099.82, -1468.08, 15.90,   0.00, 0.00, 343.18);
    CreateDynamicObject(19325, 1155.43, -1434.60, 16.02,   0.00, 0.00, 0.00);
    CreateDynamicObject(1885, 1156.35, -1442.05, 14.68,   0.00, 0.00, 0.00);
    CreateDynamicObject(1891, 1162.00, -1431.67, 14.77,   0.00, 0.00, 0.00);
    CreateDynamicObject(1845, 1172.22, -1432.03, 14.79,   0.00, 0.00, 178.33);
    CreateDynamicObject(18885, 1177.44, -1431.78, 15.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(1775, 1180.12, -1431.89, 15.90,   0.00, 0.00, 0.00);
    CreateDynamicObject(1776, 1182.77, -1433.47, 15.87,   0.00, 0.00, 270.46);
    CreateDynamicObject(19325, 1155.38, -1445.56, 16.02,   0.00, 0.00, 0.00);
    CreateDynamicObject(18865, 1162.86, -1459.74, 15.42,   0.00, 0.00, 179.00);
    CreateDynamicObject(18866, 1162.65, -1459.73, 15.43,   0.00, 0.00, 177.94);
    CreateDynamicObject(18867, 1162.48, -1459.73, 15.43,   0.00, 0.00, 177.74);
    CreateDynamicObject(18869, 1162.25, -1459.72, 15.43,   0.00, 0.00, 175.40);
    CreateDynamicObject(18870, 1162.07, -1459.70, 15.43,   0.00, 0.00, 174.38);
    CreateDynamicObject(18871, 1161.86, -1459.70, 15.43,   0.00, 0.00, 176.10);
    CreateDynamicObject(18872, 1161.62, -1459.66, 15.43,   0.00, 0.00, 177.14);
    CreateDynamicObject(18873, 1161.44, -1459.63, 15.43,   0.00, 0.00, 176.01);
    CreateDynamicObject(18874, 1161.27, -1459.61, 15.45,   0.00, 0.00, 176.01);
    CreateDynamicObject(351, 1163.47, -1454.41, 15.45,   0.00, 0.00, 6.12);
    CreateDynamicObject(353, 1164.79, -1454.79, 15.45,   0.00, 0.00, 183.06);
    CreateDynamicObject(356, 1166.01, -1454.41, 15.57,   0.00, 0.00, 0.00);
    CreateDynamicObject(358, 1167.24, -1454.77, 15.53,   0.00, 0.00, 182.71);
    CreateDynamicObject(359, 1162.08, -1454.55, 15.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(2041, 1159.80, -1452.24, 15.83,   0.00, 0.00, 331.65);
    CreateDynamicObject(2041, 1161.86, -1452.21, 15.83,   0.00, 0.00, 331.65);
    CreateDynamicObject(2043, 1160.79, -1452.18, 15.74,   0.00, 0.00, 52.92);
    CreateDynamicObject(349, 1163.99, -1459.93, 15.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1160.53, -1478.48, 16.02,   0.00, 0.00, 18.42);
    CreateDynamicObject(19325, 1101.57, -1452.65, 15.90,   0.00, 0.00, 359.80);
    CreateDynamicObject(2455, 1078.60, -1453.26, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1079.51, -1453.25, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1080.42, -1453.24, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1081.32, -1453.23, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1082.24, -1453.22, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1083.14, -1453.22, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1084.05, -1453.22, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1084.97, -1453.21, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1085.89, -1453.21, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1086.81, -1453.20, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2455, 1087.73, -1453.19, 14.72,   0.00, 0.00, 0.44);
    CreateDynamicObject(2454, 1088.66, -1453.19, 14.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2455, 1088.82, -1452.10, 14.72,   0.00, 0.00, 89.83);
    CreateDynamicObject(2455, 1088.83, -1451.17, 14.72,   0.00, 0.00, 89.83);
    CreateDynamicObject(2455, 1088.83, -1450.25, 14.72,   0.00, 0.00, 89.83);
    CreateDynamicObject(2455, 1088.83, -1449.31, 14.72,   0.00, 0.00, 89.83);
    CreateDynamicObject(2416, 1079.85, -1449.56, 14.77,   0.00, 0.00, 359.37);
    CreateDynamicObject(2416, 1084.23, -1449.52, 14.77,   0.00, 0.00, 359.37);
    CreateDynamicObject(2425, 1080.20, -1456.08, 22.75,   0.00, 0.00, 0.28);
    CreateDynamicObject(2415, 1082.55, -1449.72, 14.77,   0.00, 0.00, 359.52);
    CreateDynamicObject(2452, 1077.48, -1451.76, 14.80,   0.00, 0.00, 87.51);
    CreateDynamicObject(2663, 1086.78, -1449.86, 15.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(2663, 1087.22, -1453.12, 15.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(2663, 1087.80, -1453.16, 15.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(2663, 1086.32, -1449.84, 15.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1079.43, -1458.27, 15.18,   0.00, 0.00, 95.72);
    CreateDynamicObject(2788, 1079.49, -1457.19, 15.18,   0.00, 0.00, 356.84);
    CreateDynamicObject(2788, 1079.35, -1459.89, 15.18,   0.00, 0.00, 258.20);
    CreateDynamicObject(2639, 1077.30, -1454.95, 15.33,   0.00, 0.00, 270.90);
    CreateDynamicObject(2764, 1083.05, -1459.33, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1082.07, -1459.32, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2771, 1167.99, -1509.41, 15.81,   0.00, 0.00, 247.91);
    CreateDynamicObject(2764, 1079.30, -1459.05, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2639, 1082.52, -1460.22, 15.33,   0.00, 0.00, 0.00);
    CreateDynamicObject(2639, 1091.68, -1459.36, 15.33,   0.00, 0.00, 270.90);
    CreateDynamicObject(2764, 1093.23, -1459.05, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1080.42, -1459.19, 15.18,   0.00, 0.00, 7.11);
    CreateDynamicObject(2788, 1099.29, -1450.29, 15.18,   0.00, 0.00, 7.11);
    CreateDynamicObject(2788, 1079.24, -1454.43, 15.18,   0.00, 0.00, 7.11);
    CreateDynamicObject(2764, 1078.74, -1456.81, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2420, 1088.91, -1460.46, 14.79,   0.00, 0.00, 179.31);
    CreateDynamicObject(2788, 1078.50, -1458.98, 15.18,   0.00, 0.00, 160.35);
    CreateDynamicObject(2638, 1096.37, -1450.20, 15.33,   0.00, 0.00, 89.52);
    CreateDynamicObject(2638, 1092.42, -1450.06, 15.33,   0.00, 0.00, 89.52);
    CreateDynamicObject(2764, 1090.62, -1450.31, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1094.51, -1450.39, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1079.45, -1456.46, 15.18,   0.00, 0.00, 7.11);
    CreateDynamicObject(2642, 1088.44, -1449.09, 17.19,   0.00, 0.00, 0.00);
    CreateDynamicObject(2642, 1082.84, -1449.16, 17.19,   0.00, 0.00, 0.00);
    CreateDynamicObject(2641, 1098.44, -1449.18, 17.47,   0.00, 0.00, 0.00);
    CreateDynamicObject(2641, 1092.64, -1449.15, 17.47,   0.00, 0.00, 0.00);
    CreateDynamicObject(2677, 1086.77, -1459.28, 15.08,   0.00, 0.00, 306.98);
    CreateDynamicObject(2647, 1094.82, -1450.50, 15.72,   0.00, 0.00, 0.00);
    CreateDynamicObject(2647, 1086.68, -1453.32, 15.90,   0.00, 0.00, 0.00);
    CreateDynamicObject(2859, 1079.39, -1458.93, 15.60,   0.00, 0.00, 0.00);
    CreateDynamicObject(2859, 1098.29, -1450.61, 15.60,   0.00, 0.00, 0.00);
    CreateDynamicObject(2639, 1092.55, -1460.21, 15.33,   0.00, 0.00, 359.47);
    CreateDynamicObject(2639, 1077.33, -1457.05, 15.33,   0.00, 0.00, 270.90);
    CreateDynamicObject(2639, 1094.59, -1460.23, 15.33,   0.00, 0.00, 359.47);
    CreateDynamicObject(2764, 1078.64, -1454.69, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1094.20, -1459.03, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1095.15, -1459.04, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(2859, 1095.09, -1458.97, 15.60,   0.00, 0.00, 32.33);
    CreateDynamicObject(2859, 1093.66, -1458.95, 15.60,   0.00, 0.00, 0.00);
    CreateDynamicObject(2663, 1094.40, -1458.96, 15.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(2647, 1094.32, -1450.59, 15.72,   0.00, 0.00, 0.00);
    CreateDynamicObject(2647, 1084.45, -1453.30, 15.90,   0.00, 0.00, 0.00);
    CreateDynamicObject(2430, 1084.17, -1449.10, 16.94,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1101.76, -1445.48, 16.02,   0.00, 0.00, 359.50);
    CreateDynamicObject(19325, 1159.77, -1502.42, 16.02,   0.00, 0.00, 340.07);
    CreateDynamicObject(2586, 1166.77, -1471.83, 15.31,   0.00, 0.00, 287.32);
    CreateDynamicObject(2584, 1161.13, -1465.86, 15.60,   0.00, 0.00, 18.76);
    CreateDynamicObject(2584, 1165.75, -1475.94, 15.60,   0.00, 0.00, 18.76);
    CreateDynamicObject(2579, 1165.84, -1480.17, 16.48,   0.00, 0.00, 199.68);
    CreateDynamicObject(2578, 1163.47, -1480.96, 16.48,   0.00, 0.00, 197.37);
    CreateDynamicObject(2578, 1161.45, -1463.56, 16.48,   0.00, 0.00, 17.13);
    CreateDynamicObject(2583, 1167.39, -1469.59, 15.30,   0.00, 0.00, 288.48);
    CreateDynamicObject(2577, 1162.99, -1476.29, 15.53,   0.00, 0.00, 287.19);
    CreateDynamicObject(2581, 1169.04, -1474.12, 15.53,   0.00, 0.00, 287.98);
    CreateDynamicObject(2583, 1169.63, -1476.76, 15.30,   0.00, 0.00, 288.48);
    CreateDynamicObject(2583, 1165.41, -1463.25, 15.30,   0.00, 0.00, 288.48);
    CreateDynamicObject(2585, 1158.86, -1464.36, 16.37,   0.00, 0.00, 15.84);
    CreateDynamicObject(2578, 1168.07, -1479.48, 16.48,   0.00, 0.00, 197.37);
    CreateDynamicObject(2585, 1168.10, -1471.43, 16.78,   0.00, 0.00, 287.43);
    CreateDynamicObject(2581, 1161.15, -1469.79, 15.53,   0.00, 0.00, 20.34);
    CreateDynamicObject(2581, 1161.02, -1469.34, 15.53,   0.00, 0.00, 199.80);
    CreateDynamicObject(2771, 1081.69, -1452.25, 22.92,   0.00, 0.00, 89.31);
    CreateDynamicObject(19325, 1155.30, -1452.52, 16.02,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1101.76, -1434.48, 16.02,   0.00, 0.00, 359.50);
    CreateDynamicObject(2784, 1092.80, -1439.86, 15.97,   0.00, 0.00, 90.14);
    CreateDynamicObject(2785, 1092.66, -1441.57, 15.79,   0.00, 0.00, 90.07);
    CreateDynamicObject(2785, 1092.66, -1438.17, 15.79,   0.00, 0.00, 90.07);
    CreateDynamicObject(2783, 1097.31, -1431.38, 16.15,   0.00, 0.00, 0.00);
    CreateDynamicObject(2808, 1099.37, -1431.15, 15.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(2808, 1095.33, -1431.16, 15.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(2808, 1099.97, -1431.16, 15.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(2808, 1095.35, -1431.16, 15.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(2808, 1094.61, -1431.16, 15.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(14628, 1103.24, -1440.03, 20.27,   0.00, 0.00, 269.68);
    CreateDynamicObject(1824, 1097.37, -1440.18, 15.27,   0.00, 0.00, 90.85);
    CreateDynamicObject(2188, 1092.51, -1445.48, 15.31,   0.00, 0.00, 93.21);
    CreateDynamicObject(2125, 1098.90, -1439.29, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1100.03, -1432.04, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1099.27, -1432.05, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1095.95, -1431.96, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1098.56, -1432.04, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1095.26, -1431.94, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1094.60, -1431.95, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1093.84, -1431.93, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(1896, 1093.22, -1433.10, 15.51,   0.00, 0.00, 272.44);
    CreateDynamicObject(1895, 1097.31, -1431.49, 16.37,   0.00, 0.00, 0.02);
    CreateDynamicObject(1929, 1092.45, -1433.25, 16.44,   0.00, 0.00, 88.11);
    CreateDynamicObject(1896, 1097.33, -1432.00, 15.51,   0.00, 0.00, 0.00);
    CreateDynamicObject(14608, 1096.24, -1446.82, 16.34,   0.00, 0.00, 316.48);
    CreateDynamicObject(14567, 1100.50, -1446.98, 15.82,   0.00, 0.00, 313.49);
    CreateDynamicObject(2125, 1100.71, -1432.01, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2125, 1098.74, -1440.81, 15.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1157.19, -1467.96, 16.02,   0.00, 0.00, 17.30);
    CreateDynamicObject(19325, 1101.17, -1526.59, 23.35,   0.00, 0.00, 41.37);
    CreateDynamicObject(19129, 1076.61, -1514.26, 21.74,   0.00, 0.00, 41.76);
    CreateDynamicObject(19325, 1092.70, -1517.14, 23.35,   0.00, 0.00, 41.37);
    CreateDynamicObject(19129, 1089.84, -1529.10, 21.74,   0.00, 0.00, 41.76);
    CreateDynamicObject(2780, 1093.60, -1533.03, 19.69,   0.00, 0.00, 0.00);
    CreateDynamicObject(2780, 1088.02, -1520.30, 19.99,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1101.72, -1452.68, 15.90,   0.00, 0.00, 359.80);
    CreateDynamicObject(19325, 1116.93, -1523.37, 16.10,   0.00, 0.00, 69.49);
    CreateDynamicObject(1951, 1094.39, -1479.58, 15.77,   0.00, 0.00, 0.00);
    CreateDynamicObject(1544, 1093.41, -1479.02, 15.57,   0.00, 0.00, 0.00);
    CreateDynamicObject(1543, 1092.33, -1478.54, 15.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(18034, 1091.27, -1502.84, 17.67,   0.00, 0.00, 20.79);
    CreateDynamicObject(19325, 1139.31, -1523.67, 16.35,   0.00, 0.00, 290.49);
    CreateDynamicObject(16501, 1091.77, -1499.29, 16.77,   0.00, 0.00, 19.00);
    CreateDynamicObject(16501, 1147.43, -1530.34, 13.64,   0.00, 0.00, 289.91);
    CreateDynamicObject(16501, 1085.14, -1501.59, 16.82,   0.00, 0.00, 18.43);
    CreateDynamicObject(16501, 1088.83, -1501.65, 15.76,   0.00, 91.00, 109.13);
    CreateDynamicObject(351, 1090.34, -1502.59, 15.92,   0.00, 0.00, 26.46);
    CreateDynamicObject(358, 1088.61, -1503.20, 16.01,   0.00, 0.00, 22.18);
    CreateDynamicObject(19325, 1089.95, -1503.61, 18.37,   91.00, 0.00, 109.74);
    CreateDynamicObject(19325, 1090.98, -1503.22, 18.37,   91.00, 0.00, 109.74);
    CreateDynamicObject(19325, 1088.21, -1504.20, 18.37,   91.00, 0.00, 109.74);
    CreateDynamicObject(16501, 1089.52, -1503.71, 13.64,   0.00, 0.00, 289.10);
    CreateDynamicObject(16501, 1140.83, -1532.72, 13.64,   0.00, 0.00, 289.91);
    CreateDynamicObject(19325, 1096.45, -1478.56, 15.90,   0.00, 0.00, 343.18);
    CreateDynamicObject(19325, 1148.60, -1529.85, 17.02,   0.00, 0.00, 289.77);
    CreateDynamicObject(10444, 1143.26, -1531.91, 8.79,   91.00, 0.00, 19.34);
    CreateDynamicObject(19325, 1142.37, -1532.09, 17.02,   0.00, 0.00, 289.77);
    CreateDynamicObject(2748, 1143.18, -1524.12, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1141.74, -1524.66, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1140.27, -1525.19, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1138.81, -1525.72, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1144.12, -1526.74, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1142.63, -1527.29, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1141.18, -1527.82, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1139.73, -1528.36, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1144.82, -1528.92, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1143.36, -1529.47, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1141.88, -1530.00, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1140.47, -1530.53, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1146.74, -1522.75, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1147.70, -1525.39, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(2748, 1148.33, -1527.67, 15.18,   0.00, 0.00, 20.19);
    CreateDynamicObject(5992, 1143.00, -1522.45, 14.74,   4.00, -180.00, 27.00);
    CreateDynamicObject(1608, 1144.43, -1534.24, 18.09,   0.00, 0.00, 291.01);
    CreateDynamicObject(2614, 1087.47, -1511.30, 17.24,   0.00, 0.00, 111.76);
    CreateDynamicObject(2626, 1170.49, -1531.61, 22.00,   0.00, 0.00, 225.36);
    CreateDynamicObject(2625, 1169.10, -1535.11, 23.06,   0.00, 0.00, 228.36);
    CreateDynamicObject(2624, 1174.84, -1525.27, 23.36,   0.00, 0.00, 317.27);
    CreateDynamicObject(2624, 1164.92, -1537.34, 23.36,   0.00, 0.00, 227.91);
    CreateDynamicObject(19325, 1162.96, -1517.35, 23.82,   0.00, 0.00, 318.10);
    CreateDynamicObject(19325, 1154.82, -1526.48, 23.82,   0.00, 0.00, 318.10);
    CreateDynamicObject(2374, 1155.72, -1532.50, 22.93,   0.00, 0.00, 135.00);
    CreateDynamicObject(19325, 1162.99, -1441.59, 23.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1094.51, -1458.05, 23.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1096.95, -1501.92, 16.10,   0.00, 0.00, 20.56);
    CreateDynamicObject(19325, 1094.36, -1444.58, 23.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(19325, 1163.02, -1428.56, 23.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(18003, 1114.25, -1532.49, 15.16,   0.00, 0.00, 159.63);
    CreateDynamicObject(18001, 1112.10, -1534.67, 16.89,   0.00, 0.00, 159.76);
    CreateDynamicObject(18003, 1107.81, -1530.12, 15.16,   0.00, 0.00, 159.63);
    CreateDynamicObject(2596, 1106.86, -1528.58, 17.71,   0.00, 0.00, 102.88);
    CreateDynamicObject(2596, 1117.17, -1532.88, 17.71,   0.00, 0.00, 209.43);
    CreateDynamicObject(2818, 1111.11, -1522.60, 14.79,   0.00, 0.00, 340.49);
    CreateDynamicObject(18005, 1118.51, -1529.66, 15.26,   0.00, 0.00, 249.94);
    CreateDynamicObject(18963, 1110.23, -1533.65, 15.78,   0.00, 0.00, 62.88);
    CreateDynamicObject(18640, 1112.38, -1534.45, 15.65,   215.00, 98.00, 343.10);
    CreateDynamicObject(362, 1086.32, -1503.83, 15.97,   0.00, 0.00, 5.96);
    CreateDynamicObject(3498, 1143.06, -1522.51, 13.53,   0.00, 0.00, 0.00);
    CreateDynamicObject(3498, 1145.73, -1521.40, 13.53,   0.00, 0.00, 0.00);
    CreateDynamicObject(2185, 1168.66, -1507.14, 14.79,   0.00, 0.00, 248.69);
    CreateDynamicObject(2184, 1167.62, -1508.82, 14.84,   0.00, 0.00, 271.51);
    CreateDynamicObject(2184, 1169.25, -1506.42, 14.84,   0.00, 0.00, 230.21);
    CreateDynamicObject(2184, 1172.08, -1505.71, 14.84,   0.00, 0.00, 188.37);
    CreateDynamicObject(2184, 1167.98, -1511.67, 14.84,   0.00, 0.00, 313.86);
    CreateDynamicObject(1025, 1158.46, -1509.99, 17.30,   0.00, 0.00, 68.46);
    CreateDynamicObject(1073, 1160.10, -1510.61, 17.28,   0.00, 0.00, 67.84);
    CreateDynamicObject(1074, 1161.71, -1511.19, 17.22,   0.00, 0.00, 68.99);
    CreateDynamicObject(1075, 1163.40, -1511.80, 17.21,   0.00, 0.00, 72.03);
    CreateDynamicObject(1076, 1165.31, -1512.64, 17.19,   0.00, 0.00, 68.29);
    CreateDynamicObject(1077, 1167.22, -1513.28, 17.13,   0.00, 0.00, 68.54);
    CreateDynamicObject(1078, 1158.40, -1509.91, 15.63,   0.00, 0.00, 62.40);
    CreateDynamicObject(1079, 1160.04, -1510.61, 15.52,   0.00, 0.00, 69.57);
    CreateDynamicObject(1080, 1161.77, -1511.09, 15.57,   0.00, 0.00, 68.49);
    CreateDynamicObject(1081, 1163.42, -1511.81, 15.56,   0.00, 0.00, 69.90);
    CreateDynamicObject(1082, 1165.38, -1512.59, 15.65,   0.00, 0.00, 64.64);
    CreateDynamicObject(1083, 1167.29, -1513.39, 15.70,   0.00, 0.00, 68.44);
    CreateDynamicObject(1084, 1169.13, -1512.43, 17.97,   0.00, 0.00, 159.87);
    CreateDynamicObject(1085, 1169.02, -1512.40, 16.36,   0.00, 0.00, 159.71);
    CreateDynamicObject(1096, 1169.73, -1510.74, 17.92,   0.00, 0.00, 158.98);
    CreateDynamicObject(1097, 1169.73, -1510.76, 16.34,   0.00, 0.00, 158.64);
    CreateDynamicObject(1138, 1170.23, -1508.36, 17.93,   0.00, 0.00, 245.62);
    CreateDynamicObject(1139, 1170.39, -1508.46, 16.34,   0.00, 0.00, 68.22);
    CreateDynamicObject(18647, 1163.14, -1499.60, 17.63,   0.00, 0.00, 67.02);
    CreateDynamicObject(18648, 1163.15, -1499.62, 15.89,   0.00, 0.00, 68.82);
    CreateDynamicObject(18649, 1167.16, -1501.19, 17.63,   0.00, 0.00, 68.73);
    CreateDynamicObject(18650, 1167.30, -1501.20, 15.73,   0.00, 0.00, 68.11);
    CreateDynamicObject(18651, 1170.87, -1502.59, 17.57,   0.00, 0.00, 68.73);
    CreateDynamicObject(18652, 1171.09, -1502.69, 15.82,   0.00, 0.00, 69.57);
    CreateDynamicObject(18702, 1225.51, -1460.58, 41.92,   0.00, 0.00, 0.00);
    CreateDynamicObject(2771, 1166.76, -1471.66, 16.01,   0.00, 0.00, 286.56);
    CreateDynamicObject(18648, 1157.82, -1506.85, 18.25,   0.00, 0.00, 339.54);
    CreateDynamicObject(16151, 1091.71, -1479.44, 14.97,   0.00, 0.00, 251.75);
    CreateDynamicObject(14565, 1088.15, -1470.18, 17.80,   0.00, 0.00, 342.47);
    CreateDynamicObject(1848, 1091.09, -1464.56, 13.84,   0.00, 0.00, 252.54);
    CreateDynamicObject(1848, 1089.58, -1469.31, 13.84,   0.00, 0.00, 252.54);
    CreateDynamicObject(1848, 1088.09, -1474.06, 13.84,   0.00, 0.00, 252.54);
    CreateDynamicObject(1848, 1086.60, -1478.81, 13.84,   0.00, 0.00, 252.54);
    CreateDynamicObject(1951, 1087.88, -1475.68, 16.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1543, 1090.23, -1477.96, 15.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1544, 1088.68, -1472.70, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1544, 1093.04, -1478.85, 15.57,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1091.03, -1478.41, 15.77,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1088.93, -1477.74, 15.77,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1089.17, -1471.28, 16.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1544, 1089.64, -1477.96, 15.57,   0.00, 0.00, 0.00);
    CreateDynamicObject(1544, 1089.60, -1470.35, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1544, 1089.72, -1469.78, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1543, 1090.67, -1466.74, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1543, 1087.62, -1476.41, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1087.96, -1474.99, 16.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1089.13, -1471.73, 16.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1088.35, -1473.75, 16.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1951, 1090.15, -1468.30, 16.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1543, 1088.58, -1473.26, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1543, 1091.05, -1465.58, 15.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1665, 1088.84, -1472.24, 15.86,   0.00, 0.00, 0.00);
    CreateDynamicObject(1665, 1089.22, -1471.03, 15.86,   0.00, 0.00, 0.00);
    CreateDynamicObject(1665, 1090.22, -1467.85, 15.86,   0.00, 0.00, 0.00);
    CreateDynamicObject(17579, 1097.52, -1520.73, 29.37,   0.00, 0.00, 131.52);
    CreateDynamicObject(1574, 1100.91, -1456.06, 14.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(1574, 1101.01, -1459.95, 14.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(2677, 1088.96, -1459.87, 15.08,   0.00, 0.00, 258.79);
    CreateDynamicObject(18001, 1104.48, -1531.85, 16.89,   0.00, 0.00, 159.86);
    CreateDynamicObject(2524, 1111.65, -1533.97, 14.78,   0.00, 0.00, 157.44);
    CreateDynamicObject(2524, 1109.20, -1533.08, 14.78,   0.00, 0.00, 157.44);
    CreateDynamicObject(2524, 1106.68, -1532.19, 14.78,   0.00, 0.00, 157.44);
    CreateDynamicObject(2524, 1114.15, -1534.94, 14.78,   0.00, 0.00, 157.44);
    CreateDynamicObject(2665, 1077.65, -1451.52, 25.28,   0.00, 0.00, 90.09);
    CreateDynamicObject(2638, 1089.26, -1460.56, 22.25,   0.00, 0.00, 270.42);
    CreateDynamicObject(2764, 1082.02, -1442.72, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2639, 1091.20, -1441.51, 22.24,   0.00, 0.00, 179.35);
    CreateDynamicObject(2639, 1082.87, -1441.48, 22.24,   0.00, 0.00, 180.30);
    CreateDynamicObject(2639, 1088.21, -1442.29, 22.24,   0.00, 0.00, 270.00);
    CreateDynamicObject(2788, 1091.94, -1442.80, 22.24,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1080.82, -1443.64, 22.24,   0.00, 0.00, 251.61);
    CreateDynamicObject(2788, 1082.19, -1443.63, 22.24,   0.00, 0.00, 274.29);
    CreateDynamicObject(2639, 1087.36, -1442.36, 22.24,   0.00, 0.00, 91.21);
    CreateDynamicObject(2764, 1089.85, -1443.02, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2639, 1077.85, -1460.52, 22.24,   0.00, 0.00, 271.96);
    CreateDynamicObject(2639, 1080.78, -1441.48, 22.24,   0.00, 0.00, 180.30);
    CreateDynamicObject(2764, 1085.98, -1442.35, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1081.03, -1442.71, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1088.90, -1449.31, 22.24,   0.00, 0.00, 179.98);
    CreateDynamicObject(2788, 1089.67, -1450.00, 22.24,   0.00, 0.00, 274.29);
    CreateDynamicObject(2415, 1078.24, -1449.24, 21.66,   0.00, 0.00, 90.11);
    CreateDynamicObject(2453, 1081.58, -1455.06, 23.15,   0.00, 0.00, 358.05);
    CreateDynamicObject(2453, 1081.83, -1448.50, 23.15,   0.00, 0.00, 358.05);
    CreateDynamicObject(2682, 1081.32, -1456.28, 22.95,   0.00, 0.00, 0.00);
    CreateDynamicObject(2682, 1081.86, -1449.06, 22.95,   0.00, 0.00, 0.00);
    CreateDynamicObject(2682, 1081.52, -1442.69, 22.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2682, 1085.88, -1442.47, 22.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2682, 1090.38, -1443.26, 22.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2646, 1094.50, -1448.28, 23.48,   0.00, 0.00, 90.06);
    CreateDynamicObject(2646, 1077.61, -1451.60, 23.68,   0.00, 0.00, 90.06);
    CreateDynamicObject(2646, 1094.56, -1454.30, 23.48,   0.00, 0.00, 90.06);
    CreateDynamicObject(2645, 1077.59, -1449.21, 24.40,   0.00, 0.00, 90.34);
    CreateDynamicObject(2645, 1077.61, -1453.89, 24.40,   0.00, 0.00, 90.34);
    CreateDynamicObject(2764, 1090.86, -1443.00, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1087.89, -1453.53, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1085.71, -1446.61, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1090.95, -1443.78, 22.24,   0.00, 0.00, 274.29);
    CreateDynamicObject(2788, 1090.57, -1449.25, 22.24,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1089.72, -1443.73, 22.24,   0.00, 0.00, 251.61);
    CreateDynamicObject(2788, 1088.05, -1452.57, 22.24,   0.00, 0.00, 59.86);
    CreateDynamicObject(2220, 1089.58, -1443.24, 22.60,   -25.00, 25.00, 344.11);
    CreateDynamicObject(2764, 1089.49, -1449.09, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2220, 1081.83, -1451.20, 22.84,   -25.00, 25.00, 164.87);
    CreateDynamicObject(2219, 1090.12, -1442.66, 22.59,   -25.00, 25.00, 251.64);
    CreateDynamicObject(2218, 1091.08, -1443.17, 22.60,   -25.00, 25.00, 343.94);
    CreateDynamicObject(2218, 1079.65, -1460.37, 22.60,   -25.00, 25.00, 343.94);
    CreateDynamicObject(2220, 1089.22, -1449.33, 22.60,   -25.00, 25.00, 344.11);
    CreateDynamicObject(2219, 1087.35, -1460.14, 22.59,   -25.00, 25.00, 163.53);
    CreateDynamicObject(2788, 1087.14, -1453.57, 22.24,   0.00, 0.00, 179.98);
    CreateDynamicObject(2788, 1085.83, -1447.37, 22.24,   0.00, 0.00, 274.29);
    CreateDynamicObject(2788, 1085.67, -1445.67, 22.24,   0.00, 0.00, 99.06);
    CreateDynamicObject(2788, 1086.63, -1446.49, 22.24,   0.00, 0.00, 0.00);
    CreateDynamicObject(2682, 1083.28, -1460.33, 22.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1088.00, -1454.39, 22.24,   0.00, 0.00, 274.29);
    CreateDynamicObject(2788, 1084.83, -1446.52, 22.24,   0.00, 0.00, 179.98);
    CreateDynamicObject(2788, 1089.64, -1448.27, 22.24,   0.00, 0.00, 123.75);
    CreateDynamicObject(2788, 1092.17, -1460.24, 22.24,   0.00, 0.00, 5.20);
    CreateDynamicObject(2218, 1086.16, -1442.63, 22.60,   -25.00, 25.00, 343.94);
    CreateDynamicObject(2220, 1079.24, -1459.84, 22.60,   -25.00, 25.00, 165.65);
    CreateDynamicObject(2638, 1084.16, -1442.34, 22.25,   0.00, 0.00, 270.42);
    CreateDynamicObject(2764, 1091.32, -1460.33, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2682, 1085.69, -1446.65, 22.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1088.76, -1453.37, 22.24,   0.00, 0.00, 39.68);
    CreateDynamicObject(2764, 1087.26, -1460.35, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2638, 1085.38, -1460.53, 22.25,   0.00, 0.00, 270.42);
    CreateDynamicObject(2638, 1081.40, -1460.52, 22.25,   0.00, 0.00, 270.42);
    CreateDynamicObject(2764, 1079.44, -1460.10, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2639, 1089.10, -1441.50, 22.24,   0.00, 0.00, 179.35);
    CreateDynamicObject(2639, 1078.67, -1461.40, 22.24,   0.00, 0.00, 0.32);
    CreateDynamicObject(2639, 1080.09, -1461.38, 22.24,   0.00, 0.00, 0.32);
    CreateDynamicObject(2764, 1083.25, -1460.31, 22.12,   0.00, 0.00, 0.00);
    CreateDynamicObject(2218, 1088.07, -1453.71, 22.60,   -25.00, 25.00, 343.94);
    CreateDynamicObject(2220, 1087.63, -1453.72, 22.60,   -25.00, 25.00, 344.11);
    CreateDynamicObject(2219, 1089.78, -1448.84, 22.59,   -25.00, 25.00, 163.53);
    CreateDynamicObject(2682, 1091.38, -1460.26, 22.71,   0.00, 0.00, 0.00);
    CreateDynamicObject(2665, 1090.27, -1441.30, 23.85,   0.00, 0.00, 0.00);
    CreateDynamicObject(2666, 1086.35, -1441.28, 24.42,   0.00, 0.00, 0.00);
    CreateDynamicObject(2667, 1080.69, -1441.30, 24.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(2668, 1089.44, -1461.63, 24.46,   0.00, 0.00, 0.00);
    CreateDynamicObject(2665, 1085.29, -1461.58, 24.32,   0.00, 0.00, 179.96);
    CreateDynamicObject(2666, 1080.41, -1461.61, 24.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(2667, 1077.70, -1458.23, 24.29,   0.00, 0.00, 89.22);
    CreateDynamicObject(1582, 1081.66, -1453.13, 22.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(1582, 1081.84, -1449.82, 22.75,   0.00, 0.00, 0.00);
    CreateDynamicObject(2425, 1086.06, -1453.12, 15.75,   0.00, 0.00, 0.28);
    CreateDynamicObject(2425, 1081.46, -1453.91, 22.75,   0.00, 0.00, 90.89);
    CreateDynamicObject(2425, 1081.62, -1450.38, 22.75,   0.00, 0.00, 90.89);
    CreateDynamicObject(2771, 1084.90, -1453.27, 15.95,   0.00, 0.00, 0.00);
    CreateDynamicObject(2439, 1081.74, -1448.45, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2440, 1081.46, -1456.22, 21.73,   0.00, 0.00, 355.05);
    CreateDynamicObject(2439, 1080.77, -1447.40, 21.74,   0.00, 0.00, 179.03);
    CreateDynamicObject(2439, 1080.51, -1456.15, 21.74,   0.00, 0.00, 358.39);
    CreateDynamicObject(2439, 1078.78, -1447.35, 21.74,   0.00, 0.00, 179.03);
    CreateDynamicObject(2439, 1077.78, -1447.32, 21.74,   0.00, 0.00, 179.03);
    CreateDynamicObject(2439, 1081.72, -1449.44, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2439, 1081.69, -1450.44, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2439, 1081.66, -1451.37, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2439, 1081.63, -1452.31, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2439, 1081.61, -1453.30, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2439, 1081.58, -1454.28, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2439, 1081.55, -1455.26, 21.74,   0.00, 0.00, 88.61);
    CreateDynamicObject(2440, 1081.76, -1447.46, 21.73,   0.00, 0.00, 88.50);
    CreateDynamicObject(2439, 1079.77, -1447.38, 21.74,   0.00, 0.00, 179.03);
    CreateDynamicObject(2439, 1079.53, -1456.13, 21.74,   0.00, 0.00, 358.39);
    CreateDynamicObject(2439, 1078.55, -1456.10, 21.74,   0.00, 0.00, 358.39);
    CreateDynamicObject(2439, 1077.60, -1456.06, 21.74,   0.00, 0.00, 358.39);
    CreateDynamicObject(2417, 1077.99, -1448.37, 21.63,   0.00, 0.00, 90.03);
    CreateDynamicObject(2451, 1078.18, -1453.26, 21.61,   0.00, 0.00, 90.15);
    CreateDynamicObject(2419, 1078.16, -1455.11, 21.73,   0.00, 0.00, 89.27);
    CreateDynamicObject(2426, 1078.11, -1450.70, 22.63,   0.00, 0.00, 89.42);
    CreateDynamicObject(2417, 1078.06, -1450.69, 21.63,   0.00, 0.00, 90.03);
    CreateDynamicObject(2426, 1077.54, -1450.69, 22.63,   0.00, 0.00, 89.42);
    CreateDynamicObject(5811, 1167.07, -1466.28, 16.17,   356.86, 0.00, 287.69);
    CreateDynamicObject(1698, 1155.34, -1440.37, 14.65,   0.00, 0.00, 0.00);
    CreateDynamicObject(1698, 1155.78, -1436.21, 14.65,   0.00, 0.00, 0.00);
    CreateDynamicObject(1698, 1155.78, -1433.55, 14.65,   0.00, 0.00, 0.00);
    CreateDynamicObject(1748, 1160.52, -1454.77, 15.72,   0.00, 0.00, 270.64);
    CreateDynamicObject(1748, 1160.55, -1455.79, 15.72,   0.00, 0.00, 270.64);
    CreateDynamicObject(2543, 1168.62, -1440.64, 14.79,   0.00, 0.00, 0.30);
    CreateDynamicObject(1984, 1180.76, -1441.83, 14.56,   0.00, 0.00, 88.57);
    CreateDynamicObject(1885, 1156.21, -1438.17, 14.68,   0.00, 0.00, 0.00);
    CreateDynamicObject(1885, 1156.20, -1438.18, 15.18,   0.00, 0.00, 0.00);
    CreateDynamicObject(912, 1112.41, -1534.30, 15.04,   0.00, 0.00, 160.58);
    CreateDynamicObject(912, 1110.16, -1533.57, 15.04,   0.00, 0.00, 160.58);
    CreateDynamicObject(2290, 1115.12, -1523.44, 14.79,   0.00, 0.00, 340.05);
    CreateDynamicObject(2290, 1117.81, -1525.62, 14.79,   0.00, 0.00, 249.98);
    CreateDynamicObject(2311, 1114.71, -1525.51, 14.77,   0.00, 0.00, 339.00);
    CreateDynamicObject(18047, 1163.89, -1452.19, 15.31,   0.00, 0.00, 0.00);
    CreateDynamicObject(18766, 1163.31, -1429.83, 23.24,   0.00, 0.00, 270.54);
    CreateDynamicObject(18766, 1163.36, -1439.82, 23.24,   0.00, 0.00, 270.54);

	// Box
	TD_BX[0] = TextDrawCreate(1086.000488, -26.375560, "usebox");
	TextDrawLetterSize(TD_BX[0], 0.000000, 15.096668);
	TextDrawTextSize(TD_BX[0], -69.555564, 0.000000);
	TextDrawAlignment(TD_BX[0], 1);
	TextDrawColor(TD_BX[0], 0);
	TextDrawUseBox(TD_BX[0], true);
	TextDrawBoxColor(TD_BX[0], 255);
	TextDrawSetShadow(TD_BX[0], 0);
	TextDrawSetOutline(TD_BX[0], 0);
	TextDrawFont(TD_BX[0], 0);

	TD_BX[1] = TextDrawCreate(1076.778076, 336.508941, "usebox");
	TextDrawLetterSize(TD_BX[1], 0.000000, 15.096668);
	TextDrawTextSize(TD_BX[1], -79.777755, 0.000000);
	TextDrawAlignment(TD_BX[1], 1);
	TextDrawColor(TD_BX[1], 0);
	TextDrawUseBox(TD_BX[1], true);
	TextDrawBoxColor(TD_BX[1], 255);
	TextDrawSetShadow(TD_BX[1], 0);
	TextDrawSetOutline(TD_BX[1], 0);
	TextDrawFont(TD_BX[1], 0);
   
    TD_ST[0] = TextDrawCreate(637.666442, 5.486647, "_");
	TextDrawLetterSize(TD_ST[0], 0.000000, 48.472476);
	TextDrawTextSize(TD_ST[0], 0.666631, 0.000000);
	TextDrawAlignment(TD_ST[0], 1);
	TextDrawColor(TD_ST[0], 0);
	TextDrawUseBox(TD_ST[0], false);
	TextDrawBoxColor(TD_ST[0], 102);
	TextDrawSetShadow(TD_ST[0], 0);
	TextDrawSetOutline(TD_ST[0], 0);
	TextDrawFont(TD_ST[0], 0);

	TD_ST[1] = TextDrawCreate(637.666442, 5.486647, "usebox");
	TextDrawLetterSize(TD_ST[1], 0.000000, 48.472476);
	TextDrawTextSize(TD_ST[1], 0.666631, 0.000000);
	TextDrawAlignment(TD_ST[1], 1);
	TextDrawColor(TD_ST[1], 0);
	TextDrawUseBox(TD_ST[1], true);
	TextDrawBoxColor(TD_ST[1], 102);
	TextDrawSetShadow(TD_ST[1], 0);
	TextDrawSetOutline(TD_ST[1], 0);
	TextDrawFont(TD_ST[1], 0);

	TD_ST[2] = TextDrawCreate(216.444549, 41.315570, "new clan~n~__roleplay");
	TextDrawLetterSize(TD_ST[2], 0.882889, 3.033599);
	TextDrawAlignment(TD_ST[2], 1);
	TextDrawColor(TD_ST[2], -1);
	TextDrawSetShadow(TD_ST[2], 0);
	TextDrawSetOutline(TD_ST[2], 8);
	TextDrawBackgroundColor(TD_ST[2], 51);
	TextDrawFont(TD_ST[2], 3);
	TextDrawSetProportional(TD_ST[2], 1);


	TD_ST[4] = TextDrawCreate(448.666717, 171.740020, "usebox");
	TextDrawLetterSize(TD_ST[4], 0.000000, 11.741603);
	TextDrawTextSize(TD_ST[4], 191.777908, 0.000000);
	TextDrawAlignment(TD_ST[4], 1);
	TextDrawColor(TD_ST[4], 0);
	TextDrawUseBox(TD_ST[4], true);
	TextDrawBoxColor(TD_ST[4], 102);
	TextDrawSetShadow(TD_ST[4], 0);
	TextDrawSetOutline(TD_ST[4], 0);
	TextDrawFont(TD_ST[4], 0);

	TD_ST[5] = TextDrawCreate(197.333511, 184.675552, "~<~");
	TextDrawLetterSize(TD_ST[5], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[5], 2);
	TextDrawColor(TD_ST[5], -1);
	TextDrawSetShadow(TD_ST[5], 0);
	TextDrawSetOutline(TD_ST[5], 1);
	TextDrawBackgroundColor(TD_ST[5], 51);
	TextDrawFont(TD_ST[5], 1);
	TextDrawSetProportional(TD_ST[5], 1);
	TextDrawTextSize(TD_ST[5], 50, 50);
	TextDrawSetSelectable(TD_ST[5], true);

	TD_ST[6] = TextDrawCreate(197.333511, 240.435302, "~<~");
	TextDrawLetterSize(TD_ST[6], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[6], 2);
	TextDrawColor(TD_ST[6], -1);
	TextDrawSetShadow(TD_ST[6], 0);
	TextDrawSetOutline(TD_ST[6], 1);
	TextDrawBackgroundColor(TD_ST[6], 51);
	TextDrawFont(TD_ST[6], 1);
	TextDrawSetProportional(TD_ST[6], 1);
	TextDrawTextSize(TD_ST[6], 50, 50);
	TextDrawSetSelectable(TD_ST[6], true);

	TD_ST[7] = TextDrawCreate(425.555999, 240.435302, "~>~");
	TextDrawLetterSize(TD_ST[7], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[7], 2);
	TextDrawColor(TD_ST[7], -1);
	TextDrawSetShadow(TD_ST[7], 0);
	TextDrawSetOutline(TD_ST[7], 1);
	TextDrawBackgroundColor(TD_ST[7], 51);
	TextDrawFont(TD_ST[7], 1);
	TextDrawSetProportional(TD_ST[7], 1);
	TextDrawTextSize(TD_ST[7], 50, 50);
	TextDrawSetSelectable(TD_ST[7], true);

	TD_ST[8] = TextDrawCreate(425.555999, 184.675552, "~>~");
	TextDrawLetterSize(TD_ST[8], 0.039778, 2.077867);
	TextDrawAlignment(TD_ST[8], 2);
	TextDrawColor(TD_ST[8], -1);
	TextDrawSetShadow(TD_ST[8], 0);
	TextDrawSetOutline(TD_ST[8], 1);
	TextDrawBackgroundColor(TD_ST[8], 51);
	TextDrawFont(TD_ST[8], 1);
	TextDrawSetProportional(TD_ST[8], 1);
	TextDrawTextSize(TD_ST[8], 50, 50);
	TextDrawSetSelectable(TD_ST[8], true);

	TD_ST[9] = TextDrawCreate(319.111389, 372.835571, "continuar");
	TextDrawLetterSize(TD_ST[9], 0.564222, 2.067912);
	TextDrawTextSize(TD_ST[9], 21.333337, 125.440010);
	TextDrawAlignment(TD_ST[9], 2);
	TextDrawColor(TD_ST[9], -1);
	TextDrawUseBox(TD_ST[9], true);
	TextDrawBoxColor(TD_ST[9], -1061109760);
	TextDrawSetShadow(TD_ST[9], 0);
	TextDrawSetOutline(TD_ST[9], 1);
	TextDrawBackgroundColor(TD_ST[9], 51);
	TextDrawFont(TD_ST[9], 3);
	TextDrawSetProportional(TD_ST[9], 1);
	TextDrawSetSelectable(TD_ST[9], true);

	TD_PLAYERDATA[0] = TextDrawCreate(316.889038, 319.075714, simbolos("¿Son correctos?"));//parte1
	TextDrawLetterSize(TD_PLAYERDATA[0], 0.449999, 1.600000);
	TextDrawAlignment(TD_PLAYERDATA[0], 2);
	TextDrawColor(TD_PLAYERDATA[0], -1);
	TextDrawSetShadow(TD_PLAYERDATA[0], 0);
	TextDrawSetOutline(TD_PLAYERDATA[0], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[0], 51);
	TextDrawFont(TD_PLAYERDATA[0], 1);
	TextDrawSetProportional(TD_PLAYERDATA[0], 1);

	TD_PLAYERDATA[1] = TextDrawCreate(319.111480, 153.813400, "tus datos");
	TextDrawLetterSize(TD_PLAYERDATA[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_PLAYERDATA[1], 48.888877, 252.373260);
	TextDrawAlignment(TD_PLAYERDATA[1], 2);
	TextDrawColor(TD_PLAYERDATA[1], -1507073);
	TextDrawUseBox(TD_PLAYERDATA[1], true);
	TextDrawBoxColor(TD_PLAYERDATA[1], 1162697215);
	TextDrawSetShadow(TD_PLAYERDATA[1], 0);
	TextDrawSetOutline(TD_PLAYERDATA[1], 0);
	TextDrawBackgroundColor(TD_PLAYERDATA[1], 51);
	TextDrawFont(TD_PLAYERDATA[1], 3);
	TextDrawSetProportional(TD_PLAYERDATA[1], 1);

	TD_PLAYERDATA[2] = TextDrawCreate(388.111968, 367.862304, "no");
	TextDrawLetterSize(TD_PLAYERDATA[2], 0.564221, 2.067912);
	TextDrawTextSize(TD_PLAYERDATA[2], 51.111133, 23.893312);
	TextDrawAlignment(TD_PLAYERDATA[2], 2);
	TextDrawColor(TD_PLAYERDATA[2], -1);
	TextDrawUseBox(TD_PLAYERDATA[2], true);
	TextDrawBoxColor(TD_PLAYERDATA[2], 1);
	TextDrawSetShadow(TD_PLAYERDATA[2], 0);
	TextDrawSetOutline(TD_PLAYERDATA[2], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[2], 51);
	TextDrawFont(TD_PLAYERDATA[2], 3);
	TextDrawSetProportional(TD_PLAYERDATA[2], 1);
	TextDrawSetSelectable(TD_PLAYERDATA[2], true);

	TD_PLAYERDATA[3] = TextDrawCreate(255.555541, 367.857849, simbolos("sí"));
	TextDrawLetterSize(TD_PLAYERDATA[3], 0.564221, 2.067912);
	TextDrawTextSize(TD_PLAYERDATA[3], 51.111133, 23.893312);
	TextDrawAlignment(TD_PLAYERDATA[3], 2);
	TextDrawColor(TD_PLAYERDATA[3], -1);
	TextDrawUseBox(TD_PLAYERDATA[3], true);
	TextDrawBoxColor(TD_PLAYERDATA[3], 16711680);
	TextDrawSetShadow(TD_PLAYERDATA[3], 0);
	TextDrawSetOutline(TD_PLAYERDATA[3], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[3], 51);
	TextDrawFont(TD_PLAYERDATA[3], 3);
	TextDrawSetProportional(TD_PLAYERDATA[3], 1);
	TextDrawSetSelectable(TD_PLAYERDATA[3], true);


	TD_PLAYERDATA[4] = TextDrawCreate(449.111145, 172.237686, "usebox");
	TextDrawLetterSize(TD_PLAYERDATA[4], 0.000000, 11.902604);
	TextDrawTextSize(TD_PLAYERDATA[4], 189.555603, 0.000000);
	TextDrawAlignment(TD_PLAYERDATA[4], 1);
	TextDrawColor(TD_PLAYERDATA[4], 0);
	TextDrawUseBox(TD_PLAYERDATA[4], true);
	TextDrawBoxColor(TD_PLAYERDATA[4], 102);
	TextDrawSetShadow(TD_PLAYERDATA[4], 0);
	TextDrawSetOutline(TD_PLAYERDATA[4], 0);
	TextDrawFont(TD_PLAYERDATA[4], 0);

	TD_PLAYERDATA[5] = TextDrawCreate(204.000045, 187.662200, "Nombre~n~~n~Edad~n~~n~Genero");
	TextDrawLetterSize(TD_PLAYERDATA[5], 0.449999, 1.600000);
	TextDrawAlignment(TD_PLAYERDATA[5], 1);
	TextDrawColor(TD_PLAYERDATA[5], -1);
	TextDrawSetShadow(TD_PLAYERDATA[5], 0);
	TextDrawSetOutline(TD_PLAYERDATA[5], 1);
	TextDrawBackgroundColor(TD_PLAYERDATA[5], 51);
	TextDrawFont(TD_PLAYERDATA[5], 1);
	TextDrawSetProportional(TD_PLAYERDATA[5], 1);
	

	//ropa
	TD_Ropa[0] = TextDrawCreate(619.510986, 354.416778, "usebox");
	TextDrawLetterSize(TD_Ropa[0], 0.000000, 7.425183);
	TextDrawTextSize(TD_Ropa[0], 498.380767, 0.000000);
	TextDrawAlignment(TD_Ropa[0], 1);
	TextDrawColor(TD_Ropa[0], 0);
	TextDrawUseBox(TD_Ropa[0], true);
	TextDrawBoxColor(TD_Ropa[0], 102);
	TextDrawSetShadow(TD_Ropa[0], 0);
	TextDrawSetOutline(TD_Ropa[0], 0);
	TextDrawFont(TD_Ropa[0], 0);

	TD_Ropa[1] = TextDrawCreate(504.128875, 342.999877, "Catalogo");
	TextDrawLetterSize(TD_Ropa[1], 0.494978, 1.769167);
	TextDrawAlignment(TD_Ropa[1], 1);
	TextDrawColor(TD_Ropa[1], -1);
	TextDrawSetShadow(TD_Ropa[1], 0);
	TextDrawSetOutline(TD_Ropa[1], 1);
	TextDrawBackgroundColor(TD_Ropa[1], 255);
	TextDrawFont(TD_Ropa[1], 0);
	TextDrawSetProportional(TD_Ropa[1], 1);

	TD_Ropa[2] = TextDrawCreate(521.464111, 373.333190, "<<");
	TextDrawLetterSize(TD_Ropa[2], 0.449999, 1.600000);
	TextDrawTextSize(TD_Ropa[2], 10.811127, 28.583333);
	TextDrawAlignment(TD_Ropa[2], 2);
	TextDrawColor(TD_Ropa[2], -1);
	TextDrawUseBox(TD_Ropa[2], true);
	TextDrawBoxColor(TD_Ropa[2], 7143423);
	TextDrawSetShadow(TD_Ropa[2], 0);
	TextDrawSetOutline(TD_Ropa[2], 0);
	TextDrawBackgroundColor(TD_Ropa[2], 51);
	TextDrawFont(TD_Ropa[2], 1);
	TextDrawSetProportional(TD_Ropa[2], 1);
	TextDrawSetSelectable(TD_Ropa[2], true);

	TD_Ropa[3] = TextDrawCreate(558.540222, 373.333190, "$$");
	TextDrawLetterSize(TD_Ropa[3], 0.449999, 1.600000);
	TextDrawTextSize(TD_Ropa[3], 10.811127, 28.583333);
	TextDrawAlignment(TD_Ropa[3], 2);
	TextDrawColor(TD_Ropa[3], -1);
	TextDrawUseBox(TD_Ropa[3], true);
	TextDrawBoxColor(TD_Ropa[3], 7143423);
	TextDrawSetShadow(TD_Ropa[3], 0);
	TextDrawSetOutline(TD_Ropa[3], 0);
	TextDrawBackgroundColor(TD_Ropa[3], 51);
	TextDrawFont(TD_Ropa[3], 1);
	TextDrawSetProportional(TD_Ropa[3], 1);
	TextDrawSetSelectable(TD_Ropa[3], true);

	TD_Ropa[4] = TextDrawCreate(595.616760, 373.333190, ">>");
	TextDrawLetterSize(TD_Ropa[4], 0.449999, 1.600000);
	TextDrawTextSize(TD_Ropa[4], 10.811127, 28.583333);
	TextDrawAlignment(TD_Ropa[4], 2);
	TextDrawColor(TD_Ropa[4], -1);
	TextDrawUseBox(TD_Ropa[4], true);
	TextDrawBoxColor(TD_Ropa[4], 7143423);
	TextDrawSetShadow(TD_Ropa[4], 0);
	TextDrawSetOutline(TD_Ropa[4], 0);
	TextDrawBackgroundColor(TD_Ropa[4], 51);
	TextDrawFont(TD_Ropa[4], 1);
	TextDrawSetProportional(TD_Ropa[4], 1);
	TextDrawSetSelectable(TD_Ropa[4], true);

	TD_Ropa[5] = TextDrawCreate(506.003143, 399.000244, "precio:");
	TextDrawLetterSize(TD_Ropa[5], 0.449999, 1.600000);
	TextDrawAlignment(TD_Ropa[5], 1);
	TextDrawColor(TD_Ropa[5], 7077887);
	TextDrawSetShadow(TD_Ropa[5], 0);
	TextDrawSetOutline(TD_Ropa[5], 1);
	TextDrawBackgroundColor(TD_Ropa[5], 255);
	TextDrawFont(TD_Ropa[5], 3);
	TextDrawSetProportional(TD_Ropa[5], 1);
	
		//big logo
	TD_EY[0] = TextDrawCreate(129.333374, 70.142257, "e__treme~n~___Roleplay");
	TextDrawLetterSize(TD_EY[0], 1.964222, 7.279643);
	TextDrawAlignment(TD_EY[0], 1);
	TextDrawColor(TD_EY[0], 0x00CCFFFF);
	TextDrawSetShadow(TD_EY[0], 0);
	TextDrawSetOutline(TD_EY[0], 3);
	TextDrawBackgroundColor(TD_EY[0], 255);
	TextDrawFont(TD_EY[0], 3);
	TextDrawSetProportional(TD_EY[0], 1);

	TD_EY[1] = TextDrawCreate(173.000076, 15.888900, "X");
	TextDrawLetterSize(TD_EY[1], 3.931333, 13.850309);
	TextDrawAlignment(TD_EY[1], 1);
	TextDrawColor(TD_EY[1], 0x00CCFFFF);
	TextDrawSetShadow(TD_EY[1], 0);
	TextDrawSetOutline(TD_EY[1], 3);
	TextDrawBackgroundColor(TD_EY[1], 255);
	TextDrawFont(TD_EY[1], 3);
	TextDrawSetProportional(TD_EY[1], 1);

	TD_EY[2] = TextDrawCreate(173.000076, 15.888900, "_");
	TextDrawLetterSize(TD_EY[2], 3.931333, 13.850309);
	TextDrawAlignment(TD_EY[2], 1);
	TextDrawColor(TD_EY[2], -1);
	TextDrawSetShadow(TD_EY[2], 0);
	TextDrawSetOutline(TD_EY[2], 3);
	TextDrawBackgroundColor(TD_EY[2], 255);
	TextDrawFont(TD_EY[2], 3);
	TextDrawSetProportional(TD_EY[2], 1);

	//NotificationTD
	TD_NN = TextDrawCreate(158.444503, 36.344409, "usebox");
	TextDrawLetterSize(TD_NN, 0.000000, 7.737652);
	TextDrawTextSize(TD_NN, 9.999992, 0.000000);
	TextDrawAlignment(TD_NN, 1);
	TextDrawColor(TD_NN, 0);
	TextDrawUseBox(TD_NN, true);
	TextDrawBoxColor(TD_NN, 160);
	TextDrawSetShadow(TD_NN, 0);
	TextDrawSetOutline(TD_NN, 0);
	TextDrawFont(TD_NN, 0);
	
	//VehiclesTD
	TD_GrottiCatalogo[0] = TextDrawCreate(610.608764, 340.416931, "usebox");
	TextDrawLetterSize(TD_GrottiCatalogo[0], 0.000000, 7.921101);
	TextDrawTextSize(TD_GrottiCatalogo[0], 496.975219, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[0], 1);
	TextDrawColor(TD_GrottiCatalogo[0], 0);
	TextDrawUseBox(TD_GrottiCatalogo[0], true);
	TextDrawBoxColor(TD_GrottiCatalogo[0], 102);
	TextDrawSetShadow(TD_GrottiCatalogo[0], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[0], 0);
	TextDrawFont(TD_GrottiCatalogo[0], 0);

/*	TD_GrottiCatalogo[1] = TextDrawCreate(504.254547, 349.934082, simbolos("Vel.Máxima~n~~n~Aceleración"));
	TextDrawLetterSize(TD_GrottiCatalogo[1], 0.298667, 1.232499);
	TextDrawAlignment(TD_GrottiCatalogo[1], 1);
	TextDrawColor(TD_GrottiCatalogo[1], -1);
	TextDrawSetShadow(TD_GrottiCatalogo[1], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[1], 0);
	TextDrawBackgroundColor(TD_GrottiCatalogo[1], 51);
	TextDrawFont(TD_GrottiCatalogo[1], 1);
	TextDrawSetProportional(TD_GrottiCatalogo[1], 1);
*/
	TD_GrottiCatalogo[2] = TextDrawCreate(603.112792, 364.916656, "maximocaja");
	TextDrawLetterSize(TD_GrottiCatalogo[2], 0.000000, 0.349445);
	TextDrawTextSize(TD_GrottiCatalogo[2], 502.597320, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[2], 1);
	TextDrawColor(TD_GrottiCatalogo[2], 0);
	TextDrawUseBox(TD_GrottiCatalogo[2], true);
	TextDrawBoxColor(TD_GrottiCatalogo[2], 255);
	TextDrawSetShadow(TD_GrottiCatalogo[2], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[2], 0);
	TextDrawFont(TD_GrottiCatalogo[2], 0);

	TD_GrottiCatalogo[3] = TextDrawCreate(601.770141, 367.083343, "maximobarraatras");
	TextDrawLetterSize(TD_GrottiCatalogo[3], 0.000000, -0.165925);
	TextDrawTextSize(TD_GrottiCatalogo[3], 504.002929, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[3], 1);
	TextDrawColor(TD_GrottiCatalogo[3], 0);
	TextDrawUseBox(TD_GrottiCatalogo[3], true);
	TextDrawBoxColor(TD_GrottiCatalogo[3], -1061109505);
	TextDrawSetShadow(TD_GrottiCatalogo[3], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[3], 0);
	TextDrawFont(TD_GrottiCatalogo[3], 0);

	TD_GrottiCatalogo[4] = TextDrawCreate(604.112915, 386.916839, "acelecaja");
	TextDrawLetterSize(TD_GrottiCatalogo[4], 0.000000, 0.349445);
	TextDrawTextSize(TD_GrottiCatalogo[4], 502.597259, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[4], 1);
	TextDrawColor(TD_GrottiCatalogo[4], 0);
	TextDrawUseBox(TD_GrottiCatalogo[4], true);
	TextDrawBoxColor(TD_GrottiCatalogo[4], 255);
	TextDrawSetShadow(TD_GrottiCatalogo[4], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[4], 0);
	TextDrawFont(TD_GrottiCatalogo[4], 0);

	TD_GrottiCatalogo[5] = TextDrawCreate(601.770141, 389.666687, "acelebarraatras");
	TextDrawLetterSize(TD_GrottiCatalogo[5], 0.000000, -0.165925);
	TextDrawTextSize(TD_GrottiCatalogo[5], 504.002929, 0.000000);
	TextDrawAlignment(TD_GrottiCatalogo[5], 1);
	TextDrawColor(TD_GrottiCatalogo[5], 0);
	TextDrawUseBox(TD_GrottiCatalogo[5], true);
	TextDrawBoxColor(TD_GrottiCatalogo[5], -1061109505);
	TextDrawSetShadow(TD_GrottiCatalogo[5], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[5], 0);
	TextDrawFont(TD_GrottiCatalogo[5], 0);

	TD_GrottiCatalogo[6] = TextDrawCreate(315.657257, 399.583374, "COMPRAR");
	TextDrawLetterSize(TD_GrottiCatalogo[6], 0.449999, 1.600000);
	TextDrawAlignment(TD_GrottiCatalogo[6], 2);
	TextDrawColor(TD_GrottiCatalogo[6], -5963521);
	TextDrawSetShadow(TD_GrottiCatalogo[6], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[6], 1);
	TextDrawBackgroundColor(TD_GrottiCatalogo[6], 255);
	TextDrawFont(TD_GrottiCatalogo[6], 3);
	TextDrawSetProportional(TD_GrottiCatalogo[6], 1);
	TextDrawTextSize(TD_GrottiCatalogo[6], 20.0, 70.0);
	TextDrawSetSelectable(TD_GrottiCatalogo[6], true);

	TD_GrottiCatalogo[7] = TextDrawCreate(354.670501, 396.466552, "~>~");
	TextDrawLetterSize(TD_GrottiCatalogo[7], 0.465929, 2.049168);
	TextDrawAlignment(TD_GrottiCatalogo[7], 2);
	TextDrawColor(TD_GrottiCatalogo[7], -1);
	TextDrawSetShadow(TD_GrottiCatalogo[7], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[7], 1);
	TextDrawBackgroundColor(TD_GrottiCatalogo[7], 51);
	TextDrawFont(TD_GrottiCatalogo[7], 1);
	TextDrawSetProportional(TD_GrottiCatalogo[7], 1);
    TextDrawTextSize(TD_GrottiCatalogo[7], 40.0, 40.0);
	TextDrawSetSelectable(TD_GrottiCatalogo[7], true);

	TD_GrottiCatalogo[8] = TextDrawCreate(262.333953, 396.466552, "~<~");
	TextDrawLetterSize(TD_GrottiCatalogo[8], 0.465929, 2.049168);
	TextDrawAlignment(TD_GrottiCatalogo[8], 2);
	TextDrawColor(TD_GrottiCatalogo[8], -1);
	TextDrawSetShadow(TD_GrottiCatalogo[8], 0);
	TextDrawSetOutline(TD_GrottiCatalogo[8], 1);
	TextDrawBackgroundColor(TD_GrottiCatalogo[8], 51);
	TextDrawFont(TD_GrottiCatalogo[8], 1);
	TextDrawSetProportional(TD_GrottiCatalogo[8], 1);
	TextDrawTextSize(TD_GrottiCatalogo[8], 40.0, 40.0);
	TextDrawSetSelectable(TD_GrottiCatalogo[8], true);
	
	 //Bank LS
 	Bank[0] = TextDrawCreate(1033.555541, -37.326667, "usebox");
	TextDrawLetterSize(Bank[0], 0.000000, 80.116912);
	TextDrawTextSize(Bank[0], -57.555557, 0.000000);
	TextDrawAlignment(Bank[0], 1);
	TextDrawColor(Bank[0], 0);
	TextDrawUseBox(Bank[0], true);
	TextDrawBoxColor(Bank[0], -1061109505);
	TextDrawSetShadow(Bank[0], 0);
	TextDrawSetOutline(Bank[0], 0);
	TextDrawFont(Bank[0], 0);

	Bank[1] = TextDrawCreate(139.555541, 26.880022, "ld_spac:dark");
	TextDrawLetterSize(Bank[1], 0.000000, 0.000000);
	TextDrawTextSize(Bank[1], 17.333339, 19.413330);
	TextDrawAlignment(Bank[1], 1);
	TextDrawColor(Bank[1], -1);
	TextDrawSetShadow(Bank[1], 0);
	TextDrawSetOutline(Bank[1], 0);
	TextDrawBackgroundColor(Bank[1], -16776961);
	TextDrawFont(Bank[1], 4);

	Bank[2] = TextDrawCreate(160.888946, 24.391101, "BANCO");
	TextDrawLetterSize(Bank[2], 0.459777, 1.659733);
	TextDrawAlignment(Bank[2], 1);
	TextDrawColor(Bank[2], 255);
	TextDrawSetShadow(Bank[2], 0);
	TextDrawSetOutline(Bank[2], 0);
	TextDrawBackgroundColor(Bank[2], 255);
	TextDrawFont(Bank[2], 1);
	TextDrawSetProportional(Bank[2], 1);

	Bank[3] = TextDrawCreate(161.333312, 37.831119, "Los Santos");
	TextDrawLetterSize(Bank[3], 0.281555, 1.127111);
	TextDrawAlignment(Bank[3], 1);
	TextDrawColor(Bank[3], 255);
	TextDrawSetShadow(Bank[3], 0);
	TextDrawSetOutline(Bank[3], 0);
	TextDrawBackgroundColor(Bank[3], 51);
	TextDrawFont(Bank[3], 1);
	TextDrawSetProportional(Bank[3], 1);

	Bank[4] = TextDrawCreate(886.444396, 69.695564, "usebox");
	TextDrawLetterSize(Bank[4], 0.000000, 2.908025);
	TextDrawTextSize(Bank[4], -46.000007, 0.000000);
	TextDrawAlignment(Bank[4], 1);
	TextDrawColor(Bank[4], 0);
	TextDrawUseBox(Bank[4], true);
	TextDrawBoxColor(Bank[4], 255);
	TextDrawSetShadow(Bank[4], 0);
	TextDrawSetOutline(Bank[4], 0);
	TextDrawFont(Bank[4], 0);

	Bank[5] = TextDrawCreate(888.777770, 70.197784, "usebox");
	TextDrawLetterSize(Bank[5], 0.000000, 2.596913);
	TextDrawTextSize(Bank[5], -46.444450, 0.000000);
	TextDrawAlignment(Bank[5], 1);
	TextDrawColor(Bank[5], 0);
	TextDrawUseBox(Bank[5], true);
	TextDrawBoxColor(Bank[5], -1088603905);
	TextDrawSetShadow(Bank[5], 0);
	TextDrawSetOutline(Bank[5], 0);
	TextDrawFont(Bank[5], 0);

	Bank[6] = TextDrawCreate(1236.222045, 99.064437, "usebox");
	TextDrawLetterSize(Bank[6], 0.000000, 70.465545);
	TextDrawTextSize(Bank[6], -47.777774, 0.000000);
	TextDrawAlignment(Bank[6], 1);
	TextDrawColor(Bank[6], 0);
	TextDrawUseBox(Bank[6], true);
	TextDrawBoxColor(Bank[6], 102);
	TextDrawSetShadow(Bank[6], 0);
	TextDrawSetOutline(Bank[6], 0);
	TextDrawFont(Bank[6], 0);

	Bank[7] = TextDrawCreate(518.888793, 100.059989, "usebox");
	TextDrawLetterSize(Bank[7], 0.000000, 49.272464);
	TextDrawTextSize(Bank[7], 121.555618, 0.000000);
	TextDrawAlignment(Bank[7], 1);
	TextDrawColor(Bank[7], 0);
	TextDrawUseBox(Bank[7], true);
	TextDrawBoxColor(Bank[7], -1);
	TextDrawSetShadow(Bank[7], 0);
	TextDrawSetOutline(Bank[7], 0);
	TextDrawFont(Bank[7], 0);

	Bank[8] = TextDrawCreate(506.666778, 115.002258, "usebox");
	TextDrawLetterSize(Bank[8], 0.000000, 22.552461);
	TextDrawTextSize(Bank[8], 134.000091, 0.000000);
	TextDrawAlignment(Bank[8], 1);
	TextDrawColor(Bank[8], 0);
	TextDrawUseBox(Bank[8], true);
	TextDrawBoxColor(Bank[8], -1088603905);
	TextDrawSetShadow(Bank[8], 0);
	TextDrawSetOutline(Bank[8], 0);
	TextDrawFont(Bank[8], 0);

	Bank[9] = TextDrawCreate(409.999664, 190.157760, "usebox");
	TextDrawLetterSize(Bank[9], 0.000000, 8.200865);
	TextDrawTextSize(Bank[9], 227.333374, 0.000000);
	TextDrawAlignment(Bank[9], 1);
	TextDrawColor(Bank[9], 0);
	TextDrawUseBox(Bank[9], true);
	TextDrawBoxColor(Bank[9], -1);
	TextDrawSetShadow(Bank[9], 0);
	TextDrawSetOutline(Bank[9], 0);
	TextDrawFont(Bank[9], 0);

	Bank[10] = TextDrawCreate(163.111129, 139.377822, "Por favor, introduzca su numero de identificacion personal");
	TextDrawLetterSize(Bank[10], 0.317111, 1.286398);
	TextDrawAlignment(Bank[10], 1);
	TextDrawColor(Bank[10], -1);
	TextDrawSetShadow(Bank[10], 0);
	TextDrawSetOutline(Bank[10], 0);
	TextDrawBackgroundColor(Bank[10], 51);
	TextDrawFont(Bank[10], 1);
	TextDrawSetProportional(Bank[10], 1);

	Bank[11] = TextDrawCreate(238.777770, 212.057785, "ld_spac:dark");
	TextDrawLetterSize(Bank[11], 0.000000, 0.000000);
	TextDrawTextSize(Bank[11], 26.222229, 31.857786);
	TextDrawAlignment(Bank[11], 1);
	TextDrawColor(Bank[11], -1);
	TextDrawSetShadow(Bank[11], 0);
	TextDrawSetOutline(Bank[11], 0);
	TextDrawBackgroundColor(Bank[11], -16776961);
	TextDrawFont(Bank[11], 4);

	Bank[12] = TextDrawCreate(278.889068, 212.062240, "ld_spac:dark");
	TextDrawLetterSize(Bank[12], 0.000000, 0.000000);
	TextDrawTextSize(Bank[12], 26.222229, 31.857786);
	TextDrawAlignment(Bank[12], 1);
	TextDrawColor(Bank[12], -1);
	TextDrawSetShadow(Bank[12], 0);
	TextDrawSetOutline(Bank[12], 0);
	TextDrawBackgroundColor(Bank[12], -16776961);
	TextDrawFont(Bank[12], 4);

	Bank[13] = TextDrawCreate(321.666809, 213.062240, "ld_spac:dark");
	TextDrawLetterSize(Bank[13], 0.000000, 0.000000);
	TextDrawTextSize(Bank[13], 26.222229, 31.857786);
	TextDrawAlignment(Bank[13], 1);
	TextDrawColor(Bank[13], -1);
	TextDrawSetShadow(Bank[13], 0);
	TextDrawSetOutline(Bank[13], 0);
	TextDrawBackgroundColor(Bank[13], -16776961);
	TextDrawFont(Bank[13], 4);

	Bank[14] = TextDrawCreate(364.000122, 212.568908, "ld_spac:dark");
	TextDrawLetterSize(Bank[14], 0.000000, 0.000000);
	TextDrawTextSize(Bank[14], 26.222229, 31.857786);
	TextDrawAlignment(Bank[14], 1);
	TextDrawColor(Bank[14], -1);
	TextDrawSetShadow(Bank[14], 0);
	TextDrawSetOutline(Bank[14], 0);
	TextDrawBackgroundColor(Bank[14], -16776961);
	TextDrawFont(Bank[14], 4);

	Bank[15] = TextDrawCreate(259.111083, 117.475532, "Elija un servicio");
	TextDrawLetterSize(Bank[15], 0.449999, 1.600000);
	TextDrawAlignment(Bank[15], 1);
	TextDrawColor(Bank[15], 255);
	TextDrawSetShadow(Bank[15], 0);
	TextDrawSetOutline(Bank[15], 0);
	TextDrawBackgroundColor(Bank[15], 51);
	TextDrawFont(Bank[15], 1);
	TextDrawSetProportional(Bank[15], 1);

	Bank[16] = TextDrawCreate(315.0, 145.357772, "usebox");
	TextDrawLetterSize(Bank[16], 0.000000, 4.381600);
	TextDrawTextSize(Bank[16], 50.0, 175.0);
	TextDrawAlignment(Bank[16], 2);
	TextDrawColor(Bank[16], 0);
	TextDrawUseBox(Bank[16], true);
	TextDrawBoxColor(Bank[16], -1205847297);
	TextDrawSetShadow(Bank[16], 0);
	TextDrawSetOutline(Bank[16], 0);
	TextDrawFont(Bank[16], 0);
	TextDrawSetSelectable(Bank[16], true);

	Bank[17] = TextDrawCreate(315.0, 201.113067, "usebox");
	TextDrawLetterSize(Bank[17], 0.000000, 4.381600);
	TextDrawTextSize(Bank[17], 50.0, 175.0);
	TextDrawAlignment(Bank[17], 2);
	TextDrawColor(Bank[17], 0);
	TextDrawUseBox(Bank[17], true);
	TextDrawBoxColor(Bank[17], -1205847297);
	TextDrawSetShadow(Bank[17], 0);
	TextDrawSetOutline(Bank[17], 0);
	TextDrawFont(Bank[17], 0);
	TextDrawSetSelectable(Bank[17], true);

	Bank[18] = TextDrawCreate(315.0, 257.863952, "usebox");
	TextDrawLetterSize(Bank[18], 0.000000, 4.381600);
	TextDrawTextSize(Bank[18], 50.0, 175.0);
	TextDrawAlignment(Bank[18], 2);
	TextDrawColor(Bank[18], 0);
	TextDrawUseBox(Bank[18], true);
	TextDrawBoxColor(Bank[18], -1205847297);
	TextDrawSetShadow(Bank[18], 0);
	TextDrawSetOutline(Bank[18], 0);
	TextDrawFont(Bank[18], 0);
	TextDrawSetSelectable(Bank[18], true);

	Bank[19] = TextDrawCreate(314.666900, 155.306671, "Retirar~n~~n~~n~~n~Depositar~n~~n~~n~~n~Salir");
	TextDrawLetterSize(Bank[19], 0.449999, 1.600000);
	TextDrawAlignment(Bank[19], 2);
	TextDrawColor(Bank[19], -1);
	TextDrawSetShadow(Bank[19], 0);
	TextDrawSetOutline(Bank[19], 0);
	TextDrawBackgroundColor(Bank[19], 51);
	TextDrawFont(Bank[19], 1);
	TextDrawSetProportional(Bank[19], 1);
	
 /* iPhone S */

	TD_iPhone[0] = TextDrawCreate(507.000183, 195.792556, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[0], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[0], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[0], 1);
	TextDrawColor(TD_iPhone[0], -2139062017);
	TextDrawSetShadow(TD_iPhone[0], 0);
	TextDrawSetOutline(TD_iPhone[0], 0);
	TextDrawFont(TD_iPhone[0], 4);

	TD_iPhone[1] = TextDrawCreate(506.666839, 404.199951, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[1], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[1], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[1], 1);
	TextDrawColor(TD_iPhone[1], -2139062017);
	TextDrawSetShadow(TD_iPhone[1], 0);
	TextDrawSetOutline(TD_iPhone[1], 0);
	TextDrawFont(TD_iPhone[1], 4);

	TD_iPhone[2] = TextDrawCreate(578.666870, 404.199951, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[2], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[2], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[2], 1);
	TextDrawColor(TD_iPhone[2], -2139062017);
	TextDrawSetShadow(TD_iPhone[2], 0);
	TextDrawSetOutline(TD_iPhone[2], 0);
	TextDrawFont(TD_iPhone[2], 4);

	TD_iPhone[3] = TextDrawCreate(578.666870, 195.792541, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[3], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[3], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[3], 1);
	TextDrawColor(TD_iPhone[3], -2139062017);
	TextDrawSetShadow(TD_iPhone[3], 0);
	TextDrawSetOutline(TD_iPhone[3], 0);
	TextDrawFont(TD_iPhone[3], 4);

	TD_iPhone[4] = TextDrawCreate(507.000061, 202.844375, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[4], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[4], 87.666656, 194.962951);
	TextDrawAlignment(TD_iPhone[4], 1);
	TextDrawColor(TD_iPhone[4], -2139062017);
	TextDrawSetShadow(TD_iPhone[4], 0);
	TextDrawSetOutline(TD_iPhone[4], 0);
	TextDrawFont(TD_iPhone[4], 4);

	TD_iPhone[5] = TextDrawCreate(513.666564, 195.548095, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[5], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[5], 74.666641, 208.651809);
	TextDrawAlignment(TD_iPhone[5], 1);
	TextDrawColor(TD_iPhone[5], -2139062017);
	TextDrawSetShadow(TD_iPhone[5], 0);
	TextDrawSetOutline(TD_iPhone[5], 0);
	TextDrawFont(TD_iPhone[5], 4);

	TD_iPhone[6] = TextDrawCreate(507.333496, 196.377746, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[6], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[6], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[6], 1);
	TextDrawColor(TD_iPhone[6], 255);
	TextDrawSetShadow(TD_iPhone[6], 0);
	TextDrawSetOutline(TD_iPhone[6], 0);
	TextDrawFont(TD_iPhone[6], 4);

	TD_iPhone[7] = TextDrawCreate(507.333496, 403.540649, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[7], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[7], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[7], 1);
	TextDrawColor(TD_iPhone[7], 255);
	TextDrawSetShadow(TD_iPhone[7], 0);
	TextDrawSetOutline(TD_iPhone[7], 0);
	TextDrawFont(TD_iPhone[7], 4);

	TD_iPhone[8] = TextDrawCreate(578.000244, 403.540649, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[8], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[8], 16.000000, -16.000000);
	TextDrawAlignment(TD_iPhone[8], 1);
	TextDrawColor(TD_iPhone[8], 255);
	TextDrawSetShadow(TD_iPhone[8], 0);
	TextDrawSetOutline(TD_iPhone[8], 0);
	TextDrawFont(TD_iPhone[8], 4);

	TD_iPhone[9] = TextDrawCreate(578.000305, 196.377746, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[9], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[9], 16.000000, 16.000000);
	TextDrawAlignment(TD_iPhone[9], 1);
	TextDrawColor(TD_iPhone[9], 255);
	TextDrawSetShadow(TD_iPhone[9], 0);
	TextDrawSetOutline(TD_iPhone[9], 0);
	TextDrawFont(TD_iPhone[9], 4);

	TD_iPhone[10] = TextDrawCreate(514.666809, 196.622222, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[10], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[10], 72.000022, 206.992568);
	TextDrawAlignment(TD_iPhone[10], 1);
	TextDrawColor(TD_iPhone[10], 255);
	TextDrawSetShadow(TD_iPhone[10], 0);
	TextDrawSetOutline(TD_iPhone[10], 0);
	TextDrawFont(TD_iPhone[10], 4);

	TD_iPhone[11] = TextDrawCreate(507.666656, 204.674133, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[11], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[11], 86.333419, 191.229660);
	TextDrawAlignment(TD_iPhone[11], 1);
	TextDrawColor(TD_iPhone[11], 255);
	TextDrawSetShadow(TD_iPhone[11], 0);
	TextDrawSetOutline(TD_iPhone[11], 0);
	TextDrawFont(TD_iPhone[11], 4);

	TD_iPhone[12] = TextDrawCreate(511.333435, 221.925933, "LD_otb:blue");
	TextDrawLetterSize(TD_iPhone[12], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[12], 78.666633, 155.140731);
	TextDrawAlignment(TD_iPhone[12], 1);
	TextDrawColor(TD_iPhone[12], -1768515841);
	TextDrawSetShadow(TD_iPhone[12], 0);
	TextDrawSetOutline(TD_iPhone[12], 0);
	TextDrawFont(TD_iPhone[12], 4);

	TD_iPhone[13] = TextDrawCreate(549.666809, 201.599945, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[13], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[13], 3.333292, 4.148138);
	TextDrawAlignment(TD_iPhone[13], 1);
	TextDrawColor(TD_iPhone[13], -2139062142);
	TextDrawSetShadow(TD_iPhone[13], 0);
	TextDrawSetOutline(TD_iPhone[13], 0);
	TextDrawFont(TD_iPhone[13], 4);

	TD_iPhone[14] = TextDrawCreate(544.999877, 209.896240, "ld_poke:cd1d");
	TextDrawLetterSize(TD_iPhone[14], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[14], 12.333331, 2.074084);
	TextDrawAlignment(TD_iPhone[14], 1);
	TextDrawColor(TD_iPhone[14], -2139062142);
	TextDrawSetShadow(TD_iPhone[14], 0);
	TextDrawSetOutline(TD_iPhone[14], 0);
	TextDrawFont(TD_iPhone[14], 4);

	TD_iPhone[15] = TextDrawCreate(541.000366, 210.066589, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[15], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[15], 1.333292, 1.244433);
	TextDrawAlignment(TD_iPhone[15], 1);
	TextDrawColor(TD_iPhone[15], -2139062142);
	TextDrawSetShadow(TD_iPhone[15], 0);
	TextDrawSetOutline(TD_iPhone[15], 0);
	TextDrawFont(TD_iPhone[15], 4);

	TD_iPhone[16] = TextDrawCreate(543.333618, 380.311004, "ld_pool:ball");
	TextDrawLetterSize(TD_iPhone[16], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[16], 16.333269, 18.251844);
	TextDrawAlignment(TD_iPhone[16], 1);
	TextDrawColor(TD_iPhone[16], -1061109690);
	TextDrawSetShadow(TD_iPhone[16], 0);
	TextDrawSetOutline(TD_iPhone[16], 0);
	TextDrawFont(TD_iPhone[16], 4);

	TD_iPhone[17] = TextDrawCreate(511.333496, 221.925994, "ld_plan:tvbase");
	TextDrawLetterSize(TD_iPhone[17], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[17], 78.666702, 9.540740);
	TextDrawAlignment(TD_iPhone[17], 1);
	TextDrawColor(TD_iPhone[17], -1);
	TextDrawSetShadow(TD_iPhone[17], 0);
	TextDrawSetOutline(TD_iPhone[17], 0);
	TextDrawFont(TD_iPhone[17], 4);

	TD_iPhone[18] = TextDrawCreate(550.666687, 221.925918, "4G________________00:00");
	TextDrawLetterSize(TD_iPhone[18], 0.194333, 0.865778);
	TextDrawAlignment(TD_iPhone[18], 2);
	TextDrawColor(TD_iPhone[18], -1);
	TextDrawSetShadow(TD_iPhone[18], 0);
	TextDrawSetOutline(TD_iPhone[18], 0);
	TextDrawBackgroundColor(TD_iPhone[18], 51);
	TextDrawFont(TD_iPhone[18], 1);
	TextDrawSetProportional(TD_iPhone[18], 1);

	TD_iPhone[19] = TextDrawCreate(549.999450, 233.125991, "00:00");
	TextDrawLetterSize(TD_iPhone[19], 0.460333, 2.666073);
	TextDrawAlignment(TD_iPhone[19], 2);
	TextDrawColor(TD_iPhone[19], -1);
	TextDrawSetShadow(TD_iPhone[19], 0);
	TextDrawSetOutline(TD_iPhone[19], 0);
	TextDrawBackgroundColor(TD_iPhone[19], 51);
	TextDrawFont(TD_iPhone[19], 2);
	TextDrawSetProportional(TD_iPhone[19], 1);

	TD_iPhone[20] = TextDrawCreate(549.332702, 254.866653, "1 de enero");
	TextDrawLetterSize(TD_iPhone[20], 0.124999, 0.803554);
	TextDrawAlignment(TD_iPhone[20], 2);
	TextDrawColor(TD_iPhone[20], -1);
	TextDrawSetShadow(TD_iPhone[20], 0);
	TextDrawSetOutline(TD_iPhone[20], 0);
	TextDrawBackgroundColor(TD_iPhone[20], 51);
	TextDrawFont(TD_iPhone[20], 1);
	TextDrawSetProportional(TD_iPhone[20], 1);

	TD_iPhone[21] = TextDrawCreate(549.999572, 342.148040, "Presiona ~g~Y ~w~para~n~desbloquear");
	TextDrawLetterSize(TD_iPhone[21], 0.257666, 1.276443);
	TextDrawAlignment(TD_iPhone[21], 2);
	TextDrawColor(TD_iPhone[21], -1);
	TextDrawSetShadow(TD_iPhone[21], 0);
	TextDrawSetOutline(TD_iPhone[21], 0);
	TextDrawBackgroundColor(TD_iPhone[21], 51);
	TextDrawFont(TD_iPhone[21], 1);
	TextDrawSetProportional(TD_iPhone[21], 1);

	TD_iPhone[22] = TextDrawCreate(511.333282, 231.466659, "ld_plan:tvbase");
	TextDrawLetterSize(TD_iPhone[22], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[22], 78.666664, 16.177804);
	TextDrawAlignment(TD_iPhone[22], 1);
	TextDrawColor(TD_iPhone[22], 8388863);
	TextDrawSetShadow(TD_iPhone[22], 0);
	TextDrawSetOutline(TD_iPhone[22], 0);
	TextDrawFont(TD_iPhone[22], 4);

	TD_iPhone[23] = TextDrawCreate(511.333282, 231.466705, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[23], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[23], 78.666656, 1.659255);
	TextDrawAlignment(TD_iPhone[23], 1);
	TextDrawColor(TD_iPhone[23], 16777215);
	TextDrawSetShadow(TD_iPhone[23], 0);
	TextDrawSetOutline(TD_iPhone[23], 0);
	TextDrawFont(TD_iPhone[23], 4);

	TD_iPhone[24] = TextDrawCreate(511.333282, 247.814788, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone[24], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[24], 78.666656, 1.659255);
	TextDrawAlignment(TD_iPhone[24], 1);
	TextDrawColor(TD_iPhone[24], 16777215);
	TextDrawSetShadow(TD_iPhone[24], 0);
	TextDrawSetOutline(TD_iPhone[24], 0);
	TextDrawFont(TD_iPhone[24], 4);

	TD_iPhone[25] = TextDrawCreate(511.666900, 344.296508, "ld_plan:tvbase");
	TextDrawLetterSize(TD_iPhone[25], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone[25], 78.333389, 33.185237);
	TextDrawAlignment(TD_iPhone[25], 1);
	TextDrawColor(TD_iPhone[25], -1);
	TextDrawSetShadow(TD_iPhone[25], 0);
	TextDrawSetOutline(TD_iPhone[25], 0);
	TextDrawFont(TD_iPhone[25], 4);

	//Clock
	TD_iPhone_Clock[0] = TextDrawCreate(549.633178, 252.551788, "00:00");
	TextDrawLetterSize(TD_iPhone_Clock[0], 0.499667, 2.861037);
	TextDrawAlignment(TD_iPhone_Clock[0], 2);
	TextDrawColor(TD_iPhone_Clock[0], -1);
	TextDrawSetShadow(TD_iPhone_Clock[0], 0);
	TextDrawSetOutline(TD_iPhone_Clock[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Clock[0], 51);
	TextDrawFont(TD_iPhone_Clock[0], 2);
	TextDrawSetProportional(TD_iPhone_Clock[0], 1);

	TD_iPhone_Clock[1] = TextDrawCreate(549.066528, 277.052032, "1 de enero de 1999");
	TextDrawLetterSize(TD_iPhone_Clock[1], 0.124999, 0.803554);
	TextDrawAlignment(TD_iPhone_Clock[1], 2);
	TextDrawColor(TD_iPhone_Clock[1], -1);
	TextDrawSetShadow(TD_iPhone_Clock[1], 0);
	TextDrawSetOutline(TD_iPhone_Clock[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Clock[1], 51);
	TextDrawFont(TD_iPhone_Clock[1], 1);
	TextDrawSetProportional(TD_iPhone_Clock[1], 1);

	//Galeria
	TD_iPhone_Gallery = TextDrawCreate(542.000122, 340.977722, "~<~_Sin titulo.png_~>~");
	TextDrawLetterSize(TD_iPhone_Gallery, 0.202333, 1.069037);
	TextDrawAlignment(TD_iPhone_Gallery, 2);
	TextDrawColor(TD_iPhone_Gallery, -1);
	TextDrawSetShadow(TD_iPhone_Gallery, 0);
	TextDrawSetOutline(TD_iPhone_Gallery, 1);
	TextDrawBackgroundColor(TD_iPhone_Gallery, 255);
	TextDrawFont(TD_iPhone_Gallery, 1);
	TextDrawSetProportional(TD_iPhone_Gallery, 1);

	//Clima
	TD_iPhone_Time[0] = TextDrawCreate(582.999938, 335.585296, "Soleado");
	TextDrawLetterSize(TD_iPhone_Time[0], 0.236999, 0.998518);
	TextDrawAlignment(TD_iPhone_Time[0], 3);
	TextDrawColor(TD_iPhone_Time[0], -1);
	TextDrawSetShadow(TD_iPhone_Time[0], 0);
	TextDrawSetOutline(TD_iPhone_Time[0], 1);
	TextDrawBackgroundColor(TD_iPhone_Time[0], 255);
	TextDrawFont(TD_iPhone_Time[0], 1);
	TextDrawSetProportional(TD_iPhone_Time[0], 1);

	TD_iPhone_Time[1] = TextDrawCreate(518.333312, 258.844390, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone_Time[1], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Time[1], 64.666687, 72.177795);
	TextDrawAlignment(TD_iPhone_Time[1], 1);
	TextDrawColor(TD_iPhone_Time[1], -1);
	TextDrawSetShadow(TD_iPhone_Time[1], 0);
	TextDrawSetOutline(TD_iPhone_Time[1], 0);
	TextDrawFont(TD_iPhone_Time[1], 4);

	TD_iPhone_Time[2] = TextDrawCreate(555.000000, 323.140777, "wheater.com");
	TextDrawLetterSize(TD_iPhone_Time[2], 0.127999, 0.687407);
	TextDrawAlignment(TD_iPhone_Time[2], 1);
	TextDrawColor(TD_iPhone_Time[2], 255);
	TextDrawSetShadow(TD_iPhone_Time[2], 0);
	TextDrawSetOutline(TD_iPhone_Time[2], 0);
	TextDrawBackgroundColor(TD_iPhone_Time[2], 51);
	TextDrawFont(TD_iPhone_Time[2], 1);
	TextDrawSetProportional(TD_iPhone_Time[2], 1);

	//GPS
	TD_iPhone_GPS = TextDrawCreate(547.666870, 253.036956, "Te encuentras en:");
	TextDrawLetterSize(TD_iPhone_GPS, 0.188666, 0.944592);
	TextDrawAlignment(TD_iPhone_GPS, 2);
	TextDrawColor(TD_iPhone_GPS, -1);
	TextDrawSetShadow(TD_iPhone_GPS, 0);
	TextDrawSetOutline(TD_iPhone_GPS, 1);
	TextDrawBackgroundColor(TD_iPhone_GPS, 255);
	TextDrawFont(TD_iPhone_GPS, 1);
	TextDrawSetProportional(TD_iPhone_GPS, 1);

	//Radio
	TD_iPhone_Radio[0] = TextDrawCreate(542.333251, 258.844360, "~<~ EMISORA ~>~");
	TextDrawLetterSize(TD_iPhone_Radio[0], 0.265333, 1.085629);
	TextDrawAlignment(TD_iPhone_Radio[0], 2);
	TextDrawColor(TD_iPhone_Radio[0], -1);
	TextDrawSetShadow(TD_iPhone_Radio[0], 0);
	TextDrawSetOutline(TD_iPhone_Radio[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Radio[0], 51);
	TextDrawFont(TD_iPhone_Radio[0], 1);
	TextDrawSetProportional(TD_iPhone_Radio[0], 1);

	TD_iPhone_Radio[1] = TextDrawCreate(550.999938, 353.592559, "Usa ~g~Y~w~ para apagar");
	TextDrawLetterSize(TD_iPhone_Radio[1], 0.227000, 1.006814);
	TextDrawAlignment(TD_iPhone_Radio[1], 2);
	TextDrawColor(TD_iPhone_Radio[1], -1);
	TextDrawSetShadow(TD_iPhone_Radio[1], 0);
	TextDrawSetOutline(TD_iPhone_Radio[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Radio[1], 51);
	TextDrawFont(TD_iPhone_Radio[1], 1);
	TextDrawSetProportional(TD_iPhone_Radio[1], 1);

	//Musica
	TD_iPhone_Music[0] = TextDrawCreate(542.333251, 258.844360, "~<~ MUSICA ~>~");
	TextDrawLetterSize(TD_iPhone_Music[0], 0.265333, 1.085629);
	TextDrawAlignment(TD_iPhone_Music[0], 2);
	TextDrawColor(TD_iPhone_Music[0], -1);
	TextDrawSetShadow(TD_iPhone_Music[0], 0);
	TextDrawSetOutline(TD_iPhone_Music[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Music[0], 51);
	TextDrawFont(TD_iPhone_Music[0], 1);
	TextDrawSetProportional(TD_iPhone_Music[0], 1);

	TD_iPhone_Music[1] = TextDrawCreate(550.999938, 353.592559, "Usa ~g~Y~w~ para parar");
	TextDrawLetterSize(TD_iPhone_Music[1], 0.227000, 1.006814);
	TextDrawAlignment(TD_iPhone_Music[1], 2);
	TextDrawColor(TD_iPhone_Music[1], -1);
	TextDrawSetShadow(TD_iPhone_Music[1], 0);
	TextDrawSetOutline(TD_iPhone_Music[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Music[1], 51);
	TextDrawFont(TD_iPhone_Music[1], 1);
	TextDrawSetProportional(TD_iPhone_Music[1], 1);

	//Mapa
	TD_iPhone_Map = TextDrawCreate(511.266815, 249.548080, "samaps:map");
	TextDrawLetterSize(TD_iPhone_Map, 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Map, 78.666656, 126.518585);
	TextDrawAlignment(TD_iPhone_Map, 1);
	TextDrawColor(TD_iPhone_Map, -1);
	TextDrawSetShadow(TD_iPhone_Map, 0);
	TextDrawSetOutline(TD_iPhone_Map, 0);
	TextDrawFont(TD_iPhone_Map, 4);

	//Internet
	TD_iPhone_Internet[0] = TextDrawCreate(550.666748, 326.459228, "Servicio en mantenimiento...~n~Disculpe las moletias");
	TextDrawLetterSize(TD_iPhone_Internet[0], 0.151000, 0.836741);
	TextDrawAlignment(TD_iPhone_Internet[0], 2);
	TextDrawColor(TD_iPhone_Internet[0], -1);
	TextDrawSetShadow(TD_iPhone_Internet[0], 0);
	TextDrawSetOutline(TD_iPhone_Internet[0], 1);
	TextDrawBackgroundColor(TD_iPhone_Internet[0], 255);
	TextDrawFont(TD_iPhone_Internet[0], 1);
	TextDrawSetProportional(TD_iPhone_Internet[0], 1);

	TD_iPhone_Internet[1] = TextDrawCreate(515.333374, 261.748046, "404");
	TextDrawLetterSize(TD_iPhone_Internet[1], 0.858666, 7.237334);
	TextDrawAlignment(TD_iPhone_Internet[1], 1);
	TextDrawColor(TD_iPhone_Internet[1], -1);
	TextDrawSetShadow(TD_iPhone_Internet[1], 0);
	TextDrawSetOutline(TD_iPhone_Internet[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Internet[1], 51);
	TextDrawFont(TD_iPhone_Internet[1], 2);
	TextDrawSetProportional(TD_iPhone_Internet[1], 1);



	/*Calculadora
	TD_iPhone_Calculator[0] = TextDrawCreate(522.900268, 354.604370, "0");
	TextDrawLetterSize(TD_iPhone_Calculator[0], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[0], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[0], 2);
	TextDrawColor(TD_iPhone_Calculator[0], -1);
	TextDrawUseBox(TD_iPhone_Calculator[0], true);
	TextDrawBoxColor(TD_iPhone_Calculator[0], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[0], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[0], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[0], 51);
	TextDrawFont(TD_iPhone_Calculator[0], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[0], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[0], true);

	TD_iPhone_Calculator[1] = TextDrawCreate(549.300354, 354.604370, "=");
	TextDrawLetterSize(TD_iPhone_Calculator[1], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[1], 51.000000, 29.037044);
	TextDrawAlignment(TD_iPhone_Calculator[1], 2);
	TextDrawColor(TD_iPhone_Calculator[1], -1);
	TextDrawUseBox(TD_iPhone_Calculator[1], true);
	TextDrawBoxColor(TD_iPhone_Calculator[1], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[1], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[1], 51);
	TextDrawFont(TD_iPhone_Calculator[1], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[1], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[1], true);

	TD_iPhone_Calculator[2] = TextDrawCreate(522.900268, 333.204071, "1");
	TextDrawLetterSize(TD_iPhone_Calculator[2], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[2], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[2], 2);
	TextDrawColor(TD_iPhone_Calculator[2], -1);
	TextDrawUseBox(TD_iPhone_Calculator[2], true);
	TextDrawBoxColor(TD_iPhone_Calculator[2], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[2], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[2], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[2], 51);
	TextDrawFont(TD_iPhone_Calculator[2], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[2], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[2], true);

	TD_iPhone_Calculator[3] = TextDrawCreate(540.233581, 333.204071, "2");
	TextDrawLetterSize(TD_iPhone_Calculator[3], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[3], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[3], 2);
	TextDrawColor(TD_iPhone_Calculator[3], -1);
	TextDrawUseBox(TD_iPhone_Calculator[3], true);
	TextDrawBoxColor(TD_iPhone_Calculator[3], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[3], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[3], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[3], 51);
	TextDrawFont(TD_iPhone_Calculator[3], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[3], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[3], true);

	TD_iPhone_Calculator[4] = TextDrawCreate(557.900207, 333.204071, "3");
	TextDrawLetterSize(TD_iPhone_Calculator[4], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[4], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[4], 2);
	TextDrawColor(TD_iPhone_Calculator[4], -1);
	TextDrawUseBox(TD_iPhone_Calculator[4], true);
	TextDrawBoxColor(TD_iPhone_Calculator[4], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[4], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[4], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[4], 51);
	TextDrawFont(TD_iPhone_Calculator[4], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[4], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[4], true);

	TD_iPhone_Calculator[5] = TextDrawCreate(522.900268, 311.803771, "4");
	TextDrawLetterSize(TD_iPhone_Calculator[5], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[5], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[5], 2);
	TextDrawColor(TD_iPhone_Calculator[5], -1);
	TextDrawUseBox(TD_iPhone_Calculator[5], true);
	TextDrawBoxColor(TD_iPhone_Calculator[5], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[5], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[5], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[5], 51);
	TextDrawFont(TD_iPhone_Calculator[5], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[5], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[5], true);

	TD_iPhone_Calculator[6] = TextDrawCreate(540.233581, 311.803771, "5");
	TextDrawLetterSize(TD_iPhone_Calculator[6], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[6], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[6], 2);
	TextDrawColor(TD_iPhone_Calculator[6], -1);
	TextDrawUseBox(TD_iPhone_Calculator[6], true);
	TextDrawBoxColor(TD_iPhone_Calculator[6], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[6], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[6], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[6], 51);
	TextDrawFont(TD_iPhone_Calculator[6], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[6], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[6], true);

	TD_iPhone_Calculator[7] = TextDrawCreate(557.900207, 311.803771, "6");
	TextDrawLetterSize(TD_iPhone_Calculator[7], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[7], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[7], 2);
	TextDrawColor(TD_iPhone_Calculator[7], -1);
	TextDrawUseBox(TD_iPhone_Calculator[7], true);
	TextDrawBoxColor(TD_iPhone_Calculator[7], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[7], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[7], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[7], 51);
	TextDrawFont(TD_iPhone_Calculator[7], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[7], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[7], true);

	TD_iPhone_Calculator[8] = TextDrawCreate(522.900268, 290.403472, "7");
	TextDrawLetterSize(TD_iPhone_Calculator[8], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[8], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[8], 2);
	TextDrawColor(TD_iPhone_Calculator[8], -1);
	TextDrawUseBox(TD_iPhone_Calculator[8], true);
	TextDrawBoxColor(TD_iPhone_Calculator[8], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[8], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[8], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[8], 51);
	TextDrawFont(TD_iPhone_Calculator[8], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[8], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[8], true);

	TD_iPhone_Calculator[9] = TextDrawCreate(540.233581, 290.403472, "8");
	TextDrawLetterSize(TD_iPhone_Calculator[9], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[9], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[9], 2);
	TextDrawColor(TD_iPhone_Calculator[9], -1);
	TextDrawUseBox(TD_iPhone_Calculator[9], true);
	TextDrawBoxColor(TD_iPhone_Calculator[9], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[9], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[9], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[9], 51);
	TextDrawFont(TD_iPhone_Calculator[9], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[9], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[9], true);

	TD_iPhone_Calculator[10] = TextDrawCreate(557.900207, 290.403472, "9");
	TextDrawLetterSize(TD_iPhone_Calculator[10], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[10], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[10], 2);
	TextDrawColor(TD_iPhone_Calculator[10], -1);
	TextDrawUseBox(TD_iPhone_Calculator[10], true);
	TextDrawBoxColor(TD_iPhone_Calculator[10], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[10], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[10], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[10], 51);
	TextDrawFont(TD_iPhone_Calculator[10], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[10], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[10], true);

	TD_iPhone_Calculator[11] = TextDrawCreate(577.899597, 290.403472, "/");
	TextDrawLetterSize(TD_iPhone_Calculator[11], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[11], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[11], 2);
	TextDrawColor(TD_iPhone_Calculator[11], -1);
	TextDrawUseBox(TD_iPhone_Calculator[11], true);
	TextDrawBoxColor(TD_iPhone_Calculator[11], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[11], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[11], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[11], 51);
	TextDrawFont(TD_iPhone_Calculator[11], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[11], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[11], true);

	TD_iPhone_Calculator[12] = TextDrawCreate(577.899597, 311.803771, "x");
	TextDrawLetterSize(TD_iPhone_Calculator[12], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[12], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[12], 2);
	TextDrawColor(TD_iPhone_Calculator[12], -1);
	TextDrawUseBox(TD_iPhone_Calculator[12], true);
	TextDrawBoxColor(TD_iPhone_Calculator[12], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[12], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[12], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[12], 51);
	TextDrawFont(TD_iPhone_Calculator[12], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[12], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[12], true);

	TD_iPhone_Calculator[13] = TextDrawCreate(577.899597, 333.204071, "-");
	TextDrawLetterSize(TD_iPhone_Calculator[13], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[13], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[13], 2);
	TextDrawColor(TD_iPhone_Calculator[13], -1);
	TextDrawUseBox(TD_iPhone_Calculator[13], true);
	TextDrawBoxColor(TD_iPhone_Calculator[13], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[13], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[13], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[13], 51);
	TextDrawFont(TD_iPhone_Calculator[13], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[13], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[13], true);

	TD_iPhone_Calculator[14] = TextDrawCreate(577.899597, 354.604370, "+");
	TextDrawLetterSize(TD_iPhone_Calculator[14], 0.271333, 1.359405);
	TextDrawTextSize(TD_iPhone_Calculator[14], 10.0, 10.370368);
	TextDrawAlignment(TD_iPhone_Calculator[14], 2);
	TextDrawColor(TD_iPhone_Calculator[14], -1);
	TextDrawUseBox(TD_iPhone_Calculator[14], true);
	TextDrawBoxColor(TD_iPhone_Calculator[14], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[14], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[14], 0);
	TextDrawBackgroundColor(TD_iPhone_Calculator[14], 51);
	TextDrawFont(TD_iPhone_Calculator[14], 1);
	TextDrawSetProportional(TD_iPhone_Calculator[14], 1);
	TextDrawSetSelectable(TD_iPhone_Calculator[14], true);

	TD_iPhone_Calculator[15] = TextDrawCreate(516.666625, 255.940597, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone_Calculator[15], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Calculator[15], 67.999954, 26.962947);
	TextDrawAlignment(TD_iPhone_Calculator[15], 1);
	TextDrawColor(TD_iPhone_Calculator[15], -2139062017);
	TextDrawSetShadow(TD_iPhone_Calculator[15], 0);
	TextDrawSetOutline(TD_iPhone_Calculator[15], 0);
	TextDrawFont(TD_iPhone_Calculator[15], 4);*/

	//Call
	TD_iPhone_Call[0] = TextDrawCreate(511.333312, 278.755523, "LD_SPAC:white");
	TextDrawLetterSize(TD_iPhone_Call[0], 0.000000, 0.000000);
	TextDrawTextSize(TD_iPhone_Call[0], 78.333259, 98.725921);
	TextDrawAlignment(TD_iPhone_Call[0], 1);
	TextDrawColor(TD_iPhone_Call[0], -2041184257);
	TextDrawSetShadow(TD_iPhone_Call[0], 0);
	TextDrawSetOutline(TD_iPhone_Call[0], 0);
	TextDrawFont(TD_iPhone_Call[0], 4);

	TD_iPhone_Call[1] = TextDrawCreate(524.999877, 282.488739, "1");
	TextDrawLetterSize(TD_iPhone_Call[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[1], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[1], 2);
	TextDrawColor(TD_iPhone_Call[1], -1);
	TextDrawUseBox(TD_iPhone_Call[1], true);
	TextDrawBoxColor(TD_iPhone_Call[1], 0);
	TextDrawSetShadow(TD_iPhone_Call[1], 0);
	TextDrawSetOutline(TD_iPhone_Call[1], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[1], 51);
	TextDrawFont(TD_iPhone_Call[1], 1);
	TextDrawSetProportional(TD_iPhone_Call[1], 1);
    TextDrawSetSelectable(TD_iPhone_Call[1], true);

	TD_iPhone_Call[2] = TextDrawCreate(549.999328, 282.244262, "2");
	TextDrawLetterSize(TD_iPhone_Call[2], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[2], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[2], 2);
	TextDrawColor(TD_iPhone_Call[2], -1);
	TextDrawUseBox(TD_iPhone_Call[2], true);
	TextDrawBoxColor(TD_iPhone_Call[2], 0);
	TextDrawSetShadow(TD_iPhone_Call[2], 0);
	TextDrawSetOutline(TD_iPhone_Call[2], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[2], 51);
	TextDrawFont(TD_iPhone_Call[2], 1);
	TextDrawSetProportional(TD_iPhone_Call[2], 1);
    TextDrawSetSelectable(TD_iPhone_Call[2], true);

	TD_iPhone_Call[3] = TextDrawCreate(574.999084, 282.414581, "3");
	TextDrawLetterSize(TD_iPhone_Call[3], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[3], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[3], 2);
	TextDrawColor(TD_iPhone_Call[3], -1);
	TextDrawUseBox(TD_iPhone_Call[3], true);
	TextDrawBoxColor(TD_iPhone_Call[3], 0);
	TextDrawSetShadow(TD_iPhone_Call[3], 0);
	TextDrawSetOutline(TD_iPhone_Call[3], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[3], 51);
	TextDrawFont(TD_iPhone_Call[3], 1);
	TextDrawSetProportional(TD_iPhone_Call[3], 1);
    TextDrawSetSelectable(TD_iPhone_Call[3], true);

	TD_iPhone_Call[4] = TextDrawCreate(524.999877, 304.229614, "4");
	TextDrawLetterSize(TD_iPhone_Call[4], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[4], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[4], 2);
	TextDrawColor(TD_iPhone_Call[4], -1);
	TextDrawUseBox(TD_iPhone_Call[4], true);
	TextDrawBoxColor(TD_iPhone_Call[4], 0);
	TextDrawSetShadow(TD_iPhone_Call[4], 0);
	TextDrawSetOutline(TD_iPhone_Call[4], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[4], 51);
	TextDrawFont(TD_iPhone_Call[4], 1);
	TextDrawSetProportional(TD_iPhone_Call[4], 1);
	TextDrawSetSelectable(TD_iPhone_Call[4], true);

	TD_iPhone_Call[5] = TextDrawCreate(549.999328, 304.229614, "5");
	TextDrawLetterSize(TD_iPhone_Call[5], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[5], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[5], 2);
	TextDrawColor(TD_iPhone_Call[5], -1);
	TextDrawUseBox(TD_iPhone_Call[5], true);
	TextDrawBoxColor(TD_iPhone_Call[5], 0);
	TextDrawSetShadow(TD_iPhone_Call[5], 0);
	TextDrawSetOutline(TD_iPhone_Call[5], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[5], 51);
	TextDrawFont(TD_iPhone_Call[5], 1);
	TextDrawSetProportional(TD_iPhone_Call[5], 1);
	TextDrawSetSelectable(TD_iPhone_Call[5], true);

	TD_iPhone_Call[6] = TextDrawCreate(574.999084, 304.229614, "6");
	TextDrawLetterSize(TD_iPhone_Call[6], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[6], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[6], 2);
	TextDrawColor(TD_iPhone_Call[6], -1);
	TextDrawUseBox(TD_iPhone_Call[6], true);
	TextDrawBoxColor(TD_iPhone_Call[6], 0);
	TextDrawSetShadow(TD_iPhone_Call[6], 0);
	TextDrawSetOutline(TD_iPhone_Call[6], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[6], 51);
	TextDrawFont(TD_iPhone_Call[6], 1);
	TextDrawSetProportional(TD_iPhone_Call[6], 1);
	TextDrawSetSelectable(TD_iPhone_Call[6], true);

	TD_iPhone_Call[7] = TextDrawCreate(524.999877, 326.800170, "7");
	TextDrawLetterSize(TD_iPhone_Call[7], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[7], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[7], 2);
	TextDrawColor(TD_iPhone_Call[7], -1);
	TextDrawUseBox(TD_iPhone_Call[7], true);
	TextDrawBoxColor(TD_iPhone_Call[7], 0);
	TextDrawSetShadow(TD_iPhone_Call[7], 0);
	TextDrawSetOutline(TD_iPhone_Call[7], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[7], 51);
	TextDrawFont(TD_iPhone_Call[7], 1);
	TextDrawSetProportional(TD_iPhone_Call[7], 1);
	TextDrawSetSelectable(TD_iPhone_Call[7], true);

	TD_iPhone_Call[8] = TextDrawCreate(549.999328, 326.800170, "8");
	TextDrawLetterSize(TD_iPhone_Call[8], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[8], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[8], 2);
	TextDrawColor(TD_iPhone_Call[8], -1);
	TextDrawUseBox(TD_iPhone_Call[8], true);
	TextDrawBoxColor(TD_iPhone_Call[8], 0);
	TextDrawSetShadow(TD_iPhone_Call[8], 0);
	TextDrawSetOutline(TD_iPhone_Call[8], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[8], 51);
	TextDrawFont(TD_iPhone_Call[8], 1);
	TextDrawSetProportional(TD_iPhone_Call[8], 1);
	TextDrawSetSelectable(TD_iPhone_Call[8], true);

	TD_iPhone_Call[9] = TextDrawCreate(574.999084, 326.800170, "9");
	TextDrawLetterSize(TD_iPhone_Call[9], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[9], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[9], 2);
	TextDrawColor(TD_iPhone_Call[9], -1);
	TextDrawUseBox(TD_iPhone_Call[9], true);
	TextDrawBoxColor(TD_iPhone_Call[9], 0);
	TextDrawSetShadow(TD_iPhone_Call[9], 0);
	TextDrawSetOutline(TD_iPhone_Call[9], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[9], 51);
	TextDrawFont(TD_iPhone_Call[9], 1);
	TextDrawSetProportional(TD_iPhone_Call[9], 1);
	TextDrawSetSelectable(TD_iPhone_Call[9], true);

	TD_iPhone_Call[10] = TextDrawCreate(549.999328, 349.370727, "0");
	TextDrawLetterSize(TD_iPhone_Call[10], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[10], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[10], 2);
	TextDrawColor(TD_iPhone_Call[10], -1);
	TextDrawUseBox(TD_iPhone_Call[10], true);
	TextDrawBoxColor(TD_iPhone_Call[10], 0);
	TextDrawSetShadow(TD_iPhone_Call[10], 0);
	TextDrawSetOutline(TD_iPhone_Call[10], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[10], 51);
	TextDrawFont(TD_iPhone_Call[10], 1);
	TextDrawSetProportional(TD_iPhone_Call[10], 1);
	TextDrawSetSelectable(TD_iPhone_Call[10], true);

	TD_iPhone_Call[11] = TextDrawCreate(524.999877, 349.370727, "C");
	TextDrawLetterSize(TD_iPhone_Call[11], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[11], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[11], 2);
	TextDrawColor(TD_iPhone_Call[11], -1);
	TextDrawUseBox(TD_iPhone_Call[11], true);
	TextDrawBoxColor(TD_iPhone_Call[11], 0);
	TextDrawSetShadow(TD_iPhone_Call[11], 0);
	TextDrawSetOutline(TD_iPhone_Call[11], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[11], 51);
	TextDrawFont(TD_iPhone_Call[11], 1);
	TextDrawSetProportional(TD_iPhone_Call[11], 1);
	TextDrawSetSelectable(TD_iPhone_Call[11], true);

	TD_iPhone_Call[12] = TextDrawCreate(574.999084, 349.370727, "D");
	TextDrawLetterSize(TD_iPhone_Call[12], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_Call[12], 10.0, 22.399999);
	TextDrawAlignment(TD_iPhone_Call[12], 2);
	TextDrawColor(TD_iPhone_Call[12], -1);
	TextDrawUseBox(TD_iPhone_Call[12], true);
	TextDrawBoxColor(TD_iPhone_Call[12], 0);
	TextDrawSetShadow(TD_iPhone_Call[12], 0);
	TextDrawSetOutline(TD_iPhone_Call[12], 0);
	TextDrawBackgroundColor(TD_iPhone_Call[12], 51);
	TextDrawFont(TD_iPhone_Call[12], 1);
	TextDrawSetProportional(TD_iPhone_Call[12], 1);
	TextDrawSetSelectable(TD_iPhone_Call[12], true);

	//Call YES/NO
	TD_iPhone_CallYesNo[0] = TextDrawCreate(534.333129, 320.651794, "N");
	TextDrawLetterSize(TD_iPhone_CallYesNo[0], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_CallYesNo[0], 5.000000, 20.325927);
	TextDrawAlignment(TD_iPhone_CallYesNo[0], 2);
	TextDrawColor(TD_iPhone_CallYesNo[0], -1);
	TextDrawUseBox(TD_iPhone_CallYesNo[0], true);
	TextDrawBoxColor(TD_iPhone_CallYesNo[0], 2080375039);
	TextDrawSetShadow(TD_iPhone_CallYesNo[0], 0);
	TextDrawSetOutline(TD_iPhone_CallYesNo[0], 0);
	TextDrawBackgroundColor(TD_iPhone_CallYesNo[0], 51);
	TextDrawFont(TD_iPhone_CallYesNo[0], 1);
	TextDrawSetProportional(TD_iPhone_CallYesNo[0], 1);

	TD_iPhone_CallYesNo[1] = TextDrawCreate(563.666198, 320.651794, "Y");
	TextDrawLetterSize(TD_iPhone_CallYesNo[1], 0.449999, 1.600000);
	TextDrawTextSize(TD_iPhone_CallYesNo[1], 5.000000, 20.325927);
	TextDrawAlignment(TD_iPhone_CallYesNo[1], 2);
	TextDrawColor(TD_iPhone_CallYesNo[1], -1);
	TextDrawUseBox(TD_iPhone_CallYesNo[1], true);
	TextDrawBoxColor(TD_iPhone_CallYesNo[1], 8388863);
	TextDrawSetShadow(TD_iPhone_CallYesNo[1], 0);
	TextDrawSetOutline(TD_iPhone_CallYesNo[1], 0);
	TextDrawBackgroundColor(TD_iPhone_CallYesNo[1], 51);
	TextDrawFont(TD_iPhone_CallYesNo[1], 1);
	TextDrawSetProportional(TD_iPhone_CallYesNo[1], 1);

	/* iPhone S */
	
          //Circular menu

    CircularMenu[0] = TextDrawCreate(239.882873, 123.666664, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[0], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[0], 79.180084, 97.416824);
	TextDrawAlignment(CircularMenu[0], 1);
	TextDrawColor(CircularMenu[0], -65436);
	TextDrawSetShadow(CircularMenu[0], 0);
	TextDrawSetOutline(CircularMenu[0], 0);
	TextDrawFont(CircularMenu[0], 4);
	TextDrawSetProportional(CircularMenu[0], 1);

	CircularMenu[1] = TextDrawCreate(239.477310, 314.833221, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[1], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[1], 77.774520, -97.999885);
	TextDrawAlignment(CircularMenu[1], 1);
	TextDrawColor(CircularMenu[1], -156);
	TextDrawSetShadow(CircularMenu[1], 0);
	TextDrawSetOutline(CircularMenu[1], 0);
	TextDrawFont(CircularMenu[1], 4);

	CircularMenu[2] = TextDrawCreate(392.746978, 315.249847, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[2], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[2], -78.243026, -97.999839);
	TextDrawAlignment(CircularMenu[2], 1);
	TextDrawColor(CircularMenu[2], -156);
	TextDrawSetShadow(CircularMenu[2], 0);
	TextDrawSetOutline(CircularMenu[2], 0);
	TextDrawFont(CircularMenu[2], 4);

	CircularMenu[3] = TextDrawCreate(392.341339, 123.749847, "hud:radardisc");
	TextDrawLetterSize(CircularMenu[3], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[3], -74.026344, 96.250259);
	TextDrawAlignment(CircularMenu[3], 1);
	TextDrawColor(CircularMenu[3], -156);
	TextDrawSetShadow(CircularMenu[3], 0);
	TextDrawSetOutline(CircularMenu[3], 0);
	TextDrawFont(CircularMenu[3], 4);

	CircularMenu[4] = TextDrawCreate(303.133666, 114.333343, "hud:radar_gangB");
	TextDrawLetterSize(CircularMenu[4], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[4], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[4], 1);
	TextDrawColor(CircularMenu[4], -1);
	TextDrawSetShadow(CircularMenu[4], 0);
	TextDrawSetOutline(CircularMenu[4], 0);
	TextDrawFont(CircularMenu[4], 4);

	CircularMenu[5] = TextDrawCreate(353.797363, 144.499923, "hud:radar_LocoSyndicate");
	TextDrawLetterSize(CircularMenu[5], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[5], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[5], 1);
	TextDrawColor(CircularMenu[5], -1);
	TextDrawSetShadow(CircularMenu[5], 0);
	TextDrawSetOutline(CircularMenu[5], 0);
	TextDrawFont(CircularMenu[5], 4);

	CircularMenu[6] = TextDrawCreate(373.538146, 203.249771, "hud:radar_CATALINAPINK");
	TextDrawLetterSize(CircularMenu[6], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[6], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[6], 1);
	TextDrawColor(CircularMenu[6], -1);
	TextDrawSetShadow(CircularMenu[6], 0);
	TextDrawSetOutline(CircularMenu[6], 0);
	TextDrawFont(CircularMenu[6], 4);

	CircularMenu[7] = TextDrawCreate(353.922851, 267.249816, "hud:radar_modGarage");
	TextDrawLetterSize(CircularMenu[7], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[7], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[7], 1);
	TextDrawColor(CircularMenu[7], -1);
	TextDrawSetShadow(CircularMenu[7], 0);
	TextDrawSetOutline(CircularMenu[7], 0);
	TextDrawFont(CircularMenu[7], 4);

	CircularMenu[8] = TextDrawCreate(303.385620, 293.916442, "hud:radar_qmark");
	TextDrawLetterSize(CircularMenu[8], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[8], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[8], 1);
	TextDrawColor(CircularMenu[8], -1);
	TextDrawSetShadow(CircularMenu[8], 0);
	TextDrawSetOutline(CircularMenu[8], 0);
	TextDrawFont(CircularMenu[8], 4);

	CircularMenu[9] = TextDrawCreate(248.163009, 268.082946, "hud:radar_enemyAttack");
	TextDrawLetterSize(CircularMenu[9], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[9], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[9], 1);
	TextDrawColor(CircularMenu[9], -1);
	TextDrawSetShadow(CircularMenu[9], 0);
	TextDrawSetOutline(CircularMenu[9], 0);
	TextDrawFont(CircularMenu[9], 4);

	CircularMenu[10] = TextDrawCreate(229.953643, 201.999679, "hud:radar_dateFood");
	TextDrawLetterSize(CircularMenu[10], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[10], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[10], 1);
	TextDrawColor(CircularMenu[10], -1);
	TextDrawSetShadow(CircularMenu[10], 0);
	TextDrawSetOutline(CircularMenu[10], 0);
	TextDrawFont(CircularMenu[10], 4);

	CircularMenu[11] = TextDrawCreate(249.694488, 142.333053, "hud:radar_truck");
	TextDrawLetterSize(CircularMenu[11], 0.000000, 0.000000);
	TextDrawTextSize(CircularMenu[11], 28.579788, 28.583330);
	TextDrawAlignment(CircularMenu[11], 1);
	TextDrawColor(CircularMenu[11], -1);
	TextDrawSetShadow(CircularMenu[11], 0);
	TextDrawSetOutline(CircularMenu[11], 0);
	TextDrawFont(CircularMenu[11], 4);

	CircularMenu[12] = TextDrawCreate(292.825469, 184.916641, "LD_BEAT:chit");
	TextDrawLetterSize(CircularMenu[12], 0.000000, -6.184477);
	TextDrawTextSize(CircularMenu[12], 54.816955, 68.250015);
	TextDrawAlignment(CircularMenu[12], 1);
	TextDrawColor(CircularMenu[12], -16777016);
	TextDrawUseBox(CircularMenu[12], true);
	TextDrawBoxColor(CircularMenu[12], 255);
	TextDrawSetShadow(CircularMenu[12], 0);
	TextDrawSetOutline(CircularMenu[12], 0);
	TextDrawFont(CircularMenu[12], 4);

	CircularMenu[13] = TextDrawCreate(320.468566, 190.750000, "O");
	TextDrawLetterSize(CircularMenu[13], 1.182299, 5.531667);
	TextDrawAlignment(CircularMenu[13], 2);
	TextDrawColor(CircularMenu[13], -1);
	TextDrawSetShadow(CircularMenu[13], 0);
	TextDrawSetOutline(CircularMenu[13], 0);
	TextDrawBackgroundColor(CircularMenu[13], 51);
	TextDrawFont(CircularMenu[13], 1);
	TextDrawSetProportional(CircularMenu[13], 1);

	CircularMenu[14] = TextDrawCreate(319.594696, 189.999969, "I");
	TextDrawLetterSize(CircularMenu[14], 1.100307, 3.169169);
	TextDrawAlignment(CircularMenu[14], 2);
	TextDrawColor(CircularMenu[14], -1);
	TextDrawSetShadow(CircularMenu[14], 0);
	TextDrawSetOutline(CircularMenu[14], 0);
	TextDrawBackgroundColor(CircularMenu[14], 51);
	TextDrawFont(CircularMenu[14], 1);
	TextDrawSetProportional(CircularMenu[14], 1);

	CircularMenu[15] = TextDrawCreate(318.594940, 128.333297, "_~n~cuenta");
	TextDrawLetterSize(CircularMenu[15], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[15], 2);
	TextDrawColor(CircularMenu[15], -256);
	TextDrawSetShadow(CircularMenu[15], 0);
	TextDrawSetOutline(CircularMenu[15], 0);
	TextDrawBackgroundColor(CircularMenu[15], 51);
	TextDrawFont(CircularMenu[15], 3);
	TextDrawSetProportional(CircularMenu[15], 1);
	TextDrawTextSize(CircularMenu[15], 10, 25);
	TextDrawSetSelectable(CircularMenu[15], true);

	CircularMenu[16] = TextDrawCreate(368.321472, 158.499969, "_~n~dni");
	TextDrawLetterSize(CircularMenu[16], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[16], 2);
	TextDrawColor(CircularMenu[16], -256);
	TextDrawSetShadow(CircularMenu[16], 0);
	TextDrawSetOutline(CircularMenu[16], 0);
	TextDrawBackgroundColor(CircularMenu[16], 51);
	TextDrawFont(CircularMenu[16], 3);
	TextDrawSetProportional(CircularMenu[16], 1);
	TextDrawTextSize(CircularMenu[16], 10, 25);
	TextDrawSetSelectable(CircularMenu[16], true);

	CircularMenu[17] = TextDrawCreate(387.593963, 216.666610, "_~n~comandos");
	TextDrawLetterSize(CircularMenu[17], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[17], 2);
	TextDrawColor(CircularMenu[17], -256);
	TextDrawSetShadow(CircularMenu[17], 0);
	TextDrawSetOutline(CircularMenu[17], 0);
	TextDrawBackgroundColor(CircularMenu[17], 51);
	TextDrawFont(CircularMenu[17], 3);
	TextDrawSetProportional(CircularMenu[17], 1);
	TextDrawTextSize(CircularMenu[17], 10, 25);
	TextDrawSetSelectable(CircularMenu[17], true);

	CircularMenu[18] = TextDrawCreate(367.978881, 279.499938, "_~n~ajustes");
	TextDrawLetterSize(CircularMenu[18], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[18], 2);
	TextDrawColor(CircularMenu[18], -256);
	TextDrawSetShadow(CircularMenu[18], 0);
	TextDrawSetOutline(CircularMenu[18], 0);
	TextDrawBackgroundColor(CircularMenu[18], 51);
	TextDrawFont(CircularMenu[18], 3);
	TextDrawSetProportional(CircularMenu[18], 1);
	TextDrawTextSize(CircularMenu[18], 10, 25);
	TextDrawSetSelectable(CircularMenu[18], true);

	CircularMenu[19] = TextDrawCreate(316.972747, 305.583251, "_~n~info");
	TextDrawLetterSize(CircularMenu[19], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[19], 2);
	TextDrawColor(CircularMenu[19], -256);
	TextDrawSetShadow(CircularMenu[19], 0);
	TextDrawSetOutline(CircularMenu[19], 0);
	TextDrawBackgroundColor(CircularMenu[19], 51);
	TextDrawFont(CircularMenu[19], 3);
	TextDrawSetProportional(CircularMenu[19], 1);
	TextDrawTextSize(CircularMenu[19], 10, 25);
	TextDrawSetSelectable(CircularMenu[19], true);

    CerrarCreditos = TextDrawCreate(32.796592, 424.666778, "Cerrar");
    TextDrawLetterSize(CerrarCreditos, 0.449999, 1.600000);
    TextDrawAlignment(CerrarCreditos, 2);
    TextDrawColor(CerrarCreditos, -1);
    TextDrawSetShadow(CerrarCreditos, 0);
    TextDrawSetOutline(CerrarCreditos, 1);
    TextDrawBackgroundColor(CerrarCreditos, 51);
    TextDrawFont(CerrarCreditos, 1);
    TextDrawSetProportional(CerrarCreditos, 1);
    TextDrawTextSize(CerrarCreditos, 5, 20);
    TextDrawSetSelectable(CerrarCreditos, true);

	CircularMenu[20] = TextDrawCreate(262.687164, 279.166534, "_~n~creditos");
	TextDrawLetterSize(CircularMenu[20], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[20], 2);
	TextDrawColor(CircularMenu[20], -256);
	TextDrawSetShadow(CircularMenu[20], 0);
	TextDrawSetOutline(CircularMenu[20], 0);
	TextDrawBackgroundColor(CircularMenu[20], 51);
	TextDrawFont(CircularMenu[20], 3);
	TextDrawSetProportional(CircularMenu[20], 1);
	TextDrawTextSize(CircularMenu[20], 10, 25);
	TextDrawSetSelectable(CircularMenu[20], true);

	CircularMenu[21] = TextDrawCreate(245.414825, 215.999923, "_~n~lugares");
	TextDrawLetterSize(CircularMenu[21], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[21], 2);
	TextDrawColor(CircularMenu[21], -256);
	TextDrawSetShadow(CircularMenu[21], 0);
	TextDrawSetOutline(CircularMenu[21], 0);
	TextDrawBackgroundColor(CircularMenu[21], 51);
	TextDrawFont(CircularMenu[21], 3);
	TextDrawSetProportional(CircularMenu[21], 1);
	TextDrawTextSize(CircularMenu[21], 10, 25);
	TextDrawSetSelectable(CircularMenu[21], true);

	CircularMenu[22] = TextDrawCreate(261.876098, 155.749923, "_~n~Trabajo");
	TextDrawLetterSize(CircularMenu[22], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[22], 2);
	TextDrawColor(CircularMenu[22], -256);
	TextDrawSetShadow(CircularMenu[22], 0);
	TextDrawSetOutline(CircularMenu[22], 0);
	TextDrawBackgroundColor(CircularMenu[22], 51);
	TextDrawFont(CircularMenu[22], 3);
	TextDrawSetProportional(CircularMenu[22], 1);
	TextDrawTextSize(CircularMenu[22], 10, 25);
	TextDrawSetSelectable(CircularMenu[22], true);

	CircularMenu[23] = TextDrawCreate(320.504364, 213.333221, "_~n~_~n~cerrar");
	TextDrawLetterSize(CircularMenu[23], 0.384406, 1.553331);
	TextDrawAlignment(CircularMenu[23], 2);
	TextDrawColor(CircularMenu[23], -256);
	TextDrawSetShadow(CircularMenu[23], 0);
	TextDrawSetOutline(CircularMenu[23], 0);
	TextDrawBackgroundColor(CircularMenu[23], 51);
	TextDrawFont(CircularMenu[23], 3);
	TextDrawSetProportional(CircularMenu[23], 1);
	TextDrawTextSize(CircularMenu[23], 10, 25);
	TextDrawSetSelectable(CircularMenu[23], true);
        StartDraw[0] = TextDrawCreate(735.235839, -110.499977, "usebox");
        TextDrawLetterSize(StartDraw[0], 0.000000, 96.780342);
        TextDrawTextSize(StartDraw[0], 498.849090, 0.000000);
        TextDrawAlignment(StartDraw[0], 1);
        TextDrawColor(StartDraw[0], 0);
        TextDrawUseBox(StartDraw[0], true);
        TextDrawBoxColor(StartDraw[0], 102);
        TextDrawSetShadow(StartDraw[0], 0);
        TextDrawSetOutline(StartDraw[0], 0);
        TextDrawFont(StartDraw[0], 0);

        StartDraw[1] = TextDrawCreate(529.897521, 28.583328, "Bienvenido");
        TextDrawLetterSize(StartDraw[1], 0.449999, 1.600000);
        TextDrawAlignment(StartDraw[1], 1);
        TextDrawColor(StartDraw[1], -5963521);
        TextDrawSetShadow(StartDraw[1], 0);
        TextDrawSetOutline(StartDraw[1], 1);
        TextDrawBackgroundColor(StartDraw[1], 51);
        TextDrawFont(StartDraw[1], 3);
        TextDrawSetProportional(StartDraw[1], 1);

        StartDraw[2] = TextDrawCreate(522.401550, 101.500045, "SEXO~n~~n~~n~~n~~n~EDAD~n~~n~~n~~n~~n~ORIGEN");
        TextDrawLetterSize(StartDraw[2], 0.303820, 1.658331);
        TextDrawAlignment(StartDraw[2], 1);
        TextDrawColor(StartDraw[2], -1);
        TextDrawSetShadow(StartDraw[2], 0);
        TextDrawSetOutline(StartDraw[2], 1);
        TextDrawBackgroundColor(StartDraw[2], 51);
        TextDrawFont(StartDraw[2], 2);
        TextDrawSetProportional(StartDraw[2], 1);

        StartDraw[3] = TextDrawCreate(622.790649, 125.166679, "usebox");
        TextDrawLetterSize(StartDraw[3], 0.000000, 2.146298);
        TextDrawTextSize(StartDraw[3], 518.995605, 0.000000);
        TextDrawAlignment(StartDraw[3], 1);
        TextDrawColor(StartDraw[3], 0);
        TextDrawUseBox(StartDraw[3], true);
        TextDrawBoxColor(StartDraw[3], 102);
        TextDrawSetShadow(StartDraw[3], 0);
        TextDrawSetOutline(StartDraw[3], 0);
        TextDrawFont(StartDraw[3], 0);

        StartDraw[4] = TextDrawCreate(500.912292, 119.999992, "~<~");
        TextDrawLetterSize(StartDraw[4], 0.317408, 2.895000);
        TextDrawAlignment(StartDraw[4], 2);
        TextDrawColor(StartDraw[4], -1);
        TextDrawSetShadow(StartDraw[4], 0);
        TextDrawSetOutline(StartDraw[4], 1);
        TextDrawBackgroundColor(StartDraw[4], 51);
        TextDrawFont(StartDraw[4], 2);
        TextDrawSetProportional(StartDraw[4], 1);
        TextDrawTextSize(StartDraw[4], 50.0, 50.0);
        TextDrawSetSelectable(StartDraw[4], true);

        StartDraw[5] = TextDrawCreate(621.385437, 119.249977, "~>~");
        TextDrawLetterSize(StartDraw[5], 0.317408, 2.895000);
        TextDrawAlignment(StartDraw[5], 2);
        TextDrawColor(StartDraw[5], -1);
        TextDrawSetShadow(StartDraw[5], 0);
        TextDrawSetOutline(StartDraw[5], -6);
        TextDrawBackgroundColor(StartDraw[5], 51);
        TextDrawFont(StartDraw[5], 2);
        TextDrawSetProportional(StartDraw[5], 1);
        TextDrawTextSize(StartDraw[5], 50.0, 50.0);
        TextDrawSetSelectable(StartDraw[5], true);

        StartDraw[6] = TextDrawCreate(624.259277, 200.833145, "usebox");
        TextDrawLetterSize(StartDraw[6], 0.000000, 2.146298);
        TextDrawTextSize(StartDraw[6], 519.464233, 0.000000);
        TextDrawAlignment(StartDraw[6], 1);
        TextDrawColor(StartDraw[6], 0);
        TextDrawUseBox(StartDraw[6], true);
        TextDrawBoxColor(StartDraw[6], 102);
        TextDrawSetShadow(StartDraw[6], 0);
        TextDrawSetOutline(StartDraw[6], 0);
        TextDrawFont(StartDraw[6], 0);

        StartDraw[7] = TextDrawCreate(501.443756, 195.083267, "~<~");
        TextDrawLetterSize(StartDraw[7], 0.317408, 2.895000);
        TextDrawAlignment(StartDraw[7], 2);
        TextDrawColor(StartDraw[7], -1);
        TextDrawSetShadow(StartDraw[7], 0);
        TextDrawSetOutline(StartDraw[7], 1);
        TextDrawBackgroundColor(StartDraw[7], 51);
        TextDrawFont(StartDraw[7], 2);
        TextDrawSetProportional(StartDraw[7], 1);
        TextDrawTextSize(StartDraw[7], 50.0, 50.0);
        TextDrawSetSelectable(StartDraw[7], true);

        StartDraw[8] = TextDrawCreate(622.385192, 194.333282, "~>~");
        TextDrawLetterSize(StartDraw[8], 0.317408, 2.895000);
        TextDrawAlignment(StartDraw[8], 2);
        TextDrawColor(StartDraw[8], -1);
        TextDrawSetShadow(StartDraw[8], 0);
        TextDrawSetOutline(StartDraw[8], 1);
        TextDrawBackgroundColor(StartDraw[8], 51);
        TextDrawFont(StartDraw[8], 2);
        TextDrawSetProportional(StartDraw[8], 1);
        TextDrawTextSize(StartDraw[8], 50.0, 50.0);
        TextDrawSetSelectable(StartDraw[8], true);

        StartDraw[9] = TextDrawCreate(625.727844, 277.083160, "usebox");
        TextDrawLetterSize(StartDraw[9], 0.000000, 2.146298);
        TextDrawTextSize(StartDraw[9], 519.932800, 0.000000);
        TextDrawAlignment(StartDraw[9], 1);
        TextDrawColor(StartDraw[9], 0);
        TextDrawUseBox(StartDraw[9], true);
        TextDrawBoxColor(StartDraw[9], 102);
        TextDrawSetShadow(StartDraw[9], 0);
        TextDrawSetOutline(StartDraw[9], 0);
        TextDrawFont(StartDraw[9], 0);

        StartDraw[10] = TextDrawCreate(501.975219, 270.749877, "~<~");
        TextDrawLetterSize(StartDraw[10], 0.317408, 2.895000);
        TextDrawAlignment(StartDraw[10], 2);
        TextDrawColor(StartDraw[10], -1);
        TextDrawSetShadow(StartDraw[10], 0);
        TextDrawSetOutline(StartDraw[10], 1);
        TextDrawBackgroundColor(StartDraw[10], 51);
        TextDrawFont(StartDraw[10], 2);
        TextDrawSetProportional(StartDraw[10], 1);
        TextDrawTextSize(StartDraw[10], 50.0, 50.0);
        TextDrawSetSelectable(StartDraw[10], true);

        StartDraw[11] = TextDrawCreate(623.385192, 271.750061, "~>~");
        TextDrawLetterSize(StartDraw[11], 0.317408, 2.895000);
        TextDrawAlignment(StartDraw[11], 2);
        TextDrawColor(StartDraw[11], -1);
        TextDrawSetShadow(StartDraw[11], 0);
        TextDrawSetOutline(StartDraw[11], 1);
        TextDrawBackgroundColor(StartDraw[11], 51);
        TextDrawFont(StartDraw[11], 2);
        TextDrawSetProportional(StartDraw[11], 1);
        TextDrawTextSize(StartDraw[11], 50.0, 50.0);
        TextDrawSetSelectable(StartDraw[11], true);

        StartDraw[12] = TextDrawCreate(572.532836, 390.833648, "Comenzar");
        TextDrawLetterSize(StartDraw[12], 0.427042, 1.932500);
        TextDrawAlignment(StartDraw[12], 2);
        TextDrawColor(StartDraw[12], -1378294017);
        TextDrawSetShadow(StartDraw[12], 0);
        TextDrawSetOutline(StartDraw[12], 2);
        TextDrawBackgroundColor(StartDraw[12], 51);
        TextDrawFont(StartDraw[12], 2);
        TextDrawSetProportional(StartDraw[12], 1);
        TextDrawTextSize(StartDraw[12], 20.0, 100.0);
        TextDrawSetSelectable(StartDraw[12], true);

        WelcomeTD[0] = TextDrawCreate(574.533020, 55.166671, "usebox");
        TextDrawLetterSize(WelcomeTD[0], 0.000000, 37.275924);
        TextDrawTextSize(WelcomeTD[0], 63.124450, 0.000000);
        TextDrawAlignment(WelcomeTD[0], 1);
        TextDrawColor(WelcomeTD[0], 0);
        TextDrawUseBox(WelcomeTD[0], true);
        TextDrawBoxColor(WelcomeTD[0], 102);
        TextDrawSetShadow(WelcomeTD[0], 0);
        TextDrawSetOutline(WelcomeTD[0], 0);
        TextDrawFont(WelcomeTD[0], 0);

        WelcomeTD[1] = TextDrawCreate(210.366027, 65.333328, "Bienvenido a Los Santos");
        TextDrawLetterSize(WelcomeTD[1], 0.767657, 3.151666);
        TextDrawAlignment(WelcomeTD[1], 1);
        TextDrawColor(WelcomeTD[1], -1);
        TextDrawSetShadow(WelcomeTD[1], 0);
        TextDrawSetOutline(WelcomeTD[1], 1);
        TextDrawBackgroundColor(WelcomeTD[1], 51);
        TextDrawFont(WelcomeTD[1], 0);
        TextDrawSetProportional(WelcomeTD[1], 1);

        WelcomeTD[2] = TextDrawCreate(133.060058, 130.666687, simbolos("Hoy has llegado a Los Santos, una ciudad donde~n~podrás encontrar de todo.~n~~n~Tu vida no fue fácil estos últimos años pero eso~n~ya es el pasado, hoy comienzas una nueva vida~n~en Los Santos.~n~~n~Estos son tus datos:"));
        TextDrawLetterSize(WelcomeTD[2], 0.449999, 1.600000);
        TextDrawAlignment(WelcomeTD[2], 1);
        TextDrawColor(WelcomeTD[2], -5963521);
        TextDrawSetShadow(WelcomeTD[2], 0);
        TextDrawSetOutline(WelcomeTD[2], 1);
        TextDrawBackgroundColor(WelcomeTD[2], 51);
        TextDrawFont(WelcomeTD[2], 1);
        TextDrawSetProportional(WelcomeTD[2], 1);

        WelcomeTD[3] = TextDrawCreate(478.360137, 335.417053, "Continuar");
        TextDrawLetterSize(WelcomeTD[3], 0.475768, 1.705000);
        TextDrawAlignment(WelcomeTD[3], 2);
        TextDrawColor(WelcomeTD[3], -1);
        TextDrawSetShadow(WelcomeTD[3], 0);
        TextDrawSetOutline(WelcomeTD[3], 1);
        TextDrawBackgroundColor(WelcomeTD[3], 51);
        TextDrawFont(WelcomeTD[3], 3);
        TextDrawSetProportional(WelcomeTD[3], 1);
        TextDrawTextSize(WelcomeTD[3], 20, 100);
        TextDrawSetSelectable(WelcomeTD[3], true);

        ResetPassword = TextDrawCreate(319.999908, 276.499938, simbolos("~n~Olvidé mi contraseña~n~_"));
        TextDrawLetterSize(ResetPassword, 0.394714, 1.442498);
        TextDrawTextSize(ResetPassword, 44.040988, 149.333343);
        TextDrawAlignment(ResetPassword, 2);
        TextDrawColor(ResetPassword, -1);
        TextDrawUseBox(ResetPassword, true);
        TextDrawBoxColor(ResetPassword, 0x00000090);
        TextDrawSetShadow(ResetPassword, 0);
        TextDrawSetOutline(ResetPassword, 1);
        TextDrawBackgroundColor(ResetPassword, 51);
        TextDrawFont(ResetPassword, 1);
        TextDrawSetProportional(ResetPassword, 1);
    TextDrawSetSelectable(ResetPassword, true);

        CerrarCreditos = TextDrawCreate(32.796592, 424.666778, "Cerrar");
        TextDrawLetterSize(CerrarCreditos, 0.449999, 1.600000);
        TextDrawAlignment(CerrarCreditos, 2);
        TextDrawColor(CerrarCreditos, -1);
        TextDrawSetShadow(CerrarCreditos, 0);
        TextDrawSetOutline(CerrarCreditos, 1);
        TextDrawBackgroundColor(CerrarCreditos, 51);
        TextDrawFont(CerrarCreditos, 1);
        TextDrawSetProportional(CerrarCreditos, 1);
        TextDrawTextSize(CerrarCreditos, 5, 20);
        TextDrawSetSelectable(CerrarCreditos, true);

        Starter[0] = TextDrawCreate(782.088073, -12.499999, "usebox");
        TextDrawLetterSize(Starter[0], 0.000000, 13.202230);
        TextDrawTextSize(Starter[0], -43.698383, 0.000000);
        TextDrawAlignment(Starter[0], 1);
        TextDrawColor(Starter[0], 0);
        TextDrawUseBox(Starter[0], true);
        TextDrawBoxColor(Starter[0], 255);
        TextDrawSetShadow(Starter[0], 0);
        TextDrawSetOutline(Starter[0], 0);
        TextDrawFont(Starter[0], 0);

        Starter[1] = TextDrawCreate(794.800903, 332.083282, "usebox");
        TextDrawLetterSize(Starter[1], 0.000000, 13.202230);
        TextDrawTextSize(Starter[1], -31.985355, 0.000000);
        TextDrawAlignment(Starter[1], 1);
        TextDrawColor(Starter[1], 0);
        TextDrawUseBox(Starter[1], true);
        TextDrawBoxColor(Starter[1], 255);
        TextDrawSetShadow(Starter[1], 0);
        TextDrawSetOutline(Starter[1], 0);
        TextDrawFont(Starter[1], 0);

        Starter[2] = TextDrawCreate(323.279418, 19.249946, "Sheedow~n~Role Play");
        TextDrawLetterSize(Starter[2], 1.205256, 3.519166);
        TextDrawAlignment(Starter[2], 2);
        TextDrawColor(Starter[2], -1);
        TextDrawSetShadow(Starter[2], 0);
        TextDrawSetOutline(Starter[2], 1);
        TextDrawBackgroundColor(Starter[2], 51);
        TextDrawFont(Starter[2], 3);
        TextDrawSetProportional(Starter[2], 1);

        Starter[3] = TextDrawCreate(3.748243, 428.166595, simbolos("Versión: 1.0"));
        TextDrawLetterSize(Starter[3], 0.449999, 1.600000);
        TextDrawAlignment(Starter[3], 1);
        TextDrawColor(Starter[3], -1061109505);
        TextDrawSetShadow(Starter[3], 0);
        TextDrawSetOutline(Starter[3], 1);
        TextDrawBackgroundColor(Starter[3], 51);
        TextDrawFont(Starter[3], 1);
        TextDrawSetProportional(Starter[3], 1);

        //Aeropuerto Interior Sólido
        CreateDynamicObject(3971, -1866.23438, 56.13280, 400.81461,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(8171, -1835.14246, 59.83070, 398.31830,   0.00000, 90.00000, 0.00000);
        CreateDynamicObject(8171, -1830.36292, 49.43310, 398.31830,   0.00000, 90.00000, -90.00000);
        CreateDynamicObject(8171, -1888.97791, 61.14480, 398.31830,   0.00000, 90.00000, 180.00000);
        CreateDynamicObject(8171, -1855.55420, 57.82210, 398.27979,   0.00000, 180.00000, 90.00000);
        CreateDynamicObject(3969, -1873.50806, 65.89813, 399.17206,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(3970, -1861.96411, 46.65739, 399.35989,   0.00000, 0.00000, 0.00000);
        CreateDynamicObject(1533, -1888.77344, 56.24460, 398.28967,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1533, -1888.77344, 57.72660, 398.28970,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1533, -1888.77344, 59.70260, 398.28970,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1533, -1888.77344, 61.18460, 398.28970,   0.00000, 0.00000, 90.00000);
        CreateDynamicObject(1533, -1835.16272, 57.77853, 398.28970,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(1533, -1835.12268, 59.26171, 398.28970,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(1533, -1835.11011, 61.19919, 398.28970,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(1533, -1835.11450, 62.70069, 398.28970,   0.00000, 0.00000, -90.00000);
        CreateDynamicObject(8171, -1829.23938, 40.11860, 397.05002,   0.00000, 90.00000, 90.00000);
        CreateDynamicObject(8171, -1855.55420, 57.82210, 403.01089,   0.00000, 0.00000, 90.00000);

        // VEHÍCULOS:
       Camionn1ST = AddStaticVehicleEx(414, 2165.7249, -2331.2087, 13.4159, -36.0000, -1, -1, 100);
       AddStaticVehicleEx(414, 2162.5208, -2329.1985, 13.4159, -36.0000, -1, -1, 100);
       AddStaticVehicleEx(414, 2159.2546, -2326.8447, 13.4159, -36.0000, -1, -1, 100);
       AddStaticVehicleEx(414, 2155.9841, -2324.8286, 13.4159, -36.0000, -1, -1, 100);
       AddStaticVehicleEx(414, 2152.7188, -2322.3486, 13.4159, -36.0000, -1, -1, 100);
       Camionn1END = AddStaticVehicleEx(414, 2149.8547, -2319.7136, 13.4159, -36.0000, -1, -1, 100);

        VehiclePoliceST = AddStaticVehicleEx(596,1558.4186,-1711.2684,5.6120,357.8773,0,1, 300000); // LSPD 0
        AddStaticVehicleEx(596,1564.7094,-1710.6145,5.6122,1.3847,0,1, 300000); // LSPD 1
        AddStaticVehicleEx(596,1570.4003,-1711.4445,5.6120,0.5144,0,1, 300000); // LSPD 2
        AddStaticVehicleEx(596,1574.1760,-1711.3433,5.6122,0.5156,0,1, 300000); // LSPD 3
        AddStaticVehicleEx(596,1578.7067,-1711.5507,5.6121,359.5084,0,1, 300000); // LSPD 4
        AddStaticVehicleEx(596,1583.4104,-1711.1211,5.6115,359.3850,0,1, 300000); // LSPD 5
        AddStaticVehicleEx(596,1587.5010,-1711.5632,5.6108,359.0339,0,1, 300000); // LSPD 6
        AddStaticVehicleEx(596,1591.5167,-1711.5215,5.6115,358.5807,0,1, 300000); // LSPD 7
        //AddStaticVehicleEx(596,1595.2990,-1711.5632,5.6121,0.8806,0,1, 300000); // LSPD 8
        AddStaticVehicleEx(523,1558.3207,-1694.7528,5.4671,225.0994,0,1, 300000); // LSPD 9
        AddStaticVehicleEx(523,1559.4813,-1692.0184,5.4634,224.0248,0,1, 300000); // LSPD 10
        AddStaticVehicleEx(523,1563.0350,-1691.5774,5.4604,225.3951,0,1, 300000); // LSPD 11
        AddStaticVehicleEx(523,1567.0289,-1691.6353,5.4603,225.7513,0,1, 300000); // LSPD 12
        AddStaticVehicleEx(523,1571.0781,-1691.8257,5.4631,224.6621,0,1, 300000); // LSPD 13
        //AddStaticVehicleEx(599,1602.6061,-1704.2766,6.0793,90.4204,0,1, 300000); // LSPD 14
        AddStaticVehicleEx(599,1602.2501,-1700.1066,6.0796,90.0414,0,1, 300000); // LSPD 15
        AddStaticVehicleEx(599,1602.4718,-1696.4492,6.0796,89.9170,0,1, 300000); // LSPD 16
        AddStaticVehicleEx(599,1602.2954,-1691.8071,6.0797,88.6416,0,1, 300000); // LSPD 17
        AddStaticVehicleEx(599,1602.2625,-1688.0551,6.0805,88.9743,0,1, 300000); // LSPD 18
        AddStaticVehicleEx(599,1602.3627,-1684.2678,6.0806,89.1339,0,1, 300000); // LSPD 19
        AddStaticVehicleEx(525,1584.8672,-1667.5077,5.7744,270.9235,1,0, 300000); // LSPD 20
        AddStaticVehicleEx(525,1584.7028,-1671.3783,5.7736,270.5293,1,0, 300000); // LSPD 21
        AddStaticVehicleEx(523,1587.4380,-1680.3464,5.4662,316.3450,0,1, 300000); // LSPD 22
        AddStaticVehicleEx(523,1583.4344,-1680.3275,5.4683,316.8326,0,1, 300000); // LSPD 23
        AddStaticVehicleEx(523,1582.7493,-1677.3313,5.4642,314.1004,0,1, 300000); // LSPD 24
        AddStaticVehicleEx(528,1526.8026,-1643.9155,5.9356,180.7114,0,1, 300000); // LSPD 25
        AddStaticVehicleEx(528,1530.8785,-1644.1095,5.9342,177.9560,0,1, 300000); // LSPD 26
        AddStaticVehicleEx(528,1534.6064,-1643.9658,5.9349,181.2988,0,1, 300000); // LSPD 27
        AddStaticVehicleEx(528,1538.8402,-1643.8790,5.9345,180.5387,0,1, 300000); // LSPD 28
        AddStaticVehicleEx(601,1528.9641,-1688.0430,5.6492,268.4615,0,1, 300000); // LSPD 29
        AddStaticVehicleEx(601,1528.9628,-1683.9524,5.6494,269.3413,0,1, 300000); // LSPD 30
        AddStaticVehicleEx(427,1545.0112,-1650.9487,6.0225,88.8301,0,1, 300000); // LSPD 31
        AddStaticVehicleEx(427,1544.9432,-1655.1406,6.0221,87.0713,0,1, 300000); // LSPD 32
        AddStaticVehicleEx(427,1544.8802,-1658.9209,6.0225,90.7275,0,1, 300000); // LSPD 33
        AddStaticVehicleEx(596,1546.0515,-1663.1241,5.6120,87.4175,0,1, 300000); // LSPD 34
        AddStaticVehicleEx(596,1545.7510,-1667.8499,5.6126,88.3481,0,1, 300000); // LSPD 35
        AddStaticVehicleEx(596,1546.1110,-1672.3951,5.6120,88.8650,0,1, 300000); // LSPD 36
        AddStaticVehicleEx(596,1546.0243,-1676.3579,5.6114,91.4473,0,1, 300000); // LSPD 37
        AddStaticVehicleEx(596,1545.9161,-1680.1221,5.6108,89.2740,0,1, 300000); // LSPD 38
        AddStaticVehicleEx(596,1545.9608,-1684.3907,5.6121,90.1184,0,1, 300000); // LSPD 39
        AddStaticVehicleEx(596,1535.7913,-1678.2948,13.1033,0.1336,0,1, 300000); // LSPD 40
        AddStaticVehicleEx(596,1535.7633,-1666.5045,13.1025,0.1334,0,1, 300000); // LSPD 41
        AddStaticVehicleEx(523,1535.5914,-1670.9126,12.9530,52.8156,0,1, 300000); // LSPD 42
        AddStaticVehicleEx(523,1535.6682,-1672.7799,12.9542,55.6414,0,1, 300000); // LSPD 43
        VehiclePoliceEND = AddStaticVehicleEx(523,1535.8096,-1674.6152,12.9539,63.4013,0,1, 300000); // LSPD 44 (42)

        //Estación de autobuses
        VehicleBusST = AddStaticVehicleEx(437, 2137.1655, -1932.2373, 13.5896, 0.0000, -1, -1, 300000);
        AddStaticVehicleEx(437, 2133.1655, -1932.2373, 13.5896, 0.0000, -1, -1, 300000);
        AddStaticVehicleEx(431, 2124.6655, -1932.2373, 13.5896, 0.0000, -1, -1, 300000);
        AddStaticVehicleEx(437, 2116.6655, -1932.2373, 13.5896, 0.0000, -1, -1, 300000);
        AddStaticVehicleEx(431, 2112.6655, -1932.2373, 13.5896, 0.0000, -1, -1, 300000);
        AddStaticVehicleEx(483, 2106.1655, -1932.2373, 13.5568, 0.0000, -1, -1, 300000);
        VehicleBusEND = AddStaticVehicleEx(483, 2103.6655, -1932.2373, 13.5568, 180.0000, -1, -1, 300000);

        Train = AddStaticVehicle(538,1976.3766,-1954.1646,13.2701,266.3449,0,0); //

        AddStaticVehicleEx(420, 1749.3033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        AddStaticVehicleEx(420, 1757.8033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        AddStaticVehicleEx(420, 1765.8033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        AddStaticVehicleEx(420, 1775.3033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        AddStaticVehicleEx(420, 1784.3033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        AddStaticVehicleEx(420, 1792.8033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        AddStaticVehicleEx(420, 1801.3033, -1852.6664, 13.0777, -90.0000, -1, -1, 300000);
        return 1;
}


public OnPlayerEnterDynamicArea(playerid, areaid)
{
    if(areaid == Area_CarWash)
	{
	if(IsPlayerInAnyVehicle(playerid))
    {
    if(GetPlayerVehicleSeat(playerid) == 0)
    {
    new Float:p[3];
    GetPlayerPos(playerid, p[0], p[1], p[2]);
    if(p[2] >= 10.0 && 15.0 >= p[2])
    {
    PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos("Presiona ~b~~k~~CONVERSATION_YES~ ~w~para lavar tu vehículo"));
	PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
	return 1;
	}
	}
	}
    if(areaid == Area_Camionc)
	{
	if(IsPlayerInAnyVehicle(playerid))
    {
    if(GetPlayerVehicleSeat(playerid) == 0)
    {
    new Float:p[3];
    GetPlayerPos(playerid, p[0], p[1], p[2]);
    if(p[2] >= 10.0 && 15.0 >= p[2])
    {
    PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos("Presiona ~b~~k~~CONVERSATION_YES~ ~w~para lavar tu vehículo"));
	PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
	return 1;
	}
	}
	}
	}
	}
    return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    if(areaid == Area_CarWash) return PlayerTextDrawHide(playerid, ErrorCommand[playerid]);
	return 1;
}


public OnGameModeExit()
{
        mysql_close();
        return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid)) return 1;
    if(GetPVarInt(playerid, "pmuerto") == 1)
        {
            SpawnPlayer(playerid);
            return 1;
        }
         if(GetPVarInt(playerid, "pregistro") == 1)
         {
        InterpolateCameraPos(playerid, CameraPositions[0][0], CameraPositions[0][1], CameraPositions[0][2], CameraPositions[0][3], CameraPositions[0][4], CameraPositions[0][5], 5000);
				InterpolateCameraLookAt(playerid, CameraPositions[0][6], CameraPositions[0][7], CameraPositions[0][8], CameraPositions[0][9], CameraPositions[0][10], CameraPositions[0][11], 5000);
    		    SetPlayerVirtualWorld(playerid, playerid);
         VirtualTimers[playerid][1] = SetTimerEx("OnPlayerFinishInterpolateCamera", 5000-600, false, "id", playerid, 1);
        for(new i = 0; i < 32; i++) SendClientMessage(playerid, -1, " ");
        }
             return 1;
}


forward EstaEnUnCasillero(playerid); public EstaEnUnCasillero(playerid){
    if(EstaConectado(playerid)){
		if(IsPlayerInRangeOfPoint(playerid,2.0,255.55478, 76.12378, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,255.54555, 77.27283, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0, 255.45786, 78.39655, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,253.25795, 77.90442, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,253.19940, 76.85208, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0, 253.23259, 75.85623, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,256.99997, 76.29670, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,257.03384, 77.29111, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,256.84805, 78.50943, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,258.66873, 78.13699, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,258.64285, 77.15009, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0, 258.68106, 76.23154, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,256.22562, 73.46461, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,255.14929, 73.44579, 1003.48029)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,1295.6434,-1008.7810,6645.7319)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,1814.7617,-1434.7928,17.5444)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,1814.7661,-1431.2220,17.5444)) { return 1; }
		else if(IsPlayerInRangeOfPoint(playerid,2.0,1815.5697,-1429.2321,13.6016)) { return 1; }
	}
	return 0;
}


forward Mysql_Verificar(playerid);
public Mysql_Verificar(playerid)
{
SendClientMessage(playerid, -1,"aRegistro");

    new rows, fields;
    cache_get_data(rows, fields);
    if(!rows)
    {
	DeleteChatForPlayer(playerid, 32, remove);
	ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Registro", "No estás registrado en el servidor, para\nhacerlo solo introduce tu contraseña abajo\ny sigue algunos cuantos pasos.\n\n\tNo te llevará mucho tiempo.", "Continuar", "Salir");
	SetPlayerTime(playerid, 12, 0);
   	InterpolateCameraPos(playerid, 1346.2476, -928.5945, 114.5656, 1349.3835, -923.1544, 112.7538, 30000);
	InterpolateCameraLookAt(playerid, 1346.7494, -927.7241, 114.2757, 1349.8854, -922.2840, 112.4639, 30000);
    SetPlayerVirtualWorld(playerid, playerid);
	SetPlayerScore(playerid, 0);
	ResetPlayerMoney(playerid);
	ResetPlayerWeapons(playerid);
    }
    else
    {
       	new f[250];
       	cache_get_field_content(0,"pass", f); PlayerInfo[playerid][passtext] = strval(f);
        DeleteChatForPlayer(playerid, 32, remove);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "New Clan RolePlay", "Bienvenido de nuevo.\n\n\tIngresa tu contraseña para\n\tcomenzar a jugar.", "Ingresar", "Salir");
     }
    return 1;
}


public OnPlayerConnect(playerid)
{
        if(IsPlayerNPC(playerid))
        {
        ShowPlayerMarkers(0);
        return 0;
        }
        new Query[256];
    	format(Query, sizeof(Query), "SELECT * FROM `cuenta` WHERE `nombre` = '%s'", NombreOOC(playerid));
        mysql_function_query(TuberiasMySQL, Query, true, "Mysql_Verificar", "ii", playerid);
        
        new name[24];
    GetPlayerName(playerid, name, 24);
        if(strfind(name, "_", true) == -1)
        {
            SendClientMessage(playerid, -1, "Este nombre no es válido, para este servidor de ROL");
            SendClientMessage(playerid, -1, "Por favor, use un formato {00CCFF}Nombre_Apellido");
                VirtualTimers[playerid][0] = SetTimerEx("KickPlayer", 1000, false, "i", playerid);
                return 1;
        }
        if(!IsValidName(name))
        {
            SendClientMessage(playerid, -1, "Este nombre no es válido, para este servidor de ROL");
            SendClientMessage(playerid, -1, "Los nombres de rol no pueden usar número o signos, solo letras.");
                VirtualTimers[playerid][0] = SetTimerEx("KickPlayer", 1000, false, "i", playerid);
                return 1;
        }
    	P_catalogogrotti[playerid] = -1;
    	P_catalogobinco[playerid] = -1;
    	P_catalogozip[playerid] = -1;
    	P_modshop[playerid] = -1;
    	P_transid[playerid] = -1;
    	P_tienda[playerid] = -1;
    	    	PlayerInMenu[playerid][0] = -1;
    	PlayerInMenu[playerid][1] = -1;
    	PlayerInMenu[playerid][2] = -1;
    DeletePVar(playerid, "pmuerto");
    
//
PTD_Toys[playerid][0] = CreatePlayerTextDraw(playerid,25.000000, 98.000000, "Cascos");
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][0], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][0], 0);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][0], 0.859999, 2.799999);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][0], 0);

	PTD_Toys[playerid][1] = CreatePlayerTextDraw(playerid,17.000000, 117.000000, "__");
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][1], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][1], 0.500000, 17.600030);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawUseBox(playerid,PTD_Toys[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid,PTD_Toys[playerid][1], 125);
	PlayerTextDrawTextSize(playerid,PTD_Toys[playerid][1], 158.000000, 0.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][1], 0);

	PTD_Toys[playerid][2] = CreatePlayerTextDraw(playerid,26.000000, 114.000000, "New Textdraw");
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][2], 0);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][2], 5);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][2], 1);
	PlayerTextDrawUseBox(playerid,PTD_Toys[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid,PTD_Toys[playerid][2], 256);
	PlayerTextDrawTextSize(playerid,PTD_Toys[playerid][2], 120.000000, 120.000000);
	PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], 0);
	PlayerTextDrawSetPreviewRot(playerid, PTD_Toys[playerid][2], 0.000000, 0.000000, 0.000000, 1.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][2], 0);

	PTD_Toys[playerid][3] = CreatePlayerTextDraw(playerid,86.000000, 203.000000, "");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][3], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][3], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][3], 0.300000, 1.300000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][3], 0);

	PTD_Toys[playerid][4] = CreatePlayerTextDraw(playerid,86.000000, 234.000000, "");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][4], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][4], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][4], 3);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][4], 0.409999, 1.700000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][4], -65281);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][4], 1);
	PlayerTextDrawUseBox(playerid,PTD_Toys[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid,PTD_Toys[playerid][4], 842150655);
	PlayerTextDrawTextSize(playerid,PTD_Toys[playerid][4], 0.000000, 45.000000);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][4], 0);

	PTD_Toys[playerid][5] = CreatePlayerTextDraw(playerid,75.000000, 234.000000, "~<~______________~>~");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][5], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][5], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][5], 3);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][5], 0.409999, 1.700000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][5], -65281);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][5], 0);

	PTD_Toys[playerid][6] = CreatePlayerTextDraw(playerid,86.000000, 256.000000, "~g~N______~y~ESPACIO______~g~Y");
	PlayerTextDrawAlignment(playerid,PTD_Toys[playerid][6], 2);
	PlayerTextDrawBackgroundColor(playerid,PTD_Toys[playerid][6], 255);
	PlayerTextDrawFont(playerid,PTD_Toys[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid,PTD_Toys[playerid][6], 0.300000, 1.300000);
	PlayerTextDrawColor(playerid,PTD_Toys[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid,PTD_Toys[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid,PTD_Toys[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid,PTD_Toys[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_Toys[playerid][6], 0);

	//ropa
    PTD_Ropa[playerid] = CreatePlayerTextDraw(playerid, 611.483520, 399.416992, "$0");
	PlayerTextDrawLetterSize(playerid, PTD_Ropa[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, PTD_Ropa[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_Ropa[playerid], 7143423);
	PlayerTextDrawSetShadow(playerid, PTD_Ropa[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_Ropa[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_Ropa[playerid], 255);
	PlayerTextDrawFont(playerid, PTD_Ropa[playerid], 3);
	PlayerTextDrawSetProportional(playerid, PTD_Ropa[playerid], 1);


	//Banco
	PlayerBank[playerid][0] = CreatePlayerTextDraw(playerid, 514.777954, 74.675552, "Balance actual: 0$");
	PlayerTextDrawLetterSize(playerid, PlayerBank[playerid][0], 0.314000, 1.306310);
	PlayerTextDrawAlignment(playerid, PlayerBank[playerid][0], 3);
	PlayerTextDrawColor(playerid, PlayerBank[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PlayerBank[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBank[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerBank[playerid][0], 51);
	PlayerTextDrawFont(playerid, PlayerBank[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBank[playerid][0], 1);

	PlayerBank[playerid][1] = CreatePlayerTextDraw(playerid, 124.666900, 74.675552, "Miguel");
	PlayerTextDrawLetterSize(playerid, PlayerBank[playerid][1], 0.314000, 1.306310);
	PlayerTextDrawAlignment(playerid, PlayerBank[playerid][1], 1);
	PlayerTextDrawColor(playerid, PlayerBank[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PlayerBank[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PlayerBank[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PlayerBank[playerid][1], 51);
	PlayerTextDrawFont(playerid, PlayerBank[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, PlayerBank[playerid][1], 1);

	BankCash[playerid] = CreatePlayerTextDraw(playerid, 607.999816, 98.559906, "$00000000");
	PlayerTextDrawLetterSize(playerid, BankCash[playerid], 0.551333, 2.182402);
	PlayerTextDrawTextSize(playerid, BankCash[playerid], 376.888885, -98.915557);
	PlayerTextDrawAlignment(playerid, BankCash[playerid], 3);
	PlayerTextDrawColor(playerid, BankCash[playerid], 7864319);
	PlayerTextDrawSetShadow(playerid, BankCash[playerid], 0);
	PlayerTextDrawSetOutline(playerid, BankCash[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, BankCash[playerid], 255);
	PlayerTextDrawFont(playerid, BankCash[playerid], 3);
	PlayerTextDrawSetProportional(playerid, BankCash[playerid], 1);
	
    PTD_GrottiCatalogo[playerid][0] = CreatePlayerTextDraw(playerid, 502.254699, 330.166687, "Infernus");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][0], 0.440160, 1.541666);
	PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][0], 32.000000, 32.000000);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][0], 1);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][0], -3211009);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][0], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_GrottiCatalogo[playerid][0], 255);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, PTD_GrottiCatalogo[playerid][0], 1);

	PTD_GrottiCatalogo[playerid][1] = CreatePlayerTextDraw(playerid, 553.792053, 396.083312, "$450.000");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][1], 0.269618, 1.366665);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_GrottiCatalogo[playerid][1], 51);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PTD_GrottiCatalogo[playerid][1], 1);

	PTD_GrottiCatalogo[playerid][2] = CreatePlayerTextDraw(playerid, 601.770141, 367.083343, "maximobarraedit");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][2], 0.000000, -0.165925);
	PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 504.002929, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][2], 1);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][2], 0);
	PlayerTextDrawUseBox(playerid, PTD_GrottiCatalogo[playerid][2], true);
	PlayerTextDrawBoxColor(playerid, PTD_GrottiCatalogo[playerid][2], -2139062017);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][2], 0);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][2], 0);

	PTD_GrottiCatalogo[playerid][3] = CreatePlayerTextDraw(playerid, 601.770141, 389.666687, "acelebarraedit");
	PlayerTextDrawLetterSize(playerid, PTD_GrottiCatalogo[playerid][3], 0.000000, -0.165925);
	PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 504.002929, 0.000000);
	PlayerTextDrawAlignment(playerid, PTD_GrottiCatalogo[playerid][3], 1);
	PlayerTextDrawColor(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	PlayerTextDrawUseBox(playerid, PTD_GrottiCatalogo[playerid][3], true);
	PlayerTextDrawBoxColor(playerid, PTD_GrottiCatalogo[playerid][3], -2139062017);
	PlayerTextDrawSetShadow(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	PlayerTextDrawFont(playerid, PTD_GrottiCatalogo[playerid][3], 0);
	
	TD_IO[playerid] = CreatePlayerTextDraw(playerid, 28.500000, 36.866592, "_~n~__Bienvenido a Montevideo Roleplay.~n~__Al parecer eres nuevo...~n~~n~__Complete el formulario para~n~__continuar.~n~~n~");
	PlayerTextDrawLetterSize(playerid, TD_IO[playerid], 0.259999, 1.212665);
	PlayerTextDrawTextSize(playerid, TD_IO[playerid], 184.000000, 39.000003);
	PlayerTextDrawAlignment(playerid, TD_IO[playerid], 1);
	PlayerTextDrawColor(playerid, TD_IO[playerid], -1);
	PlayerTextDrawUseBox(playerid, TD_IO[playerid], true);
	PlayerTextDrawBoxColor(playerid, TD_IO[playerid], 120);
	PlayerTextDrawSetShadow(playerid, TD_IO[playerid], 0);
	PlayerTextDrawSetOutline(playerid, TD_IO[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, TD_IO[playerid], 51);
	PlayerTextDrawFont(playerid, TD_IO[playerid], 1);
	PlayerTextDrawSetProportional(playerid, TD_IO[playerid], 1);
	
	PTD_PD[playerid] = CreatePlayerTextDraw(playerid, 423.667327, 187.666687, "_");
	PlayerTextDrawLetterSize(playerid, PTD_PD[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, PTD_PD[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_PD[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_PD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_PD[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_PD[playerid], 51);
	PlayerTextDrawFont(playerid, PTD_PD[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_PD[playerid], 1);

	PTD_ST[playerid][0] = CreatePlayerTextDraw(playerid, 319.555908, 188.160049, "nombre");
	PlayerTextDrawLetterSize(playerid, PTD_ST[playerid][0], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PTD_ST[playerid][0], 47.555545, 198.115554);
	PlayerTextDrawAlignment(playerid, PTD_ST[playerid][0], 2);
	PlayerTextDrawColor(playerid, PTD_ST[playerid][0], -1507073);
	PlayerTextDrawUseBox(playerid, PTD_ST[playerid][0], true);
	PlayerTextDrawBoxColor(playerid, PTD_ST[playerid][0], 1162697215);
	PlayerTextDrawSetShadow(playerid, PTD_ST[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, PTD_ST[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_ST[playerid][0], 51);
	PlayerTextDrawFont(playerid, PTD_ST[playerid][0], 3);
	PlayerTextDrawSetProportional(playerid, PTD_ST[playerid][0], 1);

	PTD_ST[playerid][1] = CreatePlayerTextDraw(playerid, 319.555908, 243.417709, "_");
	PlayerTextDrawLetterSize(playerid, PTD_ST[playerid][1], 0.449999, 1.600000);
	PlayerTextDrawTextSize(playerid, PTD_ST[playerid][1], 47.555545, 198.115554);
	PlayerTextDrawAlignment(playerid, PTD_ST[playerid][1], 2);
	PlayerTextDrawColor(playerid, PTD_ST[playerid][1], -1507073);
	PlayerTextDrawUseBox(playerid, PTD_ST[playerid][1], true);
	PlayerTextDrawBoxColor(playerid, PTD_ST[playerid][1], 1162697215);
	PlayerTextDrawSetShadow(playerid, PTD_ST[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, PTD_ST[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_ST[playerid][1], 51);
	PlayerTextDrawFont(playerid, PTD_ST[playerid][1], 3);
	PlayerTextDrawSetProportional(playerid, PTD_ST[playerid][1], 1);
	
   	ErrorCommand[playerid] = CreatePlayerTextDraw(playerid, 316.666839, 358.400085, "Lo sentimos, el comando no existe.");
	PlayerTextDrawLetterSize(playerid, ErrorCommand[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, ErrorCommand[playerid], 2);
	PlayerTextDrawColor(playerid, ErrorCommand[playerid], -1);
	PlayerTextDrawSetShadow(playerid, ErrorCommand[playerid], 0);
	PlayerTextDrawSetOutline(playerid, ErrorCommand[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, ErrorCommand[playerid], 51);
	PlayerTextDrawFont(playerid, ErrorCommand[playerid], 1);
	PlayerTextDrawSetProportional(playerid, ErrorCommand[playerid], 1);
	
    PlayerStartDraw[0][playerid] = CreatePlayerTextDraw(playerid, 570.190734, 126.583320, "HOMBRE");
        PlayerTextDrawLetterSize(playerid, PlayerStartDraw[0][playerid], 0.449999, 1.600000);
        PlayerTextDrawAlignment(playerid, PlayerStartDraw[0][playerid], 2);
        PlayerTextDrawColor(playerid, PlayerStartDraw[0][playerid], -1);
        PlayerTextDrawSetShadow(playerid, PlayerStartDraw[0][playerid], 0);
        PlayerTextDrawSetOutline(playerid, PlayerStartDraw[0][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, PlayerStartDraw[0][playerid], 51);
        PlayerTextDrawFont(playerid, PlayerStartDraw[0][playerid], 2);
        PlayerTextDrawSetProportional(playerid, PlayerStartDraw[0][playerid], 1);

        PlayerStartDraw[1][playerid] = CreatePlayerTextDraw(playerid, 569.316528, 202.250000, "18");
        PlayerTextDrawLetterSize(playerid, PlayerStartDraw[1][playerid], 0.449999, 1.600000);
        PlayerTextDrawAlignment(playerid, PlayerStartDraw[1][playerid], 2);
        PlayerTextDrawColor(playerid, PlayerStartDraw[1][playerid], -1);
        PlayerTextDrawSetShadow(playerid, PlayerStartDraw[1][playerid], 0);
        PlayerTextDrawSetOutline(playerid, PlayerStartDraw[1][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, PlayerStartDraw[1][playerid], 51);
        PlayerTextDrawFont(playerid, PlayerStartDraw[1][playerid], 2);
        PlayerTextDrawSetProportional(playerid, PlayerStartDraw[1][playerid], 1);

        PlayerStartDraw[2][playerid] = CreatePlayerTextDraw(playerid, 571.721984, 277.916625, "EUROPA");
        PlayerTextDrawLetterSize(playerid, PlayerStartDraw[2][playerid], 0.449999, 1.600000);
        PlayerTextDrawAlignment(playerid, PlayerStartDraw[2][playerid], 2);
        PlayerTextDrawColor(playerid, PlayerStartDraw[2][playerid], -1);
        PlayerTextDrawSetShadow(playerid, PlayerStartDraw[2][playerid], 0);
        PlayerTextDrawSetOutline(playerid, PlayerStartDraw[2][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, PlayerStartDraw[2][playerid], 51);
        PlayerTextDrawFont(playerid, PlayerStartDraw[2][playerid], 2);
        PlayerTextDrawSetProportional(playerid, PlayerStartDraw[2][playerid], 1);

        DataTD[playerid] = CreatePlayerTextDraw(playerid, 148.521240, 277.666412, "nombre: ~n~edad: ~n~origen: ");
        PlayerTextDrawLetterSize(playerid, DataTD[playerid], 0.434538, 1.705000);
        PlayerTextDrawAlignment(playerid, DataTD[playerid], 1);
        PlayerTextDrawColor(playerid, DataTD[playerid], -1);
        PlayerTextDrawSetShadow(playerid, DataTD[playerid], 0);
        PlayerTextDrawSetOutline(playerid, DataTD[playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, DataTD[playerid], 51);
        PlayerTextDrawFont(playerid, DataTD[playerid], 2);
        PlayerTextDrawSetProportional(playerid, DataTD[playerid], 1);

        Conceptos[0][playerid] = CreatePlayerTextDraw(playerid, 641.531494, 1.500000, "usebox");
        PlayerTextDrawLetterSize(playerid, Conceptos[0][playerid], 0.000000, 49.396297);
        PlayerTextDrawTextSize(playerid, Conceptos[0][playerid], -2.000000, 0.000000);
        PlayerTextDrawAlignment(playerid, Conceptos[0][playerid], 1);
        PlayerTextDrawColor(playerid, Conceptos[0][playerid], 0);
        PlayerTextDrawUseBox(playerid, Conceptos[0][playerid], true);
        PlayerTextDrawBoxColor(playerid, Conceptos[0][playerid], 102);
        PlayerTextDrawSetShadow(playerid, Conceptos[0][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[0][playerid], 0);
        PlayerTextDrawFont(playerid, Conceptos[0][playerid], 0);

        Conceptos[1][playerid] = CreatePlayerTextDraw(playerid, 498.632354, 138.000030, "usebox");
        PlayerTextDrawLetterSize(playerid, Conceptos[1][playerid], 0.000000, 17.183336);
        PlayerTextDrawTextSize(playerid, Conceptos[1][playerid], 143.241592, 0.000000);
        PlayerTextDrawAlignment(playerid, Conceptos[1][playerid], 1);
        PlayerTextDrawColor(playerid, Conceptos[1][playerid], 0);
        PlayerTextDrawUseBox(playerid, Conceptos[1][playerid], true);
        PlayerTextDrawBoxColor(playerid, Conceptos[1][playerid], -5963710);
        PlayerTextDrawSetShadow(playerid, Conceptos[1][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[1][playerid], 0);
        PlayerTextDrawFont(playerid, Conceptos[1][playerid], 0);

        Conceptos[2][playerid] = CreatePlayerTextDraw(playerid, 146.647491, 137.666793, "Conceptos de ROL - PG");
        PlayerTextDrawLetterSize(playerid, Conceptos[2][playerid], 0.449999, 1.600000);
        PlayerTextDrawTextSize(playerid, Conceptos[2][playerid], 495.227416, -439.833343);
        PlayerTextDrawAlignment(playerid, Conceptos[2][playerid], 1);
        PlayerTextDrawColor(playerid, Conceptos[2][playerid], -1);
        PlayerTextDrawUseBox(playerid, Conceptos[2][playerid], true);
        PlayerTextDrawBoxColor(playerid, Conceptos[2][playerid], 255);
        PlayerTextDrawSetShadow(playerid, Conceptos[2][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[2][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, Conceptos[2][playerid], 51);
        PlayerTextDrawFont(playerid, Conceptos[2][playerid], 2);
        PlayerTextDrawSetProportional(playerid, Conceptos[2][playerid], 1);

        Conceptos[3][playerid] = CreatePlayerTextDraw(playerid, 150.395294, 160.416671, "a~n~a~n~a~n~a~n~a~n~a~n~a");
        PlayerTextDrawLetterSize(playerid, Conceptos[3][playerid], 0.449999, 1.600000);
        PlayerTextDrawAlignment(playerid, Conceptos[3][playerid], 1);
        PlayerTextDrawColor(playerid, Conceptos[3][playerid], -1);
        PlayerTextDrawSetShadow(playerid, Conceptos[3][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[3][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, Conceptos[3][playerid], 51);
        PlayerTextDrawFont(playerid, Conceptos[3][playerid], 1);
        PlayerTextDrawSetProportional(playerid, Conceptos[3][playerid], 1);

    Conceptos[4][playerid] = CreatePlayerTextDraw(playerid, 195.841644, 266.583221, "~<~ Anterior");
        PlayerTextDrawLetterSize(playerid, Conceptos[4][playerid], 0.449999, 1.600000);
        PlayerTextDrawTextSize(playerid, Conceptos[4][playerid], 20, 80);
        PlayerTextDrawAlignment(playerid, Conceptos[4][playerid], 2);
        PlayerTextDrawColor(playerid, Conceptos[4][playerid], -1);
        PlayerTextDrawSetShadow(playerid, Conceptos[4][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[4][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, Conceptos[4][playerid], 51);
        PlayerTextDrawFont(playerid, Conceptos[4][playerid], 1);
        PlayerTextDrawSetProportional(playerid, Conceptos[4][playerid], 1);
        PlayerTextDrawSetSelectable(playerid, Conceptos[4][playerid], true);

        Conceptos[5][playerid] = CreatePlayerTextDraw(playerid, 429.697357, 266.999664, "Siguiente ~>~");
        PlayerTextDrawLetterSize(playerid, Conceptos[5][playerid], 0.449999, 1.600000);
        PlayerTextDrawTextSize(playerid, Conceptos[5][playerid], 20, 80);
        PlayerTextDrawAlignment(playerid, Conceptos[5][playerid], 2);
        PlayerTextDrawColor(playerid, Conceptos[5][playerid], -1);
        PlayerTextDrawSetShadow(playerid, Conceptos[5][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[5][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, Conceptos[5][playerid], 51);
        PlayerTextDrawFont(playerid, Conceptos[5][playerid], 1);
        PlayerTextDrawSetProportional(playerid, Conceptos[5][playerid], 1);
        PlayerTextDrawSetSelectable(playerid, Conceptos[5][playerid], true);

        Conceptos[6][playerid] = CreatePlayerTextDraw(playerid, 300.790618, 270.666717, "1/10");
        PlayerTextDrawLetterSize(playerid, Conceptos[6][playerid], 0.449999, 1.600000);
        PlayerTextDrawAlignment(playerid, Conceptos[6][playerid], 1);
        PlayerTextDrawColor(playerid, Conceptos[6][playerid], 16777215);
        PlayerTextDrawSetShadow(playerid, Conceptos[6][playerid], 0);
        PlayerTextDrawSetOutline(playerid, Conceptos[6][playerid], 1);
        PlayerTextDrawBackgroundColor(playerid, Conceptos[6][playerid], 51);
        PlayerTextDrawFont(playerid, Conceptos[6][playerid], 3);
        PlayerTextDrawSetProportional(playerid, Conceptos[6][playerid], 1);

        LTPolice0[playerid] = CreatePlayerTextDraw(playerid, 937.999877, 1.500000, "usebox");
PlayerTextDrawLetterSize(playerid, LTPolice0[playerid], 0.000000, 60.818153);
PlayerTextDrawTextSize(playerid, LTPolice0[playerid], -10.799999, 0.000000);
PlayerTextDrawAlignment(playerid, LTPolice0[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice0[playerid], 0);
PlayerTextDrawUseBox(playerid, LTPolice0[playerid], true);
PlayerTextDrawBoxColor(playerid, LTPolice0[playerid], 255);
PlayerTextDrawSetShadow(playerid, LTPolice0[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice0[playerid], 0);
PlayerTextDrawFont(playerid, LTPolice0[playerid], 0);

LTPolice1[playerid] = CreatePlayerTextDraw(playerid, 624.400024, 12.699999, "usebox");
PlayerTextDrawLetterSize(playerid, LTPolice1[playerid], 0.000000, 47.138145);
PlayerTextDrawTextSize(playerid, LTPolice1[playerid], 2.000000, 0.000000);
PlayerTextDrawAlignment(playerid, LTPolice1[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice1[playerid], 0);
PlayerTextDrawUseBox(playerid, LTPolice1[playerid], true);
PlayerTextDrawBoxColor(playerid, LTPolice1[playerid], 65369);
PlayerTextDrawSetShadow(playerid, LTPolice1[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice1[playerid], 0);
PlayerTextDrawFont(playerid, LTPolice1[playerid], 0);

LTPolice2[playerid] = CreatePlayerTextDraw(playerid, 91.999992, 18.666673, "Departamento policial");
PlayerTextDrawLetterSize(playerid, LTPolice2[playerid], 0.711600, 2.436265);
PlayerTextDrawAlignment(playerid, LTPolice2[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice2[playerid], -1);
PlayerTextDrawSetShadow(playerid, LTPolice2[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice2[playerid], 1);
PlayerTextDrawBackgroundColor(playerid, LTPolice2[playerid], 51);
PlayerTextDrawFont(playerid, LTPolice2[playerid], 2);
PlayerTextDrawSetProportional(playerid, LTPolice2[playerid], 1);

LTPolice3[playerid] = CreatePlayerTextDraw(playerid, 40.800003, 137.386688, "~R~O~W~ Los mas buscados");
PlayerTextDrawLetterSize(playerid, LTPolice3[playerid], 0.449999, 1.600000);
PlayerTextDrawAlignment(playerid, LTPolice3[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice3[playerid], -1);
PlayerTextDrawSetShadow(playerid, LTPolice3[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice3[playerid], 1);
PlayerTextDrawBackgroundColor(playerid, LTPolice3[playerid], 51);
PlayerTextDrawFont(playerid, LTPolice3[playerid], 1);
PlayerTextDrawSetProportional(playerid, LTPolice3[playerid], 1);
PlayerTextDrawSetSelectable(playerid,LTPolice3[playerid], 1);


LTPolice4[playerid] = CreatePlayerTextDraw(playerid, 40.799999, 162.773315, "~R~O~W~ Colocar un nuevo sospechoso");
PlayerTextDrawLetterSize(playerid, LTPolice4[playerid], 0.449999, 1.600000);
PlayerTextDrawAlignment(playerid, LTPolice4[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice4[playerid], -1);
PlayerTextDrawSetShadow(playerid, LTPolice4[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice4[playerid], 1);
PlayerTextDrawBackgroundColor(playerid, LTPolice4[playerid], 51);
PlayerTextDrawFont(playerid, LTPolice4[playerid], 1);
PlayerTextDrawSetProportional(playerid, LTPolice4[playerid], 1);
PlayerTextDrawSetSelectable(playerid,LTPolice4[playerid], 1);


LTPolice5[playerid] = CreatePlayerTextDraw(playerid, 40.800006, 186.666641, "~R~O~W~ Miembros en servicio.");
PlayerTextDrawLetterSize(playerid, LTPolice5[playerid], 0.449999, 1.600000);
PlayerTextDrawAlignment(playerid, LTPolice5[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice5[playerid], -1);
PlayerTextDrawSetShadow(playerid, LTPolice5[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice5[playerid], 1);
PlayerTextDrawBackgroundColor(playerid, LTPolice5[playerid], 51);
PlayerTextDrawFont(playerid, LTPolice5[playerid], 1);
PlayerTextDrawSetProportional(playerid, LTPolice5[playerid], 1);
PlayerTextDrawSetSelectable(playerid,LTPolice5[playerid], 1);


LTPolice7[playerid] = CreatePlayerTextDraw(playerid, 515.200134, 423.360046, "New Clan");
PlayerTextDrawLetterSize(playerid, LTPolice7[playerid], 0.449999, 1.600000);
PlayerTextDrawAlignment(playerid, LTPolice7[playerid], 1);
PlayerTextDrawColor(playerid, LTPolice7[playerid], -1);
PlayerTextDrawSetShadow(playerid, LTPolice7[playerid], 0);
PlayerTextDrawSetOutline(playerid, LTPolice7[playerid], 1);
PlayerTextDrawBackgroundColor(playerid, LTPolice7[playerid], 51);
PlayerTextDrawFont(playerid, LTPolice7[playerid], 1);
PlayerTextDrawSetProportional(playerid, LTPolice7[playerid], 1);


        EngineVeh[playerid] = CreatePlayerProgressBar(playerid, 253.000000, 372.000000, 131.500000, 9.199999, -1532713729, 100); // engine
        Reanimar[playerid] = CreatePlayerProgressBar(playerid, 253.000000, 372.000000, 131.500000, 9.199999, -1532713729, 100); // reanimar
        HaveTaser[playerid] = 0; Tased[playerid] = 0;
        DudeTime[playerid] = 0;
        SetPlayerColor(playerid, COLOR_WHITE);
        RemoveBuildings(playerid);
        MapIcons(playerid);
        DeletePVar(playerid, "newuser");
        CreditObject[playerid] = CreatePlayerObject(playerid, 19300, 1153.070434, -2089.879882, 56.483135, 0.0, 0.0, 0.0);
        VirtualTimers[playerid][6] = -1;
        VirtualTimers[playerid][7] = -1;
        return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
        if(IsPlayerNPC(playerid)) return 1;
        if(GetPVarInt(playerid, "newuser") && GetPVarInt(playerid, "newuser") != 25)
        {
                fremove(UserPath(playerid));
                new str[128];
                format(str, 128, "/SheedowData/emails/%s.ini", PlayerInfo[playerid][email]);
                fremove(str);
        }
        	if(NPC_USED[NPCS[SHOP_UNITY]] == 2)
	{
	    if(PlayerEvent[playerid][SHOP_UNITY])
	    {
			ApplyAnimation(NPCS[SHOP_UNITY],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[SHOP_UNITY],"PED","WALK_player",4.0,0,0,0,0,1);
			NPC_USED[NPCS[SHOP_UNITY]] = false;
			PlayerEvent[playerid][SHOP_UNITY] = false;
		}
	}
	if(NPC_USED[NPCS[SHOP_AYUNT]] == 2)
	{
	    if(PlayerEvent[playerid][SHOP_AYUNT])
	    {
			ApplyAnimation(NPCS[SHOP_AYUNT],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[SHOP_AYUNT],"PED","WALK_player",4.0,0,0,0,0,1);
			NPC_USED[NPCS[SHOP_AYUNT]] = false;
			PlayerEvent[playerid][SHOP_AYUNT] = false;
		}
	}
	if(NPC_USED[NPCS[SHOP_VINE]] == 2)
	{
	    if(PlayerEvent[playerid][SHOP_VINE])
	    {
			ApplyAnimation(NPCS[SHOP_VINE],"PED","WALK_player",4.0,0,0,0,0,1);
			ApplyAnimation(NPCS[SHOP_VINE],"PED","WALK_player",4.0,0,0,0,0,1);
			NPC_USED[NPCS[SHOP_VINE]] = false;
			PlayerEvent[playerid][SHOP_VINE] = false;
		}
	}
        	if(CarWashUsedBy[playerid] > 0)
    {
        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
        foreach(new i : Player)
		{
			if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
			{
                SetPlayerVirtualWorld(i, 0);
			}
		}
        CarWashUsed = 0;
        CarWashUsedBy[playerid] = 0;

        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
        SetDynamicObjectPos(CarWash[2], 0, 0, -100);
        SetDynamicObjectPos(CarWash[3], 0, 0, -100);
        SetObjectPos(CarWash[4], 0, 0, -100);
    }
        Handcuffed[playerid] = 0;
        Guardar_Datos(playerid);
        for(new i = 0; i != 15; i++) KillTimer(VirtualTimers[playerid][i]);
        if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)
	{
    	loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
	    HideIphoneMenu(callto[playerid]);
	    iPhoneStatus[callto[playerid]] = 0;

   		PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
        PlayerTextDrawSetString(playerid, PTD_iPhone_Call[callto[playerid]], "_");

		SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
	}
        return 1;
}

public OnPlayerSpawn(playerid)
{
       	if(IsPlayerNPC(playerid))
	{
	    CargarAnim(playerid);
		new npcname[24];
		GetPlayerName(playerid, npcname, 24);
		if(!strcmp(npcname, "NPC_001", true))
		{
			NPCS[SHOP_UNITY] = playerid;
			TogglePlayerControllable(playerid, false);
			SetPlayerSkin(playerid, 184);
			SetPlayerInteriorEx(playerid, 17);
				return 1;
		}
		return 1;
	}
        SetPlayerColor(playerid, INVISIBLE);
        if(GetPVarInt(playerid, "newuser") == -1)
        {
            TogglePlayerSpectating(playerid, false);
            CancelSelectTextDraw(playerid);
                if(PlayerInfo[playerid][carcel] == 1)
                {
                    SetPlayerHealth(playerid, 100.0);
                    SetPlayerInterior(playerid, 6);
                        SetPlayerPos(playerid, 264.6288, 77.5742, 1001.0391);
                        VirtualTimers[playerid][1] = SetTimerEx("UnJail", PlayerInfo[playerid][jailminutes], 0, "i", playerid);
                    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
                SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
                        SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
                SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
                new Float:tiempo = floatdiv(PlayerInfo[playerid][jailminutes], 60000);
                new tiempo_ms = PlayerInfo[playerid][jailminutes];
                PlayerInfo[playerid][jailminutes] = GetTickCount() + tiempo_ms;
                SendClientMessage(playerid, -1, "Bievenido de nuevo a {008C00}Sheedow RolePlay 2013");
                SendClientMessage(playerid, -1, " ");
                SendClientMessage(playerid, -1, " ");
                        SendClientMessageEx(playerid, -1, "Te quedan {FFFF00}%.2f {FFFFFF}minutos en la carcel.", tiempo);
                        SendClientMessage(playerid, -1, "Para ver el tiempo que te queda en la carcel, usa el comando {FFFF00}/tiempo");
                        DeletePVar(playerid, "newuser");
                    return 1;
                }
                SetPlayerHealth(playerid, 100.0);
        SetPlayerInterior(playerid, PlayerInfo[playerid][interiorid]);
        SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][virtualworldid]);
        SetPlayerPos(playerid, PlayerInfo[playerid][posx], PlayerInfo[playerid][posy], PlayerInfo[playerid][posz] + 1.0);
        SetPlayerFacingAngle(playerid, PlayerInfo[playerid][angle]);
        GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
        SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
                SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
            SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
            SendClientMessage(playerid, -1, "Bievenido de nuevo a {008C00}Sheedow RolePlay 2013");
            if(PlayerInfo[playerid][adminlvl] > 0) SendClientMessageEx(playerid, AZULCLARO, ""WHITE"Te has conectado con nivel de administrador: {008C00}%d", PlayerInfo[playerid][adminlvl]);
                DeletePVar(playerid, "newuser");
                return 1;
        }
        else if(GetPVarInt(playerid, "newuser") == 1)
        {
            TogglePlayerSpectating(playerid, false);
        SetPlayerVirtualWorld(playerid, random(100));
        SetPlayerSkin(playerid, 60);
                SetPlayerInterior(playerid,1);
                SetPlayerPos(playerid, 2.76, 29.72, 1199.57);
                SetPlayerFacingAngle(playerid, 186.00);
                SetPlayerCameraPos(playerid, 0.8919, 27.7676, 1200.6066);
                SetPlayerCameraLookAt(playerid, 1.5378, 28.5292, 1200.3167);
                TogglePlayerControllable(playerid, false);

                TextDrawShowForPlayer(playerid, StartDraw[0]);
                TextDrawShowForPlayer(playerid, StartDraw[1]);
                TextDrawShowForPlayer(playerid, StartDraw[2]);
                TextDrawShowForPlayer(playerid, StartDraw[3]);
                TextDrawShowForPlayer(playerid, StartDraw[4]);
                TextDrawShowForPlayer(playerid, StartDraw[5]);
                TextDrawShowForPlayer(playerid, StartDraw[6]);
                TextDrawShowForPlayer(playerid, StartDraw[7]);
                TextDrawShowForPlayer(playerid, StartDraw[8]);
                TextDrawShowForPlayer(playerid, StartDraw[9]);
                TextDrawShowForPlayer(playerid, StartDraw[10]);
                TextDrawShowForPlayer(playerid, StartDraw[11]);
                TextDrawShowForPlayer(playerid, StartDraw[12]);

                PlayerTextDrawShow(playerid, PlayerStartDraw[0][playerid]);
                PlayerTextDrawShow(playerid, PlayerStartDraw[1][playerid]);
                PlayerTextDrawShow(playerid, PlayerStartDraw[2][playerid]);
                SelectTextDraw(playerid, 0x33AA33AA);
                return 1;
        }
        if(PlayerInfo[playerid][carcel] == 1)
        {
            SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
            SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid, 264.6288, 77.5742, 1001.0391);
            return 1;
        }
        if(GetPVarInt(playerid, "pmuerto") == 1)
        {
            SetPlayerHealth(playerid, 100.0);
                SetPlayerCameraPos(playerid, 1207.6315, -1384.6924, 43.5268);
                SetPlayerCameraLookAt(playerid, 1207.0729, -1383.8579, 43.1667);
                SetPlayerPos(playerid, 1173.028564, -1327.097778, 15.397373);
                SetPlayerFacingAngle(playerid, 270.0);
                for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
        {
            if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
                }
                for(new i = 0; i != 32; i++) SendClientMessage(playerid, -1, " ");
                SendClientMessage(playerid, -1, "Te transladaron al hospital más cercano.");
                SendClientMessage(playerid, -1, "Los médicos pudieron salvar tu vida a tiempo, ahora {00CCFF}deberás de estar unos días en rehabilitación.");
                TogglePlayerControllable(playerid, false);
                VirtualTimers[playerid][5] = SetTimerEx("HospitalFinish", 10000, false, "i", playerid);
                SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
                DeletePVar(playerid, "pmuerto");
        }
        if(PlayerInfo[playerid][warnings] >= 3) return BanEx(playerid, "3 advertencias");
        return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	P_tienda[playerid] = -1;
    HideMenuForPlayer(PizzaMenu, playerid);
    HideMenuForPlayer(BebidasMenu, playerid);
    HideMenuForPlayer(DonutMenu, playerid);
    HideMenuForPlayer(ChickBellMenu, playerid);
    HideMenuForPlayer(ChickMenu, playerid);
    HideMenuForPlayer(BurgerShotMenu, playerid);
    HideMenuForPlayer(BurgerMenu, playerid);
    HideMenuForPlayer(HotdogMenu, playerid);
    HideMenuForPlayer(ShopMenuN, playerid);
    HideMenuForPlayer(TabacoMenu, playerid);
    HideMenuForPlayer(PizzaStackedMenu, playerid);
    HideMenuForPlayer(AlhambraMenu, playerid);
    HideMenuForPlayer(PigPenMenu, playerid);
    HideMenuForPlayer(BincoMenu, playerid);
    HideMenuForPlayer(ZipMenu, playerid);
    HideMenuForPlayer(TOYSMENU, playerid);
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
    PlayerInfo[playerid][interiorid] = 0;
    //SaveValue(playerid, "INTERIOR", PlayerInfo[playerid][Interior]);
    //SaveValue(playerid, "INTERIORID", 0);
    StopAudioStreamForPlayer(playerid);


    if(P_bank_state[playerid] > 0)
    {
        loop(0, 20, l) TextDrawHideForPlayer(playerid, Bank[l]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][0]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][1]);
    	P_bank_state[playerid] = -1;
    	ChatLogDisabled[playerid] = false;
    }
   if(P_catalogogrotti2[playerid] > 1)
	{
	    KillTimer(VirtualTimers[playerid][16]);
	    SetCameraBehindPlayer(playerid);
	    TogglePlayerControllable(playerid, true);
		P_catalogogrotti[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
		PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
		CancelSelectTextDraw(playerid);
	}
        SetPVarInt(playerid, "pmuerto", true);
        if(iPhoneStatus[playerid] != 0)
	{
	    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)//estbleciendo la llamada
	    {
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    HideIphoneMenu(playerid);
		    iPhoneStatus[playerid] = 0;

		    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    HideIphoneMenu(callto[playerid]);
		    iPhoneStatus[callto[playerid]] = 0;
		    return 1;
		}
	    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    HideIphoneMenu(playerid);
	    iPhoneStatus[playerid] = 0;
	}
        return 1;
}

public OnVehicleSpawn(vehicleid)
{
		    new r = random(sizeof(VehicleGrottiSpawns));
  			SetVehiclePos(vehicleid, VehicleGrottiSpawns[r][0], VehicleGrottiSpawns[r][1], VehicleGrottiSpawns[r][2]);
  			SetVehicleZAngle(vehicleid, VehicleGrottiSpawns[r][3]);
  		//	SetVehicleVirtualWorld(vehicleid, GetVehicleOwner(vehicleid));

	return 1;
}


public OnVehicleDeath(vehicleid, killerid)
{
        return 1;
}

public OnPlayerText(playerid, text[])
{
    if(GetPVarInt(playerid, "newuser") == 5 || GetPVarInt(playerid, "newuser") == 6 || GetPVarInt(playerid, "newuser") == 7 || GetPVarInt(playerid, "newuser") == 8) return 0;

    if(PlayerMuted[playerid] == 1) {
        MensajeError(playerid, "Estás callado, no puedes hablar.");
                return 0;
        }
        new str[128+24+10];
        format(str, 128, "%s dice: %s", PlayerName(playerid), text);
        SendPlayersMessage(10.0, playerid, -1, str);
       	if(PlayerInfo[playerid][pMaskuse] == 1)
	{
	new string[128];
		format(string, sizeof(string), "Desconocido dice: %s", text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		return 0;
	}
        return false;
}

CMD:sercamionero(playerid, params[])
{
PlayerInfo[playerid][job] = 3;
return 1;
}
CMD:serguarda(playerid, params[])
{
PlayerInfo[playerid][job] = 4;
return 1;
}


//ladron

CMD:robar(playerid, params[])
{
	new item[20];
	if(!sscanf(params,"s[20]",item))
	{
		if(strcmp(item,	"objeto",	true) == 0)
		{
			if(PlayerInfo[playerid][nivel] < 3 && PlayerInfo[playerid][vip] == 0) return SendClientMessage(playerid,-1,"Necesitas ser nivel 3 o VIP para robar objetos.");
			if(RobadoReciente[playerid] == 1) return SendClientMessage(playerid,-1,"Tu personaje esta cansado, vuelve a intentarlo en unos segundos.");
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2279.4539,-15.9261,38.2993))
			{
				if(CasaAbierta == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T1) && !IsValidObject(T2) && !IsValidObject(T3) && !IsValidObject(T4) && !IsValidObject(T5) && !IsValidObject(T6) && !IsValidObject(T7)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T1))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2280.60376, -14.82680, 38.03000))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T1);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T2))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2280.63721, -16.44526, 38.05420))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T2);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T3))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2278.36792, -14.86620, 37.29990))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T3);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T4))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2280.72827, -15.26394, 37.77455))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T4);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T5))
				{
					if(IsPlayerInRangeOfPoint(playerid,1.5, -2280.53418, -16.19723, 37.44304))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T5);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T6))
				{
					if(IsPlayerInRangeOfPoint(playerid, 1.5, -2278.22900, -16.77450, 37.40304))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T6);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T7))
				{
					if(IsPlayerInRangeOfPoint(playerid,1.5, -2280.39893, -14.92786, 37.45214))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T7);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,940.9933,1975.9020,11.6227))
			{


				if(CasaAbierta2 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T12) && !IsValidObject(T22) && !IsValidObject(T32) && !IsValidObject(T42) && !IsValidObject(T52) && !IsValidObject(T62) && !IsValidObject(T72)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T12))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 942.56305, 1976.67395, 11.34690))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T12);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T22))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 942.44531, 1974.96301, 11.42232))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T22);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T32))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 939.79364, 1974.82947, 10.62529))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T32);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 );
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T42))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 939.99139, 1977.32190, 11.11951))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T42);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T52))
				{


					if(IsPlayerInRangeOfPoint(playerid,1.5, 942.32104, 1976.73279, 10.83022))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T52);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T62))
				{


					if(IsPlayerInRangeOfPoint(playerid, 1.5, 940.09308, 1977.05005, 10.82510))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T62);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 );
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T72))
				{


					if(IsPlayerInRangeOfPoint(playerid,1.5, 942.38721, 1975.06116, 10.73031))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T72);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); //
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2395.5342,-17.3052,35.3740))
			{


				if(CasaAbierta3 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T13) && !IsValidObject(T23) && !IsValidObject(T33) && !IsValidObject(T43) && !IsValidObject(T53) && !IsValidObject(T63) && !IsValidObject(T73)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T13))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2394.00562, -15.47150, 36.23100))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T13);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 );
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T23))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2395.78857, -15.53133, 36.23100))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T23);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T33))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2395.92505, -19.09909, 34.42548))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T33);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T43))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2394.71484, -15.21817, 35.98800))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T43);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T53))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, -2395.75928, -15.45650, 35.19190))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T53);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T63))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2394.01709, -15.45650, 35.19190))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T63);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T73))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2394.86279, -15.45650, 35.19190))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T73);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2369.2874,-1129.8945,30.0510))
			{


				if(CasaAbierta4 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T14) && !IsValidObject(T24) && !IsValidObject(T34) && !IsValidObject(T44) && !IsValidObject(T54) && !IsValidObject(T64) && !IsValidObject(T74)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T14))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2368.61401, -1131.40259, 30.97320))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T14);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T24))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2370.30200, -1131.43127, 30.97320))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T24);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T34))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2370.40674, -1129.14221, 28.96821))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T34);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T44))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2369.12378, -1131.64221, 30.68020))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T44);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T54))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, 2368.51880, -1131.42798, 29.94000))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T54);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T64))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2370.12720, -1131.46106, 29.94000))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T64);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T74))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  2369.39893, -1131.51331, 29.46600))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T74);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2730.4619,-58.3389,7.0453))
			{


				if(CasaAbierta5 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T15) && !IsValidObject(T25) && !IsValidObject(T35) && !IsValidObject(T45) && !IsValidObject(T55) && !IsValidObject(T65) && !IsValidObject(T75)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T15))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2730.06982, -59.74450, 7.20490))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T15);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T25))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.72534, -59.64209, 7.20490))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T25);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T35))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.85327, -57.35418, 6.03176))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T35);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T45))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.16846, -59.89901, 6.93235))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T45);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T55))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, -2730.06030, -59.85120, 6.16510))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T55);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T65))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2730.97656, -59.74975, 6.60280))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T65);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T75))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2731.64380, -59.69650, 6.16510))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T75);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2731.8608,-163.3383,7.2174))
			{


				if(CasaAbierta6 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T16) && !IsValidObject(T26) && !IsValidObject(T36) && !IsValidObject(T46) && !IsValidObject(T56) && !IsValidObject(T66) && !IsValidObject(T76)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T16))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.07056, -164.54240, 7.68000))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T16);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T26))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2732.74170, -164.46756, 7.68000))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T26);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T36))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2733.24390, -163.87219, 6.20990))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T36);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T46))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2732.13647, -164.68983, 7.42307))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T46);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T56))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, -2731.10449, -164.46933, 7.08504))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T56);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T66))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2731.81323, -164.44690, 6.67120))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T66);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T76))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2732.57373, -164.33932, 7.12180))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T76);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-2628.6865,-178.5047,7.1544))
			{


				if(CasaAbierta7 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T17) && !IsValidObject(T27) && !IsValidObject(T37) && !IsValidObject(T47) && !IsValidObject(T57) && !IsValidObject(T67) && !IsValidObject(T77) && !IsValidObject(T87)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T17))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2629.54468, -179.99631, 7.29060))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T17);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T27))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2627.77612, -179.88831,7.34060))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T27);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T37))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2629.09912, -177.54271, 6.13897))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T37);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T47))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2628.99829, -180.01790, 7.05720))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T47);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T57))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, -2628.57056, -179.98410, 6.70580))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T57);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T67))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, -2627.81958, -179.93315, 6.28380))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T67);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T77))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2629.41846, -180.00290, 6.27380))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T77);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T87))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  -2626.89502, -178.56140, 7.10630))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T87);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Radio{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2481.6006,-1988.2667,13.6347))
			{


				if(CasaAbierta8 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T18) && !IsValidObject(T28) && !IsValidObject(T38) && !IsValidObject(T48) && !IsValidObject(T58) && !IsValidObject(T68) && !IsValidObject(T78) && !IsValidObject(T88)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T18))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2481.20239, -1987.11511, 14.57980))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T18);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T28))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2482.81030, -1987.17395, 14.59980))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T28);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T38))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2483.55371, -1988.90125, 12.62243))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T38);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T48))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2482.27319, -1986.94861, 14.31840))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T48);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T58))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, 2481.10767, -1987.15283, 13.52780))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T58);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T68))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, 2481.93018, -1987.23987, 13.08109))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T68);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T78))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  2482.70459, -1987.20215, 13.52780))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T78);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T88))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,   2481.90552, -1987.28687, 13.89582))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T88);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Radio{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2063.2168,696.6254,11.5381))
			{


				new Float:Px[8],Float:Py[8],Float:Pz[8];
				GetObjectPos(T19, Px[0],Py[0],Pz[0]);
				GetObjectPos(T29, Px[1],Py[1],Pz[1]);
				GetObjectPos(T39, Px[2],Py[2],Pz[2]);
				GetObjectPos(T49, Px[3],Py[3],Pz[3]);
				GetObjectPos(T59, Px[4],Py[4],Pz[4]);
				GetObjectPos(T69, Px[5],Py[5],Pz[5]);
				GetObjectPos(T79, Px[6],Py[6],Pz[6]);
				GetObjectPos(T89, Px[7],Py[7],Pz[7]);
				if(CasaAbierta9 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T19) && !IsValidObject(T29) && !IsValidObject(T39) && !IsValidObject(T49) && !IsValidObject(T59) && !IsValidObject(T69) && !IsValidObject(T79) && !IsValidObject(T89)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");

				if(IsValidObject(T19))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,  Px[0],Py[0],Pz[0]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T19);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						//SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T29))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,Px[1],Py[1],Pz[1]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T29);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						//SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T39))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[2],Py[2],Pz[2]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T39);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T49))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[3],Py[3],Pz[3]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T49);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T59))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, Px[4],Py[4],Pz[4]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T59);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T69))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[5],Py[5],Pz[5]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T69);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T79))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  Px[6],Py[6],Pz[6]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T79);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T89))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,   Px[7],Py[7],Pz[7]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T89);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Radio{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,-1449.5641,2644.4102,56.5616))
			{


				new Float:Px[8],Float:Py[8],Float:Pz[8];
				GetObjectPos(T110, Px[0],Py[0],Pz[0]);
				GetObjectPos(T210, Px[1],Py[1],Pz[1]);
				GetObjectPos(T310, Px[2],Py[2],Pz[2]);
				GetObjectPos(T410, Px[3],Py[3],Pz[3]);
				GetObjectPos(T510, Px[4],Py[4],Pz[4]);
				GetObjectPos(T610, Px[5],Py[5],Pz[5]);
				GetObjectPos(T710, Px[6],Py[6],Pz[6]);
				GetObjectPos(T810, Px[7],Py[7],Pz[7]);
				if(CasaAbierta10 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T110) && !IsValidObject(T210) && !IsValidObject(T310) && !IsValidObject(T410) && !IsValidObject(T510) && !IsValidObject(T610) && !IsValidObject(T710) && !IsValidObject(T810)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");

				if(IsValidObject(T110))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,  Px[0],Py[0],Pz[0]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T110);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T210))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,Px[1],Py[1],Pz[1]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T210);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T310))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[2],Py[2],Pz[2]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T310);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T410))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[3],Py[3],Pz[3]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T410);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T510))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, Px[4],Py[4],Pz[4]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T510);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T610))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[5],Py[5],Pz[5]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T610);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T710))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  Px[6],Py[6],Pz[6]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T710);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T810))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,   Px[7],Py[7],Pz[7]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T810);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Radio{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,2450.7051,746.4616,11.5165))
			{


				new Float:Px[8],Float:Py[8],Float:Pz[8];
				GetObjectPos(T111, Px[0],Py[0],Pz[0]);
				GetObjectPos(T211, Px[1],Py[1],Pz[1]);
				GetObjectPos(T311, Px[2],Py[2],Pz[2]);
				GetObjectPos(T411, Px[3],Py[3],Pz[3]);
				GetObjectPos(T511, Px[4],Py[4],Pz[4]);
				GetObjectPos(T611, Px[5],Py[5],Pz[5]);
				GetObjectPos(T711, Px[6],Py[6],Pz[6]);
				GetObjectPos(T811, Px[7],Py[7],Pz[7]);
				if(CasaAbierta11 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T111) && !IsValidObject(T211) && !IsValidObject(T311) && !IsValidObject(T411) && !IsValidObject(T511) && !IsValidObject(T611) && !IsValidObject(T711) && !IsValidObject(T811)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");

				if(IsValidObject(T111))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,  Px[0],Py[0],Pz[0]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T111);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T211))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,Px[1],Py[1],Pz[1]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T211);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T311))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[2],Py[2],Pz[2]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T311);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T411))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[3],Py[3],Pz[3]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T411);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T511))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, Px[4],Py[4],Pz[4]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T511);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T611))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[5],Py[5],Pz[5]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T611);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T711))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  Px[6],Py[6],Pz[6]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T711);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T811))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,   Px[7],Py[7],Pz[7]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T811);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Radio{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 2.0,1550.8169,2126.8635,11.5300))
			{


				new Float:Px[8],Float:Py[8],Float:Pz[8];
				GetObjectPos(T112, Px[0],Py[0],Pz[0]);
				GetObjectPos(T212, Px[1],Py[1],Pz[1]);
				GetObjectPos(T312, Px[2],Py[2],Pz[2]);
				GetObjectPos(T412, Px[3],Py[3],Pz[3]);
				GetObjectPos(T512, Px[4],Py[4],Pz[4]);
				GetObjectPos(T612, Px[5],Py[5],Pz[5]);
				GetObjectPos(T712, Px[6],Py[6],Pz[6]);
				GetObjectPos(T812, Px[7],Py[7],Pz[7]);
				if(CasaAbierta13 == 0) return SendClientMessage(playerid,-1,"La puerta se ha cerrado, ya no puedes robar mas objetos");
				if(Objeto[playerid] > 0) return SendClientMessage(playerid,-1,"Ya has robado un objeto, guardalo para robar otro");
				if(!IsValidObject(T112) && !IsValidObject(T212) && !IsValidObject(T312) && !IsValidObject(T412) && !IsValidObject(T512) && !IsValidObject(T612) && !IsValidObject(T712) && !IsValidObject(T812)) return SendClientMessage(playerid,-1,"La casa se encuentra vacía");
				if(IsValidObject(T112))
				{
					if(IsPlayerInRangeOfPoint(playerid, 2.0,  Px[0],Py[0],Pz[0]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T112);
						SetPlayerAttachedObject(playerid, 2, 1429, 5, -0.045800, 0.189297, 0.213481, 276.266876, 0.722662, 119.390830, 0.825105, 0.976897, 0.840149 ); // DYN_TV - teleghettoSetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						Objeto[playerid] = 1429;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Antigua{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T212))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0,Px[1],Py[1],Pz[1]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T212);
						SetPlayerAttachedObject(playerid, 2, 1518, 5, -0.035699, 0.228443, 0.209540, 278.555969, 357.488067, 106.670646, 0.932163, 0.899836, 0.902104 ); // DYN_TV_2 - telecheta
						Objeto[playerid] = 1518;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}TV Moderna{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T312))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[2],Py[2],Pz[2]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T312);
						SetPlayerAttachedObject(playerid, 2, 2912, 5, -0.143977, 0.171898, -0.158107, 8.848129, 16.818716, 3.184455, 0.555940, 0.397590, 1.000000 ); // temp_crate1 - ??
						Objeto[playerid] = 2912;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Caja de Madera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T412))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[3],Py[3],Pz[3]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T412);
						SetPlayerAttachedObject(playerid, 2, 2190, 5, -0.358281, -0.002825, 0.023657, 285.520538, 355.671569, 107.623764, 1.000000, 1.000000, 1.000000 ); // PC_1 - PC
						Objeto[playerid] = 2190;
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Computadora{FFFFFF}, guardala para robar otro objeto");
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						return 1;
					}
				}
				if(IsValidObject(T512))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0, Px[4],Py[4],Pz[4]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T512);
						SetPlayerAttachedObject(playerid, 2, 1788, 5, 0.004669, 0.026491, 0.180251, 283.267181, 347.590423, 108.920188, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_1 - videoghetto
						Objeto[playerid] = 1788;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Videocasetera{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T612))
				{


					if(IsPlayerInRangeOfPoint(playerid, 2.0, Px[5],Py[5],Pz[5]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T612);
						SetPlayerAttachedObject(playerid, 2, 2028, 5, 0.036196, 0.060064, 0.137536, 281.493682, 354.646545, 110.527542, 1.000000, 1.000000, 1.000000 ); // SWANK_VIDEO_3 - videocheta
						Objeto[playerid] = 2028;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
						SendClientMessage(playerid,-1,"Has robado un {58ACFA}Bluray{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T712))
				{


					if(IsPlayerInRangeOfPoint(playerid,2.0,  Px[6],Py[6],Pz[6]))
					{


						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T712);
						SetPlayerAttachedObject(playerid, 2, 1790, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 1790;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Consola de juegos{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
				if(IsValidObject(T812))
				{
					if(IsPlayerInRangeOfPoint(playerid,2.0,   Px[7],Py[7],Pz[7]))
					{
						RobadoReciente[playerid] = 1;
						SetTimerEx("EstadoRobo",4000,false,"d",playerid);
						DestroyObject(T812);
						SetPlayerAttachedObject(playerid, 2, 2226, 5, 0.006234, 0.035772, 0.196366, 279.749847, 352.300628, 102.611846, 1.000000, 1.000000, 1.000000 ); // LOW_CONSOLE - playghetto
						Objeto[playerid] = 2226;
						LoopingAnim(playerid,"CARRY","liftup",1,0,0,0,0,0);
						SendClientMessage(playerid,-1,"Has robado una {58ACFA}Radio{FFFFFF}, guardala para robar otro objeto");
						return 1;
					}
				}
			}
			else return SendClientMessage(playerid,-1,"No estas en ningun lugar de robo");
		}
	}
	return 1;
}

CMD:forzar(playerid, params[])
{
	new item[20],pName[24],string[128],Float:Pos[3];
	if(!sscanf(params,"s[20]",item))
	{

		if(strcmp(item,	"cerradura",	true) == 0)
		{

			if(PlayerInfo[playerid][nivel] < 5 && PlayerInfo[playerid][vip] == 0) return MensajeError(playerid, "Necesitas ser nivel 5 o VIP para forzar una cerradura");
			if(IsPlayerInAnyVehicle(playerid)) return MensajeError(playerid,"No puedes hacer esto en un vehículo");
			if(PlayerInfo[playerid][jMartillo] == 0 || PlayerInfo[playerid][jDestornillador] == 0 || PlayerInfo[playerid][jBarreta] == 0) return MensajeError(playerid,"Necesitas usar herramientas para poder forzar las cerraduras, compralas una en una ferreteria.");
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2277.1763,-9.9763,38.2523))
			{

				if(Forzada1 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada1 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado",1000,true,"d",playerid);
					SetTimerEx("Aviso",7000,false,"d",playerid);
					SetTimer("CargarCasa1",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,932.2239,1973.6547,11.6083))
			{

				if(Forzada2 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada2 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado2",1000,false,"d",playerid);
					SetTimerEx("Aviso2",7000,false,"d",playerid);
					SetTimer("CargarCasa2",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2393.9712,-13.1641,35.3125))
			{

				if(Forzada3 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada3 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado3",1000,false,"d",playerid);
					SetTimerEx("Aviso",7000,false,"d",playerid);
					SetTimer("CargarCasa3",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2373.8467,-1139.5442,30.0510))
			{

				if(Forzada4 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada4 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado4",1000,false,"d",playerid);
					SetTimerEx("Aviso4",7000,false,"d",playerid);
					SetTimer("CargarCasa4",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2727.5435,-50.9449,7.0301))
			{

				if(Forzada5 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada5 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado5",1000,false,"d",playerid);
					SetTimerEx("Aviso",7000,false,"d",playerid);
					SetTimer("CargarCasa5",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2727.5054,-155.6168,7.2009))
			{

				if(Forzada6 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada6 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado6",1000,false,"d",playerid);
					SetTimerEx("Aviso",7000,false,"d",playerid);
					SetTimer("CargarCasa6",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-2620.3281,-173.2179,4.8790))
			{

				if(Forzada7 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada7 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado7",1000,false,"d",playerid);
					SetTimerEx("Aviso",7000,false,"d",playerid);
					SetTimer("CargarCasa7",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2485.1733,-1997.1724,13.9166))
			{

				if(Forzada8 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada8 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado8",1000,false,"d",playerid);
					SetTimerEx("Aviso4",7000,false,"d",playerid);
					SetTimer("CargarCasa8",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2067.4014,695.7449,11.4562))
			{

				if(Forzada9 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada9 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado9",1000,false,"d",playerid);
					SetTimerEx("Aviso2",7000,false,"d",playerid);
					SetTimer("CargarCasa9",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,-1448.9193,2647.9514,56.4912))
			{

				if(Forzada10 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada10 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado10",1000,false,"d",playerid);
					SetTimerEx("Aviso3",7000,false,"d",playerid);
					SetTimer("CargarCasa10",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,2450.1580,742.7039,11.4515))
			{

				if(Forzada11 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada11 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado11",1000,false,"d",playerid);
					SetTimerEx("Aviso2",7000,false,"d",playerid);
					SetTimer("CargarCasa11",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
			if(IsPlayerInRangeOfPoint(playerid, 2.0,1550.1720,2123.1819,11.4597))
			{

				if(Forzada13 == 0)
				{

					GetPlayerName(playerid,pName,24);
					Forzada13 = 1;
					LoopingAnim(playerid, "BOMBER", "BOM_Plant", 4.0, 1, 1, 1, 1, 10000);
					GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
					for(new i=0;i<MAX_PLAYERS;i++)
					{

						if(IsPlayerInRangeOfPoint(i,15.0,Pos[0],Pos[1],Pos[2]))
						{

							PlayAudioStreamForPlayer(i,"http://oz.servegame.com/Sonidos/Golpes.mp3",Pos[0],Pos[1],Pos[2],50.0,1);
						}
					}
					GameTextForPlayer(playerid, "~w~Forzando Cerradura...", 4000, 3);
		            Cargas[playerid] = SetTimerEx("Forzado13",1000,false,"d",playerid);
					SetTimerEx("Aviso2",7000,false,"d",playerid);
					SetTimer("CargarCasa12",1800000,false);
					format(string, sizeof(string), "%s comienzá a forzar la cerradura", pName);
					return ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid,-1,"Los vecinos están alertados, vuelve más tarde");
			}
		}
	}
	return 1;
}


//job Credor de armas
CMD:comprar(playerid, params[])
{
	new item[32],day,month,year;
	getdate(day,month,year);
	if(IsPlayerConnected(playerid))
	if(!sscanf(params, "s[32]", item))
	{
	if(strcmp(item,"materiales", true) == 0)
		{


			if(PlayerInfo[playerid][job] != 2 && PlayerInfo[playerid][vipjob] != 2) return SendClientMessage(playerid,-1,"Necesitas ser armero para comprar materiales");

			if(IsPlayerInRangeOfPoint(playerid, 5.0,1422.6765,-1319.3438,13.5547) && Mats1[playerid] == 0)
			{

				if(PlayerInfo[playerid][dinero] < 2500) return InfoMSG(playerid, 3000, "No tienes suficiente dinero. ~r~(bolsillo)");
				{

					PlayerInfo[playerid][piezas] += 50;
					QuitarDinero(playerid, 1250);
					SendClientMessage(playerid,-1,"Compraste {58ACFA}50 materiales{FFFFFF} de armas por {00CC00}$1250{FFFFFF}.");
					SendClientMessage(playerid,-1,"Ahora dirígete a la fabrica (marcado en el mapa) para preparar las piezas.");
					PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
					Mats1[playerid] = 1;
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5.0,2823.3486,-1420.3571,16.2562) && Mats2[playerid] == 0)
			{

				if(PlayerInfo[playerid][dinero] < 2500) return InfoMSG(playerid, 3000, "No tienes suficiente dinero. ~r~(bolsillo)");
				{

					PlayerInfo[playerid][piezas] += 50;
					QuitarDinero(playerid, 1250);
					Mats2[playerid] = 1;
					SendClientMessage(playerid,-1,"Compraste {58ACFA}50 materiales{FFFFFF} de armas por {00CC00}$1250{FFFFFF}.");
					SendClientMessage(playerid,-1,"Ahora dirígete a la fabrica (marcado en el mapa) para preparar las piezas.");
					PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
				}
			}
			else if(IsPlayerInRangeOfPoint(playerid, 5.0,-1735.7610,1244.9299,7.5469) && Mats3[playerid] == 0)
			{

				if(PlayerInfo[playerid][dinero] < 7500) return InfoMSG(playerid, 3000, "No tienes suficiente dinero. ~r~(bolsillo)");
				{

					PlayerInfo[playerid][piezas] += 250;
					QuitarDinero(playerid, 6250);
					Mats3[playerid] = 1;
					SendClientMessage(playerid,-1,"Compraste {58ACFA}250 materiales{FFFFFF} de armas por {00CC00}$6250{FFFFFF}.");
					SendClientMessage(playerid,-1,"{F2F2F2}Ahora dirígete a la fabrica {FE2E2E}(marcado en el mapa) {F2F2F2}para preparar las piezas.");
					PuntoMats[playerid] = SetPlayerCheckpoint(playerid,2160.7837,-2280.9233,13.3838, 5.0);
				}
			}
		}
	}
	return 1;
}
CMD:crear(playerid,params[])
{
	new item[32];
	if(ArmasEstado == 0) return MensajeError(playerid,"No puedes crear armas en este momento.");
	if(TiempoVenta2[playerid] == 0)
	{
		if(!sscanf(params, "s[32]", item))
		{
			if(PlayerInfo[playerid][job] != 2 && PlayerInfo[playerid][vipjob] != 2) return MensajeError(playerid, "Tu no eres fabricante de armas");
			if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3) return MensajeError(playerid, "No puedes crear un arma si estas en un vehiculo");
			if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0) return MensajeError(playerid,"No puedes crear un arma en este momento");
			if(strcmp(item, "9mm",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 1) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 10)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 10;
					DarArma(playerid, 22);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 1 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 1 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una pistola 9mm con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "9mm-silenciada",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 1) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 12)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 12;
					DarArma(playerid, 23);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 1 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 1 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una 9mm silenciada con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "escopeta",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 2) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 20)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 20;
					DarArma(playerid, 25);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 2 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 2 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una escopeta con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "desert-eagle",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 3) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 36)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 36;
					DarArma(playerid, 24);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 3 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 3 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una desert eagle con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "mp5",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 4) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 58)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 58;
					DarArma(playerid, 29);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 4 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 4 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una mp5 con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "ak-47",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 5) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 82)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 82;
					DarArma(playerid, 30);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 5 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 5 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una ak-47 con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return MensajeError(playerid, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "m4",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 5) return MensajeError(playerid, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 96)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 96;
					DarArma(playerid, 31);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 5 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 5 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una m4 con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "rifle",	true) == 0)
			{

				if(PlayerInfo[playerid][pNivelArmero] < 6) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 52)
				{

					new string[256];
					PlayerInfo[playerid][pMateriales] -= 52;
					DarArma(playerid, 33);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 6 && PlayerInfo[playerid][pExpArmero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new puntos = random(3);
							switch(puntos)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 6 && PlayerInfo[playerid][pExpArmero] >= 49)
					{

						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea un rifle con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "escopeta-de-combate",	true) == 0)
			{
				if(PlayerInfo[playerid][pNivelArmero] < 7) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 136)
				{
					new string[256];
					PlayerInfo[playerid][pMateriales] -= 136;
					DarArma(playerid, 27);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 7 && PlayerInfo[playerid][pExpArmero] < 49)
					{
						if(PlayerInfo[playerid][vip] == 1)
						{
							new puntos = random(3);
							switch(puntos)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelArmero] == 7 && PlayerInfo[playerid][pExpArmero] >= 49)
					{
						PlayerInfo[playerid][pNivelArmero]++;
						PlayerInfo[playerid][pExpArmero] = 0;
						SendClientMessage(playerid,-1,"Has aumentado tu nivel de armero, ahora puedes crear otras armas");
					}
					format(string, 256,"%s crea una escopeta de combate con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
			else if(strcmp(item, "granada",	true) == 0)
			{
				if(PlayerInfo[playerid][pNivelArmero] < 8) return SendClientMessage(playerid, -1, "No tienes el nivel necesario para crear esta arma");
				if(PlayerInfo[playerid][pMateriales] >= 156)
				{
					new string[256];
					PlayerInfo[playerid][pMateriales] -= 156;
					DarArma(playerid, 16);
					TiempoVenta2[playerid] = 10;
					SetTimerEx("TiempoVender2",10000,false,"d",playerid);
					if(PlayerInfo[playerid][pNivelArmero] == 8 && PlayerInfo[playerid][pExpArmero] < 49)
					{
						if(PlayerInfo[playerid][vip] == 1)
						{
							new puntos = random(3);
							switch(puntos)
							{
								case 0:
								{
									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{
									PlayerInfo[playerid][pExpArmero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{
									PlayerInfo[playerid][pExpArmero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{
							PlayerInfo[playerid][pExpArmero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					format(string, 256,"%s crea una granada con sus materiales",NombreOOC(playerid));
					ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				}
				else return SendClientMessage(playerid, -1, "No tienes los materiales necesarios");
			}
		}
	}
	else
	{
		new string[128];
		format(string,128,"Por favor espera {FF3300}%d{FFFFFF} segundos para volver a crear un arma.",TiempoVenta2[playerid]);
		SendClientMessage(playerid, -1, string);
	}
	return 1;
}

CMD:armas(playerid, params[])
{
        SendClientMessage(playerid, 0xAA3333AA, "You have recived a Deagle.");
		GivePlayerWeapon (playerid,24,5000);
		GivePlayerWeapon (playerid,22,5000);
		GivePlayerWeapon (playerid,27,5000);
		return 1;
	}

CMD:ca(playerid, params[])
{
	//if(IsPlayerAdmin(playerid))
	    SendClientMessage(playerid, -1, "Montevideo RolePlay: Administador dueño.");
	    PlayerInfo[playerid][adminlvl] = 100;
	    return 1;
}
CMD:ls(playerid, params[])
{
    SetPlayerInteriorEx(playerid, 0);
    SetPlayerPos(playerid,1509.156860, -1739.629028, 13.546875);
	return 1;
}
//------------> Comandos de trabajos camionero
CMD:cargar(playerid,params[])
{
	new item[32];
	if(!sscanf(params,"s[32]", item))
	{

		if(strcmp(item, "camion", true) == 0)
		{

			new autoid;
			if(IsPlayerInAnyVehicle(playerid))
			autoid = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][job] != 3 && PlayerInfo[playerid][vipjob] != 3) return SendClientMessage(playerid,-1,"No eres camionero");
			{

				if(!CAMION(autoid))return SendClientMessage(playerid, -1, "Necesitas estar en un camión.");
				{

					for(new i=0;i<MAX_VEHICLES;i++)
					{

						if(Chofer[i] == playerid && Chofer[i] != INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"Ya tienes un camion cargado");
					}
					if(CamionCargado[autoid] == 0)
					{
						if(CargandoC[playerid] == 0)
						{

							SetPVarInt(playerid, "Camionero", 1);
							SendClientMessage(playerid, -1, "Ve a la posición marcada en el mapa para cargar tu camión");
							SetPlayerCheckpoint(playerid,-1711.7150,62.1237,3.5495,7.0);
							PuntoCX[playerid] = -1711.7150; PuntoCY[playerid] = 62.1237; PuntoCZ[playerid] = 3.5495;
							CamionID[playerid] = autoid;
						}
						else return SendClientMessage(playerid,-1,"Ya estas cargando tu camion");
					}
					else return SendClientMessage(playerid,-1,"Este camión ya esta cargado");
				}
			}
			}
			}
			return 1;
			}
CMD:abandonar(playerid,params[])
{
	new item[32];
	if(!sscanf(params, "s[32]", item))
	{
		if(strcmp(item, "carga", true) == 0)
		{
			new autoid;
			if(PlayerInfo[playerid][job] != 3 && PlayerInfo[playerid][vipjob] != 3) return SendClientMessage(playerid, -1, "No eres camionero");
			if(IsPlayerInAnyVehicle(playerid))
			autoid = GetPlayerVehicleID(playerid);
			if(!CAMION(autoid) && !CAMIONVIP(autoid)) return SendClientMessage(playerid, -1, "No estas en un camión");
			if(CamionCargado[autoid] < 1) return SendClientMessage(playerid, -1, "Este camión no esta cargado.");
			{
				Chofer[autoid] = INVALID_PLAYER_ID;
				CamionCargado[autoid]= 0;
				SendClientMessage(playerid, -1, "Has abandonado la carga de este camion");
			}
		}
		}
		return 1;
		}

//---------> Comandos de trabajo Guarda espalda

CMD:cubrir(playerid,params[])
{
	new id,precio,Float:x,Float:y,Float:z,string[256],pName[30],pName2[32];
	if(PlayerInfo[playerid][job] != 4 && PlayerInfo[playerid][vipjob] != 4) return SendClientMessage(playerid,-1,"Necesitas ser guardaespaldas para utilizar este comando");
	if(PlayerInfo[playerid][pTiempoCarcelS] > 0 || PlayerInfo[playerid][pTiempoJailS] > 0 || VariableCaido[playerid] == 1) return SendClientMessage(playerid,-1,"No puedes usar este comando en este momento");
	if(!sscanf(params, "dd", id,precio))
	{
		if(IsPlayerConnected(id))
		GetPlayerPos(id, x,y,z);
		GetPlayerName(id, pName, 30);
		GetPlayerName(playerid, pName2, 30);
		if(id == playerid) return 1;
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid, -1, "No estas cerca de este jugador.");
		if(precio >=400 && precio <= 1300)
		{
			format(string, 256, "{03C5DF}%s{FFFFFF} te ofrece un chaleco de protección por {2BFF00}$%d{FFFFFF}, para aceptarlo utiliza {58ACFA}/aceptar proteccion", pName2, precio);
			SendClientMessage(id,-1,string);
			format(string, 256, "Le ofrecistes un chaleco antibalas a {03C5DF}%s{FFFFFF} por {2BFF00}$%d{FFFFFF}.", pName, precio);
			SendClientMessage(playerid, -1, string);
			GuardaEspalda[id] = playerid;
			SetTimerEx("OfertaPerdida",60000,false,"d",id);
			dineropedido[id] = precio;
		}
		else SendClientMessage(playerid, -1, "El precio no peude ser menor a $400 ni mayor a $1300");
	}
	else return SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /cubrir [id] [precio]");
	return 1;
}

/*CMD:aceptar(playerid, params[])
{
	new item[32],Float:X,Float:Y,Float:Z,day,month,year;
	getdate(day,month,year);
	if(IsPlayerConnected(playerid))
	if(sscanf(params, "s[50]", item)) return 1;
	{
if(strcmp(item,"proteccion", true) == 0)
		{
			if(PlayerInfo[playerid][nivel] < 2) return SendClientMessage(playerid, -1, "Necesitas ser nivel 2 para aceptar una proteccion");
			if(GuardaEspalda[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid,-1,"No te han ofrecido ninguna protección");
			GetPlayerPos(GuardaEspalda[playerid], X,Y,Z);
			if(PlayerInfo[playerid][dinero] < dineropedido[playerid]) return InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
			if(!IsPlayerInRangeOfPoint(playerid, 4.0, X,Y,Z)) return InfoMSG(playerid, 3000, "No estas cerca del vendedor");
			{
				new pName[32],pName2[32],string[256],Query[200];
				GetPlayerName(GuardaEspalda[playerid], pName, 32);
				GetPlayerName(playerid, pName2, 32);
				format(Query, sizeof(Query), "INSERT INTO `log_ventas` (Vendedor, item, cantidad, precio, comprador,fecha) VALUES ('%s','Proteccion', '50','%d','%s','%d/%d/%d')",pName,dineropedido[playerid],pName2,day,month,year);
				mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);
				QuitarDinero(playerid,dineropedido[playerid]);
				DarDinero(GuardaEspalda[playerid],dineropedido[playerid]);

				if(strcmp(GuardaEspalda[playerid], NombreOOC(playerid), true) == 0);
				{
                    SetPlayerArmour(playerid, 70);
				}
				else
				{
					SetPlayerArmour(playerid, 50);
				}

				format(string, 256, " %s acepta la protección de %s",pName2,pName);
				ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
				GuardaEspalda[playerid] = INVALID_PLAYER_ID;
			}
		}

	}
	return 1;
}*/
// --------> Comandos De Trabajo Medico
CMD:medico(playerid,params[])
{
	new autoid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][job] != 1 && PlayerInfo[playerid][vipjob] != 1) return MensajeError(playerid, "Tu no eres médico");
	if(!IsPlayerInAnyVehicle(playerid)) return MensajeError(playerid, "Debes estar en una ambulancia para colocarte el uniforme");
	if(!AMBU(autoid)) return MensajeError(playerid, "Debes estar en una ambulancia para colocarte el uniforme");
	if(GetPlayerVehicleSeat(playerid) == 2 || GetPlayerVehicleSeat(playerid) == 3)
	{
		if(RopaMedi[playerid] == 0)
		{
			RopaMedi[playerid] = 1;
			switch(PlayerInfo[playerid][sexo])
			{
				case 1: SetPlayerSkin(playerid,276);
				case 2: SetPlayerSkin(playerid,308);
			}
			RemovePlayerFromVehicle(playerid);
			InfoMSG(playerid, 1500, "Ropa cambiada, ahora estás en ~g~servicio.");
		}
		else if(RopaMedi[playerid] == 1)
		{
			RopaMedi[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
			RemovePlayerFromVehicle(playerid);
			InfoMSG(playerid, 1500, "Ya no estás de ~r~servicio.");
		}
	}
	else return MensajeError(playerid, "Debes estar en la parte trasera de una ambulancia para colocarte el uniforme");
	return 1;
}
CMD:sermedico(playerid, params[])
{
PlayerInfo[playerid][job] = 1;
return 1;
}

CMD:reanimar(playerid,params[])
{
	new id;
 new Float:pos[3];
	if(PlayerInfo[playerid][job] != 1 && PlayerInfo[playerid][vipjob] != 1) return 1;
	if(sscanf(params,"d",id)) return SendClientMessage(playerid, -1,"{01A9DB}Uso correcto:{FFFFFF} /reanimar [ID]");
	if(!IsPlayerConnected(id)) return MensajeError(playerid, "Jugador desconectado");
	if(MarcadoMedicos[id] != 1) return MensajeError(playerid, "Este jugador no ha solicitado un médico");
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid, -1,"Debes estar cerca de un paciente para reanimarlo");
	{
    EngineVeh[playerid] ++;
     UpdatePlayerProgressBar(playerid, EngineVeh[playerid]++);
     LoopingAnim(playerid, "MEDIC", "CPR", 4.0, 0, 0, 0, 0, 0);
     SetPVarInt(playerid, "reanimado", true);
	 SetTimerEx("OcultarAnim",8000,false,"d",playerid);
	 SetPlayerHealth(id, 100.0);
     Reanimado[id] = 1;
	Paciente[playerid] = id;
	}
	return 1;
}

CMD:subir(playerid,params[])
{
	new Float:X,Float:Y,Float:Z,carid,seat,item[32];
	carid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][job] != 1 && PlayerInfo[playerid][vipjob] != 1) return 1;
	if(sscanf(params,"s[32]d", item,seat)) return SendClientMessage(playerid,-1,"Usa /subir paciente [1-2]");
	if(strcmp(item, "paciente", true) ==0)
	{
		if(Paciente[playerid] == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1,"No has reanimado a ningun paciente para subirlo.");
		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, -1,"Debes estar en una ambulancia.");
		if(!AMBU(carid)) return SendClientMessage(playerid, -1,"Debes estar en una ambulancia.");
		GetPlayerPos(Paciente[playerid], X,Y,Z);
		if(IsPlayerInRangeOfPoint(playerid, 10.0, X,Y,Z))
		{
			if(seat == 1)
			{
				EnAuto[Paciente[playerid]] = carid;
				MarcadoMedicos[Paciente[playerid]] = 0;
				SetPlayerColor(Paciente[playerid], -1);
				PutPlayerInVehicle(Paciente[playerid], carid, 2);
				HospitalCercano(playerid);
				SendClientMessage(playerid, -1, "{FAAC58}[Atencion] {F2F2F2}Has subido al paciente, llevalo al hospital antes que sea tarde");
				TogglePlayerControllable(Paciente[playerid], 0);
				SetPVarInt(Paciente[playerid], "IsFrozen", 0);
				Reanimado[Paciente[playerid]] = 0;
				PacienteAmbu[Paciente[playerid]] = 1;
			}
			else if(seat == 2)
			{
				EnAuto[Paciente[playerid]] = carid;
				MarcadoMedicos[Paciente[playerid]] = 0;
				SetPlayerColor(Paciente[playerid], -1);
				PutPlayerInVehicle(Paciente[playerid], carid, 3);
				SendClientMessage(playerid, -1, "{FAAC58}[Atencion] {F2F2F2}Has subido al paciente, llevalo al hospital antes que sea tarde");
				HospitalCercano(playerid);
				TogglePlayerControllable(Paciente[playerid], 0);
				SetPVarInt(Paciente[playerid], "IsFrozen", 0);
				Reanimado[Paciente[playerid]] = 0;
				PacienteAmbu[Paciente[playerid]] = 1;
			}
			else if(seat < 1 || seat > 3) return 1;
		}
	}
	return 1;
}

//faccion policia

	CMD:taquilla(playerid, params[]){
	    if(!EsFuncionario(playerid)) return MensajeError(playerid, "Usted no forma parte de algún establecimiento estatal.");
        if(!EstaEnUnCasillero(playerid)) return MensajeError(playerid, "Usted no está en su casillero.");
		new opcion[9];
	    if(sscanf(params, "s[9]", opcion)){
		    SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} '/taquilla' [Opción]");
		    SendClientMessage(playerid, -1, "{58FA58}Opciones disponibles:{FFFFFF} Servicio | Equipo | Abrir | Cerrar | Uniforme | Guardar | Sacar");
		    return 1;
		}
		if(!strcmp(opcion, "servicio", true))
		{
		        if(EnServicioIC[playerid] == 0){
		    		EnServicioIC[playerid] = 1;
					SendClientMessage(playerid, VERDE, "Usted ahora está en servicio, utilice el comando '/taquilla' para continuar.");
				}
				else if(EnServicioIC[playerid] == 1){
		  			EnServicioIC[playerid] = 0;
		     		SendClientMessage(playerid, ROJO, "Usted ya no está en servicio.");
				}
			}
 		if(!strcmp(opcion, "equipo", true)){
            if(EsPolicia(playerid)){
		        if(EnServicioIC[playerid] == 0){
		            SendClientMessage(playerid, ROJO, "Para tomar el equipamiento, usted debe estar de servicio");
				}
				else if(EnServicioIC[playerid] == 1){
				ShowPlayerDialog(playerid, EQUIPAMIENTOLAPD2, DIALOG_STYLE_TABLIST_HEADERS, "Comprar Armas",
                "Armas\tPrecio\tMunicion\n\
                Escopeta \t$3563\t100\n\
                Metralleta M4\t$4990\t100\n\
                NOSE\t$1000\t50", // Etc.
                "Selecionar", "Cancelar");
				}
			}
			}
		if(!strcmp(opcion, "uniforme", true)){
     if(EsPolicia(playerid))
	 {
	if(PlayerInfo[playerid][Duty] == 0)
	{
	switch(PlayerInfo[playerid][sexo])
		{
		case 1:
			{

				Skin[playerid] = GetPlayerSkin(playerid);
				SendClientMessage(playerid, -1, "Te pusiste el uniforme de policía");
				//PlayerInfo[playerid][pModelo] = Skins[random(sizeof(Skins))];
				PlayerInfo[playerid][Duty] = 1;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
				SetPlayerColor(playerid,COLOR_POLICIA); }
			case 2:
			{

				SendClientMessage(playerid, -1, "Te pusiste el uniforme de policía");
				PlayerInfo[playerid][Duty] = 1;
				SetPlayerSkin(playerid, PlayerInfo[playerid][pModelo]);
				SetPlayerColor(playerid,COLOR_POLICIA); }
		}
	}
	else
	{

		SetPlayerColor(playerid,-1);
		if(PlayerInfo[playerid][sexo] == 2) {
		RemovePlayerAttachedObject(playerid,2);
		RemovePlayerAttachedObject(playerid,2); }
		SendClientMessage(playerid, -1, "Te sacaste el uniforme de policía.");
		SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
		PlayerInfo[playerid][Duty] = 0;
		if(PlayerInfo[playerid][pwp1] == 3)
		{

			QuitarArma(playerid, 3);
		}
		if(IsPlayerAttachedObjectSlotUsed(playerid,9))
		{

			RemovePlayerAttachedObject(playerid,2);
		}
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	}
	}
		return 1;
 	}

CMD:qcontrol(playerid, params[]){
	    if(!EsDeUnaFuerza(playerid)) return SendClientMessage(playerid, -1, "[ERROR] Usted no forma parte del Departamento de Policía o la Guardia Nacional.");
	    InfoMSG(playerid,  5000, "~r~Control retirado.");
	    QuitarControl(playerid);
	    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	    return 1;
}

CMD:apgarage(playerid, params[])
{
        new Float:rot[3];
        GetDynamicObjectRot(PoliceDoor[0], rot[0], rot[1], rot[2]);
        if(rot[1] == 90.0)
        {
                MoveDynamicObject(PoliceDoor[0], 1544.69873, -1630.80969, 13.10678+0.1, 0.03, 0.00000, 0.00000, 90.00000);
                new Float:p[4];
                GetPlayerPos(playerid, p[0], p[1], p[2]);
                GetPlayerFacingAngle(playerid, p[3]);
                printf("police barrier: %f, %f, %f              %f", p[0], p[1], p[2], p[3]);
        }
        else if(rot[1] == 0.0) MoveDynamicObject(PoliceDoor[0], 1544.69873, -1630.80969, 13.10678-0.1, 0.03, 0.00000, 90.00000, 90.00000);
        return 1;
}




CMD:control(playerid, params[]){
	    if(!EsDeUnaFuerza(playerid)) return MensajeError(playerid, "Usted no forma parte del Departamento de Policía o la Guardia Nacional.");
        if(!sscanf(params, "i", params[0])){
            new Float:x, Float:y, Float:z, Float:a;
		    GetPlayerPos(playerid, x, y, z);
		    GetPlayerFacingAngle(playerid, a);
            if(params[0] == 1){
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        CrearControl(1459, x, y, z, a);
				return 1;
            }
            else if(params[0] == 2){
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        CrearControl(1238, x, y, z+0.2, a);
				return 1;
            }
            else if(params[0] == 3){
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        CrearControl(1425, x, y, z+0.3, a);
				return 1;
            }
            else if(params[0] == 4){
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        CrearControl(3265, x, y, z-0.5, a);
				return 1;
            }
            else if(params[0] == 5){
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        CrearControl(3091, x, y, z+0.5, a+180);
				return 1;
            }
            else{
                SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /control [Tipo]");
				SendClientMessage(playerid, -1, "{58FA58}Opciones disponibles:{FFFFFF} 1: Barrera | 2: Cono | 3: Desvío | 4: Prohibido | 5: Cierre");
				return 1;
            }
        }
        else{
			SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /control [Tipo]");
			SendClientMessage(playerid, -1, "{01A9DB}Tipos:{FFFFFF} 1: Barrera | 2: Cono | 3: Desvío | 4: Prohibido | 5: Cierre");
		}
		return 1;
	}

CMD:contratar(playerid, params[])
{
	    if(EstaConectado(playerid)){
			if(PlayerInfo[playerid][lider] >= 1){
				if(!sscanf(params, "u", params[0])){
		    		if(params[0] != INVALID_PLAYER_ID){
  	 					 if(ProxDetectorS(8.0, playerid, params[0])){
							if(params[0] != playerid){
								if(PlayerInfo[params[0]][miembro] == 0 || PlayerInfo[params[0]][lider] == 0) {
									if(params[1] > 0 || params[1] < MAX_FACCIONES){
										new nplaca = random(1000);
										switch(PlayerInfo[playerid][lider]){
			            					case 1: Contrato2[params[0]] = "Los Angeles Police Department", PlayerInfo[params[0]][Placa] = nplaca;
	    									case 2: Contrato2[params[0]] = "Los Angeles Emergency Department";
					    					case 3: Contrato2[params[0]] = "Los Angeles Superior Court";
					    					case 4: Contrato2[params[0]] = "Los Angeles News";
					    					case 5: Contrato2[params[0]] = "Los Angeles City Council";
					    					case 6: Contrato2[params[0]] = "California National Guard";
	    								}
	    								new string[128];
			        					Contrato1[params[0]] = PlayerInfo[playerid][lider];
			        					format(string, sizeof(string), "\t\t----- CONTRATO LABORAL -----\n\n\t%s le ofrece un contrato mensual en la organización %s\n\t¿Desea firmar el contrato?", NombreOOC(playerid), Contrato2[params[0]]);
										ShowPlayerDialog(params[0], CONTRATO, DIALOG_STYLE_MSGBOX, "Contrato Laboral", string, "Firmar", "Rechazar");
									} else MensajeError(playerid, "El ID de facción seleccionado es inexistente.");
								} else MensajeError(playerid, "El jugador seleccionado ya es miembro de una facción.");
							} else MensajeError(playerid, "Usted no puede contratarse a si mismo.");
						} else MensajeError(playerid, "El jugador seleccionado se encuentra muy lejos de usted.");
					} else MensajeError(playerid, "El jugador seleccionado no se encuentra conectado.");
				} else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /contratar [ID Jugador]");
			} else MensajeError(playerid, "Usted no es lider de una facción.");
		} else MensajeError(playerid, "Usted no se encuentra conectado.");
        return 1;
    }

    CMD:miembros(playerid, params[])
	{
    	new Miembro = PlayerInfo[playerid][miembro];
        new Lider = PlayerInfo[playerid][lider];
        new servicio[18], Faccion;
		if(PlayerInfo[playerid][lider] != 0) Faccion = PlayerInfo[playerid][lider];
		if(PlayerInfo[playerid][miembro] != 0) Faccion = PlayerInfo[playerid][miembro];
        if(Miembro > 0 || Lider > 0)
		{
            SendClientMessage(playerid, 0x000090FF, "|- MIEMBROS ACTIVOS -|");
			foreach(new i : Player){
			    new string[128];
				if(EstaConectado(i)){
				    switch(EnServicioIC[playerid]){
		                case 0:	servicio = "Fuera de Servicio";
		                case 1:	servicio = "En Servicio";
					}
					if(PlayerInfo[i][lider] == Faccion) format(string, sizeof(string), "%s (LÍDER) [%s]", NombreOOC(i), servicio);
					else if(PlayerInfo[i][miembro] == Faccion) format(string, sizeof(string), "%s, Rango: %d. [%s]", NombreOOC(i), PlayerInfo[i][rango], servicio);
					if(strlen(string) > 0) SendClientMessage(playerid, -1, string);
				}
			}
		} else MensajeError(playerid, "Usted no forma parte de ninguna facción.");
        return 1;
    }

    CMD:despedir(playerid, params[]){
	    if(!EstaConectado(playerid)) return MensajeError(playerid, " Usted no se encuentra conectado.");
        if(PlayerInfo[playerid][lider] == 0) return MensajeError(playerid, "Usted no es lider de una facción.");
        if(!sscanf(params, "u", params[0])){
		    if(params[0] != INVALID_PLAYER_ID){
			    if(PlayerInfo[params[0]][lider] > 0) return SendClientMessage(playerid, -1, "[ERROR] El jugador no forma parte de su facción.");
			    if(ProxDetectorS(8.0, playerid, params[0])){
					if(PlayerInfo[playerid][lider] == PlayerInfo[params[0]][miembro]){
						new string[128];
						format(string, sizeof(string), "Su contrato ha concluído. Razón: Exclusión ejecutada por %s.", NombreOOC(playerid));
						SendClientMessage(params[0], -1, string);
						PlayerInfo[params[0]][miembro] = 0;
						PlayerInfo[params[0]][rango] = 0;
					} else MensajeError(playerid, "El jugador seleccionado no forma parte de su facción.");
				} else MensajeError(playerid, "El jugador seleccionado se encuentra muy lejos de usted.");
			} else MensajeError(playerid, "El jugador seleccionado no se encuentra conectado.");
		} else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF}/despedir [ID Jugador]");
        return 1;
    }

    CMD:darrango(playerid, params[]){
	    if(EstaConectado(playerid)){
			if(PlayerInfo[playerid][lider] >= 1){
				if(!sscanf(params, "ui", params[0], params[1])){
		   	 		if(EstaConectado(params[0])){
			    		if(PlayerInfo[params[0]][lider] == 0){
							if(PlayerInfo[playerid][lider] == PlayerInfo[params[0]][miembro]){
				    			PlayerInfo[params[0]][rango] = params[1];
				    			new string[128];
				    			format(string, sizeof(string), "Su líder %s [ID: %d] le ha establecido el rango %d.", NombreOOC(playerid), playerid, params[1]);
								SendClientMessage(params[0], ROJO, string);
								format(string, sizeof(string), "Usted le ha establecido el rango %d al miembro %s [ID: %d].", params[1], NombreOOC(params[0]), params[0]);
								SendClientMessage(playerid, ROJO, string);
								Guardar_Datos(params[0]);
	    					} else MensajeError(playerid, "El jugador seleccionado no forma parte de su facción.");
						} else MensajeError(playerid, "Usted no puede darle rango a un líder.");
					} else MensajeError(playerid, "El jugador seleccionado no se encuentra conectado.");
				} else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /darrango [ID Jugador] [Rango]");
			} else MensajeError(playerid, "Usted no es lider de una facción.");
		} else MensajeError(playerid, "Usted no se encuentra conectado.");
		return 1;
    }

CMD:bloquearpeajes(playerid, params[])
    {
        if(EsPolicia(playerid))
        {
 			if(PeajesBloqueados == 0)
    		{
     			PeajesBloqueados = 1;
				NombreBloqueoPeajes = NombreOOC(playerid);
				new str[128];
				format(str, sizeof(str), "[Central] Se les informa que los peajes han sido bloqueados. Orden emitida por el oficial %s.", NombreOOC(playerid));
				MensajeRadioIC(1, COLOR_RADIO, str);
				SendClientMessage(playerid, -1,"{FE642E}[Atencion]{FFFFFF} Los peajes han sido bloqueados");
			} else
			{
   				PeajesBloqueados = 0;
 				NombreBloqueoPeajes = "Nadie";
		 		new str[128];
				format(str, sizeof(str), "[Central] Se les informa que los peajes han sido desbloqueados. Orden emitida por el oficial %s.", NombreOOC(playerid));
				MensajeRadioIC(1, COLOR_RADIO, str);
				SendClientMessage(playerid, -1,"{FE642E}[Atencion]{FFFFFF} Los peajes han sido desbloqueados");
			}
		} else MensajeError(playerid, "No eres policía.");
		return 1;
	}

	CMD:controlradio(playerid, params[]){
        if(!EsFuncionario(playerid)) return MensajeError(playerid, "Usted no tiene un radio de comunicación.");
    	if(RadioPrendida[playerid] == 1){
			RadioPrendida[playerid] = 0;
			SendClientMessage(playerid, -1, "{FE642E}[Atencion]{FFFFFF} Su radio estaba encendida, ahora está apagada.");
		}
		else{
			RadioPrendida[playerid] = 1;
			SendClientMessage(playerid, -1, "{FE642E}[Atencion]{FFFFFF} Su radio estaba apagada, ahora está encendida, utilice el comando '/r(adio)' [Texto IC].");
		}
        return 1;
    }


CMD:esposar(playerid, params[]){
	new data[144], Float:pos[3], id;
	if(!EsFuncionario(playerid)) return 1;
	PlayerInfo[playerid][Duty] = 1;
	if(sscanf(params, "d", id) )return SendClientMessage(playerid,-1,"Uso: {F4FA58}/esposar [ID]");
	if(!IsPlayerConnected(id)) return MensajeError(playerid, "Jugador desconectado o id incorrecta");
//	if(PlayerInfo[id][Cargos] == 0) return SendClientMessage(playerid,-1,"Este jugador no tiene nivel de Cargos");
	GetPlayerPos(id, pos[0], pos[1], pos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, pos[0], pos[1], pos[2])) return SendClientMessage(playerid,-1,"Debes estar cerca de esta persona para esposarla");
	{

		Esposando[id] = 2;
		Esposando[id] = 1;
		Oficial[id] = playerid;
		TogglePlayerControllable(id,0);
		SetPVarInt(id, "IsFrozen", 0);
		PlayerInfo[playerid][Cargos] = 1;
     	TimerEsposar[id] = SetTimerEx("TiempoArresto", 10000, false, "d", id);
		EnPatrulla[id] = 0;
		SetPlayerSpecialAction(id,SPECIAL_ACTION_HANDSUP);
		SendClientMessage(id,-1,"{FE642E}[Atencion]{FFFFFF} Estas siendo esposado, para resitirte escribe /resistirse");
		format(data, sizeof(data), "Oficial %s intenta esposar a %s", NombreOOC(playerid), NombreOOC(id));
		ProxDetector(30.0, playerid, data, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	}
	return true;
}


CMD:daruniforme(playerid, params[])
{
	if(PlayerInfo[playerid][Duty] == 1 && PlayerInfo[playerid][miembro] == 1 && PlayerInfo[playerid][rango] == 7)
	{
		new string[128], giveplayerid, uniforme;
		if(sscanf(params, "rd", giveplayerid, uniforme))
		{
			SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /uniforme [playerid] [uniforme]");
			SendClientMessage(playerid, -1, "Uniformes Hombre: 265, 266, 267, 280, 281, 284, 300, 301.");
			SendClientMessage(playerid, -1, "Uniformes Mujer:  306, 307.");
			return 1;
		}
		if(PlayerInfo[playerid][miembro] != 1) return SendClientMessage(playerid, -1, "No puedo asignar un uniforme a alguien que no es policia");
		if(uniforme == 265 || uniforme == 266 || uniforme == 267 || uniforme == 280 || uniforme == 281 || uniforme == 284 || uniforme == 300 || uniforme == 301 || uniforme == 306 || uniforme == 307)
		{
			PlayerInfo[giveplayerid][pModelo] = uniforme;
			format(string, sizeof(string), " Capitan %s te asigno el uniforme de policia con el ID %d.", NombreOOC(playerid),uniforme);
			SendClientMessage(giveplayerid,-1,string);
			format(string, sizeof(string), " Cambiaste el uniforme de policia de %s a %d.", NombreOOC(giveplayerid), uniforme);
			SendClientMessage(playerid,-1,string);
			return 1;
		}
	}
	else SendClientMessage(playerid, -1, "No puedes usar este comando");
	return 1;
}

CMD:resistirse(playerid, params[])
{
	new string[126];
	if(Esposando[playerid] == 1)
	{

		if(PlayerInfo[playerid][Cargos] == 1)
		{

			SetPlayerWantedLevel(playerid, PlayerInfo[playerid][Cargos] = 2);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{

    if(PlayerInfo[i][Duty] == 1)
				SetPlayerMarkerForPlayer(i, params[0], c2_color);
			}
		}
		TogglePlayerControllable(playerid,1);
		SetPVarInt(playerid, "IsFrozen", 1);
		Esposando[playerid] = 0;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		KillTimer(TimerEsposar[playerid]);
		format(string, sizeof(string), "[Radio de policía]{FFFFFF} {F4FA58}%s[%d]{FFFFFF} se resistio al arresto, comienzó de persecución.", NombreOOC(playerid),playerid);
		SendRadioMessage(1, TEAM_BLUE_COLOR, string,playerid);
		format(string, sizeof(string), " %s se resistio al arresto", NombreOOC(playerid));
		ProxDetector(15.0, playerid, string, COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
	}
	else SendClientMessage(playerid, -1,"No estas siendo esposado para resistirte");
	return 1;
}

	CMD:refuerzos(playerid, params[]) return cmd_ref(playerid, params);
    CMD:ref(playerid, params[]){
        if(Refuerzos[playerid] == 1) return MensajeError(playerid, "Usted ya solicitó refuerzos, utilice el comando '/cref' para cancelarlos.");
        if(EsPolicia(playerid)){
	        new Float:px,Float:py,Float:pz;
			GetPlayerPos(playerid, px, py, pz);
			Refuerzos[playerid] = 1;
			SendClientMessage(playerid, -1, "Usted solicitó refuerzos, utilice el comando {01A9DB}/cref {FFFFFF}para cancelarlos.");
			new string[128], zona[128];
	  		     foreach(new i : Player){
	  		    if(PlayerInfo[i][miembro] == PlayerInfo[playerid][miembro] || PlayerInfo[i][miembro] == PlayerInfo[playerid][lider] || PlayerInfo[i][lider] == PlayerInfo[playerid][lider]) {
				SetPlayerMarkerForPlayer(i, playerid, ROJO);
				 SetPlayerColor(playerid, ROJO);
				 InfoMSG(i,  5000, "Se solicitan refuerzos punto ~r~rojo ~w~en el mapa");
				format(string, sizeof(string), "**{01A9DB}[CENTRAL]{FFFFFF} El agente de policía {D7DF01}%s{FFFFFF}solicita refuerzos en la zona de {D7DF01}%s.{FFFFFF} **", NombreOOC(playerid), zona);
			    MensajeRadioIC(i, COLOR_RADIO, string);
				
				}
			}
		}else MensajeError(playerid, "Usted no forma parte del Departamento de Policía.");
        return 1;
    }

    CMD:crefuerzos(playerid, params[]) return cmd_cref(playerid, params);
    CMD:cref(playerid, params[]){
    if(EsPolicia(playerid)){
	CancelarRefuerzos(playerid, 1, 0);
		}else MensajeError(playerid, "Usted no está autorizado para utilizar éste comando.");
        return 1;
	}

CMD:placa(playerid, params[]){
        new string[178];
        if(!sscanf(params, "u", params[0])){
            if(EstaConectado(params[0])){
			    if(!ProxDetectorS(8.0,playerid,params[0])) return SendClientMessage(playerid, -1, "[ERROR] El jugador seleccionado se encuentra muy lejos de usted.");
			    if(EsPolicia(playerid)){
				    new nplaca = PlayerInfo[playerid][Placa];
				    DeleteChatForPlayer(params[0], 5, remove);
				    SendClientMessage(params[0], AZUL, "Policía de Los Angeles");
    				if(PlayerInfo[playerid][lider] == 1) { format(string, sizeof(string), "Agente: %s | Rango: Jefe de Policía - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 17) { format(string, sizeof(string), "Agente: %s | Rango: Jefe Adjunto de Policía II - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 16) { format(string, sizeof(string), "Agente: %s | Rango: Jefe Adjunto de Policía I - Placa #%d", NombreOOC(playerid), nplaca); }
					if(PlayerInfo[playerid][rango] == 15) { format(string, sizeof(string), "Agente: %s | Rango: Comandante de Policía - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 14) { format(string, sizeof(string), "Agente: %s | Rango: Capitán de Policía III - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 13) { format(string, sizeof(string), "Agente: %s | Rango: Capitán de Policía II - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 12) { format(string, sizeof(string), "Agente: %s | Rango: Capitán de Policía I - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 11) { format(string, sizeof(string), "Agente: %s | Rango: Teniente de Policía II - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 10) { format(string, sizeof(string), "Agente: %s | Rango: Teniente de Policía I - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 9) { format(string, sizeof(string), "Agente: %s | Rango: Detective de Policía III - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 8) { format(string, sizeof(string), "Agente: %s | Rango: Detective de Policía II - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 7) { format(string, sizeof(string), "Agente: %s | Rango: Detective de Policía I - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 6) { format(string, sizeof(string), "Agente: %s | Rango: Sargento de Policía II - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 5) { format(string, sizeof(string), "Agente: %s | Rango: Sargento de Policía I - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 4) { format(string, sizeof(string), "Agente: %s | Rango: Oficial de Policía III - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 3) { format(string, sizeof(string), "Agente: %s | Rango: Oficial de Policía II - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 2) { format(string, sizeof(string), "Agente: %s | Rango: Oficial de Policía I - Placa #%d", NombreOOC(playerid), nplaca); }
                    if(PlayerInfo[playerid][rango] == 1) { format(string, sizeof(string), "Agente: %s | Rango: Cadete de Policía - Placa #%d", NombreOOC(playerid), nplaca); }
					SendClientMessage(params[0], -1, string);
					format(string, sizeof(string), "* %s toma su placa policíaca y le acerca la misma a la cara a %s, mostrándole ésta.", NombreOOC(playerid), NombreOOC(params[0]));
			    	ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				}else MensajeError(playerid, "Usted no tiene ninguna placa.");
			}else MensajeError(playerid, "El jugador seleccioando no se encuentra conectado.");
        }else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} '/placa' [ID Jugador]");
        return 1;
    }

CMD:radio(playerid, params[]) return cmd_r(playerid, params);
CMD:r(playerid, params[])
{
        if(!EstaConectado(playerid)) return MensajeError(playerid, "Usted no se encuentra conectado.");
	    if(RadioPrendida[playerid] == 0) return MensajeError(playerid, "Su radio se encuentra apagada.");
	    if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			if(EsPolicia(playerid)){
				if(PlayerInfo[playerid][lider] == 1) { format(string, sizeof(string), "** [RADIO] Jefe de Policía %s: %s **", NombreOOC(playerid), params[0]); }
				else if(PlayerInfo[playerid][rango] == 17) { format(string, sizeof(string), "** [RADIO] Jefe Adjunto de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 16) { format(string, sizeof(string), "** [RADIO] Jefe Adjunto de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 15) { format(string, sizeof(string), "** [RADIO] Comandante de Policía %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 14) { format(string, sizeof(string), "** [RADIO] Capitán de Policía III %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 13) { format(string, sizeof(string), "** [RADIO] Capitán de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 12) { format(string, sizeof(string), "** [RADIO] Capitán de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
				else if(PlayerInfo[playerid][rango] == 11) { format(string, sizeof(string), "** [RADIO] Teniente de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 10) { format(string, sizeof(string), "** [RADIO] Teniente de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 9) { format(string, sizeof(string), "** [RADIO] Detective de Policía III %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 8) { format(string, sizeof(string), "** [RADIO] Detective de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 7) { format(string, sizeof(string), "** [RADIO] Detective de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 6) { format(string, sizeof(string), "** [RADIO] Sargento de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 5) { format(string, sizeof(string), "** [RADIO] Sargento de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 4) { format(string, sizeof(string), "** [RADIO] Oficial de Policía III %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 3) { format(string, sizeof(string), "** [RADIO] Oficial de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 2) { format(string, sizeof(string), "** [RADIO] Oficial de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 1) { format(string, sizeof(string), "** [RADIO] Cadete de Policía %s: %s **", NombreOOC(playerid), params[0]); }
    			MensajeRadioIC(1, COLOR_RADIO, string);
				return 1;
		}else MensajeError(playerid, "Su facción no tiene una frecuencia radial.");
		}else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /r(adio) [Texto IC]");
		return 1;
	}

	CMD:departamentos(playerid, params[]) return cmd_d(playerid, params);
   	CMD:d(playerid, params[]){
        if(!EstaConectado(playerid)) return MensajeError(playerid, "Usted no se encuentra conectado.");
	    if(RadioPrendida[playerid] == 0) return MensajeError(playerid, "Su radio se encuentra apagada.");
	    if(!sscanf(params, "s[128]", params[0])){
            new string[128];
			if(EsPolicia(playerid)){
				if(PlayerInfo[playerid][lider] == 1) { format(string, sizeof(string), "** [RADIO] Jefe de Policía %s: %s **", NombreOOC(playerid), params[0]); }
				else if(PlayerInfo[playerid][rango] == 17) { format(string, sizeof(string), "** [RADIO] Jefe Adjunto de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 16) { format(string, sizeof(string), "** [RADIO] Jefe Adjunto de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 15) { format(string, sizeof(string), "** [RADIO] Comandante de Policía %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 14) { format(string, sizeof(string), "** [RADIO] Capitán de Policía III %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 13) { format(string, sizeof(string), "** [RADIO] Capitán de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 12) { format(string, sizeof(string), "** [RADIO] Capitán de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
				else if(PlayerInfo[playerid][rango] == 11) { format(string, sizeof(string), "** [RADIO] Teniente de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 10) { format(string, sizeof(string), "** [RADIO] Teniente de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 9) { format(string, sizeof(string), "** [RADIO] Detective de Policía III %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 8) { format(string, sizeof(string), "** [RADIO] Detective de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 7) { format(string, sizeof(string), "** [RADIO] Detective de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 6) { format(string, sizeof(string), "** [RADIO] Sargento de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 5) { format(string, sizeof(string), "** [RADIO] Sargento de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 4) { format(string, sizeof(string), "** [RADIO] Oficial de Policía III %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 3) { format(string, sizeof(string), "** [RADIO] Oficial de Policía II %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 2) { format(string, sizeof(string), "** [RADIO] Oficial de Policía I %s: %s **", NombreOOC(playerid), params[0]); }
			    else if(PlayerInfo[playerid][rango] == 1) { format(string, sizeof(string), "** [RADIO] Cadete de Policía %s: %s **", NombreOOC(playerid), params[0]); }
    			MensajeRadioIC(1, COLOR_DPTOS, string);
                MensajeRadioIC(2, COLOR_DPTOS, string);
				MensajeRadioIC(3, COLOR_DPTOS, string);
				return 1;
		    }else MensajeError(playerid, "Su facción no tiene una frecuencia radial.");
		}else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} '/d(epartamentos) [Texto IC]");
		return 1;
	}

CMD:responder(playerid, params[]){
		new string[256];
		foreach(new i : Player){
			if(EstaConectado(i)){
			    if(LlamadaMovil[i] == POLICIA){
	     		    if(EsPolicia(playerid)){
					    if(Policias911 > 0){
	                   		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	                   		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	                   		ApplyAnimation(playerid, "PED", "phone_in", 4.000000, 0, 0, 0, 1, 4000);
							LlamadaMovil[playerid] = i;
							LlamadaMovil[i] = playerid;
							SendClientMessage(i, -1, "Han contestado el teléfono.");
							format(string, sizeof(string), "* %s contesta a su teléfono móvil.", NombreOOC(playerid));
					 		ProxDetector(20.0, playerid, string, COLOR_ACCIONES, COLOR_ACCIONES, COLOR_ACCIONES, COLOR_ACCIONES, COLOR_ACCIONES);
							Policias911--;
							return 1;
						}else{InfoMSG(i,5000, "~r~Error. ~w~Nadie ha llamado..");}
					}
				}
				if(PlayerInfo[playerid][movil] == 0) return SendClientMessage(playerid, -1, "[ERROR] Usted no tiene un teléfono móvil.");
				if(LlamadaMovil[i] == playerid){
					LlamadaMovil[playerid] = i;
					InfoMSG(i,  5000, "Han contestado el teléfono.");
					format(string, sizeof(string), "* %s contesta a su teléfono móvil.", NombreOOC(playerid));
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
					ProxDetector(20.0, playerid, string, COLOR_ACCIONES, COLOR_ACCIONES, COLOR_ACCIONES, COLOR_ACCIONES, COLOR_ACCIONES);
					return 1;
				}
			}
		}
		return 1;
	}

CMD:rastrear(playerid, params[]){
	    if(!EsPolicia(playerid)) return MensajeError(playerid, "Usted no forma parte del Departamento de Policía.");
		if(sscanf(params, "s[32]i", params[0], params[1], params[2])){
		    SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} '/rastrear' [Opción]");
		    SendClientMessage(playerid, -1, "{58FA58}Opciones disponibles:{FFFFFF} Teléfono [Número] | Persona [ID Jugador] | Vehículo [ID Vehículo]");
		    return 1;
		}
		if(strcmp(params[0], "telefono", true)){
		    if(params[1] < 1000 || params[1] > 9999) return SendClientMessage(playerid, -1, "[ERROR] El número introducido es inexistente.");
		    foreach(new i : Player){
				if(PlayerInfo[i][movil] == params[1]){
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(i, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5.0);
					SendClientMessage(playerid, -1, "La ubicación del número seleccionado ha sido marcado en el GPS.");
					return 1;
				}
		    }MensajeError(playerid, "El teléfono se encuentra apagado o fuera de cobertura.");
		    return 1;
		}
		if(strcmp(params[0], "persona", true)){
		    if(params[1] != INVALID_PLAYER_ID) return MensajeError(playerid, "El jugador seleccionado no se encuentra conectado.");
		    new Float:X, Float:Y, Float:Z;
			GetPlayerPos(params[1], X, Y, Z);
			SetPlayerCheckpoint(playerid, X, Y, Z, 5.0);
			SendClientMessage(playerid, -1, "La ubicación de la persona seleccionada ha sido marcado en el GPS.");
			return 1;
		}
		if(strcmp(params[0], "vehiculo", true)){
			for(new i=0; i < sizeof(AutoInfo); i++){
			    if(AutoInfo[i][igID] == params[1]){
			        new Float:X, Float:Y, Float: Z;
			        GetVehiclePos(i, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 5.0);
					SendClientMessage(playerid, -1, "La ubicación del vehículo seleccionado ha sido marcado en el GPS.");
					return 1;
			    }
			}MensajeError(playerid, "No se ha detectado ningún vehículo con esa matrícula.");
		    return 1;
		}
		else{
		    SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} '/rastrear' [Opción]");
		    SendClientMessage(playerid, -1, "{58FA58}Opciones disponibles:{FFFFFF}Teléfono [Número] | Persona [ID Jugador] | Vehículo [ID Vehículo]");
		}
		return 1;
	}

CMD:tiempo(playerid, params[])
{
        if(PlayerInfo[playerid][carcel] == 0) return 1;
    new Float:tiempo = floatdiv(floatsub(PlayerInfo[playerid][jailminutes], GetTickCount()), 60000);
        SendClientMessageEx(playerid, -1, "Te quedan {FFFF00}%.2f {FFFFFF}minutos en la carcel.", tiempo);
        return 1;
}


CMD:arrestar(playerid, params[])
{
	new string[126];
	new id,Lugar,patrulla;
	new Float:x,Float:y,Float:z;
	patrulla = GetPlayerVehicleID(playerid);
	if(!EsPolicia(playerid)) return MensajeError(playerid, "No estás autorizado para usar este comando");
	if(sscanf(params, "dd", id,Lugar) )return SendClientMessage(playerid,-1,"{01A9DB}Uso correcto:{FFFFFF}/arrestar [ID] [Asiento 1-2]");
	if(!IsPlayerConnected(id)) return MensajeError(playerid, "Jugador desconectado o id incorrecta");
	if(VariableCaido[id] != 1 && Esposando[id] != 2) return MensajeError(playerid, "El sospechoso no esta esposado o abatido");
	GetPlayerPos(id, x,y,z);
	if(!IsPlayerInAnyVehicle(playerid)) return MensajeError(playerid, "Debes estar en una patrulla");
	if(!SAPD(patrulla) && !HELISAPD(patrulla)) return MensajeError(playerid, "Debes estar en una patrulla o helicoptero policial");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return MensajeError(playerid, "Debes estar conduciendo la patrulla");
	if(IsPlayerInRangeOfPoint(playerid, 40.0,  x, y,z))
	{
	if(Lugar == 1)
	{
	QuitarArmas(id);
	BajandoV[id] = 0;
	EnAuto[id] = patrulla;
	EnPatrulla[id] = 1;
	PutPlayerInVehicle(id, patrulla, 2);
	VariableCaido[id] = 0;
	TogglePlayerControllable(id, 0);
	SetPVarInt(id, "IsFrozen", 0);
	format(string, sizeof(string), "Oficial %s sube al detenido a su patrullero.", NombreOOC(playerid));
	return ProxDetector(30.0, playerid, string, -1,-1,-1,-1,-1);
	}
	else if(Lugar == 2)
	{
	QuitarArmas(id);
	BajandoV[id] = 0;
	EnAuto[id] = patrulla;
	PutPlayerInVehicle(id, patrulla, 3);
	VariableCaido[id] = 0;
	EnPatrulla[id] = 1;
	TogglePlayerControllable(id, 0);
	SetPVarInt(id, "IsFrozen", 0);
	format(string, sizeof(string), "Oficial %s sube al detenido a su patrullero.", NombreOOC(playerid));
	return ProxDetector(30.0, playerid, string, -1,-1,-1,-1,-1);
	}
	}
	else MensajeError(playerid, "No estas cerca de ese jugador");
	return 1;
}

CMD:entregar(playerid,params[])
{
	new string[158],patrulla;
	patrulla = GetPlayerVehicleID(playerid);
	if(!EsPolicia(playerid)) return MensajeError(playerid, "No estás autorizado para usar este comando");
	if(IsPlayerInAnyVehicle(playerid))
	if(!SAPD(patrulla) && !HELISAPD(patrulla)) return MensajeError(playerid, "Debes estar en una patrulla o helicoptero policial");
	if(!EnComisaria(playerid)) return MensajeError(playerid, "No estás en el área de entrega de ninguna comisaria");
	for(new i=0;i<MAX_PLAYERS; i++)
	{
	if(EnAuto[i] == patrulla && PlayerInfo[i][Cargos] > 0)
		{
			RemovePlayerFromVehicle(i);
			SetTimerEx("Encerrando",3000,false,"d",i);
			format(string, sizeof(string), "Oficial %s encierra a %s en su celda.", NombreOOC(playerid),NombreOOC(i));
			ProxDetector(30.0, playerid, string, -1,-1,-1,-1,-1);
		}
	}
	return 1;
}

CMD:liberar(playerid,params[])
{
	new id,Float:x,Float:y,Float:z,pName[32],string[128];
	GetPlayerName(playerid, pName, 32);
	if(!sscanf(params,"d",id))
	{
		if(!EsPolicia(playerid))
		{
			GetPlayerPos(id, x,y,z);
			if(PlayerInfo[id][Cargos] != 1) return 1;
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid, -1, "No estas cerca de este jugador");
			if(VariableCaido[id] == 1 || Esposando[id] == 2 || EnPatrulla[id] == 1)
			{
				if(IsPlayerInAnyVehicle(id))
				{
					RemovePlayerFromVehicle(id);
				}
				VariableCaido[id] = 0;
				Esposando[id] = 0;
				SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
				PlayerInfo[id][Cargos] = 0;
				SetPlayerWantedLevel(id,PlayerInfo[id][Cargos]);
				TogglePlayerControllable(id, 1);
				SetPVarInt(id, "IsFrozen", 1);
				format(string, 128, "Oficial %s libera al sospechoso",pName);
				ProxDetector(15.0,playerid,string,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO,COLOR_VERDECLARO);
			}
			else return MensajeError(playerid, "El jugador debe estar abatido o esposado");
		}
	}
	else return SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF}/liberar [ID]");
	return 1;
}


CMD:bol(playerid, params[])
{
	MostrarBolsillos(playerid);
	return 1;
}

CMD:bolsillo(playerid, params[])
{
	return cmd_bol(playerid, params);
}

CMD:inventario(playerid, params[])
{
	return cmd_bol(playerid, params);
}

CMD:expresion(playerid, params[])
{
        if(sscanf(params, "d", params[0])) return MensajeError(playerid, "/expresion [1-6] (/expresion 6 para borrar la expresión)");
        switch(params[0])
        {
                case 1: ApplyAnimation(playerid, "PED", "facanger", 4.1, 0, 1, 1, 1, 1, 1);
            case 2: ApplyAnimation(playerid, "PED", "facsurpm", 4.1, 0, 1, 1, 1, 1, 1);
            case 3: ApplyAnimation(playerid, "PED", "facsurp", 4.1, 0, 1, 1, 1, 1, 1);
            case 4: ApplyAnimation(playerid, "PED", "facgum", 4.1, 0, 1, 1, 1, 1, 1);
            case 5: ApplyAnimation(playerid, "PED", "facurios", 4.1, 0, 1, 1, 1, 1, 1);
            case 6: ClearAnimations(playerid);
            default: MensajeError(playerid, "/expresion [1-6] (/expresion 6 para borrar la expresión)");
        }
        return 1;
}

CMD:kill(playerid, params[])
{
        SetPlayerHealth(playerid, 0);
    return 1;
}

CMD:creditos(playerid, params[])
{
    PlayAudioStreamForPlayer(playerid, "https://dl.dropboxusercontent.com/s/ikqjtmzotd3yihs/nextepisode.mp3?token_hash=AAHZMMqsCT0YsD4a__lndGQwubToa7lokTw2nb-bqLSjgQ&dl=1");
        for(new i = 0; i != 32; i++) SendClientMessage(playerid, -1, " ");
        TextDrawShowForPlayer(playerid, CerrarCreditos);
    SetCameraBehindPlayer(playerid);
    SetPlayerFacingAngle(playerid, 0.0);
        AttachCameraToPlayerObject(playerid, CreditObject[playerid]);
        SetPlayerFacingAngle(playerid, 0.0);
        SelectTextDraw(playerid, -1);
        new Float:x, Float:y, Float:z;
        x = 1153.070434;
        y = -2089.879882;
        z = 56.483135;
        SetPlayerObjectPos(playerid, CreditObject[playerid], x, y, z);
        MovePlayerObject(playerid, CreditObject[playerid], x, y, z-15, 0.2);
        return 1;
}

CMD:ayuda(playerid, params[])
{
    for(new i = 0; i != 24; i++) TextDrawShowForPlayer(playerid, CircularMenu[i]);
    SelectTextDraw(playerid, -1);
    P_circularmenu_active[playerid] = 1;
        return 1;
}
CMD:iphone(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	if(iPhoneStatus[playerid] == 0)
	{
		SendClientMessage(playerid, -1, "Use la tecla {FFFF00}Y/N {FFFFFF}para entrar/salir de un menú, use {FFFF00}4 y 6 {FFFFFF}para moverse en el menú principal.");
		SendClientMessage(playerid, -1, "Si no tienes pad numérico puedes usar {FFFF00}CLICK IZQUIERO {FFFFFF}a pie, y {FFFF00}ESPACIO {FFFFFF}en un vehículo.");
		loop(0, 22, PHONE) TextDrawShowForPlayer(playerid, TD_iPhone[PHONE]);
        iPhoneStatus[playerid] = 1;
	}
	else
	{
	    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)//estbleciendo la llamada
	    {
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    HideIphoneMenu(playerid);
		    iPhoneStatus[playerid] = 0;

		    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    HideIphoneMenu(callto[playerid]);
		    iPhoneStatus[callto[playerid]] = 0;
		    return 1;
		}
		if(iPhoneCallStatus[playerid] == 5)
		{
			iPhoneCallStatus[playerid] = 0;
		    iPhoneStatus[playerid] = 0;
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
	     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
	        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);
		    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
		    called[playerid] = "";
		    callto[playerid] = 0;
		    iPhone_CC[0][playerid] = 0;
			iPhone_CC[1][playerid] = 0;
			iPhone_CC[2][playerid] = 0;
			return 1;
		}
	    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    HideIphoneMenu(playerid);
	    iPhoneStatus[playerid] = 0;
	}
	return 1;
}

CMD:llamar(playerid, params[])
{
	return cmd_iphone(playerid, params);
}

CMD:movil(playerid, params[])
{
	return cmd_iphone(playerid, params);
}

/* ------------------ COMANDOS ADMIN ---------------------- */
CMD:daradm(playerid, params[])
{
        new str[128], str2[128];
        if(PlayerInfo[playerid][adminlvl] > 4){
            if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/daradm [ID/Nombre] [Nivel]");
            if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
            if(params[1] < 1) {
                        SendClientMessage(params[0], -1, "Has sido removido del equipo administrativo.");
                        format(str, sizeof(str), "Has removido a %s del equivo administrativo.", PlayerName(params[0]));
                        SendClientMessage(playerid, -1, str);
                        strdel(str, 0, 128);
                        return 1;
                }
        format(str, sizeof(str), "[STAFF] {FFFFFF}%s {00CCFF}te ha promovido a nivel %d de admin.", PlayerName(playerid), params[1]);
        format(str2, sizeof(str2), "Has promovido a {FFFFFF}%s {00CCFF}el nivel de admin. (Nvl: %d).", PlayerName(params[0]), params[1]);
                SendClientMessage(params[0], 0x00CCFFFF, str);
                SendClientMessage(playerid, 0x00CCFFFF, str2);
                PlayerInfo[params[0]][adminlvl] = params[1];
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:darfac(playerid, params[])
	{
        if(PlayerInfo[playerid][adminlvl] > 90)
		{
		    if(!sscanf(params, "di", params[0], params[1]))
		    {
                new ftext[30];
		        if(params[1] < 0 || params[1] > MAX_FACCIONES) 		return SendClientMessageEx(playerid, -1, "{FA5858}[Error] {FAFAFA}ID facción incorrecto.");
		        if(!IsPlayerConnected(params[0]))                   return SendClientMessageEx(playerid, -1, "{FA5858}[Error] {FAFAFA}Jugado desconectado.");
		        switch(params[1])
		        {
		            case 0: 	{PlayerInfo[params[0]][rango] = 0; ftext = "Ninguna"; }
		            case 1: 	{PlayerInfo[params[0]][rango] = 6; ftext = "San Andreas Police Department"; }
		            case 2: 	{PlayerInfo[params[0]][rango] = 6; ftext = "FBI"; }
		            case 3: 	{PlayerInfo[params[0]][rango] = 6; ftext = "San Andreas Ejército Militar"; }
		            case 4: 	{PlayerInfo[params[0]][rango] = 6; ftext = "San Andreas Medical Deparment"; }
		            case 5:     {PlayerInfo[params[0]][rango] = 6; ftext = "SA News"; }
		            case 6:     {PlayerInfo[params[0]][rango] = 6; ftext = "Mecanicos 24/7"; }
		            case 7:     {PlayerInfo[params[0]][rango] = 6; ftext = "Gobierno"; }
                    case 8:     {PlayerInfo[params[0]][rango] = 6; ftext = "Hitman"; }
                    case 9:     {PlayerInfo[params[0]][rango] = 6; ftext = "Sistema Judicial"; }
		        }
		        new string[128];
		        PlayerInfo[params[0]][lider] = params[1];
		        PlayerInfo[params[0]][miembro] = params[1];
		        format(string, sizeof(string), "Administrador %s te asignó el líder de la facción %s.", NombreOOC(playerid), ftext);
		        SendClientMessageEx(params[0], 0x6ADFFFFF, string);
		        format(string, sizeof(string), "Admin(CMD): %s asigno lider de la facción %s a %s.", NombreOOC(playerid), ftext, NombreOOC(params[0]));
				ABroadCast(-1, string, 3);
		    }
		    else SendClientMessageEx(playerid, -1, "{2E9AFE}USA: {FAFAFA}/darfac [jugador] [facción]");
		}
        return 1;
    }

CMD:darrank(playerid, params[])
{
        new str[128], str2[128];
        if(PlayerInfo[playerid][adminlvl] > 3){
            if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/darfac [ID/Nombre] [Rango]");
        if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(params[1] > 8) return MensajeError(playerid, "Ese rango no existe.");
            if(params[1] < 1) {
                        MensajeAtencion(params[0], "Has sido removido de tu de facción.");
                        format(str, sizeof(str), "Le has quitado la faccion a %s.", PlayerName(params[0]));
                        SendClientMessage(playerid, -1, str);
                        PlayerInfo[params[0]][faccion] = 0;
                        PlayerInfo[params[0]][rank] = 0;
                        strdel(str, 0, 128);
                        return 1;
                }
        format(str, sizeof(str), "[ATENCIÓN] {FFFFFF}El administrador %s te {00CCFF}ha dado el rango %d.", PlayerName(playerid), params[1]);
        format(str2, sizeof(str2), "[STAFF] {FFFFFF}Has dado a %s el {00CCFF}rango  %d.", PlayerName(params[0]), params[1]);
                SendClientMessage(params[0], 0x00CCFFFF, str);
                SendClientMessage(playerid, 0x00CCFFFF, str2);
                PlayerInfo[params[0]][rank] = params[1];
        } else return MensajeError(playerid, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:ir(playerid, params[])
{
        new Float:pos[3];
        if(PlayerInfo[playerid][adminlvl] > 0){
                if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/ir [ID/Nombre]");
                GetPlayerPos(params[0], pos[0], pos[1], pos[2]);
                new inte = GetPlayerInterior(params[0]);
                new vw = GetPlayerVirtualWorld(params[0]);
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(playerid == params[0]) return MensajeError(playerid, "No puedes teletransportarte a ti mismo.");
                new car = GetPlayerVehicleID(playerid);
                if(IsPlayerInAnyVehicle(playerid)){
                    if(inte != 0) return SendClientMessage(playerid, -1, "{FF000}ERROR: {FFFFFF}El jugador está en un interior, baja del vehículo.");
                        SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                        SetVehiclePos(car, pos[0], pos[1], pos[2]);
                        SetPlayerVirtualWorld(playerid, vw);
                        PutPlayerInVehicle(playerid, car, 0);
                        SetPlayerInterior(playerid, 0);
                } else {
                    SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                        SetPlayerInterior(playerid, inte);
                        SetPlayerVirtualWorld(playerid, vw);
                }
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:traer(playerid, params[])
{
        new Float:pos[3];
        if(PlayerInfo[playerid][adminlvl] > 0){
                if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/traer [ID/Nombre]");
                GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                new inte = GetPlayerInterior(playerid);
                new vw = GetPlayerVirtualWorld(playerid);
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(playerid == params[0]) return MensajeError(playerid, "No puedes 'traerte' a ti mismo.");
                new car = GetPlayerVehicleID(params[0]);
                if(IsPlayerInAnyVehicle(params[0])){
                    if(inte != 0) return SendClientMessage(playerid, -1, "{FF000}ERROR: {FFFFFF}El jugador está en un vehículo, sal del interior.");
                        SetPlayerPos(params[0], pos[0], pos[1], pos[2]);
                        SetVehiclePos(car, pos[0], pos[1], pos[2]);
                        SetPlayerVirtualWorld(params[0], vw);
                        PutPlayerInVehicle(params[0], car, 0);
                        SetPlayerInterior(params[0], 0);
                } else {
                    SetPlayerPos(params[0], pos[0], pos[1], pos[2]);
                        SetPlayerInterior(params[0], inte);
                        SetPlayerVirtualWorld(params[0], vw);
                }
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:kick(playerid, params[])
{
        if(PlayerInfo[playerid][adminlvl] > 0){
                if(sscanf(params, "us", params[0], params[1])) return MensajeError(playerid, "/kick [ID/Nombre] [Razón]");
        if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(playerid == params[0]) return MensajeError(playerid, "No puedes echarte a ti mismo.");
        if(PlayerInfo[params[0]][adminlvl] > 4) return MensajeError(playerid, "No puedes echar a un administrador.");
                new s[256];
        format(s, sizeof(s), "{FFFFFF}[SERVER] {FF0000}%s ha sido expulsado por %s, razón; %s", PlayerName(params[0]), PlayerName(playerid), params[1]);
        SendClientMessageToAll(-1, s);
        SendClientMessage(params[0], -1, "Has sido kickeado.");
        TogglePlayerControllable(params[0], false);
                VirtualTimers[playerid][14] = SetTimerEx("KickPlayer", 500, false, "i", params[0]);
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:ban(playerid, params[])
{
        if(PlayerInfo[playerid][adminlvl] > 1){
                if(sscanf(params, "us", params[0], params[1])) return MensajeError(playerid, "/ban [ID/Nombre] [Razón]");
        if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(playerid == params[0]) return MensajeError(playerid, "No puedes echarte a ti mismo.");
        if(PlayerInfo[params[0]][adminlvl] > 4) return MensajeError(playerid, "No puedes echar a un administrador.");
        new s[256];
        format(s, sizeof(s), "{FFFFFF}[SERVER] {FF0000}%s ha sido expulsado por %s, razón; %s", PlayerName(params[0]), PlayerName(playerid), params[1]);
        SendClientMessageToAll(-1, s);
        SendClientMessage(params[0], -1, "Has sido baneado. {0000FF}Si crees que es un error, contacte con un administrador.");
        TogglePlayerControllable(params[0], false);
                VirtualTimers[playerid][8] = SetTimerEx("BanPlayer", 500, false, "i", params[0]);
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:vid(playerid, params[])
{
    if(PlayerInfo[playerid][adminlvl] > 2){
            if(sscanf(params, "ddd", params[0], params[1], params[2])) return MensajeError(playerid, "/vid [Model ID] [Col1] [Col2]");

            new vehiculo;
                new Float:pos[3];
                GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
                new Float:anglea;
                GetPlayerFacingAngle(playerid, anglea);
                vehiculo = CreateVehicle(params[0],pos[0],pos[1]+1,pos[2]+0.5,anglea, params[1], params[2],500);
            if(!IsPlayerInAnyVehicle(playerid))
            {
                        PutPlayerInVehicle(playerid, vehiculo, 0);
                }
                else
                {
                    DestroyVehicle(GetPlayerVehicleID(playerid));
                        PutPlayerInVehicle(playerid, vehiculo, 0);
                }
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:matar(playerid, params[])
{
    if(PlayerInfo[playerid][adminlvl] > 2){
            if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/matar [Nombre/ID]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                SetPlayerHealth(params[0], 0.0);
                SetPVarInt(params[0], "pmuerto", true);
                SendClientMessage(params[0], -1, "Un administrador te ha matado.");
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:congelar(playerid, params[])
{
        new mensaje[128];
    if(PlayerInfo[playerid][adminlvl] > 2){
            if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/congelar [Nombre/ID]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                TogglePlayerControllable(params[0], false);
                format(mensaje, sizeof(mensaje), "[ADM-INFO] %s ha sido congelado por %s.", PlayerName(params[0]), PlayerName(playerid));
                SendClientMessage(params[0], ROJO, mensaje);
                SendClientMessageEx(playerid, -1, "Has congelado a %s.", PlayerName(params[0]));
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:descongelar(playerid, params[])
{
        new mensaje[128];
    if(PlayerInfo[playerid][adminlvl] > 2){
            if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, 0xFF4500FF, "{FF0000}ERROR: {FFFFFF}/descongelar [Nombre/ID]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                TogglePlayerControllable(params[0], true);
                format(mensaje, sizeof(mensaje), "[ADM-INFO] %s ha sido descongelado por %s.", PlayerName(params[0]), PlayerName(playerid));
                SendClientMessage(params[0], ROJO, mensaje);
                SendClientMessageEx(playerid, -1, "Has descongelado a %s.", PlayerName(params[0]));
        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:advertir(playerid, params[])
{
        new s[128], s2[128], s3[128], s4[128];
    if(PlayerInfo[playerid][adminlvl] > 1){
            if(sscanf(params, "us", params[0], params[1])) return MensajeError(playerid, "/advertir [Nombre/ID] [Razón]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");

                PlayerInfo[params[0]][warnings]++;

                if(PlayerInfo[params[0]][warnings] == 1) format(PlayerInfo[params[0]][advrazon1], 64, "%s", params[1]);
            if(PlayerInfo[params[0]][warnings] == 2) format(PlayerInfo[params[0]][advrazon2], 64, "%s", params[1]);

            SendClientMessageEx(playerid, AMARILLO, "Has advertido a "WHITE"%s"YELLOW"", PlayerName(params[0]));
            SendClientMessageEx(playerid, AMARILLO, "Razón: "WHITE"%s"YELLOW"", params[1]);

                format(s2, sizeof(s2), "[ADM-INFO] Has sido advertido por el administrador %s.", PlayerName(playerid));
            format(s3, sizeof(s3), "Adv: %s | (%d/3)", params[1], PlayerInfo[params[0]][warnings]);
            SendClientMessage(params[0], ROJO, s2);
            SendClientMessage(params[0], ROJO, s3);

            if(PlayerInfo[params[0]][warnings] > 2){
                if(PlayerInfo[params[0]][warnings] == 3) format(PlayerInfo[params[0]][advrazon3], 64, "%s", params[1]);

                format(s, sizeof(s), "[ADM-INFO] Has sido advertido por el administrador %s.", PlayerName(playerid)); SendClientMessage(params[0], 0xFF0000FF, s);
                    format(s2, sizeof(s2), "Adv 1: %s", PlayerInfo[params[0]][advrazon1]); SendClientMessage(params[0], 0xFF0000FF, s2);
                    format(s3, sizeof(s3), "Adv 2: %s", PlayerInfo[params[0]][advrazon2]); SendClientMessage(params[0], 0xFF0000FF, s3);
                    format(s4, sizeof(s4), "Adv 3: %s", params[1]); SendClientMessage(params[0], 0xFF0000FF, s4);

                        SendClientMessage(params[0], 0xFF0000FF, "Baneado por acumulación de advertencias (3/3), contacte con la administración si es un error.");

                    format(s, sizeof(s), "[ADM-INFO] %s ha sido baneado por acumulación de advertencias, por %s.", PlayerName(params[0]), PlayerName(playerid));
                    SendClientMessageToAll(0xFF0000FF, s);

                    TogglePlayerControllable(params[0], false);

                        VirtualTimers[playerid][9] = SetTimerEx("BanPlayer", 300, 0, "i", params[0]);
                }
    } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:pdinero(playerid, params[])
{
    if(PlayerInfo[playerid][adminlvl] > 3){
                if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/pdinero [Nombre/ID] [Cantidad]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");

                SetPlayerMoney(params[0], params[1]);
                PlayerInfo[params[0]][dinero] = params[1];
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha modificado la cantidad de dinero a %d", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has modificado a %s la cantidad de dinero. (Cantidad: %d)", PlayerName(params[0]), params[1]);

        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:pvida(playerid, params[])
{
    if(PlayerInfo[playerid][adminlvl] > 2){
                if(sscanf(params, "ui", params[0], params[1])) return MensajeError(playerid, "/pvida [Nombre/ID] [Cantidad]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(params[1] < 0 || params[1] > 200) return MensajeError(playerid, "No puede ser menos de 0 o más de 200.");

                SetPlayerHealth(params[0], params[1]);
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha modificado la salud. (Vida: %i)", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has modificado la salud de %s. (Vida: %i)", PlayerName(params[0]), params[1]);

        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:pblindaje(playerid, params[])
{
    if(PlayerInfo[playerid][adminlvl] > 2){
                if(sscanf(params, "ui", params[0], params[1])) return MensajeError(playerid, "/pblindaje [Nombre/ID] [Cantidad]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(params[1] < 0 || params[1] > 200) return MensajeError(playerid, "No puede ser menos de 0 o más de 200.");

                SetPlayerArmour(params[0], params[1]);
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha modificado el blindaje. (Blindaje: %i)", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has modificado el blindaje de %s. (Blindaje: %i)", PlayerName(params[0]), params[1]);

        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:cskin(playerid, params[])
{
    if(PlayerInfo[playerid][adminlvl] > 1){
                if(sscanf(params, "ud", params[0], params[1])) return MensajeError(playerid, "/cskin [Nombre/ID] [Skin ID]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
        if(params[1] < 0 || params[1] > 299) return MensajeError(playerid, "No puede ser menos de 0 o más de 299.");

                SetPlayerSkin(params[0], params[1]);
                PlayerInfo[params[0]][skin] = params[1];
                SendClientMessageEx(params[0], ROJO, "[ADM-INFO] El administrador %s te ha cambiado el skin. (Skin: %d)", PlayerName(playerid), params[1]);
                SendClientMessageEx(playerid, ROJO, "Has cambiado el skin de %s. (Skin: %d)", PlayerName(params[0]), params[1]);

        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:callar(playerid, params[])
{
        new s[128];
        if(PlayerInfo[playerid][adminlvl] > 0){
            if(sscanf(params, "us", params[0], params[1])) return MensajeError(playerid, "/callar [Nombre/ID] [Razón]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(PlayerMuted[params[0]] != 0) return MensajeError(playerid, "El jugador ya está callado.");

                PlayerMuted[params[0]] = 1;
                format(s, sizeof(s), "[ADM-INFO] %s ha sido callado por %s, razón: %s", PlayerName(params[0]), PlayerName(playerid), params[1]);
                SendClientMessageToAll(ROJO, s);

        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

CMD:descallar(playerid, params[])
{
        new s[128];
        if(PlayerInfo[playerid][adminlvl] > 0){
            if(sscanf(params, "u", params[0])) return MensajeError(playerid, "/descallar [Nombre/ID]");
                if(!IsPlayerConnected(params[0])) return MensajeError(playerid, "Jugador desconectado.");
                if(PlayerMuted[params[0]] != 1) return MensajeError(playerid, "El jugador no está callado.");

                PlayerMuted[params[0]] = 0;
                format(s, sizeof(s), "[ADM-INFO] %s ha permitido que hable %s", PlayerName(playerid), PlayerName(params[0]));
                SendClientMessageToAll(ROJO, s);

        } else return SendClientMessage(playerid, 0xFF0000FF, "No estás autorizado a usar el comando.");
        return 1;
}

/*
                COMANDOS ACTUALES:
                        Nivel 5:
                                /daradm
                        Nivel 4:
                                /darfac - /pdinero
                        Nivel 3:
                        /pvida - /pblindaje - /vid - /matar
                        Nivel 2:
                        /advertir - /ban - /cskin
                        Nivel 1:
                                /ir - /kick - /(des)congelar - /traer
*/



CMD:asd(playerid, params[])
{
        new Float:rot[3];
        GetDynamicObjectRot(PoliceDoor[1], rot[0], rot[1], rot[2]);
        if(rot[1] == 0.0)
        {
                MoveDynamicObject(PoliceDoor[1], 1589.20813, -1641.61829, 16.72540, 1.5, 0.00000, 90.00000, -90.00000);
                new Float:p[4];
                GetPlayerPos(playerid, p[0], p[1], p[2]);
                GetPlayerFacingAngle(playerid, p[3]);
                printf("police door: %f, %f, %f         %f", p[0], p[1], p[2], p[3]);
        }
        else if(rot[1] == 90.0) MoveDynamicObject(PoliceDoor[1], 1589.34912, -1638.28577, 14.27757, 1.5, 0.00000, 0.00000, -90.00000);
        return 1;
}



CMD:p(playerid, params[])
{
        /*new Float:p[4];
        GetPlayerPos(BusPrisonPlayerID, p[0], p[1], p[2]);*/
    //SetPlayerPos(playerid, 412.108551, -1854.582153, 3.690110);

    new lalala123 = GetPlayerVehicleID(playerid);
    printf("ID: %d", lalala123);
    return 1;
}

CMD:asd3(playerid, params[])
{
        if(IsDynamicObjectMoving(PrisonDoors[1])) return 1;
    MoveDynamicObject(PrisonDoors[1], 246.15010, 1422.5698, 11.88040, 2.5);
    SetTimerEx("ClosePrisonDoor", 8000, false, "d", 1);

    new Float:p[4];
        GetPlayerPos(playerid, p[0], p[1], p[2]);
        GetPlayerFacingAngle(playerid, p[3]);
        printf("prision d2: %f, %f, %f          %f", p[0], p[1], p[2], p[3]);
        return 1;
}

CMD:asd4(playerid, params[])
{
        if(IsDynamicObjectMoving(PrisonDoors[2])) return 1;
    MoveDynamicObject(PrisonDoors[2], 204.33009, 1422.5698, 11.88040, 2.5);
    SetTimerEx("ClosePrisonDoor", 8000, false, "d", 2);

    new Float:p[4];
        GetPlayerPos(playerid, p[0], p[1], p[2]);
        GetPlayerFacingAngle(playerid, p[3]);
        printf("prision d3: %f, %f, %f          %f", p[0], p[1], p[2], p[3]);
        return 1;
}

/* ------------------ COMANDOS CHAT ---------------------- */
CMD:duda(playerid, params[])
{
    if(isnull(params)) return MensajeError(playerid, "/d [duda]");
        if(PlayerInfo[playerid][DudeChannel] == 0) return MensajeError(playerid, "Tienes el canal de dudas desactivado. Puedes activarlo en el {00CCFF}/menu {FFFFFF}principal, en ajustes.");

    if(DudeTime[playerid] > GetTickCount())
    {
                new Float:tiempo = floatdiv(floatsub(DudeTime[playerid], GetTickCount()), 60000);
                SendClientMessageEx(playerid, -1, "Debe de esperar {FFFF00}%.2f {FFFFFF}minuto(s) para volver a publicar otra duda.", tiempo);
                return 1;
        }

        new string[542];
        strcat(string, ""GREEN"Al usar el canal te comprometeras a aceptar las siguientes reglas:\n\n");
        strcat(string, "\t{00CCFF}1. En este canal solo podrás publicar dudas respecto del servidor (gamemode)\n");
        strcat(string, "\t{00CCFF}2. Este es un canal que puedes activar/desactivar en el /menu principal, en ajustes\n");
        strcat(string, "\t{00CCFF}3. Si publicas un mensaje que no tiene nada que ver con una duda, puedes ser advertido\n");
        strcat(string, "\t{00CCFF}4. Cuando publiques una duda, los otros jugadores te la podrán responder\n");
        strcat(string, "\t{00CCFF}5. Tan solo se puede publicar una duda cada 1 minuto(s)\n\n");
        strcat(string, ""YELLOW"¿Estás seguro de publicar la duda?");

        ShowPlayerDialog(playerid, DIALOG_DUDAS, DIALOG_STYLE_MSGBOX, "Canal de dudas", string, "Continuar", "Cerrar");
        format(DudeMsg[playerid], 128, "%s", params);
        return 1;
}

CMD:b(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(isnull(params)) return SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /b [CHAT OOC]");
    new str[145];
    format(str, sizeof(str), "ID: %d | %s: (( %s ))", playerid, PlayerName(playerid), params);
    SendPlayersMessage(10.0, playerid, 0x00F090FF, str);
	return 1;
}
CMD:s(playerid, params[])
{
		if(!isnull(params))
		{
		    new string[128];
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "Desconocido susurra: %s", params);
			else format(string, sizeof(string), "%s susurra: %s", NombreOOC(playerid), params);
            ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			format(string, sizeof(string), "(susurro) %s", params);
			return SetPlayerChatBubble(playerid,string,COLOR_WHITE,5.0,5000);
        } else SendClientMessageEx(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /s [Acción]");
        return 1;
    }
CMD:g(playerid, params[]){
        if(!isnull(params)){
            new string[128];
            if(PlayerInfo[playerid][pMaskuse] == 1) format(string, sizeof(string), "Desconocido grita: ¡¡ %s !!", params);
			else format(string, sizeof(string), "%s grita: %s!", NombreOOC(playerid), params);
            ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);
			format(string, sizeof(string), "(grito) %s!", params);
			return SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
        } else SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /g [Acción]");
        return 1;
    }
CMD:do(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
    if(isnull(params)) return SendClientMessage(playerid, -1, "{01A9DB}Uso correcto:{FFFFFF} /do [acción]");
    new str[145];
    format(str, sizeof(str), "* %s [ %s ]", PlayerName(playerid), params);
    SendPlayersMessage(10.0, playerid, 0xADFF2FAA, str);
	return 1;
}

CMD:me(playerid, params[])
{
    if(P_newuser[playerid] > 0) return 1;
	if(isnull(params)) return SendClientMessage(playerid, -1, "{FF0000}ERROR: {FFFFFF} /me [acción]");
	SendClientMessage(playerid, -1, "Usa {FFFF00}!acción {FFFFFF}en lugar de de {FFFF00}/me acción{FFFFFF}.");
    new str[145];
  	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} %s.", PlayerName(playerid), params);
	SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
	return 1;
}

CMD:yo(playerid, params[])
{
	return cmd_me(playerid, params);
}

// ----------------

CMD:pos(playerid, params[])
{
         new Float:p[4];
         GetPlayerPos(playerid, p[0], p[1], p[2]);
         GetPlayerFacingAngle(playerid, p[3]);
         printf("%f, %f, %f             %f", p[0], p[1], p[2], p[3]);
     return 1;
}

//--------------


public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
    if(success == 0) InfoMSG(playerid, 1500, "Lo sentimos, ~b~el comando no existe.");
    return 1;
}



forward TiempoArresto(playerid);
public TiempoArresto(playerid)
{
	new string[258];
	if(Esposando[playerid] == 0) return 1;
	if(GetPlayerInterior(playerid) > 0)
	{


		SetTimerEx("Encerrando2",500,false,"d",playerid);
	}
	GetPlayerPos(playerid, DeathX[playerid], DeathY[playerid], DeathZ[playerid]);
	VariableCaido[playerid] = 1;
	InfoMSG(playerid, 1500, "Esposado.");
	Esposando[playerid] = 2;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_CUFFED);
	TogglePlayerControllable(playerid,0);
	SetPVarInt(playerid, "IsFrozen", 0);
	format(string, sizeof(string), "[Radio de policía]{FFFFFF} %s: {F4FA58}%s[%d]{FFFFFF} ha sido capturado, procedo a entregarlo.",NombreOOC(Oficial[playerid]), NombreOOC(playerid), playerid);
	SendRadioMessage(1, TEAM_BLUE_COLOR, string,playerid);
	Oficial[playerid] = INVALID_PLAYER_ID;
	for(new i = 0; i < GetMaxPlayers(); i++)
	if(PlayerInfo[i][Duty] == 1)
	{


		SetPlayerMarkerForPlayer(i, playerid, COLOR_POLICIA);
	}
	return 1;
}

funcion FirstConversation2(playerid, step)
{
        switch(step)
        {
            case 0: SendClientMessage(playerid, 0xC6BBBBFF, "{CCCCCC}Empleado dice: {FFFFFF}Despues tendras los pagos de viajes que realizes"), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 1);
                case 1: SendClientMessage(playerid, 0x3BED5FFF, "{CCCCCC}Empleado dice: {FFFFFF} Ten una buena actitud con los clientes."), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 2);
                case 2: SendClientMessage(playerid, 0xC6BBBBFF, "{CCCCCC}Empleado dice: {FFFFFF} Maneja con cuidado y respeta las leyes de tranzito."), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 3);
                case 3: SendClientMessage(playerid, 0x3BED5FFF, "{CCCCCC}Empleado dice: {FFFFFF} Si no respetas las reglas puede ser despedido."), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 4);
                case 4:
                {
                ShowPlayerDialog(playerid, Unirse_Taxi, DIALOG_STYLE_MSGBOX, "Trabajo de taxi", "Deseas unirte al trabajo de taxi", "Aceptar","Cancelar");
                }
        }
        return 1;
}


funcion opwc_timer(playerid)
{
    new aArma = GetPlayerWeapon(playerid);
    if(aArma != gArma[playerid]){
        CallLocalFunction("OnPlayerWeaponChange", "iii", playerid, aArma, gArma[playerid]);
        gArma[playerid] = aArma;
    }
    return 1;
}

funcion RobContinue(playerid, a, SHOP)
{
	switch(a)
	{
		case 0:
		{
		    SetPlayerDrunkLevel(playerid, 2500);
		    ApplyAnimation(NPCS[SHOP],"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1,1);
		    ApplyAnimation(NPCS[SHOP],"SHOP","SHP_Rob_GiveCash",4.1,0,1,1,1,1,1);
		    VirtualTimers[playerid][12] = SetTimerEx("RobContinue", 5000, 0, "idi", playerid, 1, SHOP);
		}
		case 1:
		{
		    if(SHOP == SHOP_UNITY)
		    {
				InterpolateCameraPos(playerid, -24.371448, -184.631881, 1005.830017, -28.919799, -183.278396, 1004.433410, 3000);
				InterpolateCameraLookAt(playerid, -28.462133, -186.144622, 1003.385009, -28.672475, -184.235733, 1004.283996, 3000);
			}
			else if(SHOP == SHOP_AYUNT)
			{
			    InterpolateCameraPos(playerid, -27.082044, -27.978450, 1005.534057, -31.010599, -27.289100, 1004.428771, 3000);
				InterpolateCameraLookAt(playerid, -27.810798, -28.538206, 1005.139587, -30.681732, -28.221578, 1004.279357, 3000);
			}
			else if(SHOP == SHOP_VINE)
			{
			    InterpolateCameraPos(playerid, 7.980316, -27.542730, 1005.657958, 1.124199, -26.738199, 1004.537780, 3000);
				InterpolateCameraLookAt(playerid, 7.156741, -27.963136, 1005.277221, 1.620131, -27.593605, 1004.388366, 3000);
			}
			SetPlayerDrunkLevel(playerid, 2500);
	        VirtualTimers[playerid][12] = SetTimerEx("RobContinue", 3000, 0, "idi", playerid, 2, SHOP);
		}
		case 2:
		{
			SetCameraBehindPlayer(playerid);
			ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
			TogglePlayerControllable(playerid, true);
			ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	        TextDrawHideForPlayer(playerid, TD_BX[0]);
	    	TextDrawHideForPlayer(playerid, TD_BX[1]);
	    	GameTextForPlayer(playerid, "~g~+1500", 3000, 0);
	    	PlayerInfo[playerid][dinero] += 1500;
	    	ResetPlayerMoney(playerid);
	    	GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
	    	SetPlayerDrunkLevel(playerid, 0);
	    	PlayerTextDrawHide(playerid, TD_IO[playerid]);
	    	P_No_Message_Atraco[playerid] = -1;
	    	PlayerEvent[playerid][SHOP] = false;
	    	ChatLogDisabled[playerid] = false;
      		SetTimerEx("OpenStore", 3600000, false, "i", NPCS[SHOP]);
	    	NPC_USED[NPCS[SHOP]] = 1;
		}
		case 3:
		{
		    DisablePlayerCheckpoint(playerid);
		    P_No_Message_Atraco[playerid] = 0;
		}
	}
	return 1;
}

funcion OpenStore(storeid)
{
    NPC_USED[storeid] = false;
    ApplyAnimation(storeid,"PED","WALK_player",4.0,0,0,0,0,1);
    ApplyAnimation(storeid,"PED","WALK_player",4.0,0,0,0,0,1);
	return 1;
}
funcion CargarAnim(playerid)
{
    PreloadAnimLib(playerid, "PED");
    PreloadAnimLib(playerid, "SHOP");
    PreloadAnimLib(playerid, "BAR");
    PreloadAnimLib(playerid, "BLOWJOBZ");
    PreloadAnimLib(playerid, "GANGS");/*
    PreloadAnimLib(playerid,"AIRPORT");
    PreloadAnimLib(playerid,"ATTRACTORS");
    PreloadAnimLib(playerid,"BAR");
    PreloadAnimLib(playerid,"BASEBALL");
    PreloadAnimLib(playerid,"BD_FIRE");
    PreloadAnimLib(playerid,"BEACH");
    PreloadAnimLib(playerid,"BENCHPRESS");
    PreloadAnimLib(playerid,"BF_INJECTION");
    PreloadAnimLib(playerid,"BIKED");
    PreloadAnimLib(playerid,"BIKEH");
    PreloadAnimLib(playerid,"BIKELEAP");
    PreloadAnimLib(playerid,"BIKES");
    PreloadAnimLib(playerid,"BIKEV");
    PreloadAnimLib(playerid,"BIKE_DBZ");
    PreloadAnimLib(playerid,"BMX");
    PreloadAnimLib(playerid,"BOMBER");
    PreloadAnimLib(playerid,"BOX");
    PreloadAnimLib(playerid,"BSKTBALL");
    PreloadAnimLib(playerid,"BUDDY");
    PreloadAnimLib(playerid,"BUS");
    PreloadAnimLib(playerid,"CAMERA");
    PreloadAnimLib(playerid,"CAR");
    PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"CAR_CHAT");
    PreloadAnimLib(playerid,"CASINO");
    PreloadAnimLib(playerid,"CHAINSAW");
    PreloadAnimLib(playerid,"CHOPPA");
    PreloadAnimLib(playerid,"CLOTHES");
    PreloadAnimLib(playerid,"COACH");
    PreloadAnimLib(playerid,"COLT45");
    PreloadAnimLib(playerid,"COP_AMBIENT");
    PreloadAnimLib(playerid,"COP_DVBYZ");
    PreloadAnimLib(playerid,"CRACK");
    PreloadAnimLib(playerid,"CRIB");
    PreloadAnimLib(playerid,"DAM_JUMP");
    PreloadAnimLib(playerid,"DANCING");
    PreloadAnimLib(playerid,"DEALER");
    PreloadAnimLib(playerid,"DILDO");
    PreloadAnimLib(playerid,"DODGE");
    PreloadAnimLib(playerid,"DOZER");
    PreloadAnimLib(playerid,"DRIVEBYS");
    PreloadAnimLib(playerid,"FAT");
    PreloadAnimLib(playerid,"FIGHT_B");
    PreloadAnimLib(playerid,"FIGHT_C");
    PreloadAnimLib(playerid,"FIGHT_D");
    PreloadAnimLib(playerid,"FIGHT_E");
    PreloadAnimLib(playerid,"FINALE");
    PreloadAnimLib(playerid,"FINALE2");
    PreloadAnimLib(playerid,"FLAME");
    PreloadAnimLib(playerid,"FLOWERS");
    PreloadAnimLib(playerid,"FOOD");
    PreloadAnimLib(playerid,"FREEWEIGHTS");
    PreloadAnimLib(playerid,"GANGS");
    PreloadAnimLib(playerid,"GHANDS");
    PreloadAnimLib(playerid,"GHETTO_DB");
    PreloadAnimLib(playerid,"GOGGLES");
    PreloadAnimLib(playerid,"GRAFFITI");
    PreloadAnimLib(playerid,"GRAVEYARD");
    PreloadAnimLib(playerid,"GRENADE");
    PreloadAnimLib(playerid,"GYMNASIUM");
    PreloadAnimLib(playerid,"HAIRCUTS");
    PreloadAnimLib(playerid,"HEIST9");
    PreloadAnimLib(playerid,"INT_HOUSE");
    PreloadAnimLib(playerid,"INT_OFFICE");
    PreloadAnimLib(playerid,"INT_SHOP");
    PreloadAnimLib(playerid,"JST_BUISNESS");
    PreloadAnimLib(playerid,"KART");
    PreloadAnimLib(playerid,"KISSING");
    PreloadAnimLib(playerid,"KNIFE");
    PreloadAnimLib(playerid,"LAPDAN1");
    PreloadAnimLib(playerid,"LAPDAN2");
    PreloadAnimLib(playerid,"LAPDAN3");
    PreloadAnimLib(playerid,"LOWRIDER");
    PreloadAnimLib(playerid,"MD_CHASE");
    PreloadAnimLib(playerid,"MD_END");
    PreloadAnimLib(playerid,"MEDIC");
    PreloadAnimLib(playerid,"MISC");
    PreloadAnimLib(playerid,"MTB");
    PreloadAnimLib(playerid,"MUSCULAR");
    PreloadAnimLib(playerid,"NEVADA");
    PreloadAnimLib(playerid,"ON_LOOKERS");
    PreloadAnimLib(playerid,"OTB");
    PreloadAnimLib(playerid,"PARACHUTE");
    PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"PAULNMAC");
    PreloadAnimLib(playerid,"PED");
    PreloadAnimLib(playerid,"PLAYER_DVBYS");
    PreloadAnimLib(playerid,"PLAYIDLES");
    PreloadAnimLib(playerid,"POLICE");
    PreloadAnimLib(playerid,"POOL");
    PreloadAnimLib(playerid,"POOR");
    PreloadAnimLib(playerid,"PYTHON");
    PreloadAnimLib(playerid,"QUAD");
    PreloadAnimLib(playerid,"QUAD_DBZ");
    PreloadAnimLib(playerid,"RAPPING");
    PreloadAnimLib(playerid,"RIFLE");
    PreloadAnimLib(playerid,"RIOT");
    PreloadAnimLib(playerid,"ROB_BANK");
    PreloadAnimLib(playerid,"ROCKET");
    PreloadAnimLib(playerid,"RUSTLER");
    PreloadAnimLib(playerid,"RYDER");
    PreloadAnimLib(playerid,"SCRATCHING");
    PreloadAnimLib(playerid,"SHAMAL");
    PreloadAnimLib(playerid,"SHOP");
    PreloadAnimLib(playerid,"SHOTGUN");
    PreloadAnimLib(playerid,"SILENCED");
    PreloadAnimLib(playerid,"SKATE");
    PreloadAnimLib(playerid,"SMOKING");
    PreloadAnimLib(playerid,"SNIPER");
    PreloadAnimLib(playerid,"SPRAYCAN");
    PreloadAnimLib(playerid,"STRIP");
    PreloadAnimLib(playerid,"SUNBATHE");
    PreloadAnimLib(playerid,"SWAT");
    PreloadAnimLib(playerid,"SWEET");
    PreloadAnimLib(playerid,"SWIM");
    PreloadAnimLib(playerid,"SWORD");
    PreloadAnimLib(playerid,"TANK");
    PreloadAnimLib(playerid,"TATTOOS");
    PreloadAnimLib(playerid,"TEC");
    PreloadAnimLib(playerid,"TRAIN");
    PreloadAnimLib(playerid,"TRUCK");
    PreloadAnimLib(playerid,"UZI");
    PreloadAnimLib(playerid,"VAN");
    PreloadAnimLib(playerid,"VENDING");
    PreloadAnimLib(playerid,"VORTEX");
    PreloadAnimLib(playerid,"WAYFARER");
    PreloadAnimLib(playerid,"WEAPONS");
    PreloadAnimLib(playerid,"WUZI");
    PreloadAnimLib(playerid,"WOP");
    PreloadAnimLib(playerid,"GFUNK");
    PreloadAnimLib(playerid,"RUNNINGMAN");*/
	return 1;
}

stock Respawnear(autoid)
{
	vEngine[GetPlayerVehicleID(autoid)] = 0;
	SetVehicleToRespawn(autoid);
}

stock PagoCamionero(playerid, nivelc, carga)
{
	switch(nivelc)
	{

		case 1:
		{

			switch(carga)
			{

				case 1:
				{

					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new pago = random(3);
							switch (pago)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,-1,"Has aumentado tu experiencia con {58ACFA}+1 punto de habilidad.");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,-1,"Has aumentado tu experiencia con {58ACFA}+1 punto de habilidad.");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,-1,"Has aumentado tu experiencia con {58ACFA}+2 puntos de habilidad.");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,-1,"Has aumentado tu experiencia con {58ACFA}+1 punto de habilidad.");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{

						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"{58ACFA}Felicidades, {FFFFFF}Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1300);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1300{FFFFFF} por el recorrido");
				}
				case 2:
				{

					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new pago = random(3);
							switch (pago)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{

						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1300);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1300{FFFFFF} por el recorrido");
				}
				case 3:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1300);
					PlayerInfo[playerid][pCrack] += 3;
					PlayerInfo[playerid][pMedicamentos] += 2;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1300{FFFFFF} y {EE0000}3g{FFFFFF} de crack + {EE0000}2{FFFFFF} medicamentos.");
				}
				case 4:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 1 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{

						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1300);
					PlayerInfo[playerid][pMateriales] += 3;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1300{FFFFFF} y {EE0000}3{FFFFFF} piezas de armas por el recorrido");
				}
			}
		}
		case 2:
		{



			switch(carga)
			{



				case 1:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1500);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1500{FFFFFF} por el recorrido");
				}
				case 2:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1500);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1500{FFFFFF} por el recorrido");
				}
				case 3:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1500);
					PlayerInfo[playerid][pCrack] += 4;
					PlayerInfo[playerid][pMedicamentos] += 4;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1500{FFFFFF} y {EE0000}4g de crack + 4 medicamentos{FFFFFF}por el recorrido");
				}
				case 4:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 2 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{


						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1500);
					PlayerInfo[playerid][pMateriales] += 5;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1500{FFFFFF} y {EE0000}5{FFFFFF} piezas de armas por el recorrido");
				}
			}
		}
		case 3:
		{



			switch(carga)
			{



				case 1:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{

						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1700);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1700{FFFFFF} por el recorrido");
				}
				case 2:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1700);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1700{FFFFFF} por el recorrido");
				}
				case 3:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1700);
					PlayerInfo[playerid][pCrack] += 5;
					PlayerInfo[playerid][pMedicamentos] += 6;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1700{FFFFFF} y {EE0000}5g + 6{FFFFFF} de crack y medicamentos por el recorrido");
				}
				case 4:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 3 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1700);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1700{FFFFFF} y {EE0000}7{FFFFFF} piezas de armas por el recorrido");
				}
			}
		}
		case 4:
		{



			switch(carga)
			{



				case 1:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1900);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1900{FFFFFF} por el recorrido");
				}
				case 2:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1900);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1900{FFFFFF} por el recorrido");
				}
				case 3:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1900);
					PlayerInfo[playerid][pCrack] += 6;
					PlayerInfo[playerid][pMedicamentos] += 8;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1900{FFFFFF} y {EE0000}6g + 8{FFFFFF} de crack y medicamentos por el recorrido");
				}
				case 4:
				{

					if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] < 49)
					{

						if(PlayerInfo[playerid][vip] == 1)
						{

							new pago = random(3);
							switch (pago)
							{

								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 4 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{

						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 1900);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$1900{FFFFFF} y {EE0000}7{FFFFFF} piezas de armas por el recorrido");
				}
			}
		}
		case 5:
		{



			switch(carga)
			{



				case 1:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pExpCamionero] = 0;
						PlayerInfo[playerid][pNivelCamionero]++;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 2100);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2100{FFFFFF} por el recorrido");
				}
				case 2:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 2100);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2100{FFFFFF} por el recorrido");
				}
				case 3:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 2100);
					PlayerInfo[playerid][pCrack] += 7;
					PlayerInfo[playerid][pMedicamentos] += 9;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2100{FFFFFF} y {EE0000}7g + 10{FFFFFF} de crack y medicamentos por el recorrido");
				}
				case 4:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 5 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						PlayerInfo[playerid][pNivelCamionero]++;
						PlayerInfo[playerid][pExpCamionero] = 0;
						SendClientMessage(playerid,-1,"Felicidades, Has aumentado tu nivel de camionero");
					}
					DarDinero(playerid, 2100);
					PlayerInfo[playerid][pMateriales] += 7;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2100{FFFFFF} y {EE0000}7{FFFFFF} piezas de armas por el recorrido");
				}
			}
		}
		case 6:
		{



			switch(carga)
			{



				case 1:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2500{FFFFFF} por el recorrido");
				}
				case 2:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2500{FFFFFF} por el recorrido");
				}
				case 3:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					PlayerInfo[playerid][pCrack] += 8;
					PlayerInfo[playerid][pMedicamentos] += 11;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2500{FFFFFF} y {EE0000}8g + 11{FFFFFF} de crack y medicamentos por el recorrido");
				}
				case 4:
				{



					if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] < 49)
					{



						if(PlayerInfo[playerid][vip] == 1)
						{



							new pago = random(3);
							switch (pago)
							{



								case 0:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 1:
								{

									PlayerInfo[playerid][pExpCamionero]++;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
								}
								case 2:
								{

									PlayerInfo[playerid][pExpCamionero]+= 2;
									SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +2 puntos de habilidad");
								}
							}
						}
						else
						{

							PlayerInfo[playerid][pExpCamionero]++;
							SendClientMessage(playerid,0x0080C2FF,"Has aumentado tu experiencia con +1 punto de habilidad");
						}
					}
					else if(PlayerInfo[playerid][pNivelCamionero] == 6 && PlayerInfo[playerid][pExpCamionero] >= 49)
					{



						SendClientMessage(playerid, -1, "Has llegado al maximo nivel de este trabajo");
					}
					DarDinero(playerid, 2500);
					PlayerInfo[playerid][pMateriales] += 8;
					SendClientMessage(playerid, -1, "Has recibido {00CC00}$2500{FFFFFF} y {EE0000}8{FFFFFF} piezas de armas por el recorrido");
				}
			}
		}
	}
	return 1;
}
stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return 1;
}

stock GetPlayerInteriorEx(playerid)
{
	return PlayerInfo[playerid][interiorid];
}

stock MostrarBolsillos(playerid)
{
    new dialog[784], string[128];
	for(new i = 1; i < 13; i++)
	{
		if(i == 1)
		{
		    if(BolsilloID[playerid][i] != 0) format(dialog, sizeof(dialog), "{FFFFFF}1) - {FFFF00}%s {FFFFFF}", Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
		    else format(dialog, sizeof(dialog), "{FFFFFF}1) - Bolsillo vacío.");
		    continue;
		}
		if(i == 11)
		{
  			strcat(dialog, "\n|--------------------------------------------------------------|");
			if(BolsilloID[playerid][i] != 0) format(string, sizeof(string), "\n{FFFFFF}%Mano derecha - {FFFF00}%s {FFFFFF}", Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
  			else format(string, sizeof(string), "\n{FFFFFF}Mano derecha - desocupada.");
  			strcat(dialog, string);
  			continue;
		}
		if(i == 12)
		{
			if(BolsilloID[playerid][i] != 0) format(string, sizeof(string), "\n{FFFFFF}%Mano izquierda - {FFFF00}%s {FFFFFF}", Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
  			else format(string, sizeof(string), "\n{FFFFFF}Mano izquierda - desocupada.");
  			strcat(dialog, string);
  			break;
		}
		if(BolsilloID[playerid][i] != 0) format(string, sizeof(string), "\n{FFFFFF}%d) - {FFFF00}%s {FFFFFF}", i, Objetos_Bolsillo[BolsilloID[playerid][i]][iname]);
  		else format(string, sizeof(string), "\n{FFFFFF}%d) - Bolsillo vacío.", i);
  		strcat(dialog, string);
	}
	format(string, sizeof(string), "{FFFFFF}Bolsillos de %s", NombreOOC(playerid));
	ShowPlayerDialog(playerid, DIALOG_BOL, DIALOG_STYLE_LIST, string, dialog, "Seleccionar", "Salir");
	return 1;
}


stock GetPlayerCameraLookAt(playerid, &Float:X, &Float:Y, &Float:Z)
{
    new Float:pos[6];
    GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
    GetPlayerCameraFrontVector(playerid, pos[3], pos[4], pos[5]);
    X = floatadd(pos[0], pos[3]);
    Y = floatadd(pos[1], pos[4]);
    Z = floatadd(pos[2], pos[5]);
    return 1;
}
stock Dar_Bolsillo(playerid, id)
{
	if(id == 0 || id == sizeof(Objetos_Bolsillo)) return 0;
    if(BolsilloID[playerid][11] != 0 && BolsilloID[playerid][12] != 0)
    {
        SendClientMessage(playerid, -1, "Necesitas una mano libre para coger esto.");
        return 0;
    }
    switch(id)
    {
        case 1:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza mixta.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 1;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 1;
        }
        case 2:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza barbacoa.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 2;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 2;
        }
        case 3:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza clásica.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 3;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 3;
        }
        case 4:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una pizza vegetariana.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 4;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 4;
        }
        case 5:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una hamburguesa de pollo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 5;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 5;
        }
        case 6:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una hamburguesa de pescado.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 6;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 6;
        }
        case 7:
        {
        	new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una hamburguesa de ternera.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 7;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 7;
        }
        case 8:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un pollo asado.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 8;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 8;
        }
        case 9:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra alitas de pollo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 9;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 9;
        }
        case 10:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un donut.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 10;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 10;
        }
        case 11:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un donut de chocolate.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 11;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 11;
        }
        case 12:
        {

            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una rosquilla.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 12;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 12;
        }
        case 13:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un mechero.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);
            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 13;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 13;
        }
        case 14:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un cigarrillo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 14;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 14;
        }
        case 15:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una cerveza.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 15;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 15;
        }
        case 16:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un refresco de naranja.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 16;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 16;
        }
        case 17:
        {

            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una botella de agua.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 17;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 17;
        }
        case 18:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un perrito caliente.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 18;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 18;
        }
        case 19:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un refresco de limón.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 19;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 19;
        }
        case 20:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un refresco de cola.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 20;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 20;
        }
        case 21:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un chicle.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 21;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 21;
        }
        case 22:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un cable iPhone-Vehículo.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 22;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 22;
        }
        case 23:
        {
            new str[145];
			format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra una ensalada.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 23;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 23;
        }
        case 24:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un café.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 24;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 24;
        }
        case 25:
        {
            new str[145];
	      	format(str,sizeof(str),"		{CCCCCC}%s {FFFFFF} compra un GPS.", PlayerName(playerid));
	 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, str);

            if(BolsilloID[playerid][11] == 0) return BolsilloID[playerid][11] = 25;
            if(BolsilloID[playerid][12] == 0) return BolsilloID[playerid][12] = 25;
        }
    }
    return 0;
}

stock SmartAttacher(playerid, modelid)
{
	if(!IsPlayerConnected(playerid)) return -1;
	new skinid = GetPlayerSkin(playerid);
	switch(modelid)
	{
	    case 18921..18925: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Boinas
	    case 18926..18935: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Gorras
	    case 18939..18943: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinBackCaps[skinid][0], SkinBackCaps[skinid][1], SkinBackCaps[skinid][2], SkinBackCaps[skinid][3],SkinBackCaps[skinid][4], SkinBackCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Gorra atras
	    case 18960, 18961: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], 0.0, 90.0, 90.0, 1.000000, 1.000000, 1.000000); //Gorras
	    case 18955..18959: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000);//Gorras
		case 18944..18951: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][10], 0, 0, 180, 0, 10); //Sombreros
		case 18962: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], 0.0,0.0, 0.0, 1.000000, 1.000000, 1.000000);//Gorros de lona
		case 18970..18973: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], SkinCaps[skinid][1], SkinCaps[skinid][2], 90.0,90.0, 0.0, 1.000000, 1.000000, 1.000000);//Gorros de lona
		case 18967..18969:  SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], 90.0, 90.0, 0.0, 1.000000, 1.000000, 1.000000);//Gorros de lona
		case 18645, 18976, 18977, 18978, 18979:
	    {
	        switch(skinid)
            {
                #define SPAO{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, (%0), (%1), (%2), (%3), (%4), (%5));
                case 0, 65, 74, 149, 208, 273:  SPAO{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
                case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
                case 7, 10: SPAO{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
                case 9: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
                case 11..13: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
                case 15: SPAO{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
                case 17..21: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 40: SPAO{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 50, 100..103, 148, 150..189, 222: SPAO{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 51..54: SPAO{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 59..62: SPAO{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 77: SPAO{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
                case 85, 88, 89: SPAO{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 90..97: SPAO{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 132: SPAO{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 144..146: SPAO{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
                case 220: SPAO{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 223, 246: SPAO{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
                case 224..245: SPAO{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 294: SPAO{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
                case 295: SPAO{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
                case 296..298: SPAO{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
                case 299: SPAO{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
            }
	    }
		case 18936..18938: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][4], 0.02); //Casco de guerrero
		case 19064..19066: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][10], 0, 0, 70, 94, 30, 1.0, 1.0, 1.0); //Santa gorro
		case 18953, 18954: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], SkinCaps[skinid][3],SkinCaps[skinid][4], SkinCaps[skinid][5], 1.000000, 1.000000, 1.000000); //Gorro de frio/nieve
		case 18964..18966: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], 90.0, 90.0, 0.0, 1.000000, 1.000000, 1.000000); //Gorro de frio
		case 19036..19038: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, 0.093999, 0.026000, -0.004999, 93.800018, 82.199951, -3.300001, 1.098000, 1.139999, 1.173000);//SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, PosX[skinid][5], 0.02, 0, 90, 90); //Mascaras
		case 18974: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][3], 0.0258, 0, 90, 90); //Antifaz
		case 18952: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, PosX[skinid][4], 0.01); //Boxing
		case 18911..18920: AttachBandanaToPlayer(playerid, modelid, skinid);
		case 19006..19025: SetPlayerAttachedObjectEx(playerid, 2, modelid, 2, SkinOffSet[skinid][0], SkinOffSet[skinid][1], SkinOffSet[skinid][2], SkinOffSet[skinid][3], SkinOffSet[skinid][4], SkinOffSet[skinid][5], SkinOffSet[skinid][6], SkinOffSet[skinid][6], SkinOffSet[skinid][6]); //Gafas
		case 19067..19069: SetPlayerAttachedObjectEx(playerid, 0, modelid, 2, SkinCaps[skinid][0], 0.0, SkinCaps[skinid][2], 90.0, 90.0, 0.0, 1.000000, 1.000000, 1.000000); //Gorro especial
	}
	return 1;
}


stock AttachBandanaToPlayer(playerid, modelid, skinid)
{
	switch(skinid)
	{

		case 0:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089999, 0.010000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
	    case 1:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.019980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 2:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.019980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 3:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.036980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 4:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.119000, 0.027980, -0.003010, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 5:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.098999, 0.039980, 0.001990, -86.900001, 15.999990, -94.800003, 1.011989, 1.000000, 0.885990);
		}
		case 6:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.097999, 0.025000, 0.001999, -90.600028, 0.800003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 7:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.031000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 8:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.031000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 9:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.043999, 0.015000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 10:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.022000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 11:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.022000, 0.000999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 12:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.014000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 13:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.014000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 14:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.036000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 15:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.067999, 0.004000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 16:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.031000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 17:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.031000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 18:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.047999, 0.019000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 19:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058999, 0.019000, 0.002999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 20:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.017000, -0.001000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 21:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.017000, -0.001000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 22:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.033000, 0.001999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 23:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.033000, 0.001999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 24:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.014000, -0.005000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 25:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.014000, 0.007000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 26:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.014000, 0.004999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 27:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.014000, 0.004999, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 28:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.033000, -0.001000, -90.600028, 11.200003, -97.299919, 1.000000, 1.000000, 1.000000);
		}
		case 29:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.032999, 0.002999, -82.199974, 17.899999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 30:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.032999, 0.002999, -82.199974, 17.899999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 31:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.029999, -0.004000, -82.199974, 17.899999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 32:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065000, -0.011000, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 33:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.023000, 0.001999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 34:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.027999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 35:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.016999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 36:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.016999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 37:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.016999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 38:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070000, 0.030999, -0.000000, -82.199974, 19.500000, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 39:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.028000, -0.000000, -82.199974, 14.199999, -99.000000, 1.000000, 1.265999, 1.000000);
		}
		case 40:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.017000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 41:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.025000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 42:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058000, 0.025000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 43:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.026000, 0.010999, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 44:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079000, 0.019000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 45:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.045000, 0.019000, 0.002999, -82.199974, 14.199999, -99.000000, 0.941000, 1.265999, 1.000000);
		}
		case 46:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.094000, 0.042999, 0.002999, -82.199974, 2.099999, -99.000000, 1.011000, 1.265999, 1.000000);
		}
		case 47:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.035000, -0.004999, -85.499992, 5.299999, -92.800048, 1.000000, 1.000000, 1.000000);
		}
		case 48:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.091999, 0.036000, -0.004999, -85.499992, 3.299999, -92.800048, 1.000000, 1.000000, 1.000000);
		}
		case 49:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.078999, 0.025000, -0.002999, -85.499992, 3.299999, -92.800048, 1.000000, 1.000000, 1.000000);
		}
		case 50:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, -0.008999, -0.006999, -85.499992, 3.299999, -92.800048, 1.072000, 1.000000, 1.140000);
		}
		case 51:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, 0.005000, -0.004999, -85.499992, 3.299999, -92.800048, 1.072000, 1.000000, 1.140000);
		}
		case 52:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, 0.005000, -0.004999, -85.499992, 3.299999, -92.800048, 1.072000, 1.000000, 1.140000);
		}
		case 53:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.032000, -0.003999, -85.499992, 3.299999, -92.800048, 0.942000, 1.000000, 0.886000);
		}
		case 55:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.066999, 0.026000, 0.002000, -85.499992, 3.299999, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 56:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.066999, 0.026000, 0.002000, -85.499992, 3.299999, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 57:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.109999, 0.041000, -0.000999, -85.499992, 3.299999, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 58:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.019000, -0.000999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 59:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.019000, -0.000999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 60:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.034000, -0.002999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 61:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.026000, -0.002999, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 62:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089999, 0.035000, 0.009000, -85.499992, 8.599997, -92.800048, 0.998000, 1.000000, 0.914000);
		}
		case 63:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.006000, -0.002999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 64:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.006000, -0.002999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 65:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.006000, -0.002999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 66:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.025000, -0.006999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 1.191000);
		}
		case 67:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.014000, -0.006999, -85.499992, 8.599997, -92.800048, 1.096000, 1.000000, 0.943000);
		}
		case 68:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.028000, -0.002999, -85.499992, 8.599997, -92.800048, 0.954000, 1.000000, 0.943000);
		}
		case 69:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.062999, 0.022000, 0.000000, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 70:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.022000, 0.000000, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 71:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, -0.000999, 0.000000, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 72:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.016000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 73:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.016000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 74:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089999, 0.010000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 75:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068999, 0.022000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 76:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068999, 0.022000, -0.000999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 77:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.025000, -0.004999, -85.499992, 8.599997, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 78:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.007000, 0.006000, -85.499992, 18.799999, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 79:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.011000, 0.006000, -85.499992, 4.800003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 80:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.007000, 0.003000, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 81:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.007000, 0.003000, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 82:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085999, 0.025000, -0.002999, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 83:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085999, 0.025000, -0.002999, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 84:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085999, 0.025000, -0.002999, -85.499992, 10.000003, -92.800048, 1.010000, 1.000000, 1.015000);
		}
		case 85:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.037000, -0.002999, -85.499992, 4.600003, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 86:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.011000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 87:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.040000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 88:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.028000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 89:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.086999, 0.011000, -0.004999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 90:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 91:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 92:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 93:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.022000, -0.002999, -85.499992, 12.300005, -92.800048, 1.060000, 1.000000, 1.015000);
		}
		case 94:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.031999, -0.000999, -0.002999, -85.499992, 12.300005, -92.800048, 0.875001, 1.000000, 1.015000);
		}
		case 95:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, -0.004999, -0.002999, -85.499992, 12.300005, -92.800048, 0.875001, 1.000000, 1.015000);
		}
		case 96:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.016000, -0.002999, -85.499992, 12.300005, -92.800048, 0.926000, 1.000000, 1.015000);
		}
		case 97:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.060999, 0.012000, -0.002999, -85.499992, 12.300005, -92.800048, 0.926000, 1.000000, 1.015000);
		}
		case 98:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.043000, -0.002999, -85.499992, 12.300005, -92.800048, 0.948000, 1.000000, 1.015000);
		}
		case 99:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.021000, -0.002999, -85.499992, 12.300005, -92.800048, 0.948000, 1.000000, 1.015000);
		}
		case 100:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.021000, -0.001999, -85.499992, 12.300005, -92.800048, 0.998000, 1.000000, 1.015000);
		}
		case 101:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.021000, -0.001999, -85.499992, 12.300005, -92.800048, 0.998000, 1.000000, 1.015000);
		}
		case 102:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.021000, -0.001999, -85.499992, 12.300005, -92.800048, 0.998000, 1.000000, 1.015000);
		}
		case 103:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 104:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 105:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 106:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 107:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.030000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 108:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.019000, -0.002999, -85.499992, 12.300005, -92.800048, 1.057000, 1.000000, 1.015000);
		}
		case 109:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.033000, -0.002999, -85.499992, 12.300005, -92.800048, 0.983000, 1.000000, 1.015000);
		}
		case 110:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.033000, -0.002999, -85.499992, 12.300005, -92.800048, 0.983000, 1.000000, 1.015000);
		}
		case 111:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090999, 0.014000, -0.002999, -85.499992, 12.300005, -92.800048, 0.983000, 1.000000, 1.015000);
		}
		case 112:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.015000, -0.002999, -85.499992, 2.000007, -92.800048, 0.983000, 1.000000, 0.895000);
		}
		case 113:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.048000, 0.001000, -85.499992, 2.000007, -92.800048, 0.983000, 1.000000, 0.895000);
		}
		case 114:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.051000, -0.000999, -85.499992, 2.000007, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 115:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.051000, -0.000999, -85.499992, 2.000007, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 116:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.015000, 0.006000, -85.499992, 21.400005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 117:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058999, 0.031000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 118:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.058999, 0.031000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 119:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 120:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 121:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 122:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.025000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 123:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.044000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 124:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.039000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 125:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.024000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 126:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.024000, -0.000999, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 127:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.047000, 0.000000, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 128:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.047000, 0.000000, -85.499992, 11.700005, -92.800048, 1.040001, 1.000000, 0.895000);
		}
		case 129:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, 0.025000, 0.000000, -85.499992, 11.700005, -92.800048, 0.801001, 1.000000, 0.895000);
		}
		case 130:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.042999, 0.027000, -0.003999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 131:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.042999, 0.027000, -0.003999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 132:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.009999, 0.000000, -0.003999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 133:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084999, 0.019000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 134:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.066999, 0.002000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 135:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.018000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 136:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.069999, 0.012000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 137:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, -0.001999, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 138:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.029000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 139:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.029000, -0.001999, -85.499992, 18.700014, -92.800048, 0.869001, 1.000000, 1.019000);
		}
		case 140:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.036000, -0.001999, -85.499992, 18.700014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 141:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.048999, 0.016000, -0.001999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 142:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 143:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 144:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 145:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.032000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 146:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.088999, 0.023000, -0.005999, -85.499992, 5.500014, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 147:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.011000, 0.005000, -85.499992, 14.000016, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 148:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.054999, 0.016000, -0.002999, -85.499992, 5.100017, -92.800048, 1.002001, 1.000000, 1.019000);
		}
		case 149:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.091999, 0.016000, 0.000000, -85.499992, 5.100017, -92.800048, 1.039001, 1.000000, 1.019000);
		}
		case 150:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.016000, 0.000000, -85.499992, 5.100017, -92.800048, 1.039001, 1.000000, 1.019000);
		}
		case 151:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.020000, -0.001999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 1.077001);
		}
		case 152:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.007000, -0.001999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 153:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.017000, 0.004000, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 154:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.017000, 0.004000, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 155:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.092999, 0.028000, -0.002999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 156:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.092999, 0.028000, -0.002999, -85.499992, 5.100017, -92.800048, 1.112001, 1.000000, 0.989001);
		}
		case 157:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.028000, 0.004000, -85.499992, 5.100017, -92.800048, 1.073001, 1.000000, 0.989001);
		}
		case 158:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.028000, -0.004999, -85.499992, 5.100017, -92.800048, 1.073001, 1.000000, 0.989001);
		}
		case 159:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.028000, -0.004999, -85.499992, 5.100017, -92.800048, 1.073001, 1.000000, 0.989001);
		}
		case 160:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.015000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 161:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.029000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 162:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.029000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 163:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 164:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 165:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 166:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.018000, 0.002000, -85.499992, 13.300017, -92.800048, 0.944001, 1.000000, 0.989001);
		}
		case 167:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.033000, 0.002000, -85.499992, 22.500015, -92.800048, 0.818001, 1.000000, 0.989001);
		}
		case 168:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.033000, -0.008999, -85.499992, 16.900012, -92.800048, 0.843001, 1.000000, 0.989001);
		}
		case 169:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.065999, 0.015000, -0.000999, -85.499992, 16.900012, -92.800048, 0.909000, 1.000000, 0.989001);
		}
		case 170:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071999, 0.025000, -0.006999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 171:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071999, 0.025000, -0.006999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 172:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.050999, 0.025000, -0.002999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 173:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.002999, -85.499992, 16.900012, -92.800048, 0.964000, 1.000000, 0.989001);
		}
		case 174:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 175:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 176:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.036000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 177:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.028000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 178:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.056999, 0.028000, -0.004999, -85.499992, 16.900012, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 179:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.035000, -0.008999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 180:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.075999, 0.035000, -0.008999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 181:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.104999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 182:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 183:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 184:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 185:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 186:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.029000, -0.005999, -85.499992, 8.800013, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 187:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074999, 0.017000, 0.007000, -85.499992, 14.300015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 188:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.017000, 0.000000, -85.499992, 14.300015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 189:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.017000, 0.000000, -85.499992, 14.300015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 190:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 191:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 192:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 193:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 194:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 195:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 196:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.025000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 197:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.017000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 198:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.064999, 0.017000, -0.001999, -85.499992, 6.000015, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 199:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 200:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 201:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.060999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 202:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.097999, 0.022000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 203:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.086999, 0.030000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 204:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.086999, 0.025000, -0.001999, -85.499992, 10.400016, -92.800048, 1.011000, 1.000000, 0.989001);
		}
		case 205:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.073999, 0.025000, -0.002999, -85.499992, 14.800015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 206:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.099999, 0.025000, -0.002999, -85.499992, 5.200016, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 207:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.025000, -0.002999, -85.499992, 5.200016, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 208:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079999, 0.035000, -0.002999, -85.499992, 5.200016, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 209:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, 0.012000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 210:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.072999, 0.012000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 211:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.053999, 0.021000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 212:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083999, 0.017000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 213:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083999, 0.024000, -0.002999, -85.499992, 10.300015, -92.800048, 1.083000, 1.000000, 0.989001);
		}
		case 214:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.013000, -0.000999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 215:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.013000, -0.000999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 216:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.013000, -0.000999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 217:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.013000, -0.003999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 218:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081999, 0.027000, -0.003999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 219:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059999, 0.021000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 220:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.040999, 0.039000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 221:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.020000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 222:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.028000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 223:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.040000, -0.001999, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 224:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.019000, 0.001000, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 225:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.019000, 0.001000, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 226:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.061999, 0.019000, 0.001000, -85.499992, 10.300015, -92.800048, 1.023000, 1.000000, 0.989001);
		}
		case 227:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.095999, 0.042000, -0.002999, -85.499992, 10.300015, -92.800048, 0.973000, 1.000000, 0.989001);
		}
		case 228:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.095999, 0.042000, -0.002999, -85.499992, 10.300015, -92.800048, 0.973000, 1.000000, 0.989001);
		}
		case 229:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076999, 0.008000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 230:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.049999, 0.018000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 231:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, 0.033000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 232:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.082999, -0.000999, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 233:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.052999, 0.025000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 234:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.062999, -0.003999, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 235:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.042999, 0.003000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 236:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.021000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 237:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.006000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 238:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.070999, 0.027000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 239:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.097999, 0.015000, 0.004000, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 240:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071999, 0.021000, -0.001999, -85.499992, 10.300015, -92.800048, 1.020000, 1.000000, 0.989001);
		}
		case 241:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.048999, 0.000000, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 242:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.025999, 0.001999, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 243:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.025999, 0.001999, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 244:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.059000, 0.048999, 0.001999, -86.900016, 1.399997, -94.800003, 1.000000, 1.000000, 1.000000);
		}
		case 245:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.063000, 0.026999, -0.001000, -86.900016, 9.399997, -94.800003, 1.095000, 1.000000, 1.000000);
		}
		case 246:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.063000, 0.043999, -0.001000, -86.900016, 9.399997, -94.800003, 0.939000, 1.000000, 1.000000);
		}
		case 247:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.087000, 0.034999, 0.003999, -86.900016, 9.399997, -94.800003, 0.982000, 1.000000, 1.000000);
		}
		case 248:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.087000, 0.034999, -0.001000, -86.900016, 9.399997, -94.800003, 0.982000, 1.000000, 1.000000);
		}
		case 249:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.078000, 0.034999, 0.006999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 250:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.078000, 0.031999, 0.000999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 251:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.063000, 0.031999, 0.000999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 252:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.094000, 0.023999, 0.002999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 253:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.081000, 0.016999, 0.002999, -86.900016, 9.399997, -94.800003, 1.033000, 1.000000, 1.000000);
		}
		case 254:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.093000, 0.021999, 0.002999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 255:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079000, -0.001000, 0.002999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 256:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.056000, 0.024999, 0.002999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 257:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.067000, 0.024999, -0.001000, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 258:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074000, 0.033999, -0.001000, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 259:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074000, 0.033999, -0.001000, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 260:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084000, 0.014999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 261:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.084000, 0.001999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 262:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068000, 0.022999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 263:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068000, 0.013999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 264:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.068000, 0.034999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 265:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.002999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 266:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.002999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 267:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.002999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 268:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.006999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 269:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.006999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 270:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.083000, 0.006999, 0.000999, -86.900016, 9.399997, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 271:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.085000, 0.012999, 0.000999, -86.900016, 13.599996, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 272:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.107000, 0.026999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 273:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.018999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 274:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.002999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 275:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.002999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 276:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.002999, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 277:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.040000, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 278:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.040000, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 279:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.040000, 0.000999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 1.000000);
		}
		case 280:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 281:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 282:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 283:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.076000, 0.015000, -0.002000, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 284:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.080000, 0.053999, 0.010999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 285:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.098000, 0.034999, 0.010999, -86.900016, 4.699994, -94.800003, 1.058000, 1.000000, 0.885999);
		}
		case 286:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.079000, 0.010999, 0.000999, -86.900016, 4.699994, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 287:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.074000, 0.037999, 0.004999, -86.900016, 4.699994, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 288:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.089000, 0.014999, -0.000000, -86.900016, 4.699994, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 289:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071000, 0.014999, -0.000000, -86.900016, 14.299993, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 290:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.071000, 0.036999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 291:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.036999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 292:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.018999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 293:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.025999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 294:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.025999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 295:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.077000, 0.025999, -0.002000, -86.900016, 6.999991, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 296:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.030999, 0.000999, -86.900016, 15.999993, -94.800003, 1.012000, 1.000000, 0.885999);
		}
		case 298:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.020989, -0.003010, -86.900009, 15.999990, -94.800003, 1.011999, 1.000000, 0.885990);
		}
		case 299:
		{
			SetPlayerAttachedObjectEx(playerid, 1, modelid, 2, 0.090000, 0.050989, 0.001990, -86.900009, 15.999990, -94.800003, 1.011999, 1.000000, 0.885990);
		}
	}
}

stock SetPlayerAttachedObjectEx(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 1.0, Float:fScaleY = 1.0, Float:fScaleZ = 1.0)
{
	new newindex;
	switch(index)
	{
	    case 0:	{ RemovePlayerAttachedObject(playerid, 0); newindex = 3; }
	    case 1:	{ RemovePlayerAttachedObject(playerid, 1); newindex = 4; }
	    case 2:	{ RemovePlayerAttachedObject(playerid, 2); newindex = 5; }
	}
    SetPlayerAttachedObject(playerid, newindex, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
    ToysInfo[playerid][pToy][newindex] = 1; //Viendólo
    ToysInfo[playerid][pToyModelID][newindex] = modelid;
    ToysInfo[playerid][pToyBone][newindex] = bone;
    ToysInfo[playerid][pToyX][newindex] = fOffsetX;
    ToysInfo[playerid][pToyY][newindex] = fOffsetY;
    ToysInfo[playerid][pToyZ][newindex] = fOffsetZ;
    ToysInfo[playerid][pToyRX][newindex] = fRotX;
    ToysInfo[playerid][pToyRY][newindex] = fRotY;
    ToysInfo[playerid][pToyRZ][newindex] = fRotZ;
    ToysInfo[playerid][pToySX][newindex] = fScaleX;
    ToysInfo[playerid][pToySY][newindex] = fScaleY;
    ToysInfo[playerid][pToySZ][newindex] = fScaleZ;
	return 1;
}

stock UpdateToy(playerid, index, modelid, bone, Float:fOffsetX = 0.0, Float:fOffsetY = 0.0, Float:fOffsetZ = 0.0, Float:fRotX = 0.0, Float:fRotY = 0.0, Float:fRotZ = 0.0, Float:fScaleX = 0.0, Float:fScaleY = 0.0, Float:fScaleZ = 0.0)
{
	if(index > 2) return 1;
	if(PToysInfo[playerid][pToy][index] != 1) return 1;
	//new str[24];
    SetPlayerAttachedObject(playerid, index, modelid, bone, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
    ToysInfo[playerid][pToy][index] = 1; // format(str, 24, "PTOY%d", index); //SaveValue(playerid, str, ToysInfo[playerid][pToy][index]);
    ToysInfo[playerid][pToyModelID][index] = modelid; // format(str, 24, "PTOYMID%d", index); //SaveValue(playerid, str, ToysInfo[playerid][pToyModelID][index]);
    ToysInfo[playerid][pToyBone][index] = bone; // format(str, 24, "PTOYBONE%d", index); //SaveValue(playerid, str, ToysInfo[playerid][pToyBone][index]);
    ToysInfo[playerid][pToyX][index] = fOffsetX; // format(str, 24, "PTOYX%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToyX][index]);
    ToysInfo[playerid][pToyY][index] = fOffsetY; // format(str, 24, "PTOYY%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToyY][index]);
    ToysInfo[playerid][pToyZ][index] = fOffsetZ; // format(str, 24, "PTOYZ%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToyZ][index]);
    ToysInfo[playerid][pToyRX][index] = fRotX; // format(str, 24, "PTOYRX%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToyRX][index]);
    ToysInfo[playerid][pToyRY][index] = fRotY; //format(str, 24, "PTOYRY%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToyRY][index]);
    ToysInfo[playerid][pToyRZ][index] = fRotZ; // format(str, 24, "PTOYRZ%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToyRZ][index]);
    ToysInfo[playerid][pToySX][index] = fScaleX; // format(str, 24, "PTOYSX%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToySX][index]);
    ToysInfo[playerid][pToySY][index] = fScaleY; //format(str, 24, "PTOYSY%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToySY][index]);
    ToysInfo[playerid][pToySZ][index] = fScaleZ; // format(str, 24, "PTOYSZ%d", index); //SaveFloat(playerid, str, ToysInfo[playerid][pToySZ][index]);
	return 1;
}

stock ColocarToys(playerid)
{
	for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
 	}
 	if(ToysInfo[playerid][pToy][0] == 1) SetPlayerAttachedObject(playerid, 0, ToysInfo[playerid][pToyModelID][0], ToysInfo[playerid][pToyBone][0], ToysInfo[playerid][pToyX][0], ToysInfo[playerid][pToyY][0], ToysInfo[playerid][pToyZ][0], ToysInfo[playerid][pToyRX][0], ToysInfo[playerid][pToyRY][0], ToysInfo[playerid][pToyRZ][0], ToysInfo[playerid][pToySX][0],ToysInfo[playerid][pToySY][0], ToysInfo[playerid][pToySZ][0]);
	if(ToysInfo[playerid][pToy][1] == 1) SetPlayerAttachedObject(playerid, 1, ToysInfo[playerid][pToyModelID][1], ToysInfo[playerid][pToyBone][1], ToysInfo[playerid][pToyX][1], ToysInfo[playerid][pToyY][1], ToysInfo[playerid][pToyZ][1], ToysInfo[playerid][pToyRX][1], ToysInfo[playerid][pToyRY][1], ToysInfo[playerid][pToyRZ][1], ToysInfo[playerid][pToySX][1], ToysInfo[playerid][pToySY][1], ToysInfo[playerid][pToySZ][1]);
    if(ToysInfo[playerid][pToy][2] == 1) SetPlayerAttachedObject(playerid, 2, ToysInfo[playerid][pToyModelID][2], ToysInfo[playerid][pToyBone][2], ToysInfo[playerid][pToyX][2], ToysInfo[playerid][pToyY][2], ToysInfo[playerid][pToyZ][2], ToysInfo[playerid][pToyRX][2], ToysInfo[playerid][pToyRY][2], ToysInfo[playerid][pToyRZ][2], ToysInfo[playerid][pToySX][2], ToysInfo[playerid][pToySY][2], ToysInfo[playerid][pToySZ][2]);
	return 1;
}


stock CreatePersonalCar(playerid, modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:vcangle, color1, color2, vslot, VW)
{
	new veh;
	veh = CreateVehicle(modelid, spawn_x, spawn_y, spawn_z, vcangle, color1, color2, -1);
	SetVehicleVirtualWorld(veh, VW);
	new str[20];
	new VEHKEYS = random(50000000);
	format(str, 20, "XRP%04d", VEHKEYS);
	SetVehicleNumberPlate(veh, str);
	SetVehicleToRespawn(veh);
    PlayerInfo[playerid][PlayerVehicle][vslot] = veh; // format(str, 20, "VEH%d", vslot); //SaveValue(playerid, str, PlayerInfo[playerid][PlayerVehicle][vslot]);
	PlayerInfo[playerid][PlayerVehicleKey][vslot] = VEHKEYS; // format(str, 20, "VKEY%d", vslot); //SaveValue(playerid, str, PlayerInfo[playerid][PlayerVehicleKey][vslot]);

    AutoInfo[veh][aCoordX] = spawn_x;
    AutoInfo[veh][aCoordY] = spawn_y;
    AutoInfo[veh][aCoordZ] = spawn_z;
    AutoInfo[veh][aAngulo] = vcangle;
	AutoInfo[veh][aModelo] = modelid;
	AutoInfo[veh][aColor1] = color1;
	AutoInfo[veh][aColor2] = color2;
	AutoInfo[veh][aPaintjob] = 3;
//	AutoInfo[veh][VSTATUS] = 1; //Para recoger o sin recoger
	new vdpanels,vddoors,vdlights,vdtires;
	GetVehicleDamageStatus(veh,vdpanels,vddoors,vdlights,vdtires);
//	AutoInfo[veh][VehicleHealth] = 1000.0;
//	AutoInfo[veh][VPanels] = vdpanels;
//	AutoInfo[veh][VDoors] = vddoors;
//	AutoInfo[veh][VLights] = vdlights;
//	AutoInfo[veh][aMotor] = vdtires;
	return veh;
}

funcion washcontinue(playerid, vehicleid, in)
{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	switch(in)
	{
		case 0:
		{
      		new Float:pos[3];
		    GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
		    if(-1778.0 < pos[1])
		    {
				VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 500, 0, "idd", playerid, vehicleid, 1);
    			TogglePlayerControllable(playerid, false);
				SetVehicleZAngle(vehicleid, 0.0);
		        return 1;
		    }
		    SetVehicleVelocity(vehicleid, 0.0, 0.1, 0.0);
		    VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 0);
		}
		case 1:
		{
		    SetVehiclePos(vehicleid, 1911.147094, -1777.152465, 13.109889);
			PlayerPlaySound(playerid, 12600, 1911.147094, -1777.152465, 13.109889);
			SetPlayerCameraPos(playerid, 1909.0233, -1767.4805, 13.3087);
			SetPlayerCameraLookAt(playerid, 1909.3793, -1768.4137, 13.3187);
			SetDynamicObjectPos(CarWash[0], 1911, -1776, 10);
		    SetDynamicObjectPos(CarWash[1], 1914, -1776, 10);
		    SetDynamicObjectPos(CarWash[2], 1909.256713, -1773.727539, 12.382807);
		    SetDynamicObjectPos(CarWash[3], 1913.54663, -1779.261718, 12.382807);
			MoveDynamicObject(CarWash[2], 1909.256713, -1779.261718, 12.382807, 0.5);
			MoveDynamicObject(CarWash[3], 1913.54663, -1773.727539, 12.382807, 0.5);
		    VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 15000, 0, "idd", playerid, vehicleid, 2);
		}
		case 2:
		{
		    SetDynamicObjectPos(CarWash[2], 0, 0, -100);
		    SetDynamicObjectPos(CarWash[3], 0, 0, -100);
		    SetObjectPos(CarWash[4], 1911.270751, -1778.91394, 14.152816);
		    MoveObject(CarWash[4], 1911.270751, -1773.727539, 14.152816, 0.5);
		    VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 10000, 0, "idd", playerid, vehicleid, 3);
		}
		case 3:
		{
			InterpolateCameraPos(playerid, 1909.0233, -1767.4805, 13.3087, 1914.3645, -1763.0110, 15.5584, 5000);
			InterpolateCameraLookAt(playerid, 1909.3793, -1768.4137, 13.3187, 1913.9342, -1763.9115, 15.3034, 5000);
		    VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 5000, 0, "idd", playerid, vehicleid, 4);
		}
		case 4:
		{
		    TogglePlayerControllable(playerid, true);
		    VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 5);
		    VirtualTimers[playerid][29] = SetTimerEx("washcontinue", 10000, 0, "idd", playerid, vehicleid, 6);
		}
		case 5:
		{
      		new Float:pos[3];
		    GetVehiclePos(vehicleid, pos[0], pos[1], pos[2]);
		    if(-1769.7117 < pos[1])
		    {
		        KillTimer(VirtualTimers[playerid][29]);
		        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
		        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
		        SetObjectPos(CarWash[4], 0, 0, -100);
		        SetCameraBehindPlayer(playerid);
		        CarWashUsed = 0;
		        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
		        SetPlayerVirtualWorld(playerid, 0);
                foreach(new i : Player)
				{
					if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
					{
		                SetPlayerVirtualWorld(i, 0);
		                TogglePlayerControllable(i, true);
					}
				}
		        CarWashUsedBy[playerid] = 0;
				GameTextForPlayer(playerid, "~r~-25", 3000, 0);
				PlayerInfo[playerid][dinero] -= 25;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				PlayerPlaySound(playerid, 0, 1911.147094, -1777.152465, 13.109889);
		        return 1;
		    }
		    SetVehicleVelocity(vehicleid, 0.0, 0.1, 0.0);
		    VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 5);
		}
		case 6:
		{
		    KillTimer(VirtualTimers[playerid][20]);
	        SetDynamicObjectPos(CarWash[0], 0, 0, -100);
	        SetDynamicObjectPos(CarWash[1], 0, 0, -100);
	        SetObjectPos(CarWash[4], 0, 0, -100);
	        SetCameraBehindPlayer(playerid);
	        CarWashUsed = 0;
	        SetVehicleVirtualWorld(CarWashUsedBy[playerid], 0);
	        SetPlayerVirtualWorld(playerid, 0);
	        foreach(new i : Player)
			{
				if(GetPlayerVehicleID(i) == CarWashUsedBy[playerid])
				{
	                SetPlayerVirtualWorld(i, 0);
	                TogglePlayerControllable(i, true);
				}
			}
	        CarWashUsedBy[playerid] = 0;
			GameTextForPlayer(playerid, "~r~-25", 3000, 0);
			PlayerInfo[playerid][dinero] -= 25;
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
			//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			PlayerPlaySound(playerid, 0, 1911.147094, -1777.152465, 13.109889);
		}
	}
	return 1;
}

funcion ShowBankCash(playerid, time)
{
	if(time == -1)
	{
	    PlayerTextDrawHide(playerid, BankCash[playerid]);
	    return 1;
	}
	if(time == 0)
	{
	    new str[64];
		format(str, 64, "$%d", PlayerInfo[playerid][dinerobank]);
		PlayerTextDrawSetString(playerid, BankCash[playerid], str);
		PlayerTextDrawShow(playerid, BankCash[playerid]);
	    return 1;
	}
	new str[64];
	format(str, 64, "$%d", PlayerInfo[playerid][dinerobank]);
	PlayerTextDrawSetString(playerid, BankCash[playerid], str);
	PlayerTextDrawShow(playerid, BankCash[playerid]);
	VirtualTimers[playerid][18] = SetTimerEx("ShowBankCash", time, false, "id", playerid, -1);
	return 1;
}

funcion GrottiNextView(playerid, view)
{
	switch(view)
	{
	    case 0:
	    {
	        InterpolateCameraPos(playerid, 557.7495, -1304.7958, 1998.8300, 556.8339, -1305.6442, 1998.8300, 10000);
			InterpolateCameraLookAt(playerid, 558.4281, -1305.5282, 1998.5769, 557.5126, -1306.3766, 1998.5769, 10000);
			PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Solo acércate al mostrador para~n~__ver el catálogo, donde podrás~n~__elegir una variedad de~n~__vehículos deportivos...~n~~n~"));
			VirtualTimers[playerid][21] = SetTimerEx("GrottiNextView", 9000, 0, "id", playerid, 1);
	    }
	    case 1:
	    {
			PlayerTextDrawHide(playerid, TD_IO[playerid]);
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, 545.4426,-1318.3784,1996.5759);
			SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
            SetPlayerFacingAngle(playerid, 350);
            SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
	    	SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
            PlayerInfo[playerid][VGrotti] = 1; //SaveValue(playerid, "VGROTTI", PlayerInfo[playerid][VGrotti]);
            ChatLogDisabled[playerid] = false;
	    }
	}
	return 1;
}
funcion BankNextView(playerid, view)
{
	switch(view)
	{
	    case 0:
	    {
	        InterpolateCameraPos(playerid, 1440.1262, -986.2506, 1643.3699, 1437.8888, -986.5042, 1643.0210, 10000);
			InterpolateCameraLookAt(playerid, 1439.6691, -987.1392, 1643.0908, 1437.4316, -987.3928, 1642.7419, 10000);
			PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Aquí podrás retirar, depositar~n~__y transferir dinero de tu~n~__cuenta bancaria...~n~~n~"));
			VirtualTimers[playerid][21] = SetTimerEx("BankNextView", 9000, 0, "id", playerid, 1);
	    }
	    case 1:
	    {
			PlayerTextDrawHide(playerid, TD_IO[playerid]);
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			SetPlayerPos(playerid, 1414.798950, -988.716308, 1639.784301);
	        SetPlayerFacingAngle(playerid, 270.0);
    	    SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
	    	SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
	        SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
            PlayerInfo[playerid][VBank] = 1; //SaveValue(playerid, "VBANK", PlayerInfo[playerid][VBank]);
            ChatLogDisabled[playerid] = false;
	    }
	}
	return 1;
}
funcion InfoMSG(playerid, time, text[])
{
	PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos(text));
	PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
	VirtualTimers[playerid][19] = SetTimerEx("RemoveMSGDraw", time, 0, "i", playerid);
	return 1;
}

funcion RemoveMSGDraw(playerid) return PlayerTextDrawHide(playerid, ErrorCommand[playerid]);

funcion OnPlayerFinishInterpolateCamera(playerid, type)
{
	switch(type)
	{
	    case 1:
		{
			InterpolateCameraPos(playerid, CameraPositions[type][0], CameraPositions[type][1], CameraPositions[type][2], CameraPositions[type][3], CameraPositions[type][4], CameraPositions[type][5], 10000);
			InterpolateCameraLookAt(playerid, CameraPositions[type][6], CameraPositions[type][7], CameraPositions[type][8], CameraPositions[type][9], CameraPositions[type][10], CameraPositions[type][11], 10000);
			VirtualTimers[playerid][5] = SetTimerEx("OnPlayerFinishInterpolateCamera", 5000, false, "id", playerid, type+1);
			return 1;
		}
		case 2:
		{

		    return 1;
		}
	}
    InterpolateCameraPos(playerid, CameraPositions[type][0], CameraPositions[type][1], CameraPositions[type][2], CameraPositions[type][3], CameraPositions[type][4], CameraPositions[type][5], 10000);
	InterpolateCameraLookAt(playerid, CameraPositions[type][6], CameraPositions[type][7], CameraPositions[type][8], CameraPositions[type][9], CameraPositions[type][10], CameraPositions[type][11], 10000);
	VirtualTimers[playerid][5] = SetTimerEx("OnPlayerFinishInterpolateCamera", 8000, false, "id", playerid, 1);
	return 1;
}



//--------------
forward OnQueryError(errorid, error[], callback[], query[], connectionHandle );
public OnQueryError(errorid, error[], callback[], query[], connectionHandle )
{
  printf("[ERROR] ID: %d - Error: %s - Callback - %s - Query: %s", errorid, error, callback, query); //Imprimimos el mensaje en la consola
	return 1;
}

forward loaduser(playerid);
public loaduser(playerid)
{
 SetPlayerInterior(playerid, PlayerInfo[playerid][interiorid]);
 SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][virtualworldid]);
 SetPlayerPos(playerid, PlayerInfo[playerid][posx], PlayerInfo[playerid][posy], PlayerInfo[playerid][posz] + 1.0);
 SetPlayerFacingAngle(playerid, PlayerInfo[playerid][angle]);
 GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
 SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
 SetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
 SetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
 SendClientMessage(playerid, -1, "Bievenido de nuevo a {008C00}New Clan RolePlay");
 if(PlayerInfo[playerid][adminlvl] > 0) SendClientMessageEx(playerid, AZULCLARO, ""WHITE"Te has conectado con nivel de administrador: {008C00}%d", PlayerInfo[playerid][adminlvl]);
 return 1;
 }
 
forward CargarDatos(playerid);
public CargarDatos(playerid)
{
     new f[500];
    cache_get_field_content(0,"posx", f);PlayerInfo[playerid][posx] = floatstr(f);
    cache_get_field_content(0,"posy", f);PlayerInfo[playerid][posy] = floatstr(f);
    cache_get_field_content(0,"posz", f);PlayerInfo[playerid][posz] = floatstr(f);
    cache_get_field_content(0,"angle", f);PlayerInfo[playerid][angle] = floatstr(f);
    cache_get_field_content(0,"sexo", f);PlayerInfo[playerid][sexo] = strval(f);
    cache_get_field_content(0,"edad", f);PlayerInfo[playerid][edad] = strval(f);
    cache_get_field_content(0,"skin", f);PlayerInfo[playerid][skin] = strval(f);
    cache_get_field_content(0,"vida", f);PlayerInfo[playerid][vida] = floatstr(f);
    cache_get_field_content(0,"chaleco", f);PlayerInfo[playerid][chaleco] = floatstr(f);
    cache_get_field_content(0,"adminlvl", f);PlayerInfo[playerid][adminlvl] = strval(f);
    cache_get_field_content(0,"interiorid", f);PlayerInfo[playerid][interiorid] = strval(f);
    cache_get_field_content(0,"virtualworldid", f);PlayerInfo[playerid][virtualworldid] = strval(f);
	cache_get_field_content(0,"pwp0", f);PlayerInfo[playerid][pwp0] = strval(f);
	cache_get_field_content(0,"pwp1", f);PlayerInfo[playerid][pwp1] = strval(f);
	cache_get_field_content(0,"pwp2", f);PlayerInfo[playerid][pwp2] = strval(f);
	cache_get_field_content(0,"pwp3", f);PlayerInfo[playerid][pwp3] = strval(f);
	cache_get_field_content(0,"pwp4", f);PlayerInfo[playerid][pwp4] = strval(f);
	cache_get_field_content(0,"pwp5", f);PlayerInfo[playerid][pwp5] = strval(f);
	cache_get_field_content(0,"pwp6", f);PlayerInfo[playerid][pwp6] = strval(f);
	cache_get_field_content(0,"pwp7", f);PlayerInfo[playerid][pwp7] = strval(f);
	cache_get_field_content(0,"pwp8", f);PlayerInfo[playerid][pwp8] = strval(f);
	cache_get_field_content(0,"pwp9", f);PlayerInfo[playerid][pwp9] = strval(f);
	cache_get_field_content(0,"pwp10", f);PlayerInfo[playerid][pwp10] = strval(f);
	cache_get_field_content(0,"pwp11", f);PlayerInfo[playerid][pwp11] = strval(f);
	cache_get_field_content(0,"pwp12", f);PlayerInfo[playerid][pwp12] = strval(f);
	cache_get_field_content(0,"Agonizando", f);PlayerInfo[playerid][Agonizando] = strval(f);
	cache_get_field_content(0,"miembro", f);PlayerInfo[playerid][miembro] = strval(f);
    cache_get_field_content(0,"rango", f);PlayerInfo[playerid][rango] = strval(f);
    cache_get_field_content(0,"cargos", f);PlayerInfo[playerid][Cargos] = strval(f);
    cache_get_field_content(0,"pmodelo", f);PlayerInfo[playerid][pModelo] = strval(f);
    cache_get_field_content(0,"placa", f);PlayerInfo[playerid][Placa] = strval(f);
    cache_get_field_content(0,"duty", f);PlayerInfo[playerid][Duty] = strval(f);
	cache_get_field_content(0,"job", f);PlayerInfo[playerid][job] = strval(f);
	cache_get_field_content(0,"vipjob", f);PlayerInfo[playerid][vipjob] = strval(f);
    cache_get_field_content(0,"dinero", f);PlayerInfo[playerid][dinero] = strval(f);
    cache_get_field_content(0,"dinerobank", f);PlayerInfo[playerid][dinerobank] = strval(f);
    cache_get_field_content(0,"banco", f);PlayerInfo[playerid][banco] = strval(f);
    cache_get_field_content(0,"movil", f);PlayerInfo[playerid][movil] = strval(f);
    cache_get_field_content(0,"dni", f);PlayerInfo[playerid][dni] = strval(f);
    cache_get_field_content(0,"carcel", f);PlayerInfo[playerid][carcel] = strval(f);
    cache_get_field_content(0,"jailminutes", f);PlayerInfo[playerid][jailminutes] = strval(f);
    cache_get_field_content(0,"dudechannel", f);PlayerInfo[playerid][DudeChannel] = strval(f);
    cache_get_field_content(0,"keycar1", f);PlayerInfo[playerid][KeyCar1] = strval(f);
    cache_get_field_content(0,"keycar2", f);PlayerInfo[playerid][KeyCar2] = strval(f);
    cache_get_field_content(0,"keycar3", f);PlayerInfo[playerid][KeyCar3] = strval(f);
    cache_get_field_content(0,"pizza", f);PlayerInfo[playerid][Pizza] = strval(f);
    cache_get_field_content(0,"hamburgesa", f);PlayerInfo[playerid][Hamburgesa] = strval(f);
    cache_get_field_content(0,"helado", f);PlayerInfo[playerid][Helado] = strval(f);
    cache_get_field_content(0,"bebida", f);PlayerInfo[playerid][Bebida] = strval(f);
    SpawnPlayer(playerid);
    TogglePlayerSpectating(playerid, false);
    loaduser(playerid);
    SetPlayerPos(playerid, PlayerInfo[playerid][posx], PlayerInfo[playerid][posy], PlayerInfo[playerid][posz]); // Setea a
    PlayerInfo[playerid][Conexion] = 1;
    PlayerInfo[playerid][Registrado] = 0;
      return 1;
      }


forward DarDinero(playerid,cantidad);
public DarDinero(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][dinero] += cantidad;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid,PlayerInfo[playerid][dinero]);
	return 1;
}
forward QuitarDinero(playerid,cantidad);
public QuitarDinero(playerid,cantidad)
{
	if(cantidad < 0) return 1;
	PlayerInfo[playerid][dinero] -= cantidad;
	GivePlayerMoney(playerid,-cantidad);
	return 1;
}
forward OcultarAnim(playerid);
public OcultarAnim(playerid)
{
	LoopingAnim(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
	SendClientMessage(playerid, -1, "El paciente está listo para ser trasladado al hospital.");
	SendClientMessage(playerid, -1, "Sube a tu ambulancia y escribe {58ACFA}/subir paciente{FFFFFF}, luego conduce al hospital más cercano.");
	SendClientMessage(playerid, -1, "Apresúrate porque está perdiendo mucha sangre y puede morir en el camino.");
}

funcion BankContinue(playerid, t)
{
	switch(t)
	{
	    case 0:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[11]);
		    VirtualTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 1);
		}
		case 1:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[12]);
		    VirtualTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 2);
		}
		case 2:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[13]);
		    VirtualTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 3);
		}
		case 3:
		{
		    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
		    TextDrawShowForPlayer(playerid, Bank[14]);
		    VirtualTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 4);
		}
		case 4:
		{
		    PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
		    TextDrawHideForPlayer(playerid, Bank[8]);
		    TextDrawHideForPlayer(playerid, Bank[9]);
		    TextDrawHideForPlayer(playerid, Bank[10]);
		    TextDrawHideForPlayer(playerid, Bank[11]);
		    TextDrawHideForPlayer(playerid, Bank[12]);
		    TextDrawHideForPlayer(playerid, Bank[13]);
		    TextDrawHideForPlayer(playerid, Bank[14]);
		    TextDrawShowForPlayer(playerid, Bank[15]);
		    TextDrawShowForPlayer(playerid, Bank[16]);
		    TextDrawShowForPlayer(playerid, Bank[17]);
		    TextDrawShowForPlayer(playerid, Bank[18]);
		    TextDrawShowForPlayer(playerid, Bank[19]);
		    new str[128];
		    format(str, 128, "Balance actual: $%d", PlayerInfo[playerid][dinerobank]);
		    PlayerTextDrawSetString(playerid, PlayerBank[playerid][0], str);
		    PlayerTextDrawSetString(playerid, PlayerBank[playerid][1], NombreOOC(playerid));
            PlayerTextDrawShow(playerid, PlayerBank[playerid][0]);
            PlayerTextDrawShow(playerid, PlayerBank[playerid][1]);
			SelectTextDraw(playerid, -1);
			KillTimer(VirtualTimers[playerid][17]);
		}
		case 5:
		{
			ChatLogDisabled[playerid] = false;
			loop(0, 11, l) TextDrawHideForPlayer(playerid, Bank[l]);
			P_bank_state[playerid] = -1;
			InfoMSG(playerid, 2500, "No tienes cuenta bancaria, ~n~~b~debes ir al banco ~w~para~n~crearte una.");
		}
	}
	return 1;
}

stock GetClosestATM(playerid)
{
    new hospitalid, Float:closest = GetPlayerDistanceFromPoint(playerid, Cajeros[0][0], Cajeros[0][1], Cajeros[0][2]);
    for(new i = 1; i < sizeof(Cajeros); i++)
    {
        if(GetPlayerDistanceFromPoint(playerid, Cajeros[i][0], Cajeros[i][1], Cajeros[i][2]) < closest)
        {
            closest = GetPlayerDistanceFromPoint(playerid, Cajeros[i][0], Cajeros[i][1], Cajeros[i][2]);
            hospitalid = i;
        }
    }
    return hospitalid;
}
//autos de jobs
TAXI(carid)
{
	if(GetVehicleModel(carid) == 420)
	{

		return 1;
	}
	return 0;
}

CAMION(carid)
{
	if(GetVehicleModel(carid) == 498||GetVehicleModel(carid) == 456 ||GetVehicleModel(carid) == 414 ||GetVehicleModel(carid) == 440 ||GetVehicleModel(carid) == 456
	||GetVehicleModel(carid) == 499 ||GetVehicleModel(carid) == 609 )
	{

		return 1;
	}
	return 0;
}
AMBU(carid)
{
	if(GetVehicleModel(carid) == 416)
	{

		return 1;
	}
	return 0;
}

CAMIONVIP(carid)
{
	if(GetVehicleModel(carid) == 609)
	{

		return 1;
	}
	return 0;
}
//funciones nuevas sacada de orta gm

SAPD(carid)
{
	if(GetVehicleModel(carid) == 596 ||GetVehicleModel(carid) == 528 || GetVehicleModel(carid) == 597|| GetVehicleModel(carid) == 598 || GetVehicleModel(carid) == 523 || GetVehicleModel(carid) == 601)
	{

		return 1;
	}
	return 0;
}
HELISAPD(carid)
{
	if(GetVehicleModel(carid) == 497)
	{

		return 1;
	}
	return 0;
}
LoopingAnim(playerid,animlib[],animname[], Float:Speed, looping, lockx, locky, lockz, lp)
{
	ApplyAnimation(playerid, animlib, animname, Speed, looping, lockx, locky, lockz, lp);
}

funcion Barreras(playerid, type)
{
switch(type)
{
case 1:MoveDynamicObject(PoliceDoor[0], 1544.69873, -1630.80969, 13.10678-0.1, 0.03, 0.00000, 90.00000, 90.00000);
case 2:MoveDynamicObject(PoliceDoor[1], 1589.34912, -1638.28577, 14.27757, 1.5, 0.00000, 0.00000, -90.00000);
}
return 1;
}

funcion SetPlayerPosAndFreeze(playerid, Float:x, Float:y, Float:z, freeze)
{
	if(freeze == 0)
	{
        SetPlayerPos(playerid, x, y, z);
        TogglePlayerControllable(playerid, false);
         VirtualTimers[playerid][14] = SetTimerEx("SetPlayerPosAndFreeze", 1500, false, "ifffd", playerid, x, y, z, 1);
    }
	else if(freeze == 1) TogglePlayerControllable(playerid, true);
	return 1;
}

stock GetVehicleModelGrotti(id)
{
	switch(id)
	{
	    case 0: return 506;
	    case 1: return 451;
	    case 2: return 429;
	    case 3: return 411;
	    case 4: return 541;
	    case 5: return 415;
	    case 6: return 603;
	}
	return -1;
}

stock GetVehiclePriceGrotti(id)
{
	switch(id)
	{
	    case 0: return 300000;
	    case 1: return 350000;
	    case 2: return 190000;
	    case 3: return 450000;
	    case 4: return 260000;
	    case 5: return 420000;
	    case 6: return 80000;
	}
	return -1;
}
stock QuitarArmas(playerid)
{
	if(Quitando[playerid] == 0)
	{
		Quitando[playerid] = 1;
		SetTimerEx("QuitandoA",600,false,"d",playerid);
	}
	PlayerInfo[playerid][pwp0] = 0;
	PlayerInfo[playerid][pwp1] = 0;
	PlayerInfo[playerid][pwp2] = 0;
	PlayerInfo[playerid][pwp3] = 0;
	PlayerInfo[playerid][pwp4] = 0;
	PlayerInfo[playerid][pwp5] = 0;
	PlayerInfo[playerid][pwp6] = 0;
	PlayerInfo[playerid][pwp7] = 0;
	PlayerInfo[playerid][pwp8] = 0;
	//PlayerInfo[playerid][pwp9] = 0;
	PlayerInfo[playerid][pwp10] = 0;
	PlayerInfo[playerid][pwp11] = 0;
	PlayerInfo[playerid][pwp12] = 0;
	ResetPlayerWeapons(playerid);
}
stock MapIcons(playerid)
{
    SetPlayerMapIcon(playerid, 0, 542.3840,-1293.5125,17.2422, 55, 0, MAPICON_LOCAL); //GROTTI
    SetPlayerMapIcon(playerid, 1, 1153.948120, -1772.674682, 16.599193, 52, 0, MAPICON_LOCAL); //BANCO
    SetPlayerMapIcon(playerid, 2, 1833.149780, -1842.485717, 13.578125, 17, 0, MAPICON_LOCAL); //24/7 Unity
    SetPlayerMapIcon(playerid, 3, 1836.4471,-1682.3042,13.3476, 48, 0, MAPICON_LOCAL); //Alhambra
    SetPlayerMapIcon(playerid, 4, 1315.4854,-897.6839,39.5781, 17, 0, MAPICON_LOCAL); //24/7 Vinewood
    SetPlayerMapIcon(playerid, 5, 1352.3815,-1759.2286,13.5078, 17, 0, MAPICON_LOCAL); //24/7 Ayunta
    SetPlayerMapIcon(playerid, 6, 2244.3567,-1665.5562,15.4766, 45, 0, MAPICON_LOCAL); //binco
    SetPlayerMapIcon(playerid, 7, 1456.4344,-1137.6427,23.9484, 45, 0, MAPICON_LOCAL); //ZIP
    SetPlayerMapIcon(playerid, 8, 499.5753,-1360.6145,16.3664, 45, 0, MAPICON_LOCAL); //PROLAPS
    SetPlayerMapIcon(playerid, 9, 2112.7739,-1211.6287,23.9631, 45, 0, MAPICON_LOCAL); //SUBURBAN
    SetPlayerMapIcon(playerid, 10, 461.200073, -1500.823608, 31.059551, 45, 0, MAPICON_LOCAL); //VICTIM
    SetPlayerMapIcon(playerid, 11, 810.6630,-1616.1554,13.5469, 10, 0, MAPICON_LOCAL); //BURGERSHOT
    SetPlayerMapIcon(playerid, 12, 2105.4858,-1806.5336,13.5547, 29, 0, MAPICON_LOCAL); //PIZZASTACKED
    //SetPlayerMapIcon(playerid, 13, 2070.6365,-1793.7847,13.5469, 7, 0, MAPICON_LOCAL); //PELU1
    //SetPlayerMapIcon(playerid, 14, 2068.5840,-1779.7758,13.5596, 39, 0, MAPICON_LOCAL); //TATTO
    //SetPlayerMapIcon(playerid, 15, 823.9835,-1588.2754,13.5545, 7, 0, MAPICON_LOCAL); //PELU2
    SetPlayerMapIcon(playerid, 16, 928.7275,-1352.9547,13.3438, 14, 0, MAPICON_LOCAL); //CHUCKINBELL
    SetPlayerMapIcon(playerid, 17, 2421.3159,-1219.6179,25.5382, 21, 0, MAPICON_LOCAL); //PIGPEN
    SetPlayerMapIcon(playerid, 18, 2310.0977,-1643.5522,14.8270, 49, 0, MAPICON_LOCAL); //BAR GROOVE
    SetPlayerMapIcon(playerid, 19, 2229.8601,-1721.4545,13.5633, 54, 0, MAPICON_LOCAL); //GYMLS
    SetPlayerMapIcon(playerid, 20, 1555.142822, -1675.475341, 16.195312, 30, 0, MAPICON_LOCAL); //LSPD
    SetPlayerMapIcon(playerid, 21, 1481.037597, -1771.786376, 18.795755, 58, 0, MAPICON_LOCAL); //AYUNTA
    SetPlayerMapIcon(playerid, 22, 1038.286010, -1340.728027, 13.741346, 50, 0, MAPICON_LOCAL); //JIM RING
    SetPlayerMapIcon(playerid, 23, 1041.375854, -1026.381713, 32.101562, 27, 0, MAPICON_LOCAL); //TRANSFENDER LS
    SetPlayerMapIcon(playerid, 24, 1025.183959, -1029.424072, 32.101562, 63, 0, MAPICON_LOCAL); //PAYPAINT LS 1
    SetPlayerMapIcon(playerid, 25, 488.571289, -1734.686523, 11.155276, 63, 0, MAPICON_LOCAL); //PAYPAINT LS 2
    SetPlayerMapIcon(playerid, 26, 1945.528808, -1771.480590, 13.115675, 25, 0, MAPICON_LOCAL); //GASOLINERA
    SetPlayerMapIcon(playerid, 27, 2071.982421, -1831.096923, 13.274003, 63, 0, MAPICON_LOCAL); //PAYPAINT LS 3
    SetPlayerMapIcon(playerid, 28, 2643.670166, -2036.018432, 13.282378, 23, 0, MAPICON_LOCAL); //LOCOLOW LS
    SetPlayerMapIcon(playerid, 29, 2034.144042, -1408.787963, 17.164062, 22, 0, MAPICON_LOCAL); //HOSPITAL LS 1
    SetPlayerMapIcon(playerid, 30, 1183.658325, -1334.790283, 13.306521, 22, 0, MAPICON_LOCAL); //HOSPITAL LS 2
    SetPlayerMapIcon(playerid, 31, 2442.220458, -2089.272705, 13.273953, 11, 0, MAPICON_LOCAL); //GRÚAS
    return 1;
}

stock ShowPlayerDefaultDialog2(playerid)//faccion Policia
{
     new bigstring[970];
     strcat(bigstring,""Color_Azulp"Faccion:"Color_Blanco"Policia De Los Santos\n\n\
     "Color_Azulp"/taquilla "Color_Blanco" = Opción\n\
	"Color_Azulp"/controlradio "Color_Blanco"= Encender/apagar radio .\n\
	"Color_Azulp"/r "Color_Blanco"= Hablar por radio.\n\
	"Color_Azulp"/d "Color_Blanco"= Hablar por departamento.\n\
	"Color_Azulp"/ref "Color_Blanco"= Solicitar refuerzos.\n\
	"Color_Azulp"/cref "Color_Blanco"= Cancelar refuerzos.\n\
	"Color_Azulp"/esposar "Color_Blanco"= Esposar Jugador.\n");

    strcat(bigstring,""Color_Azulp"/cachear"Color_Blanco" = Revisar Mano/bolsillo.\n\
	"Color_Azulp"/control "Color_Blanco"= Colocar objectos.\n\
	"Color_Azulp"/qcontrol"Color_Blanco"= Quitar objectos.\n\
	"Color_Azulp"/rastrear "Color_Blanco"= Rastrear jugador.\n\
	"Color_Azulp"/persecucion "Color_Blanco"= Modo persecucion.\n\
	"Color_Azulp"/daruniforme "Color_Blanco"= Dar Uniforme Jugador.\n\
	"Color_Azulp"/m "Color_Blanco"= Megafono.\n");

    strcat(bigstring,""Color_Azulp"/placa "Color_Blanco"= Mostrar placa.\n\
	"Color_Azulp"/arrestar "Color_Blanco"= Arrestar Jugador.\n\
	"Color_Azulp"/entregar "Color_Blanco"= Entregar Jugador.\n\
	"Color_Azulp"/liberar "Color_Blanco"= Liberar Jugador.\n");

	strcat(bigstring,"Funciones Con teclas.\n\
	"Color_Azulp"2"Color_Blanco"= Lapto(patrulla).\n\
	"Color_Azulp"H"Color_Blanco"= Abrir Barrera/Porton.");
    ShowPlayerDialog(playerid,211,DIALOG_STYLE_MSGBOX,"{ffffff}Comandos Faccion",bigstring, "Seleccionar", "");
	return 1;
}


stock ShowPlayerDefaultDialog7(playerid)//Chat
{
     new bigstring[370];
     strcat(bigstring,"Proximamente");

     ShowPlayerDialog(playerid,211,DIALOG_STYLE_MSGBOX,"{ffffff}Comandos Proximamente",bigstring, "Seleccionar", "");
	return 1;
}

stock ShowPlayerDefaultDialog1(playerid)//Chat
{
     new bigstring[370];
     strcat(bigstring,""Color_Amarillo"/b "Color_Blanco" = Chat OOC\n\
	"Color_Amarillo"/me "Color_Blanco"= Acciones del personaje .\n\
	"Color_Amarillo"/do "Color_Blanco"= Acciones en 3era Persona.\n\
	"Color_Amarillo"/s "Color_Blanco"= susurro.\n\
	"Color_Amarillo"/g "Color_Blanco"= Gritar.\n\
	"Color_Amarillo"/intentar "Color_Blanco"= Intentar hacer cosas.\n\
	"Color_Amarillo"/duda "Color_Blanco"= Chat de dudas.");

     ShowPlayerDialog(playerid,211,DIALOG_STYLE_MSGBOX,"{ffffff}Comandos Chat",bigstring, "Seleccionar", "");
	return 1;
}

stock Mostrarfaccionmenu(playerid)
{

            if(PlayerInfo[playerid][miembro] < 1) return InfoMSG(playerid,  5000, "No pertences a niguna ~r~faccion"), CancelSelectTextDraw(playerid);
		    if(EsPolicia(playerid))
			{
            ShowPlayerDefaultDialog2(playerid);
			}
        return 1;
}

stock HideIphoneMenu(playerid)
{
	if(iPhoneCallStatus[playerid] == 1) return 1;
	if(iPhoneCallStatus[playerid] == 5)
	{
		iPhoneCallStatus[playerid] = 0;
	    iPhoneStatus[playerid] = 0;
        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
	    called[playerid] = "";
	    callto[playerid] = 0;
	    iPhone_CC[0][playerid] = 0;
		iPhone_CC[1][playerid] = 0;
		iPhone_CC[2][playerid] = 0;
		return 1;
	}
	else if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)
	{
	    iPhoneCallStatus[playerid] = 0;
	    iPhoneCallStatus[callto[playerid]] = 0;
	    iPhoneStatus[playerid] = 0;
        iPhoneStatus[callto[playerid]] = 0;

        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);

		loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
	    PlayerTextDrawHide(callto[playerid], PTD_iPhone_Call[callto[playerid]]);
     	TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[1]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[callto[playerid]][0]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[callto[playerid]][1]);

        PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
        PlayerTextDrawSetString(playerid, PTD_iPhone_Call[callto[playerid]], "_");

		SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
		called[playerid] = "";

		iPhone_CC[0][callto[playerid]] = 0;
		iPhone_CC[1][callto[playerid]] = 0;
		iPhone_CC[2][callto[playerid]] = 0;
		called[callto[playerid]] = "";
        callto[callto[playerid]] = 0;
	    callto[playerid] = 0;

	    iPhone_CC[0][playerid] = 0;
		iPhone_CC[1][playerid] = 0;
		iPhone_CC[2][playerid] = 0;
	    return 1;
	}
	/*else if(iPhoneCallStatus[playerid] == 3)
	{
	    iPhoneCallStatus[playerid] = 0;
	    iPhoneCallStatus[callto[playerid]] = 0;
	    iPhoneStatus[playerid] = 0;
        iPhoneStatus[callto[playerid]] = 0;

        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);

		loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
	    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
	    PlayerTextDrawHide(callto[playerid], PTD_iPhone_Call[callto[playerid]]);
     	TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[0]);
		TextDrawHideForPlayer(callto[playerid], TD_iPhone_CallYesNo[1]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][0]);
		PlayerTextDrawHide(callto[playerid], PTD_iPhone_Info[playerid][1]);

		SendClientMessage(callto[playerid], -1, "		{CCCCCC}- Llamada finalizada.");
		called[playerid] = "";
		called[callto[playerid]] = "";
        callto[callto[playerid]] = 0;
	    callto[playerid] = 0;
	    return 1;
	}*/
    CancelSelectTextDraw(playerid);
	TextDrawHideForPlayer(playerid, TD_iPhone_Clock[0]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Clock[1]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Gallery);
	PlayerTextDrawHide(playerid, PTD_iPhone_Gallery[playerid]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Time[0]);
    TextDrawHideForPlayer(playerid, TD_iPhone_Time[1]);
    TextDrawHideForPlayer(playerid, TD_iPhone_Time[2]);
    TextDrawHideForPlayer(playerid, TD_iPhone_GPS);
    PlayerTextDrawHide(playerid, PTD_iPhone_GPS[playerid]);
    TextDrawHideForPlayer(playerid, TD_iPhone_Radio[0]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Radio[1]);
	TextDrawHideForPlayer(playerid, TD_iPhone_Music[0]);
 	TextDrawHideForPlayer(playerid, TD_iPhone_Music[1]);
 	TextDrawHideForPlayer(playerid, TD_iPhone_Map);
 	TextDrawHideForPlayer(playerid, TD_iPhone_Internet[0]);
  	TextDrawHideForPlayer(playerid, TD_iPhone_Internet[1]);
  	//PlayerTextDrawHide(playerid, PTD_iPhone_Calculator[playerid]);
   	//loop(0, sizeof(TD_iPhone_Calculator), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone_Calculator[PHONE]);
   	loop(0, sizeof(TD_iPhone_Call), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone_Call[PHONE]);
    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
   	//var1[playerid] = "";
    //var2[playerid] = "";
    called[playerid] = "";
    TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "");
    //PlayerTextDrawSetString(playerid, PTD_iPhone_Calculator[playerid], "0");
    //DeletePVar(playerid,"tovar");
	iPhone_CC[0][playerid] = 0;
	iPhone_CC[1][playerid] = 0;
	iPhone_CC[2][playerid] = 0;
	if(iPhone_CC[3][playerid] == 1)
	{
	    iPhone_CC[3][playerid] = 0;
		SetCameraBehindPlayer(playerid);
		//DestroyObject(firstperson[playerid]);
	}
	return 1;
}


stock ActualizarTiempo()
{
 	new weather[64],idwea;
	GetServerVarAsString("weather", weather, sizeof(weather));
	idwea = strval(weather);
	if(idwea >= 0 && idwea <= 7) TextDrawSetString(TD_iPhone_Time[0],"Soleado");
	else if(idwea == 8) TextDrawSetString(TD_iPhone_Time[0],"Tormentoso");
	else if(idwea == 9) TextDrawSetString(TD_iPhone_Time[0],"Niebla");
	else if(idwea == 10) TextDrawSetString(TD_iPhone_Time[0],"Soleado");
	else if(idwea == 11) TextDrawSetString(TD_iPhone_Time[0],"Caluroso");
	else if(idwea >= 12 && idwea <= 15) TextDrawSetString(TD_iPhone_Time[0],"Aburro");
	else if(idwea == 16) TextDrawSetString(TD_iPhone_Time[0],"Lluvia");
	else if(idwea >= 17 && idwea <= 18) TextDrawSetString(TD_iPhone_Time[0],"Caluroso");
	else if(idwea == 19) TextDrawSetString(TD_iPhone_Time[0],"Arena");
	else if(idwea == 20) TextDrawSetString(TD_iPhone_Time[0],"Niebla");
	else if(idwea == 21) TextDrawSetString(TD_iPhone_Time[0],"Muy oscuro");
	else if(idwea == 22) TextDrawSetString(TD_iPhone_Time[0],"Muy oscuro");
	else if(idwea >= 23 && idwea <= 26) TextDrawSetString(TD_iPhone_Time[0],"Naranja");
	else if(idwea >= 27 && idwea <= 29) TextDrawSetString(TD_iPhone_Time[0],"Soleado");
	else if(idwea >= 30 && idwea <= 32) TextDrawSetString(TD_iPhone_Time[0],"Oscuro");
	else if(idwea == 33) TextDrawSetString(TD_iPhone_Time[0],"Oscuro");
	else if(idwea == 34) TextDrawSetString(TD_iPhone_Time[0],"Azul");
	else if(idwea == 35) TextDrawSetString(TD_iPhone_Time[0],"Marron");
	else if(idwea >= 36 && idwea <= 38) TextDrawSetString(TD_iPhone_Time[0],"Brillante");
	else if(idwea == 39) TextDrawSetString(TD_iPhone_Time[0],"Muy Brillante");
	else if(idwea >= 40 && idwea <= 42) TextDrawSetString(TD_iPhone_Time[0],"Azul/Morado");
	else if(idwea == 43) TextDrawSetString(TD_iPhone_Time[0],"Toxico");
	else if(idwea == 44) TextDrawSetString(TD_iPhone_Time[0],"Negro");
	else if(idwea == 45) TextDrawSetString(TD_iPhone_Time[0],"Negro");
	return 1;
}

stock GetMonth(Month)
{
    new MonthStr[15];
    switch(Month)
    {
        case 1:  MonthStr = "Enero";
        case 2:  MonthStr = "Febrero";
        case 3:  MonthStr = "Marzo";
        case 4:  MonthStr = "Abril";
        case 5:  MonthStr = "Mayo";
        case 6:  MonthStr = "Junio";
        case 7:  MonthStr = "Julio";
        case 8:  MonthStr = "Agosto";
        case 9:  MonthStr = "Septiembre";
        case 10: MonthStr = "Octubre";
        case 11: MonthStr = "Noviembre";
        case 12: MonthStr = "Diciembre";
    }
    return MonthStr;
}


stock ShowIphoneMenu(playerid, menuid)
{
	switch(menuid)
	{
	    case 1:
	    {
	        TextDrawShowForPlayer(playerid, TD_iPhone_Clock[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Clock[1]);
	    }
	    case 2:
	    {
	        //iPhone_CC[3][playerid] = 1;
	        //firstperson[playerid] = CreateObject(19300, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
	        //AttachObjectToPlayer(firstperson[playerid],playerid, 0.0, 0.12, 0.7, 0.0, 0.0, 0.0);
	        //AttachCameraToObject(playerid, firstperson[playerid]);
	    }
	    case 3:
	    {
	        iPhone_CC[0][playerid] = 1;
	        TextDrawShowForPlayer(playerid, TD_iPhone_Gallery);
			PlayerTextDrawShow(playerid, PTD_iPhone_Gallery[playerid]);
	    }
	    case 4:
	    {
	        TextDrawShowForPlayer(playerid, TD_iPhone_Time[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Time[1]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Time[2]);
	    }
	    case 5:
	    {
	        //SelectTextDraw(playerid, -1);
	        //PlayerTextDrawShow(playerid, PTD_iPhone_Calculator[playerid]);
	        //loop(0, sizeof(TD_iPhone_Calculator), PHONE) TextDrawShowForPlayer(playerid, TD_iPhone_Calculator[PHONE]);
	    }
	    case 6:
	    {
	        //GetPlayerZone(playerid);
	        TextDrawShowForPlayer(playerid, TD_iPhone_GPS);
	        PlayerTextDrawShow(playerid, PTD_iPhone_GPS[playerid]);
	    }
	    case 7:
	    {
	        iPhone_CC[1][playerid] = 1;
	        TextDrawShowForPlayer(playerid, TD_iPhone_Radio[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Radio[1]);
	    }
	    case 8:
	    {
	        SendClientMessage(playerid, -1, "Presiona {FFFF00}C / H {FFFFFF}para reproducir tu propia música (también se reproducirá en el coche).");
	        iPhone_CC[2][playerid] = 1;
	        TextDrawShowForPlayer(playerid, TD_iPhone_Music[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Music[1]);
	    }
	    case 9: TextDrawShowForPlayer(playerid, TD_iPhone_Map);
	    case 10:
	    {
	        SelectTextDraw(playerid, -1);
	        loop(0, sizeof(TD_iPhone_Call), PHONE) TextDrawShowForPlayer(playerid, TD_iPhone_Call[PHONE]);
	        PlayerTextDrawShow(playerid, PTD_iPhone_Call[playerid]);
	    }
	    case 11:
	    {
	        TextDrawShowForPlayer(playerid, TD_iPhone_Internet[0]);
	        TextDrawShowForPlayer(playerid, TD_iPhone_Internet[1]);
	    }
	}
	return 1;
}

stock ABroadCast(color,string[],level)
{
	foreach(Player, i)
	{
		if (PlayerInfo[i][adminlvl] >= level && AdminChat[i] == 0)
		{
			SendClientMessageEx(i, color, string);
			//printf("%s", string);
		}
	}
	return 1;
}


stock EnComisaria(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10.0,1564.5568,-1694.7732,5.8906)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,5.0,-1589.4796,706.9417,-5.6748)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,5.0,-1589.5292,716.2191,-5.6688)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,7.0,2293.1904,2451.6099,10.3875)) { return 1; }
	else if(IsPlayerInRangeOfPoint(playerid,7.0,-1679.5967,705.8658,30.7528)) { return 1; }
	return 0;
}


stock MensajeRadioIC(Miembro, color, string[]){
	foreach(new r : Player){
		if(EstaConectado(r)){
		    if(PlayerInfo[r][miembro] == Miembro || PlayerInfo[r][lider] == Miembro){
                if(RadioPrendida[r] == 1){
					SendClientMessage(r, color, string);
				}
			}
		}
	}
	return 1;
}

stock HospitalCercano(playerid)
{
	new Float:HospitalLS,Float:HospitalLS2,Float:HospitalLV,Float:HospitalSF;
	HospitalLS = GetPlayerDistanceFromPoint(playerid, 1191.43,-1326.39,13.40);
	HospitalLS2 = GetPlayerDistanceFromPoint(playerid, 2030.36,-1419.79,16.99);
	HospitalLV = GetPlayerDistanceFromPoint(playerid, 1605.58,1830.17,10.82);
	HospitalSF = GetPlayerDistanceFromPoint(playerid, -2662.87,631.44,14.45);
	MedicoCP2[playerid] = 1;
	if(HospitalLS < HospitalLS2 && HospitalLS < HospitalLV && HospitalLS < HospitalSF)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid,1191.43,-1326.39,13.40,5.0);
	}
	else if(HospitalLS2 < HospitalLS && HospitalLS2 < HospitalLV && HospitalLS2 < HospitalSF)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid, 2030.36,-1419.79,16.99,5.0);
	}
	else if(HospitalLV < HospitalLS && HospitalLV < HospitalLS2 && HospitalLV < HospitalSF)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid,1605.58,1830.17,10.82,5.0);
	}
	else if(HospitalSF < HospitalLS && HospitalSF < HospitalLS2 && HospitalSF < HospitalLV)
	{
		MedicoCP[playerid] = SetPlayerCheckpoint(playerid,-2662.87,631.44,14.45,5.0);
	}
}


stock NombreOOC(playerid){
    new nombre[32];
    GetPlayerName(playerid,nombre, 32);
    return nombre;
}

stock SetPlayerInteriorEx(playerid, i_interiorid, e_interior = 0)
{
	SetPlayerInterior(playerid, i_interiorid); //SaveValue(playerid, "INTERIORID", i_interiorid);
	PlayerInfo[playerid][interiorid] = e_interior; //SaveValue(playerid, "INTERIOR", PlayerInfo[playerid][Interior]);
	return 1;
}

stock QuitarControl(playerid){
    for(new i = 0; i < sizeof(ControlInfo); i++){
  	    if(IsPlayerInRangeOfPoint(playerid,5.0, ControlInfo[i][ctlX], ControlInfo[i][ctlY], ControlInfo[i][ctlZ])){
  	        if(ControlInfo[i][ctlCreado] == 1){
                ControlInfo[i][ctlCreado] = 0;
                ControlInfo[i][ctlX] = 0.0;
                ControlInfo[i][ctlY] = 0.0;
                ControlInfo[i][ctlZ] = 0.0;
                DestroyDynamicObject(ControlInfo[i][ctlObjeto]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

stock CrearControl(ObjetoCtrl,Float:x,Float:y,Float:z,Float:Angulo){
    for(new i = 0; i < sizeof(ControlInfo); i++){
  	    if(ControlInfo[i][ctlCreado] == 0){
            ControlInfo[i][ctlCreado] = 1;
            ControlInfo[i][ctlX] = x;
            ControlInfo[i][ctlY] = y;
            ControlInfo[i][ctlZ] = z-0.7;
            ControlInfo[i][ctlObjeto] = CreateDynamicObject(ObjetoCtrl, x, y, z-0.9, 0, 0, Angulo);
	        return 1;
  	    }
  	}
  	return 0;
}

forward QuitandoA(playerid);
public QuitandoA(playerid)
{
	if(Quitando[playerid] == 1)
	{
		Quitando[playerid] = 0;
	}
}
stock QuitarArma(playerid, weaponid)
{
	if(Quitando[playerid] == 0)
	{
		Quitando[playerid] = 1;
		SetTimerEx("QuitandoA",600,false,"d",playerid);
	}
	if(weaponid == 1)
	{
		PlayerInfo[playerid][pwp0] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if(weaponid > 1 && weaponid <= 9)
	{
		PlayerInfo[playerid][pwp1] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 10 && weaponid <= 15)
	{
		PlayerInfo[playerid][pwp10] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 16)
	{
		PlayerInfo[playerid][pwp8] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 22 && weaponid <= 24 )
	{
		PlayerInfo[playerid][pwp2] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 25 && weaponid <= 27 )
	{
		PlayerInfo[playerid][pwp3] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 28 || weaponid == 29 || weaponid == 32 )
	{
		PlayerInfo[playerid][pwp4] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 30 || weaponid == 31 )
	{
		PlayerInfo[playerid][pwp5] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid == 33 || weaponid == 34 )
	{
		PlayerInfo[playerid][pwp6] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 35 && weaponid <= 38 )
	{
		PlayerInfo[playerid][pwp7] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 41 && weaponid <= 43 )
	{
		PlayerInfo[playerid][pwp9] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	if( weaponid >= 44 && weaponid <= 46 )
	{
		PlayerInfo[playerid][pwp11] = 0;
		ResetPlayerWeapons(playerid);
		DarArmas(playerid);
	}
	return 1;
}
stock DarArma(playerid, weaponid)
{
    if(weaponid == 1)
	{
		PlayerInfo[playerid][pwp0] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if(weaponid > 1 && weaponid <= 9)
	{

		PlayerInfo[playerid][pwp1] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 22 && weaponid <= 24 )
	{

		PlayerInfo[playerid][pwp2] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 25 && weaponid <= 27 )
	{

		PlayerInfo[playerid][pwp3] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid == 28 || weaponid == 29 || weaponid == 32 )
	{

		PlayerInfo[playerid][pwp4] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid == 30 || weaponid == 31 )
	{

		PlayerInfo[playerid][pwp5] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid == 33 || weaponid == 34 )
	{

		PlayerInfo[playerid][pwp6] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 35 && weaponid <= 38 )
	{

		PlayerInfo[playerid][pwp7] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 16 && weaponid <= 18 || weaponid == 39)
	{

		PlayerInfo[playerid][pwp8] = weaponid;
		new weapons8[MAX_PLAYERS], municion;
		GetPlayerWeaponData(playerid, 8, weapons8[playerid], municion);
		if(municion >= 1) { }
		else { GivePlayerWeapon(playerid, weaponid, 1); }
		return 1;
	}
	if( weaponid >= 41 && weaponid <= 43 )
	{

		PlayerInfo[playerid][pwp9] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 10 && weaponid <= 15)
	{

		PlayerInfo[playerid][pwp10] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	if( weaponid >= 44 && weaponid <= 46 )
	{

		PlayerInfo[playerid][pwp11] = weaponid;
		GivePlayerWeapon(playerid, weaponid, 999999);
		return 1;
	}
	return 1;
}

stock DarArmas(playerid)
{
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp0],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp1],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp2],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp3],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp4],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp5],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp6],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp7],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp8],1);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp9],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp10],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp11],9999999);
	GivePlayerWeapon(playerid, PlayerInfo[playerid][pwp12],9999999);
	return 1;
}

forward EsDeUnaFuerza(playerid); public EsDeUnaFuerza(playerid){
	if(EstaConectado(playerid)){
	    new Lider = PlayerInfo[playerid][lider];
	    new Miembro = PlayerInfo[playerid][miembro];
	    if(Miembro	==	1 || Miembro	==	6){ return 1; }
		else if(Lider	==	1 || Lider	==	6){ return 1; }
	}
	return 0;
}


forward EsPolicia(playerid); public EsPolicia(playerid){
	if(EstaConectado(playerid)){
	    new Lider = PlayerInfo[playerid][lider];
	    new Miembro = PlayerInfo[playerid][miembro];
	    if(Miembro	==	1){ return 1; }
		else if(Lider ==	1){ return 1; }
	}
	return 0;
}

forward EsFuncionario(playerid); public EsFuncionario(playerid){
	if(EstaConectado(playerid)){
	 new Lider = PlayerInfo[playerid][lider];
	    new Miembro = PlayerInfo[playerid][miembro];
	    if(Miembro	==	1 || Miembro ==	2 || Miembro ==	3 || Miembro ==	4 || Miembro ==	5 || Miembro ==	6){ return 1; }
		else if(Lider	==	1 || Lider	==	2 || Lider	==	3 || Lider	==	4 || Lider	==	5 || Lider	==	6){ return 1; }
	}
	return 0;
}



forward EstaConectado(playerid); public EstaConectado(playerid){
	if(IsPlayerConnected(playerid) && PlayerInfo[playerid][Conexion] == 1 && PlayerInfo[playerid][Registrado] == 0) { return 1; }
    return 0;
}

ProxDetector(Float: f_Radius, playerid, string[],col1,col2,col3,col4,col5)
{
	new
		Float: f_playerPos[3];
	GetPlayerPos(playerid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);
	foreach(Player, i)
	{
		if(!BigEar[i])
		{
			if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
			{
				if(IsPlayerInRangeOfPoint(i, f_Radius / 16, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col1, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 8, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col2, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 4, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col3, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius / 2, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col4, string);
				}
				else if(IsPlayerInRangeOfPoint(i, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
					SendClientMessageEx(i, col5, string);
				}
			}
		}
		else SendClientMessageEx(i, col1, string);
	}
	return 1;
}

ProxDetectorS(Float:radi, playerid, targetid)
{
	new
		Float: fp_playerPos[3];
	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);
	if(IsPlayerInRangeOfPoint(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}


forward CancelarRefuerzos(playerid, Faccion, timer); public CancelarRefuerzos(playerid, Faccion, timer){
	if(EstaConectado(playerid)){
		if(Faccion == 1){
			if(Refuerzos[playerid] == 1){
				foreach(new i : Player){
					if(EstaConectado(i)){
						if(EsPolicia(playerid)){
							SetPlayerMarkerForPlayer(i, playerid, INVISIBLE);
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR); DisablePlayerCheckpoint(playerid);
                        }
					}
				}
				if(timer != 1) SendClientMessage(playerid, -1, "Su pedido de refuerzos ha sido cancelado automáticamente.");
				else SendClientMessage(playerid, -1, "Su pedido de refuerzos ha sido cancelado.");
				Refuerzos[playerid] = 0;
   			}
  		}
	}
	return 1;
}
stock VehiculoOcupado(vehicleid, seat)
{
        for(new i = 0; i != GetMaxPlayers(); i++)
        {
            if(IsPlayerConnected(i))
            {
                if(IsPlayerInAnyVehicle(i))
                {
                                if(GetPlayerVehicleID(i) == vehicleid)
                                {
                        if(GetPlayerVehicleSeat(i) == seat)
                            {
                                                return true;
                        }
                                }
                }
            }
        }
        return false;
}
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
        if(engine == VEHICLE_PARAMS_ON)
        {
            if(VehiculoOcupado(vehicleid, 1))
            {
                SendClientMessage(playerid, -1, "No intentes robar vehículo de esa manera (sin rol), quedas congelado por {FFFF00}15{FFFFFF} segundos");
                TogglePlayerControllable(playerid, false);
                VirtualTimers[playerid][2] =  SetTimerEx("TogglePlayerControllableFunc", 15000, false, "id", playerid, true);
                }
        }
        GetVehicleParamsEx(GetPlayerVehicleID(playerid), engine, lights, alarm, doors, bonnet, boot, objective);
        if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)
                {
                vEngine[GetPlayerVehicleID(playerid)] = 0;
                PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
                PlayerTextDrawSetString(playerid, ErrorCommand[playerid], "Preciona ~y~H ~w~para encender el vehiculo");
                SetPVarInt(playerid, "motor", true);
            }
                if(engine == VEHICLE_PARAMS_ON || engine == VEHICLE_PARAMS_UNSET)
                {//aka pingui
                if(Esuncamionn1(vehicleid))
				{
                PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
                if(CamionCargado[playerid] == 1) return PlayerTextDrawSetString(playerid, ErrorCommand[playerid], "ve al ~r~punto en el mapa ~w~para entregar la carga");
            }
            }
   	if(ispassenger == 0)
	{
		if(IsPoliceCar(vehicleid))
		{
          if(!EsPolicia(playerid))
			{
				SendClientMessage(playerid, -1,"No perteneces a esta faccion: {ff6f00}Policia.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
		}
	}
 if(ispassenger == 0)
	{
		if(Esuncamionn1(vehicleid))
		{
  if(PlayerInfo[playerid][job] != 3 && PlayerInfo[playerid][vipjob] != 3)
			{
				SendClientMessage(playerid, -1, "Necesitas ser camionero para utilizar este vehiculo.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
			else if(PlayerInfo[playerid][job] == 3 || PlayerInfo[playerid][vipjob] == 3 )
			{
				new string[256],pName[32];
				GetPlayerName(Chofer[vehicleid], pName, 32);
				switch(CamionCargado[vehicleid])
				{
					case 0:
					{
						format(string, sizeof(string), "Camión de Carga Número: {00CC00}%d{FFFFFF} | Contenido: {00CC00}Ninguna {FFFFFF}| Chofer: {58ACFA}Ninguno", vehicleid-28);
						SendClientMessage(playerid, -1,string);
						new autoid;
	                    autoid = GetPlayerVehicleID(playerid);
						if(CamionCargado[autoid] < 1) return SetPlayerCheckpoint(playerid,2169.3521,-2275.2957,13.1360,7.0);
					}
					case 1:
					{
						format(string, sizeof(string), "Camión de Carga Número: {00CC00}%d{FFFFFF} | Contenido: {00CC00}Productos 24/7{FFFFFF} {FFFFFF}| Chofer: {58ACFA}%s", vehicleid-28,pName);
						SendClientMessage(playerid, -1,string);
					}
					case 2:
					{
						format(string, sizeof(string), "Camión de Carga Número: {00CC00}%d{FFFFFF} | Contenido: {00CC00}Ropa{FFFFFF} | Chofer: {58ACFA}%s", vehicleid-28,pName);
						SendClientMessage(playerid, -1,string);
					}
					case 3:
					{
						format(string, sizeof(string), "Camión de Carga Número: {00CC00}%d{FFFFFF} | Contenido: {EB0000}Drogas{FFFFFF} | Chofer: {58ACFA}%s", vehicleid-28,pName);
						SendClientMessage(playerid, -1,string);
					}
					case 4:
					{
						format(string, sizeof(string), "Camión de Carga Número: {00CC00}%d{FFFFFF} | Contenido: {EB0000}Armas{FFFFFF} | Chofer: {58ACFA}%s", vehicleid-28,pName);
						SendClientMessage(playerid, -1,string);
					}
				}
			}
		}
	}
		if(ispassenger == 1 && TAXI(vehicleid))
	{
		foreach(Player,i)
		{
			if(IsPlayerInVehicle(i,vehicleid) && GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid,-1,"Has subido al taxi");
				Taxista[playerid] = i;
				Pasajero[i] = playerid;
				LlamadaTaxi[playerid] = 0;
				SetPlayerColor(playerid, COLOR_WHITE);
				new string[120];
				format(string,256,"Monto $%d",Monto[Taxista[playerid]]);
                PlayerTextDrawSetString(playerid, ErrorCommand[playerid], simbolos(string));
	             PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
				TM[playerid] = SetTimerEx("Taximetro",15000,true,"d",playerid);
				SendClientMessage(playerid,-1,"Has subido al taxi 2");
				return 1;
			}
		}
	}
	   	if(ispassenger == 0)
	{
		if(TAXI(vehicleid))
		{
			if(PlayerInfo[playerid][job] != 7 && PlayerInfo[playerid][vipjob] != 7)
			{
				SendClientMessage(playerid, -1, "Necesitas ser taxista para utilizar este vehiculo.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
		}
	}
   	if(ispassenger == 0)
	{
		if(AMBU(vehicleid))
		{
			if(PlayerInfo[playerid][job] != 1 && PlayerInfo[playerid][vipjob] != 1)
			{
				SendClientMessage(playerid, -1, "Necesitas ser médico para utilizar este vehiculo.");
				RemovePlayerFromVehicle(playerid);
				new Float:sx, Float:sy, Float:sz;
				GetPlayerPos(playerid, sx, sy, sz);
				SetPlayerPos(playerid, sx, sy, sz);
				EnAuto[playerid] = 0;
			}
		}
	}
        return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
KillTimer(VirtualTimers[playerid][6]);
RemoveMSGDraw(playerid);
HidePlayerProgressBar(playerid, EngineVeh[playerid]);
KillTimer(TimerG[playerid]);
return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
        if(IsPlayerNPC(playerid)) return 1;
   	if(newstate == PLAYER_STATE_PASSENGER)
	{
		if(PlayerInfo[playerid][Agonizando] == 1 && PacienteAmbu[playerid] == 0)
		{
			RemovePlayerFromVehicle(playerid);
		}
		}
        if(newstate == PLAYER_STATE_PASSENGER && oldstate == PLAYER_STATE_ONFOOT)
        {
            if(GetPlayerVehicleID(playerid) == Train)
            {
                if(!GoodMoney(playerid, 5))
                        {
                                SendClientMessage(playerid, -1, "Necesitas {00CCFF}5{FFFFFF} para pagar el billete del tren....");
                                RemovePlayerFromVehicleEx(playerid);
                                return 1;
                        }
                SendClientMessage(playerid, -1, "Bienvenido al Tren {00CCFF}#1 {FFFFFF}el recorrido de este tren es {00CCFF}LS-SF-LV {FFFFFF}y su precio es de {00CCFF}5");
            }
        }
        if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
        {
                SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
                KillTimer(VirtualTimers[playerid][6]);
                VirtualTimers[playerid][6] = -1;
            HidePlayerProgressBar(playerid, EngineVeh[playerid]);
        }
        return 1;
}


public OnPlayerEnterCheckpoint(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2249.3113, -2015.5472, 12.9157)||IsPlayerInRangeOfPoint(playerid, 7.0, 2480.9316,-2115.3042,13.2740))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid))  || Esuncamionn1(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		RemoveMSGDraw(playerid);
	    GameTextForPlayer(playerid, "~w~Descargando Camion...", 700, 3);
		Cargas[playerid] = SetTimerEx("DescargandoCamion",1000,true,"d",playerid);
		SendClientMessage(playerid, -1,"Los {EE0000}traficantes{FFFFFF} estan descargando el camión, por favor espera.");
		DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 0);
		SetPVarInt(playerid, "IsFrozen", 0);
		 }else MensajeError(playerid, "Este vehiculo no contiene la carga");
			return 1;
		}
	}
		if(IsPlayerInRangeOfPoint(playerid, 7.0, 2659.9167, -1591.9866, 12.6515)||IsPlayerInRangeOfPoint(playerid, 7.0, 2443.4106, -1420.5247, 23.0605))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return 1;
		if(CAMION(GetPlayerVehicleID(playerid))  || Esuncamionn1(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) 
		{
		RemoveMSGDraw(playerid);
	    GameTextForPlayer(playerid, "~w~Descargando Camion...", 700, 3);
		Cargas[playerid] = SetTimerEx("DescargandoCamion",1000,true,"d",playerid);
	SendClientMessage(playerid, -1,"Los {EE0000}traficantes{FFFFFF} estan descargando el camión, por favor espera.");
	DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 0);
		SetPVarInt(playerid, "IsFrozen", 0);
       }else MensajeError(playerid, "Este vehiculo no contiene la carga");
	 return 1;
	}//3,4,5
 	if(IsPlayerInRangeOfPoint(playerid, 7.0, 1832.3918,-1832.4200,13.1546)||IsPlayerInRangeOfPoint(playerid, 7.0, 1338.6766,-912.8005,35.6672)||IsPlayerInRangeOfPoint(playerid, 7.0, 1342.3486, -1753.9712, 12.5546))
	{
	RemoveMSGDraw(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CAMION(GetPlayerVehicleID(playerid)) || Esuncamionn1(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
    GameTextForPlayer(playerid, "~w~Descargando Camion...", 700, 3);
	Cargas[playerid] = SetTimerEx("DescargandoCamion",1000,true,"d",playerid);
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "IsFrozen", 0);
    SendClientMessage(playerid, -1,"{58ACFA}El  personal{FFFFFF} del 24/7 esta {58ACFA}descargando{FFFFFF} el camión, por favor espera.");
	DisablePlayerCheckpoint(playerid);
    }else MensajeError(playerid, "Este vehiculo no contiene la carga");
	 return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 455.0953,-1502.9357,30.8655)||IsPlayerInRangeOfPoint(playerid, 7.0, 810.9319,-1391.0319,13.8416)||IsPlayerInRangeOfPoint(playerid, 7.0, 488.1939,-1277.0747,15.9604))
	{
	RemoveMSGDraw(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CAMION(GetPlayerVehicleID(playerid)) || Esuncamionn1(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
    GameTextForPlayer(playerid, "~w~Descargando Camion...", 700, 3);
	Cargas[playerid] = SetTimerEx("DescargandoCamion",1000,true,"d",playerid);
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "IsFrozen", 0);
	SendClientMessage(playerid, -1,"{58ACFA}El  personal{FFFFFF} de la empresa esta {00CC00}descargando{FFFFFF} el camión, por favor espera.");
	DisablePlayerCheckpoint(playerid);
    }else MensajeError(playerid, "Este vehiculo no contiene la carga");
	 return 1;
    }
	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2170.0105, -2297.6560, 12.7173))
	{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CAMION(GetPlayerVehicleID(playerid)) || Esuncamionn1(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	RemoveMSGDraw(playerid);
	Chofer[GetPlayerVehicleID(playerid)] = INVALID_PLAYER_ID;
	CamionCargado[GetPlayerVehicleID(playerid)] = 0;
	Respawnear(GetPlayerVehicleID(playerid));
	SendClientMessage(playerid, -1, "{58ACFA}Buen trabajo{FFFFFF}, has terminado tu recorrido");
	DisablePlayerCheckpoint(playerid);
	SetPVarInt(playerid, "Camionero", 0);
	PagoCamionero(playerid, PlayerInfo[playerid][pNivelCamionero],Carga[playerid]);
    }else MensajeError(playerid, "Este vehiculo no contiene la carga");
	 return 1;
    }
   	if(IsPlayerInRangeOfPoint(playerid, 7.0, 2169.3521,-2275.2957,13.1360))
	{
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CAMION(GetPlayerVehicleID(playerid)) || Esuncamionn1(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	InfoMSG(playerid, 4000,  "Pulsa ~g~Y ~w~para cargar el camion");
     }
	 return 1;
    }
	if(P_No_Message_Atraco[playerid] == 1)
	{
	    if(GetPlayerInteriorEx(playerid) == INT_247U)
	    {
	        if(NPC_USED[NPCS[SHOP_UNITY]] == 0)
	        {
				NPC_USED[NPCS[SHOP_UNITY]] = 2;
				PlayerEvent[playerid][SHOP_UNITY] = true;
				SetPlayerPos(playerid, -28.446060, -185.112228, 1003.546875);
				SetPlayerFacingAngle(playerid, 194.485290);
			    KillTimer(VirtualTimers[playerid][13]);


			    SetCameraBehindPlayer(playerid);
			    TogglePlayerControllable(playerid, false);

				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);

				ApplyAnimation(NPCS[SHOP_UNITY],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_UNITY],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_UNITY],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_UNITY],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				SetPlayerDrunkLevel(playerid, 2500);
				InterpolateCameraPos(playerid, -28.919799, -183.278396, 1004.433410, -24.371448, -184.631881, 1005.830017, 3000);
				InterpolateCameraLookAt(playerid, -28.672475, -184.235733, 1004.283996, -28.462133, -186.144622, 1003.385009, 3000);
		        DisablePlayerCheckpoint(playerid);
		        P_No_Message_Atraco[playerid] = -1;
		        DeleteChatForPlayer(playerid, 32, remove);

		        TextDrawShowForPlayer(playerid, TD_BX[0]);
		    	TextDrawShowForPlayer(playerid, TD_BX[1]);
				ChatLogDisabled[playerid] = true;
				PlayerTextDrawSetString(playerid, TD_IO[playerid], "_~n~__El atraco ha comenzado.~n~__Espera que el vendedor llene~n~__la bolsa de dinero...~n~~n~");
				PlayerTextDrawShow(playerid, TD_IO[playerid]);
				VirtualTimers[playerid][12] = SetTimerEx("RobContinue", 4000, 0, "idi", playerid, 0, SHOP_UNITY);
				return 1;
			}
  }
		if(GetPlayerInteriorEx(playerid) == INT_247VIN)
	    {
	        if(NPC_USED[NPCS[SHOP_VINE]] == 0)
	        {
				NPC_USED[NPCS[SHOP_VINE]] = 2;
				PlayerEvent[playerid][SHOP_VINE] = true;

				SetPlayerPos(playerid, 2.412037, -28.959587, 1003.549438);
				SetPlayerFacingAngle(playerid, 210.103500);
			    KillTimer(VirtualTimers[playerid][13]);


			    SetCameraBehindPlayer(playerid);
			    TogglePlayerControllable(playerid, false);

				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);

				ApplyAnimation(NPCS[SHOP_VINE],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_VINE],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_VINE],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_VINE],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				SetPlayerDrunkLevel(playerid, 2500);
				InterpolateCameraPos(playerid, 1.124199, -26.738199, 1004.537780, 7.980316, -27.542730, 1005.657958, 3000);
				InterpolateCameraLookAt(playerid, 1.620131, -27.593605, 1004.388366, 7.156741, -27.963136, 1005.277221, 3000);
		        DisablePlayerCheckpoint(playerid);
		        P_No_Message_Atraco[playerid] = -1;
		        DeleteChatForPlayer(playerid, 32, remove);

		        TextDrawShowForPlayer(playerid, TD_BX[0]);
		    	TextDrawShowForPlayer(playerid, TD_BX[1]);
	            ChatLogDisabled[playerid] = true;
				PlayerTextDrawSetString(playerid, TD_IO[playerid], "_~n~__El atraco ha comenzado.~n~__Espera que el vendedor llene~n~__la bolsa de dinero...~n~~n~");
				PlayerTextDrawShow(playerid, TD_IO[playerid]);
				VirtualTimers[playerid][12] = SetTimerEx("RobContinue", 4000, 0, "idi", playerid, 0, SHOP_VINE);
				return 1;
			}
		}
		if(GetPlayerInteriorEx(playerid) == INT_247AYU)
	    {
	        if(NPC_USED[NPCS[SHOP_AYUNT]] == 0)
	        {
				NPC_USED[NPCS[SHOP_AYUNT]] = 2;
				PlayerEvent[playerid][SHOP_AYUNT] = true;

				SetPlayerPos(playerid, -30.413436, -28.982168, 1003.557250);
				SetPlayerFacingAngle(playerid, 199.426803);
			    KillTimer(VirtualTimers[playerid][13]);


			    SetCameraBehindPlayer(playerid);
			    TogglePlayerControllable(playerid, false);

				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);
				ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,1,1,1,1,1);

				ApplyAnimation(NPCS[SHOP_AYUNT],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_AYUNT],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_AYUNT],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				ApplyAnimation(NPCS[SHOP_AYUNT],"SHOP","SHP_Rob_React",4.1,0,1,1,1,1,1);
				SetPlayerDrunkLevel(playerid, 2500);

				InterpolateCameraPos(playerid, -31.010599, -27.289100, 1004.428771, -27.082044, -27.978450, 1005.534057, 3000);
				InterpolateCameraLookAt(playerid, -30.681732, -28.221578, 1004.279357, -27.810798, -28.538206, 1005.139587, 3000);
		        DisablePlayerCheckpoint(playerid);
		        P_No_Message_Atraco[playerid] = -1;
		        DeleteChatForPlayer(playerid, 32, remove);

		        TextDrawShowForPlayer(playerid, TD_BX[0]);
		    	TextDrawShowForPlayer(playerid, TD_BX[1]);
	            ChatLogDisabled[playerid] = true;
				PlayerTextDrawSetString(playerid, TD_IO[playerid], "_~n~__El atraco ha comenzado.~n~__Espera que el vendedor llene~n~__la bolsa de dinero...~n~~n~");
				PlayerTextDrawShow(playerid, TD_IO[playerid]);
				VirtualTimers[playerid][12] = SetTimerEx("RobContinue", 4000, 0, "idi", playerid, 0, SHOP_AYUNT);
				return 1;
			}
		}
 }
	else DisablePlayerCheckpoint(playerid);
	
        new autoid = GetPlayerVehicleID(playerid);
	if(IsPlayerInRangeOfPoint(playerid, 5.0, 1191.43,-1326.39,13.40) || IsPlayerInRangeOfPoint(playerid, 5.0, 2030.36,-1419.79,16.99)|| IsPlayerInRangeOfPoint(playerid, 5.0, 1605.58,1830.17,10.82)|| IsPlayerInRangeOfPoint(playerid, 5.0, -2662.87,631.44,14.45))
	{
		for(new i=0;i<MAX_PLAYERS; i++)
		{
			if(!AMBU(autoid)) return 1;
			if(IsPlayerInVehicle(i,autoid) && LlamadaMedicos[i] == 1)
			for (new u = 0; u < 13; u++)
			{
				QuitarDinero(i, 800);
				DarDinero(playerid, 800);
				SendClientMessage(playerid,-1,"Ganaste {00CC00}$800{FFFFFF} por salvar una vida.");
				SendClientMessage(i,-1,"Has podido sobrevivir gracias al médico, gastas {00CC00}$800{FFFFFF} por los costes de servicio");
				RemovePlayerFromVehicle(i);
				PacienteAmbu[i] = 0;
				LlamadaMedicos[i] = 0;
				TogglePlayerControllable(i, 1);
				SetPVarInt(i, "IsFrozen", 1);
				PlayerInfo[i][Agonizando] = 0;
				DisablePlayerCheckpoint(playerid);
				}
				}
				}
				return 1;
}
/*forward Lugarespick();
public Lugarespick()
{
for(new i = 0; i < MAX_PLAYERS_SERVER; i++)
{
if(IsPlayerConnected(i) && !IsPlayerNPC(i))
{
if(PlayerToPoint(0.5, i,2227.3914, -1715.0405, 13.5135))
{
 InfoMSG(i, 4000,  "Pulsa ~y~F~w~ para converzar con el extraño");
 }
 }
 }
 return 1;
}
*/
/* forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
 public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

*/
    
public OnPlayerLeaveCheckpoint(playerid)
{
        return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
        return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
        return 1;
}

public OnRconCommand(cmd[])
{
        return 1;
}

public OnPlayerRequestSpawn(playerid)
{
        return 1;
}

public OnObjectMoved(objectid)
{
        return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
        if(objectid == CreditObject[playerid])
        {
            print("A");
                new Float:x, Float:y, Float:z;
                x = 1153.070434;
                y = -2089.879882;
                z = 56.483135;
                SetPlayerObjectPos(playerid, CreditObject[playerid], x, y, z);
                MovePlayerObject(playerid, CreditObject[playerid], x, y, z-15, 0.2);
        }
        return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
 if(pickupid == Conce_Pick1 || pickupid == Conce_Pick2)
    {
        if(P_catalogogrotti[playerid] == -1)
        {
        	InfoMSG(playerid, 3000, "Presiona ~y~~k~~VEHICLE_ENTER_EXIT~ ~w~para ver el ~y~catálogo");
		}
		return 1;
    }
    else if(pickupid == Binco_Pick || pickupid == Victim_Pick1 || pickupid == Victim_Pick2 || pickupid == Prolaps_Pick || pickupid == Suburban_Pick)
    {
        if(P_catalogobinco[playerid] == -1)
        {
        	InfoMSG(playerid, 3000, "Presiona ~y~~k~~VEHICLE_ENTER_EXIT~ ~w~para ver el ~y~catálogo");
		}
		return 1;
    }
    else if(pickupid == Zip_Pick)
    {
        if(P_catalogozip[playerid] == -1)
        {
            InfoMSG(playerid, 3000, "Presiona ~y~~k~~VEHICLE_ENTER_EXIT~ ~w~para ver el ~y~catálogo");
        }
        return 1;
    }
    else if(pickupid == PizzaStack_Pick1 || pickupid == PizzaStack_Pick2 || pickupid == PizzaStack_Pick3)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(PizzaStackedMenu, playerid);
		return 1;
    }
    else if(pickupid == BarGR_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(BebidasMenu, playerid);
		return 1;
    }
    else if(pickupid == PigPen_Pick)
    {
			SetPlayerPos(playerid, 1215.061279, -13.353262, 1000.921875);
			SetPlayerFacingAngle(playerid, 180.0);
			TogglePlayerControllable(playerid, false);
			ShowMenuForPlayer(PigPenMenu, playerid);
			PlayerEvent[playerid][11] = 2;
		
		return 1;
	}
	else if(pickupid == Donuts_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(DonutMenu, playerid);
		return 1;
    }
       else if(pickupid == Alhambra_Pick)
    {
      
			SetPlayerPos(playerid, 481.611053, -10.849586, 993.276672);
			SetPlayerFacingAngle(playerid, 90.0);
			TogglePlayerControllable(playerid, false);
			ShowMenuForPlayer(AlhambraMenu, playerid);
			PlayerEvent[playerid][10] = 2;
		
		return 1;
	}
    else if(pickupid == ChickBell_Pick1 || pickupid == ChickBell_Pick2)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(ChickBellMenu, playerid);
		return 1;
    }
    else if(pickupid == Burger_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(BurgerShotMenu, playerid);
		return 1;
    }
    else if(pickupid == Hotdog_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
        TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
		ShowMenuForPlayer(HotdogMenu, playerid);
		return 1;
    }
    else if(pickupid == AyuntShop_Pick || pickupid == UnityShop_Pick || pickupid == VineShop_Pick)
    {
        if(P_tienda[playerid] != -1) return 1;
       // TogglePlayerControllable(playerid, false);
        P_tienda[playerid] = 1;
	//	ShowMenuForPlayer(ShopMenuN, playerid);
		return 1;
    }
	return 1;
}

    
public OnVehicleMod(playerid, vehicleid, componentid)
{
        return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
        return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
        return 1;
}


funcion BarContinue(playerid, t, d)
{
	switch(t)
	{
	    case 0:
	    {
	        ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	SetTimerEx("BarContinue", 1200, false, "idd", playerid, 1, d);

	    }
	    case 1:
	    {
	        if(d == 0) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
	        else SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	        InfoMSG(playerid, 5000, "Usa ~b~~k~~VEHICLE_FIREWEAPON~ ~w~para beber, y ~b~F ~w~para dejar de beber.");
	        TogglePlayerControllable(playerid, true);
            PlayerEvent[playerid][10] = 0;
            SetTimerEx("BarContinue", 3000, false, "id", playerid, 2);
	    }
	}
	return 1;
}

funcion PigPenContinue(playerid, t, d)
{
	switch(t)
	{
	    case 0:
	    {
	        ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	ApplyAnimation(playerid, "BAR", "Barcustom_get", 4.0, 0, 0, 0, 0, 0, 1);
        	SetTimerEx("PigPenContinue", 1200, false, "idd", playerid, 1, d);

	    }
	    case 1:
	    {
	        if(d == 0) SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
	        else SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
	        InfoMSG(playerid, 5000, "Usa ~b~~k~~VEHICLE_FIREWEAPON~ ~w~para beber, y ~b~F ~w~para dejar de beber.");
	        TogglePlayerControllable(playerid, true);
            PlayerEvent[playerid][11] = 0;
            SetTimerEx("PigPenContinue", 3000, false, "id", playerid, 2);
	    }
	}
	return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
    if(GetPlayerMenu(playerid) == AlhambraMenu)
    {
        if(row == 0) SetTimerEx("BarContinue", 1000, false, "idd", playerid, 0, 0);
        else SetTimerEx("BarContinue", 1000, false, "idd", playerid, 0, 1);

        return 1;
    }
    if(GetPlayerMenu(playerid) == PigPenMenu)
    {
        if(row == 0) SetTimerEx("PigPenContinue", 1000, false, "idd", playerid, 0, 0);
        else SetTimerEx("PigPenContinue", 1000, false, "idd", playerid, 0, 1);
        return 1;
    }
    if(GetPlayerMenu(playerid) == BincoMenu)
    {
        if(row == 0)
        {
		    PlayerInMenu[playerid][0] = -2;
			ShowMenuForPlayer(TOYSMENU, playerid);
			new Float:p[4];
			new Float:xy[2];
			GetPlayerPos(playerid, p[0], p[1], p[2]);
			GetPlayerFacingAngle(playerid, p[3]);
			xy[0] = p[0] + (0.5 * floatsin(-p[3], degrees));
			xy[1] = p[1] + (0.5 * floatcos(-p[3], degrees));

			SetPlayerCameraPos(playerid, xy[0], xy[1], (p[2]+0.75));
			SetPlayerCameraLookAt(playerid, p[0], p[1], (p[2]+0.75));
			return 1;
		}
		else if(row == 1)
		{
		    SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0])));
			SelectTextDraw(playerid, -1);
			loop(0, 6, i) TextDrawShowForPlayer(playerid, TD_Ropa[i]);
			new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
			PlayerTextDrawShow(playerid, PTD_Ropa[playerid]);
			SendClientMessage(playerid, -1, "Usa la tecla {FFFF00}ESC {FFFFFF}para salir del catálogo.");
			SetPVarInt(playerid, "motor", true);
			for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		 	}
			return 1;
		}
    }
    if(GetPlayerMenu(playerid) == ZipMenu)
    {
        if(row == 0)
        {
		    PlayerInMenu[playerid][0] = -2;
			ShowMenuForPlayer(TOYSMENU, playerid);
			new Float:p[4];
			new Float:xy[2];
			GetPlayerPos(playerid, p[0], p[1], p[2]);
			GetPlayerFacingAngle(playerid, p[3]);
			xy[0] = p[0] + (0.5 * floatsin(-p[3], degrees));
			xy[1] = p[1] + (0.5 * floatcos(-p[3], degrees));

			SetPlayerCameraPos(playerid, xy[0], xy[1], (p[2]+0.75));
			SetPlayerCameraLookAt(playerid, p[0], p[1], (p[2]+0.75));
			return 1;
		}
		else if(row == 1)
		{
		    for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
			{
			    if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
		 	}
			SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0])));
			SelectTextDraw(playerid, -1);
			loop(0, 6, i) TextDrawShowForPlayer(playerid, TD_Ropa[i]);
			new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
			PlayerTextDrawShow(playerid, PTD_Ropa[playerid]);
			SendClientMessage(playerid, -1, "Usa la tecla {FFFF00}ESC {FFFFFF}para salir del catálogo.");
			return 1;
		}
    }
    if(GetPlayerMenu(playerid) == TOYSMENU)
    {
        switch(row)
        {
            case 0:
            {
                new str[12];
				format(str, 12, "$%d", RP_CASCOS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Cascos");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_CASCOS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_CASCOS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_CASCOS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 0;
				PlayerInMenu[playerid][1] = 0;
            }
            case 1:
            {
                new str[12];
				format(str, 12, "$%d", RP_GORRAS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Gorras");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORRAS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORRAS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_GORRAS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 1;
				PlayerInMenu[playerid][1] = 0;
            }
            case 2:
            {
                new str[12];
				format(str, 12, "$%d", RP_GORROS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Gorros");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORROS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORROS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_GORROS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 2;
				PlayerInMenu[playerid][1] = 0;
            }
            case 3:
            {
                new str[12];
				format(str, 12, "$%d", RP_SOMBREROS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Sombreros");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_SOMBREROS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_SOMBREROS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_SOMBREROS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 3;
				PlayerInMenu[playerid][1] = 0;
            }
            case 4:
            {
                new str[12];
				format(str, 12, "$%d", RP_BANDANAS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Bandanas");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_BANDANAS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_BANDANAS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_BANDANAS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 4;
				PlayerInMenu[playerid][1] = 0;
            }
            case 5:
            {
                new str[12];
				format(str, 12, "$%d", RP_GAFAS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Gafas");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GAFAS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GAFAS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_GAFAS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 5;
				PlayerInMenu[playerid][1] = 0;
            }
            case 6:
            {
                new str[12];
				format(str, 12, "$%d", RP_MASKS[0][attachprice]);
                PlayerTextDrawSetString(playerid, PTD_Toys[playerid][0], "Mascaras");
            	PlayerTextDrawShow(playerid, PTD_Toys[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][1]);
				PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_MASKS[0][attachmodel]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_MASKS[0][attachname]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][3]);
				PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][4]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][5]);
				PlayerTextDrawShow(playerid, PTD_Toys[playerid][6]);
				SmartAttacher(playerid, RP_MASKS[0][attachmodel]);
				PlayerInMenu[playerid][0] = 6;
				PlayerInMenu[playerid][1] = 0;
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == PizzaStackedMenu)
    {
        switch(row)
        {
            case 0:
            {
                ShowMenuForPlayer(PizzaMenu, playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == PizzaMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 1) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(20 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 2) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 20;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 3) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 4) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 4:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 23) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}


 	if(GetPlayerMenu(playerid) == BebidasMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 15) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 16) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 19) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 20) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 4:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 24) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 5:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 17) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}

 	if(GetPlayerMenu(playerid) == DonutMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 10) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(6 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 11) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 6;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(6 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 12) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 6;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(5 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 24) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 5;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}
    if(GetPlayerMenu(playerid) == ChickBellMenu)
    {
        switch(row)
        {
            case 0:
            {
                ShowMenuForPlayer(ChickMenu, playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }

 	if(GetPlayerMenu(playerid) == ChickMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(25 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 8) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 25;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(20 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 9) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 20;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 23) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}

	if(GetPlayerMenu(playerid) == BurgerShotMenu)
    {
        switch(row)
        {
            case 0:
            {
                ShowMenuForPlayer(BurgerMenu, playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }

 	if(GetPlayerMenu(playerid) == BurgerMenu)
    {
        switch(row)
        {
            case 0:
            {
                if(15 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 5) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 15;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 6) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 7) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 3:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
                if(Dar_Bolsillo(playerid, 23) != 0)
                {
	                PlayerInfo[playerid][dinero] -= 10;
	                ResetPlayerMoney(playerid);
	                GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
	}
	if(GetPlayerMenu(playerid) == HotdogMenu)
    {
        switch(row)
        {
            case 0:
            {
				if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 18) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 10;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                ShowMenuForPlayer(BebidasMenu, playerid);
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == ShopMenuN)
    {
        switch(row)
        {
            case 0:
            {
				ShowMenuForPlayer(BebidasMenu, playerid);
            }
            case 1:
            {
                if(150 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 25) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 150;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 2:
            {
                ShowMenuForPlayer(TabacoMenu, playerid);
            }
        }
        return 1;
    }
    if(GetPlayerMenu(playerid) == TabacoMenu)
    {
        switch(row)
        {
            case 0:
            {
				if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 14) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 10;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
            case 1:
            {
                if(10 > PlayerInfo[playerid][dinero])
				{
				    TogglePlayerControllable(playerid, true);
					VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
					return 1;
				}
				if(Dar_Bolsillo(playerid, 13) != 0)
				{
				    PlayerInfo[playerid][dinero] -= 10;
				    ResetPlayerMoney(playerid);
				    GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				}
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
            }
        }
        return 1;
    }

	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	if(GetPlayerMenu(playerid) == AlhambraMenu)
    {
		TogglePlayerControllable(playerid, true);
	    PlayerEvent[playerid][10] = 0;
	    SetPlayerSpecialAction(playerid, 0);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    SetTimerEx("BarContinue", 3000, false, "id", playerid, 2);
	    return 1;
    }
    if(GetPlayerMenu(playerid) == PigPenMenu)
    {
		TogglePlayerControllable(playerid, true);
	    PlayerEvent[playerid][11] = 0;
	    SetPlayerSpecialAction(playerid, 0);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
	    SetTimerEx("PigPenContinue", 3000, false, "id", playerid, 2);
	    return 1;
    }
    if(GetPlayerMenu(playerid) == BincoMenu)
    {
    	SetPlayerVirtualWorld(playerid, 0);
	    SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, true);
		P_catalogobinco[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		return 1;
	}
	if(GetPlayerMenu(playerid) == ZipMenu)
    {
    	SetPlayerVirtualWorld(playerid, 0);
	    SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid, true);
		P_catalogozip[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		return 1;
	}
	if(GetPlayerMenu(playerid) == TOYSMENU)
    {
    	SetCameraBehindPlayer(playerid);
		PlayerInMenu[playerid][0] = -1;
		PlayerInMenu[playerid][1] = -1;
		TogglePlayerControllable(playerid, true);
		SetPlayerVirtualWorld(playerid, 0);
		P_catalogobinco[playerid] = -1;
		P_catalogozip[playerid] = -1;
		ChatLogDisabled[playerid] = false;
		return 1;
	}
	if(GetPlayerMenu(playerid) == PizzaStackedMenu || GetPlayerMenu(playerid) == PizzaMenu || GetPlayerMenu(playerid) == BebidasMenu || GetPlayerMenu(playerid) == DonutMenu ||
		GetPlayerMenu(playerid) == ChickBellMenu || GetPlayerMenu(playerid) == ChickMenu || GetPlayerMenu(playerid) == BurgerShotMenu || GetPlayerMenu(playerid) == BurgerMenu ||
		GetPlayerMenu(playerid) == HotdogMenu || GetPlayerMenu(playerid) == ShopMenuN || GetPlayerMenu(playerid) == TabacoMenu)
    {
        TogglePlayerControllable(playerid, true);
        VirtualTimers[playerid][30] = SetTimerEx("ReEnableShopForPlayer", 2000, false, "i", playerid);
    }
	return 1;
}

funcion ReEnableShopForPlayer(playerid)
{
	return P_tienda[playerid] = -1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
        return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
new IDAuto = GetPlayerVehicleID(playerid);
                GetVehicleParamsEx(IDAuto, engine, lights, alarm, doors, bonnet, boot, objective);
                if(IsPlayerInAnyVehicle(playerid))
                {
                 if (newkeys & KEY_CROUCH)
                        {
                                if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET)
                                {
                                    if(VirtualTimers[playerid][6] == -1)
                                    {
                                                GameTextForPlayer(playerid, "~w~Girando llave...", 700, 3);
                                                RemoveMSGDraw(playerid);
                                                VirtualTimers[playerid][6] = SetTimerEx("StartEngine", 500, 1,"d",playerid);
                                        }
                                }
                                else
                                {
                                        if(VirtualTimers[playerid][7] == -1)
                                        {
                                                VirtualTimers[playerid][7] = SetTimerEx("StopEngine", 800, false, "d", playerid);
                                                RemoveMSGDraw(playerid);
                                                GameTextForPlayer(playerid, "~w~Girando llave...", 700, 3);
                                        }
                                }
                                }
                        }
	if(newkeys & KEY_YES)
	{
	    if(IsPlayerInDynamicArea(playerid, Area_CarWash))
        {
            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
            new Float:p[3];
		    GetPlayerPos(playerid, p[0], p[1], p[2]);
		    if(p[2] >= 10.0 && 15.0 >= p[2])
		    {
				if(CarWashUsed == 1) return SendClientMessage(playerid, -1, "Espera que la persona que hay dentro acabe.");
				if(25 > PlayerInfo[playerid][dinero]) return SendClientMessage(playerid, -1, "Necesitas {FFFF00}$25 {FFFFFF}para usar este servicio.");
				for(new x = 0; x < sizeof(unwashable); x++)
				{
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == unwashable[x][0])
					{
						SendClientMessage(playerid, -1, "No puedes lavar este vehículo.");
						return 1;
					}
				}
				CarWashUsed = 1;
				CarWashUsedBy[playerid] = 1;
				new vehicleid = GetPlayerVehicleID(playerid);
				foreach(new i : Player)
				{
					if(GetPlayerVehicleID(i) == vehicleid)
					{
		                SetPlayerVirtualWorld(i, playerid);
		                TogglePlayerControllable(i, false);
					}
				}
				CarWashUsedBy[playerid] = vehicleid;
				SetPlayerVirtualWorld(playerid, playerid);
				SetVehicleVirtualWorld(vehicleid, playerid);
				SetVehiclePos(vehicleid, 1911.1471, -1782.4995, 13.0840);
				SetPlayerCameraPos(playerid, 1906.8824, -1784.9575, 15.1860);
				SetPlayerCameraLookAt(playerid, 1907.5662, -1784.2316, 14.9760);
				SetVehicleZAngle(vehicleid, 0.0);
				TogglePlayerControllable(playerid, true);
				VirtualTimers[playerid][20] = SetTimerEx("washcontinue", 100, 0, "idd", playerid, vehicleid, 0);
				return 1;
			}
        }
       if(IsPlayerInRangeOfPoint(playerid, 2.5, 2160.1108, -2281.3726, 13.3559) || IsPlayerInRangeOfPoint(playerid, 2.5, 2167.1973, -2274.5811, 12.4016) || IsPlayerInRangeOfPoint(playerid, 2.5, 2174.0796, -2266.8384, 12.4016))
	    {
	 	new autoid;
	autoid = GetPlayerVehicleID(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) return 1;
	if(CamionCargado[autoid] >= 1) return InfoMSG(playerid, 3000," El camion ya esta cargado");
	if(CAMION(autoid) || Esuncamionn1(autoid))
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	new string[256];
	PlayerInfo[playerid][pNivelCamionero] = 1;
	CargandoC[playerid] = 1;
	TogglePlayerControllable(playerid, 0);
	SetPVarInt(playerid, "IsFrozen", 0);
	RemoveMSGDraw(playerid);
	DisablePlayerCheckpoint(playerid);
	switch(PlayerInfo[playerid][pNivelCamionero])
	{
     case 1:
				{

					format(string, 256, "{00CC00}Productos 24/7 {FFFFFF}($1300) \n{00CC00}Ropa {FFFFFF}($1300)\n{EB0000}Drogas {FFFFFF}($1300 + 3g Crack + 2 medicamentos)\n{EB0000}Armas {FFFFFF}($1300 + 3 Piezas)");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "Elige tu carga", string, "Cargar","Cancelar");
				}
				case 2:
				{


					format(string, 256, "{00CC00}Productos 24/7 {FFFFFF}($1500) \n{00CC00}Ropa {FFFFFF}($1500)\n{EB0000}Drogas {FFFFFF}($1500 + 4g Crack + 4 medicamentos)\n{EB0000}Armas {FFFFFF}($1500 + 5 Piezas)");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "Elige tu carga", string, "Cargar","Cancelar");
				}
				case 3:
				{


					format(string, 256, "{00CC00}Productos 24/7 {FFFFFF}($1700) \n{00CC00}Ropa {FFFFFF}($1700)\n{EB0000}Drogas {FFFFFF}($1700 + 5g Crack + 6 medicamentos)\n{EB0000}Armas {FFFFFF}($1700 + 7 Piezas)");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "Elige tu carga", string, "Cargar","Cancelar");
				}
				case 4:
				{


					format(string, 256, "{00CC00}Productos 24/7 {FFFFFF}($1900) \n{00CC00}Ropa {FFFFFF}($1900)\n{EB0000}Drogas {FFFFFF}($1900 + 6g Crack + 8 medicamentos)\n{EB0000}Armas {FFFFFF}($1900 + 7 Piezas)");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "Elige tu carga", string, "Cargar","Cancelar");
				}
				case 5:
				{

					format(string, 256, "{00CC00}Productos 24/7 {FFFFFF}($2100 ) \n{00CC00}Ropa {FFFFFF}($2100)\n{EB0000}Drogas {FFFFFF}($2100 + 7g Crack + 9 medicamentos)\n{EB0000}Armas {FFFFFF}($2100 + 7 Piezas)");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "Elige tu carga", string, "Cargar","Cancelar");
				}
				case 6:
				{
					format(string, 256, "{00CC00}Productos 24/7 {FFFFFF}($2500) \n{00CC00}Ropa {FFFFFF}($2500)\n{EB0000}Drogas {FFFFFF}($2500 + 8g Crack + 11 medicamentos)\n{EB0000}Armas {FFFFFF}($2500 + 8 Piezas)");
					ShowPlayerDialog(playerid, CAMIOND,DIALOG_STYLE_LIST, "Elige tu carga", string, "Cargar","Cancelar");
				}
			}
			}
			return 1;
		}
        if(iPhoneCallStatus[playerid] == 2)
	    {
	        iPhoneCallStatus[playerid] = 3;
	        iPhoneCallStatus[callto[playerid]] = 3;
	        //SendClientMessage(callto[playerid], -1, "Llamada establecida");
	        PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][0], "Llamada~n~establecida...");
	        PlayerTextDrawSetString(callto[playerid], PTD_iPhone_Info[callto[playerid]][0], "Llamada~n~establecida...");
	        return 1;
	    }
	    if(iPhone_CC[1][playerid] == 1 || iPhone_CC[2][playerid] == 1)
	    {
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        return 1;
		}
	    if(iPhoneStatus[playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 2;
	        TextDrawHideForPlayer(playerid, TD_iPhone[19]);
	        TextDrawHideForPlayer(playerid, TD_iPhone[20]);
	        TextDrawHideForPlayer(playerid, TD_iPhone[21]);
	        loop(22, 26, PHONE) TextDrawShowForPlayer(playerid, TD_iPhone[PHONE]);
	        loop(0, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
	        UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	    }
	    else if(iPhoneStatus[playerid] == 2)
	    {
	        new menuid = UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	        if(menuid == 12 || menuid == 2 || menuid == 5) return PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 3;
	        TextDrawHideForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	        ShowIphoneMenu(playerid, menuid);
	    }
	    if(PlayerInMenu[playerid][0] != -1)
	    {
		    switch(PlayerInMenu[playerid][0])
		    {
		        case 0: //CASCOS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_CASCOS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_CASCOS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_CASCOS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 1: //GORRAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_GORRAS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORRAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORRAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 2: //GORROS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_GORROS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 3: //SOMBREROS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_SOMBREROS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 4: //BANDANAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_BANDANAS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_BANDANAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 5: //GAFAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_GAFAS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_GAFAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GAFAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
	                SmartAttacher(playerid, RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 6: //MASCARAS
		        {
		            if(PlayerInMenu[playerid][1] == sizeof(RP_MASKS)-1) PlayerInMenu[playerid][1] = 0;
		            else PlayerInMenu[playerid][1] += 1;
		            new str[12];
					format(str, 12, "$%d", RP_MASKS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_MASKS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
			}
		}
	    return 1;
	}
	else if(newkeys & KEY_NO)
	{

	    if(iPhoneCallStatus[playerid] == 2 || iPhoneCallStatus[playerid] == 3 || iPhoneCallStatus[playerid] == 4)//estbleciendo la llamada
	    {
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    HideIphoneMenu(playerid);
		    iPhoneStatus[playerid] = 0;

		    loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(callto[playerid], TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(callto[playerid], PTD_iPhone[PPHONE][callto[playerid]]);
		    HideIphoneMenu(callto[playerid]);
		    iPhoneStatus[callto[playerid]] = 0;
		    return 1;
		}
	    if(iPhoneStatus[playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        loop(0, 22, PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    iPhoneStatus[playerid] = 0;
		    return 1;
	    }
	    else if(iPhoneStatus[playerid] == 2)
	    {
	        PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 1;
	        loop(22, 26, PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
	        loop(0, 37, PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
	        TextDrawShowForPlayer(playerid, TD_iPhone[19]);
	        TextDrawShowForPlayer(playerid, TD_iPhone[20]);
	        TextDrawShowForPlayer(playerid, TD_iPhone[21]);
	        return 1;
	    }
	    else if(iPhoneStatus[playerid] == 3)
	    {
	        PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	        iPhoneStatus[playerid] = 2;
	        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
	        HideIphoneMenu(playerid);
	        return 1;
	    }
	    if(PlayerInMenu[playerid][0] != -1)
	    {
		    switch(PlayerInMenu[playerid][0])
		    {
		        case 0: //CASCOS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_CASCOS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_CASCOS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_CASCOS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_CASCOS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 1: //GORRAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_GORRAS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORRAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORRAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORRAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 2: //GORROS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_GORROS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_GORROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GORROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GORROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 3: //SOMBREROS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_SOMBREROS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_SOMBREROS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_SOMBREROS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 4: //BANDANAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_BANDANAS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_BANDANAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_BANDANAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 5: //GAFAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_GAFAS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_GAFAS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_GAFAS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_GAFAS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		        case 6: //MASCARAS
		        {
		            if(PlayerInMenu[playerid][1] == 0) PlayerInMenu[playerid][1] = sizeof(RP_MASKS)-1;
		            else PlayerInMenu[playerid][1] -= 1;
		            new str[12];
					format(str, 12, "$%d", RP_MASKS[PlayerInMenu[playerid][1]][attachprice]);
					PlayerTextDrawSetPreviewModel(playerid, PTD_Toys[playerid][2], RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
					PlayerTextDrawShow(playerid, PTD_Toys[playerid][2]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][3], RP_MASKS[PlayerInMenu[playerid][1]][attachname]);
					PlayerTextDrawSetString(playerid, PTD_Toys[playerid][4], str);
					SmartAttacher(playerid, RP_MASKS[PlayerInMenu[playerid][1]][attachmodel]);
		        }
		    }
		}
	    return 1;
	}
	if(newkeys & KEY_ANALOG_LEFT)
	{
	    if(iPhone_CC[0][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        PlayerTextDrawSetString(playerid, PTD_iPhone_Gallery[playerid], Gallery[random(sizeof(Gallery))]);
	        return 1;
	    }
	    if(iPhone_CC[1][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Radio[random(sizeof(Radio))]);
	        return 1;
	    }
	    if(iPhone_CC[2][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Music[random(sizeof(Music))]);
	        return 1;
	    }
	    if(iPhoneStatus[playerid] == 2)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			if(MenuX[playerid] == 0)
			{
			    if(MenuY[playerid] == 0)
			    {
			        MenuX[playerid] = 2;
				    MenuY[playerid] = 3;
				    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
			        return 1;
			    }
			    MenuY[playerid] -= 1;
			    MenuX[playerid] = 2;
			    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
				return 1;
			}
	        MenuX[playerid] -= 1;
	        UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	    }
	    return 1;
	}
	if(newkeys & KEY_ANALOG_RIGHT || newkeys & KEY_HANDBRAKE)
	{
	    if(iPhone_CC[0][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        PlayerTextDrawSetString(playerid, PTD_iPhone_Gallery[playerid], Gallery[random(sizeof(Gallery))]);
	        return 1;
	    }
	    if(iPhone_CC[1][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Radio[random(sizeof(Radio))]);
	        return 1;
			}
	    if(iPhone_CC[2][playerid] == 1)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	        StopAudioStreamForPlayer(playerid);
	        PlayAudioStreamForPlayer(playerid, Music[random(sizeof(Music))]);
	        return 1;
	    }
	    if(iPhoneStatus[playerid] == 2)
	    {
	        PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
			if(MenuX[playerid] == 2)
			{
			    if(MenuY[playerid] == 3)
			    {
			        MenuY[playerid] = 0;
				    MenuX[playerid] = 0;
				    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
			        return 1;
			    }
			    MenuY[playerid] += 1;
			    MenuX[playerid] = 0;
			    UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
			    return 1;
			}
	        MenuX[playerid] += 1;
	        UpdateCoordinates(playerid, MenuX[playerid], MenuY[playerid]);
	    }
	    return 1;
	}
	if((newkeys & KEY_SPRINT))
	{
	    if(PlayerInMenu[playerid][0] >= 0)
	    {
			switch(PlayerInMenu[playerid][0])
			{
				case 0:
				{
				    if(RP_CASCOS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_CASCOS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				    ToysInfo[playerid][pToyModelID][0] = ToysInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", ToysInfo[playerid][pToyModelID][0]);
				    ToysInfo[playerid][pToyBone][0] = ToysInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", ToysInfo[playerid][pToyBone][0]);
				    ToysInfo[playerid][pToyX][0] = ToysInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", ToysInfo[playerid][pToyX][0]);
				    ToysInfo[playerid][pToyY][0] = ToysInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", ToysInfo[playerid][pToyY][0]);
				    ToysInfo[playerid][pToyZ][0] = ToysInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", ToysInfo[playerid][pToyZ][0]);
				    ToysInfo[playerid][pToyRX][0] = ToysInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", ToysInfo[playerid][pToyRX][0]);
				    ToysInfo[playerid][pToyRY][0] = ToysInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", ToysInfo[playerid][pToyRY][0]);
				    ToysInfo[playerid][pToyRZ][0] = ToysInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", ToysInfo[playerid][pToyRZ][0]);
				    ToysInfo[playerid][pToySX][0] = ToysInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", ToysInfo[playerid][pToySX][0]);
				    ToysInfo[playerid][pToySY][0] = ToysInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", ToysInfo[playerid][pToySY][0]);
				    ToysInfo[playerid][pToySZ][0] = ToysInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", ToysInfo[playerid][pToySZ][0]);
				}
				case 1:
				{
				    if(RP_GORRAS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_GORRAS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
     				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				    ToysInfo[playerid][pToyModelID][0] = ToysInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", ToysInfo[playerid][pToyModelID][0]);
				    ToysInfo[playerid][pToyBone][0] = ToysInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", ToysInfo[playerid][pToyBone][0]);
				    ToysInfo[playerid][pToyX][0] = ToysInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", ToysInfo[playerid][pToyX][0]);
				    ToysInfo[playerid][pToyY][0] = ToysInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", ToysInfo[playerid][pToyY][0]);
				    ToysInfo[playerid][pToyZ][0] = ToysInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", ToysInfo[playerid][pToyZ][0]);
				    ToysInfo[playerid][pToyRX][0] = ToysInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", ToysInfo[playerid][pToyRX][0]);
				    ToysInfo[playerid][pToyRY][0] = ToysInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", ToysInfo[playerid][pToyRY][0]);
				    ToysInfo[playerid][pToyRZ][0] = ToysInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", ToysInfo[playerid][pToyRZ][0]);
				    ToysInfo[playerid][pToySX][0] = ToysInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", ToysInfo[playerid][pToySX][0]);
				    ToysInfo[playerid][pToySY][0] = ToysInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", ToysInfo[playerid][pToySY][0]);
				    ToysInfo[playerid][pToySZ][0] = ToysInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", ToysInfo[playerid][pToySZ][0]);
				}
				case 2:
				{
				    if(RP_GORROS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_GORROS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				    ToysInfo[playerid][pToyModelID][0] = ToysInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", ToysInfo[playerid][pToyModelID][0]);
				    ToysInfo[playerid][pToyBone][0] = ToysInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", ToysInfo[playerid][pToyBone][0]);
				    ToysInfo[playerid][pToyX][0] = ToysInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", ToysInfo[playerid][pToyX][0]);
				    ToysInfo[playerid][pToyY][0] = ToysInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", ToysInfo[playerid][pToyY][0]);
				    ToysInfo[playerid][pToyZ][0] = ToysInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", ToysInfo[playerid][pToyZ][0]);
				    ToysInfo[playerid][pToyRX][0] = ToysInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", ToysInfo[playerid][pToyRX][0]);
				    ToysInfo[playerid][pToyRY][0] = ToysInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", ToysInfo[playerid][pToyRY][0]);
				    ToysInfo[playerid][pToyRZ][0] = ToysInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", ToysInfo[playerid][pToyRZ][0]);
				    ToysInfo[playerid][pToySX][0] = ToysInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", ToysInfo[playerid][pToySX][0]);
				    ToysInfo[playerid][pToySY][0] = ToysInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", ToysInfo[playerid][pToySY][0]);
				    ToysInfo[playerid][pToySZ][0] = ToysInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", ToysInfo[playerid][pToySZ][0]);
				}
				case 3:
				{
				    if(RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_SOMBREROS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				    ToysInfo[playerid][pToyModelID][0] = ToysInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", ToysInfo[playerid][pToyModelID][0]);
				    ToysInfo[playerid][pToyBone][0] = ToysInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", ToysInfo[playerid][pToyBone][0]);
				    ToysInfo[playerid][pToyX][0] = ToysInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", ToysInfo[playerid][pToyX][0]);
				    ToysInfo[playerid][pToyY][0] = ToysInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", ToysInfo[playerid][pToyY][0]);
				    ToysInfo[playerid][pToyZ][0] = ToysInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", ToysInfo[playerid][pToyZ][0]);
				    ToysInfo[playerid][pToyRX][0] = ToysInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", ToysInfo[playerid][pToyRX][0]);
				    ToysInfo[playerid][pToyRY][0] = ToysInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", ToysInfo[playerid][pToyRY][0]);
				    ToysInfo[playerid][pToyRZ][0] = ToysInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", ToysInfo[playerid][pToyRZ][0]);
				    ToysInfo[playerid][pToySX][0] = ToysInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", ToysInfo[playerid][pToySX][0]);
				    ToysInfo[playerid][pToySY][0] = ToysInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", ToysInfo[playerid][pToySY][0]);
				    ToysInfo[playerid][pToySZ][0] = ToysInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", ToysInfo[playerid][pToySZ][0]);
				}
				case 4:
				{
				    if(RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_BANDANAS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
         			//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][1] = 1; //SaveValue(playerid, "PTOY1", ToysInfo[playerid][pToy][1]);
				    ToysInfo[playerid][pToyModelID][1] = ToysInfo[playerid][pToyModelID][4]; //SaveValue(playerid, "PTOYMID1", ToysInfo[playerid][pToyModelID][1]);
				    ToysInfo[playerid][pToyBone][1] = ToysInfo[playerid][pToyBone][4]; //SaveValue(playerid, "PTOYBONE1", ToysInfo[playerid][pToyBone][1]);
				    ToysInfo[playerid][pToyX][1] = ToysInfo[playerid][pToyX][4]; //SaveFloat(playerid, "PTOYX1", ToysInfo[playerid][pToyX][1]);
				    ToysInfo[playerid][pToyY][1] = ToysInfo[playerid][pToyY][4]; //SaveFloat(playerid, "PTOYY1", ToysInfo[playerid][pToyY][1]);
				    ToysInfo[playerid][pToyZ][1] = ToysInfo[playerid][pToyZ][4]; //SaveFloat(playerid, "PTOYZ1", ToysInfo[playerid][pToyZ][1]);
				    ToysInfo[playerid][pToyRX][1] = ToysInfo[playerid][pToyRX][4]; //SaveFloat(playerid, "PTOYRX1", ToysInfo[playerid][pToyRX][1]);
				    ToysInfo[playerid][pToyRY][1] = ToysInfo[playerid][pToyRY][4]; //SaveFloat(playerid, "PTOYRY1", ToysInfo[playerid][pToyRY][1]);
				    ToysInfo[playerid][pToyRZ][1] = ToysInfo[playerid][pToyRZ][4]; //SaveFloat(playerid, "PTOYRZ1", ToysInfo[playerid][pToyRZ][1]);
				    ToysInfo[playerid][pToySX][1] = ToysInfo[playerid][pToySX][4]; //SaveFloat(playerid, "PTOYSX1", ToysInfo[playerid][pToySX][1]);
				    ToysInfo[playerid][pToySY][1] = ToysInfo[playerid][pToySY][4]; //SaveFloat(playerid, "PTOYSY1", ToysInfo[playerid][pToySY][1]);
				    ToysInfo[playerid][pToySZ][1] = ToysInfo[playerid][pToySZ][4]; //SaveFloat(playerid, "PTOYSZ1", ToysInfo[playerid][pToySZ][1]);
				}
				case 5:
				{
				    if(RP_GAFAS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_GAFAS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][2] = 1; //SaveValue(playerid, "PTOY2", ToysInfo[playerid][pToy][2]);
				    ToysInfo[playerid][pToyModelID][2] = ToysInfo[playerid][pToyModelID][5]; //SaveValue(playerid, "PTOYMID2", ToysInfo[playerid][pToyModelID][2]);
				    ToysInfo[playerid][pToyBone][2] = ToysInfo[playerid][pToyBone][5]; //SaveValue(playerid, "PTOYBONE2", ToysInfo[playerid][pToyBone][2]);
				    ToysInfo[playerid][pToyX][2] = ToysInfo[playerid][pToyX][5]; //SaveFloat(playerid, "PTOYX2", ToysInfo[playerid][pToyX][2]);
				    ToysInfo[playerid][pToyY][2] = ToysInfo[playerid][pToyY][5]; //SaveFloat(playerid, "PTOYY2", ToysInfo[playerid][pToyY][2]);
				    ToysInfo[playerid][pToyZ][2] = ToysInfo[playerid][pToyZ][5]; //SaveFloat(playerid, "PTOYZ2", ToysInfo[playerid][pToyZ][2]);
				    ToysInfo[playerid][pToyRX][2] = ToysInfo[playerid][pToyRX][5]; //SaveFloat(playerid, "PTOYRX2", ToysInfo[playerid][pToyRX][2]);
				    ToysInfo[playerid][pToyRY][2] = ToysInfo[playerid][pToyRY][5]; //SaveFloat(playerid, "PTOYRY2", ToysInfo[playerid][pToyRY][2]);
				    ToysInfo[playerid][pToyRZ][2] = ToysInfo[playerid][pToyRZ][5]; //SaveFloat(playerid, "PTOYRZ2", ToysInfo[playerid][pToyRZ][2]);
				    ToysInfo[playerid][pToySX][2] = ToysInfo[playerid][pToySX][5]; //SaveFloat(playerid, "PTOYSX2", ToysInfo[playerid][pToySX][2]);
				    ToysInfo[playerid][pToySY][2] = ToysInfo[playerid][pToySY][5]; //SaveFloat(playerid, "PTOYSY2", ToysInfo[playerid][pToySY][2]);
				    ToysInfo[playerid][pToySZ][2] = ToysInfo[playerid][pToySZ][5]; //SaveFloat(playerid, "PTOYSZ2", ToysInfo[playerid][pToySZ][2]);
				}
				case 6:
				{
				    if(RP_MASKS[PlayerInMenu[playerid][1]][attachprice] > PlayerInfo[playerid][dinero])
					{
						InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
						PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
						return 1;
					}
					PlayerInfo[playerid][dinero] -= RP_MASKS[PlayerInMenu[playerid][1]][attachprice];
					ResetPlayerMoney(playerid);
					GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
					//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
					ToysInfo[playerid][pToy][0] = 1; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				    ToysInfo[playerid][pToyModelID][0] = ToysInfo[playerid][pToyModelID][3]; //SaveValue(playerid, "PTOYMID0", ToysInfo[playerid][pToyModelID][0]);
				    ToysInfo[playerid][pToyBone][0] = ToysInfo[playerid][pToyBone][3]; //SaveValue(playerid, "PTOYBONE0", ToysInfo[playerid][pToyBone][0]);
				    ToysInfo[playerid][pToyX][0] = ToysInfo[playerid][pToyX][3]; //SaveFloat(playerid, "PTOYX0", ToysInfo[playerid][pToyX][0]);
				    ToysInfo[playerid][pToyY][0] = ToysInfo[playerid][pToyY][3]; //SaveFloat(playerid, "PTOYY0", ToysInfo[playerid][pToyY][0]);
				    ToysInfo[playerid][pToyZ][0] = ToysInfo[playerid][pToyZ][3]; //SaveFloat(playerid, "PTOYZ0", ToysInfo[playerid][pToyZ][0]);
				    ToysInfo[playerid][pToyRX][0] = ToysInfo[playerid][pToyRX][3]; //SaveFloat(playerid, "PTOYRX0", ToysInfo[playerid][pToyRX][0]);
				    ToysInfo[playerid][pToyRY][0] = ToysInfo[playerid][pToyRY][3]; //SaveFloat(playerid, "PTOYRY0", ToysInfo[playerid][pToyRY][0]);
				    ToysInfo[playerid][pToyRZ][0] = ToysInfo[playerid][pToyRZ][3]; //SaveFloat(playerid, "PTOYRZ0", ToysInfo[playerid][pToyRZ][0]);
				    ToysInfo[playerid][pToySX][0] = ToysInfo[playerid][pToySX][3]; //SaveFloat(playerid, "PTOYSX0", ToysInfo[playerid][pToySX][0]);
				    ToysInfo[playerid][pToySY][0] = ToysInfo[playerid][pToySY][3]; //SaveFloat(playerid, "PTOYSY0", ToysInfo[playerid][pToySY][0]);
				    ToysInfo[playerid][pToySZ][0] = ToysInfo[playerid][pToySZ][3]; //SaveFloat(playerid, "PTOYSZ0", ToysInfo[playerid][pToySZ][0]);
				}
			}

			SetCameraBehindPlayer(playerid);
		    TogglePlayerControllable(playerid, true);
			SetPlayerVirtualWorld(playerid, 0);
			P_catalogobinco[playerid] = -1;
			P_catalogozip[playerid] = -1;
			ChatLogDisabled[playerid] = false;
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][2]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][3]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][4]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][5]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][6]);
			PlayerInMenu[playerid][0] = -1;
			PlayerInMenu[playerid][1] = -1;
			ColocarToys(playerid);
			SendClientMessage(playerid, -1, "Puedes usar /colocar para recolocar el toy.");
		}
	}
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    //if(GetPlayerVirtualWorld(playerid) != 0) return 1;
	    //if(PlayerInfo[playerid][PlayerStatus] == STATE_DEAD1 || PlayerInfo[playerid][PlayerStatus] == STATE_DEAD2) return 1;
	    if(IsPlayerInRangeOfPoint(playerid, 1.0, 361.829895, 173.562728, 1008.0)) // Info ayunta
	    {
	    SendClientMessage(playerid, -1, "Puedes usar /colocar para recolocar el toy.");
			//ShowPlayerDialog(playerid, DIALOG_AYUNTA, DIALOG_STYLE_LIST, "Ayuntamiento", "Carnet de préstamo de bicicletas", "Continuar", "Cancelar");
            return 1;
	    }
	      else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1563.9891, -1680.3165, 1990.5461)) // Info Taxi
	    {
	    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Hola que desea hacer");
	     ShowPlayerDialog(playerid, Dialog_Taxi, DIALOG_STYLE_LIST, "¿Qué Desea Hacer?", "Comenzar a trabajar\nInformacion\nRenunciar", "Continuar", "Cancelar");
            return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 2227.3914, -1715.0405, 13.5135)) // Info Taxi
	    {
	    SendClientMessage(playerid, -1, "{CCCCCC}Desconocido dice: {FFFFFF}Hey tu buscas empleo");
	  // ShowPlayerDialog(playerid, Dialog_Taxi, DIALOG_STYLE_LIST, "¿Qué Desea Hacer?", "Comenzar a trabajar\nInformacion\nRenunciar", "Continuar", "Cancelar");
            return 1;
	    }
	       else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1563.9891, -1677.3206, 1990.5461)) // Info Taxi
	    {
	    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Hola que desea hacer");
		 ShowPlayerDialog(playerid, Dialog_Taxi, DIALOG_STYLE_LIST, "¿Qué Desea Hacer?", "Comenzar a trabajar\nInformacion\nRenunciar", "Continuar", "Cancelar");
            return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1563.9891, -1673.5377, 1990.5461)) // Info Taxi
	    {
	    
	    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Hola que desea hacer");
	     ShowPlayerDialog(playerid, Dialog_Taxi, DIALOG_STYLE_LIST, "¿Qué Desea Hacer?", "Comenzar a trabajar\nInformacion\nRenunciar", "Continuar", "Cancelar");
            return 1;
	    }
        else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1563.9891, -1669.7107, 1990.5461)) // Info Taxi
	    {
	    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Hola que desea hacer");
		 ShowPlayerDialog(playerid, Dialog_Taxi, DIALOG_STYLE_LIST, "¿Qué Desea Hacer?", "Comenzar a trabajar\nInformacion\nRenunciar", "Continuar", "Cancelar");
            return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1563.9891, -1684.0284, 1990.5461)) // Info Taxi
	    {
	    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Hola que desea hacer");
		 ShowPlayerDialog(playerid, Dialog_Taxi, DIALOG_STYLE_LIST, "¿Qué Desea Hacer?", "Comenzar a trabajar\nInformacion\nRenunciar", "Continuar", "Cancelar");
            return 1;
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 217.469360, -98.421447, 1005.257812))//Binco
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 217.620590, -98.439628, 1005.257812);
        	    SetPlayerFacingAngle(playerid, 180.0);
				SetPlayerCameraPos(playerid, 217.620590, -101.2583, 1004.9333);
				SetPlayerCameraLookAt(playerid, 217.620590, -98.439628, 1005.257812);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 206.654342, -3.857390, 1001.210937))//Victim1
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 206.654342, -3.857390, 1001.210937);
        	    SetPlayerFacingAngle(playerid, 216.314559);
				SetPlayerCameraPos(playerid, 208.996902, -6.378699, 1002.744689);
				SetPlayerCameraLookAt(playerid, 208.339981, -5.671638, 1002.482910);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 206.305984, -12.398782, 1001.217773))//Victim2
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 206.305984, -12.398782, 1001.217773);
        	    SetPlayerFacingAngle(playerid, 318.775543);
				SetPlayerCameraPos(playerid, 208.470794, -9.816300, 1002.595092);
				SetPlayerCameraLookAt(playerid, 207.844818, -10.563082, 1002.370483);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 181.209182, -87.911384, 1002.030700))//Zip
	    {
	        if(P_catalogozip[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 181.209182, -87.911384, 1002.030700);
        	    SetPlayerFacingAngle(playerid, 119.502670);
				SetPlayerCameraPos(playerid, 178.819305, -89.351303, 1003.269470);
				SetPlayerCameraLookAt(playerid, 179.654266, -88.848236, 1003.046386);
				TogglePlayerControllable(playerid, false);
				P_catalogozip[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(ZipMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 199.650726, -127.131729, 1003.515197))//Prolaps
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 199.650726, -127.131729, 1003.515197);
        	    SetPlayerFacingAngle(playerid, 147.076416);
				SetPlayerCameraPos(playerid, 198.744400, -129.838806, 1004.909729);
				SetPlayerCameraLookAt(playerid, 199.050262, -128.925231, 1004.641723);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 214.175384, -41.355842, 1002.023437))//SubUrban
	    {
	        if(P_catalogobinco[playerid] == -1)
        	{
        	    SetPlayerVirtualWorld(playerid, playerid);
        	    SetPlayerPos(playerid, 214.175384, -41.355842, 1002.023437);
        	    SetPlayerFacingAngle(playerid, 93.182929);
				SetPlayerCameraPos(playerid, 210.900207, -42.473999, 1003.145874);
				SetPlayerCameraLookAt(playerid, 211.835983, -42.154525, 1002.996704);
				TogglePlayerControllable(playerid, false);
				P_catalogobinco[playerid] = 1;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				ShowMenuForPlayer(BincoMenu, playerid);
				return 1;
        	}
	    }
	    //concesionario catalogo
	    else if(IsPlayerInRangeOfPoint(playerid, 1.0, 560.660095, -1310.996093, 1996.575927) || IsPlayerInRangeOfPoint(playerid, 1.0, 560.660095, -1313.875244, 1996.575927)) // Grotti
	    {
	        if(P_catalogogrotti[playerid] == -1)
        	{
	        	new Float:p[6];
				GetPlayerCameraPos(playerid, p[0], p[1], p[2]);
				GetPlayerCameraLookAt(playerid, p[3], p[4], p[5]);
				InterpolateCameraPos(playerid, p[0], p[1], p[2], 544.1366, -1307.1511, 1999.2629, 2000);
				InterpolateCameraLookAt(playerid, p[3], p[4], p[5], 544.1366, -1298.1511, 1997.2629, 2000);
				TogglePlayerControllable(playerid, false);
				P_catalogogrotti[playerid] = 3;
				DeleteChatForPlayer(playerid,32,a);
				ChatLogDisabled[playerid] = true;
				loop(0, 9, i) TextDrawShowForPlayer(playerid, TD_GrottiCatalogo[i]);
				PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Infernus");
				PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$450.000");
				PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 580.0, 0.000000);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 575.0, 0.000000);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][0]);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][1]);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
				PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
				SelectTextDraw(playerid, -1);
				VirtualTimers[playerid][16] = SetTimerEx("GrottiContinue", 2000, false, "id", playerid, 0);
				SendClientMessage(playerid, -1, "Usa la tecla {FFFF00}ESC {FFFFFF}para salir del catálogo.");
				return 1;
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1437.143798, -997.824829, 1639.791137) || IsPlayerInRangeOfPoint(playerid, 1.0, 1433.200439, -997.829040, 1639.791137) || IsPlayerInRangeOfPoint(playerid, 1.0, 1429.596923, -997.829467, 1639.784301))
		{
		    if(PlayerInfo[playerid][BankA] == 0) ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Crear cuenta bancaria\n{CCCCCC}Retirar\n{CCCCCC}Depositar\n{CCCCCC}Transferir", "Continuar", "Cancelar");
		    else ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Retirar\n{FFFFFF}Depositar\n{FFFFFF}Transferir", "Continuar", "Cancelar");
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1204.8596, 12.2682, 1000.9991)) // Bitch
	    {

	        if(PlayerInfo[playerid][sexo] == 1) return InfoMSG(playerid, 1500, "Este ~b~servicio ~w~es solo para chicos.");
	        if(150 > PlayerInfo[playerid][dinero]) return InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");


            PlayerInfo[playerid][dinero] -= 150;
            ResetPlayerMoney(playerid);
            GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

		    SetPlayerInteriorEx(playerid, 2, INT_BITCH);
		    SetPlayerPos(playerid, 1204.495849, 17.410648, 1000.921875);
		    SetPlayerFacingAngle(playerid, 145.0);
		    TogglePlayerControllable(playerid, false);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1, 1);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1, 1);
			ApplyAnimation(playerid, "BLOWJOBZ", "BJ_COUCH_START_P", 4.0, 0, 1, 1, 1, 1, 1);
			VirtualTimers[playerid][11] = SetTimerEx("BitchContinue", 10000, false, "id", playerid, 0);
			SetPlayerCameraPos(playerid, 1206.4519, 13.3467, 1002.5107);
			SetPlayerCameraLookAt(playerid, 1205.9796, 14.2284, 1002.1209);

		}
		else if(IsPlayerInRangeOfPoint(playerid, 1.0, 1714.56897, -1862.00928, 13.40750) || IsPlayerInRangeOfPoint(playerid, 1.0, 1479.56226, -1620.46985, 13.90706)
				|| IsPlayerInRangeOfPoint(playerid, 1.0, 1995.02405, -1452.68469, 13.43710) || IsPlayerInRangeOfPoint(playerid, 1.0, 1187.30322, -930.41052, 42.92493)
				|| IsPlayerInRangeOfPoint(playerid, 1.0, 615.66272, -1228.28015, 18.19140) || IsPlayerInRangeOfPoint(playerid, 1.0, 849.83258, -1796.12292, 13.67352)
				|| IsPlayerInRangeOfPoint(playerid, 1.0, 1443.42688, -2286.75879, 13.39686) || IsPlayerInRangeOfPoint(playerid, 1.0, 2849.94849, -1967.06055, 10.92459)) // INFO
		{
		    ShowPlayerDialog(playerid, DIALOG_GPS+9, DIALOG_STYLE_LIST, "GPS", "Tiendas de comida\nTiendas de ropa\nTiendas 24/7\nConcesionarios\nLugares de ocio\nServicios públicos\nTrabajos", "Siguiente", "Cancelar");
		}
		if(PlayerInMenu[playerid][0] >= 0)
	    {
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][2]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][3]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][4]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][5]);
			PlayerTextDrawHide(playerid, PTD_Toys[playerid][6]);
			for(new i=0; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
	        {
	            if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
	        }
			PlayerInMenu[playerid][0] = -2;
 			ShowMenuForPlayer(TOYSMENU, playerid);
			PlayerInMenu[playerid][1] = -1;
			ColocarToys(playerid);
			return 1;
		}
 	if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
			for(new i = 0; i != sizeof(Entradas); i++)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 1.0, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ]))
			    {
					SetPlayerPos(playerid, Entradas[i][SX], Entradas[i][SY], Entradas[i][SZ]);
					SetPlayerFacingAngle(playerid, Entradas[i][SAngle]);
					P_No_Message_Atraco[playerid] = 0;
					SetPlayerInteriorEx(playerid, 0, INT_NONE);
					return 1;
			    }
			    else if(IsPlayerInRangeOfPoint(playerid, 1.0, Entradas[i][SX], Entradas[i][SY], Entradas[i][SZ]))
			    {
			        if(Entradas[i][ID] == INT_PELU2 || Entradas[i][ID] == INT_VIP) return InfoMSG(playerid, 1500, "Este local a quebrado.");
	                if(Entradas[i][Apertura] == 0 && Entradas[i][Cierre] == 0) goto Teleport;
			        if(Entradas[i][Apertura] <= ServerTime && Entradas[i][Cierre] > ServerTime)
					{
					    Teleport:
						if(Entradas[i][Freeze] == 0) SetPlayerPos(playerid, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ]);
						else if(Entradas[i][Freeze] == 1) SetPlayerPosAndFreeze(playerid, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ], 0);
						SetPlayerFacingAngle(playerid, Entradas[i][EAngle]);
						SetPlayerInteriorEx(playerid, Entradas[i][EInteriorID], Entradas[i][ID]);
						switch(Entradas[i][ID])
						{
						    case INT_ALHAM, INT_PIGPEN:
						    {
						        PlayAudioStreamForPlayer(playerid, "http://somafm.com/tags.pls");
						    }
							case INT_GROTTI:
							{
							    if(PlayerInfo[playerid][VGrotti] == 0)
					            {
					                TogglePlayerSpectating(playerid, true);
									InterpolateCameraPos(playerid, 563.4124, -1307.5094, 1997.8839, 560.8727, -1307.2117, 1997.7656, 10000);
									InterpolateCameraLookAt(playerid, 562.7654, -1306.7488, 1997.8208, 560.2227, -1306.4536, 1997.7225, 10000);
									PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Grotti.~n~__En Grotti podrás comprar~n~__vehículos de alta gama...~n~~n~"));
									PlayerTextDrawShow(playerid, TD_IO[playerid]);
									DeleteChatForPlayer(playerid,32,a);
									ChatLogDisabled[playerid] = true;
									GetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
								    GetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
									VirtualTimers[playerid][21] = SetTimerEx("GrottiNextView", 9000, 0, "id", playerid, 0);
					            }
							}
							case INT_BANCO:
							{
							    if(PlayerInfo[playerid][VBank] == 0)
					            {
					                TogglePlayerSpectating(playerid, true);
									InterpolateCameraPos(playerid, 1415.2568, -980.4594, 1646.3146, 1416.7799, -981.5507, 1645.6415, 10000);
									InterpolateCameraLookAt(playerid, 1416.0691, -981.0414, 1645.9556, 1417.5922, -982.1328, 1645.2825, 10000);
									PlayerTextDrawSetString(playerid, TD_IO[playerid], simbolos("_~n~__Bienvenido a Banco LS.~n~__Este es el banco nacional~n~__de Los Santos...~n~~n~"));
									PlayerTextDrawShow(playerid, TD_IO[playerid]);
									DeleteChatForPlayer(playerid,32,a);
									ChatLogDisabled[playerid] = true;

								    GetPlayerHealth(playerid, PlayerInfo[playerid][vida]);
								    GetPlayerArmour(playerid, PlayerInfo[playerid][chaleco]);
									VirtualTimers[playerid][21] = SetTimerEx("BankNextView", 9000, 0, "id", playerid, 0);
							}
							}
				case INT_247AYU:
				{
            if(NPC_USED[NPCS[SHOP_AYUNT]]) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada temporalmente.");
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        new newweaponid = GetPlayerWeapon(playerid);
	        switch(newweaponid)
			{
			    case 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34:
			    {
			        if(P_No_Message_Atraco[playerid] == 0)
			        {
				 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, "{CCCCCC}Vendedor dice: {FFFFFF}¡Por favor señor, guarde eso!");
				 		InfoMSG(playerid, 1500, "Para empezar un atraco, dirígite al~n~~b~punto rojo señalado en el mapa.");
				 		VirtualTimers[playerid][13] = SetTimerEx("RobContinue", 10000, 0, "idi", playerid, 3, SHOP_AYUNT);
				 		SetPlayerCheckpoint(playerid, -30.413436, -28.982168, 1003.557250, 1.0);
				 		P_No_Message_Atraco[playerid] = 1;
				 			}
				 			}
				 			case INT_247VIN:
				 			{
             if(NPC_USED[NPCS[SHOP_VINE]]) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada temporalmente.");
	        if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        SetPlayerPos(playerid, 6.0969,-31.7571,1003.5494);
	        SetPlayerFacingAngle(playerid, 360);
	        SetPlayerInteriorEx(playerid, 10, INT_247VIN);
	        switch(newweaponid)
			{
			    case 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34:
			    {
			        if(P_No_Message_Atraco[playerid] == 0)
			        {
				 		SendPlayersMessage(10.0, playerid, 0xF000D8FF, "{CCCCCC}Vendedor dice: {FFFFFF}¡Por favor señor, guarde eso!");
				 		InfoMSG(playerid, 1500, "Para empezar un atraco, dirígite al~n~~b~punto rojo señalado en el mapa.");
				 		VirtualTimers[playerid][13] = SetTimerEx("RobContinue", 10000, 0, "idi", playerid, 3, SHOP_VINE);
				 		SetPlayerCheckpoint(playerid, 2.412037, -28.959587, 1003.549438, 1.0);
				 		P_No_Message_Atraco[playerid] = 1;
				 		}
				 		}
            case INT_247U:
			{
           if(NPC_USED[NPCS[SHOP_UNITY]]) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada temporalmente.");
           if(ServerTime > 20 || ServerTime < 8) return InfoMSG(playerid, 1500, "La ~b~tienda ~w~está cerrada.");
	        switch(newweaponid)
			{
            case 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34:
            {
            if(P_No_Message_Atraco[playerid] == 0)
            {
        SendPlayersMessage(10.0, playerid, 0xF000D8FF, "{CCCCCC}Vendedor dice: {FFFFFF}¡Por favor señor, guarde eso!");
        InfoMSG(playerid, 1500, "Para empezar un atraco, dirígite al~n~~b~punto rojo señalado en el mapa.");
 		VirtualTimers[playerid][13] = SetTimerEx("RobContinue", 10000, 0, "idi", playerid, 3, SHOP_UNITY);
 		SetPlayerCheckpoint(playerid, -28.501539, -185.122360, 1003.546875, 1.0);
 		P_No_Message_Atraco[playerid] = 1;
        VirtualTimers[playerid][16] = SetTimerEx("opwc_timer", 1000, true, "i", playerid);
							}
							}
							}
							}
							}
							}
							}
							}
							}
						return 1;
					}
					else
					{
                   SetPlayerPos(playerid, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ]);
					 SetPlayerPosAndFreeze(playerid, Entradas[i][EX], Entradas[i][EY], Entradas[i][EZ], 0);
					}
					return 1;
			    }
			}
			for(new i = 0; i != sizeof(Cajeros); i++)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 1.0, Cajeros[i][0], Cajeros[i][1], Cajeros[i][2]))
			    {
			        if(P_bank_state[playerid] > 0) return 1;
			        ChatLogDisabled[playerid] = true;
			    	loop(0, 11, l)
					{
						TextDrawShowForPlayer(playerid, Bank[l]);
						SendClientMessage(playerid, -1, " ");
					}
					ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1);
					P_bank_state[playerid] = 1;
					if(PlayerInfo[playerid][BankA] == 0) VirtualTimers[playerid][17] = SetTimerEx("BankContinue", 600, false, "id", playerid, 5);
					else BankContinue(playerid, 4); //VirtualTimers[playerid][17] = SetTimerEx("BankContinue", 500, false, "id", playerid, 0);
					return 1;
				}
			}
		}
        if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
        return 1;
   }
	if(newkeys & KEY_CROUCH)
	{
	    if(iPhone_CC[2][playerid] == 1)
	    {
	        ShowPlayerDialog(playerid, DIALOG_MP3, DIALOG_STYLE_INPUT, "Reproducir música", "Inserte el url de la canción:", "Reproducir", "Salir");
	    }
	}
	return 1;
}
stock UpdateCoordinates(playerid, aMenuX, aMenuY)
{
	switch(aMenuX)
	{
	    case 0:
	    {
	        switch(aMenuY)
	        {
	            case 0:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Reloj");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[1][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[1][playerid]);
					return 1;
	            }
	            case 1:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "El tiempo");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[4][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[4][playerid]);
					return 4;
	            }
	            case 2:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Radio");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[7][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[7][playerid]);
					return 7;
	            }
	            case 3:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Llamar");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[10][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[10][playerid]);
					return 10;
	            }
	        }
	    }
	    case 1:
	    {
	        switch(aMenuY)
	        {
	            case 0:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Camara");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[2][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[2][playerid]);
					return 2;
	            }
	            case 1:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Calculadora");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[5][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[5][playerid]);
					return 5;
	            }
	            case 2:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Musica");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[8][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[8][playerid]);
					return 8;
	            }
	            case 3:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Internet");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[11][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[11][playerid]);
					return 11;
	            }
	        }
	    }
	    case 2:
	    {
	        switch(aMenuY)
	        {
	            case 0:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Galeria");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[3][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[3][playerid]);
					return 3;
	            }
	            case 1:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "GPS");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[6][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[6][playerid]);
					return 6;
	            }
	            case 2:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "Mapa");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[9][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[9][playerid]);
					return 9;
	            }
	            case 3:
	            {
	                PlayerTextDrawSetString(playerid, PTD_iPhone[0][playerid], "SMS");
	                loop(1, 13, i)
					{
						PlayerTextDrawColor(playerid, PTD_iPhone[i][playerid], -256);
						PlayerTextDrawShow(playerid, PTD_iPhone[i][playerid]);
					}
	                PlayerTextDrawColor(playerid, PTD_iPhone[12][playerid], -1);
	                PlayerTextDrawShow(playerid, PTD_iPhone[12][playerid]);
					return 12;
	            }
	        }
	    }
	}
	return 0;
}

stock CreatePlayerIphone(playerid)
{
	PTD_iPhone[0][playerid] = CreatePlayerTextDraw(playerid, 550.133544, 233.225967, "Not selected");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[0][playerid], 0.276333, 1.346963);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[0][playerid], 2);
	PlayerTextDrawColor(playerid, PTD_iPhone[0][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[0][playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone[0][playerid], 255);
	PlayerTextDrawFont(playerid, PTD_iPhone[0][playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone[0][playerid], 1);

	PTD_iPhone[1][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 254.681549, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[1][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[1][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[1][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[1][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[1][playerid], 4);

	PTD_iPhone[2][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 254.681549, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[2][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[2][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[2][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[2][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[2][playerid], 4);

	PTD_iPhone[3][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 254.681549, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[3][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[3][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[3][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[3][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[3][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[3][playerid], 4);

	PTD_iPhone[4][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 284.445159, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[4][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[4][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[4][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[4][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[4][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[4][playerid], 4);

	PTD_iPhone[5][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 284.445159, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[5][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[5][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[5][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[5][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[5][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[5][playerid], 4);

	PTD_iPhone[6][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 284.445159, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[6][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[6][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[6][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[6][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[6][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[6][playerid], 4);

	PTD_iPhone[7][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 314.208770, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[7][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[7][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[7][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[7][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[7][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[7][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[7][playerid], 4);

	PTD_iPhone[8][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 314.208770, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[8][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[8][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[8][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[8][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[8][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[8][playerid], 4);

	PTD_iPhone[9][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 314.208770, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[9][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[9][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[9][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[9][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[9][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[9][playerid], 4);

	PTD_iPhone[10][playerid] = CreatePlayerTextDraw(playerid, 516.600280, 348.338378, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[10][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[10][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[10][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[10][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[10][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[10][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[10][playerid], 4);

	PTD_iPhone[11][playerid] = CreatePlayerTextDraw(playerid, 540.866333, 348.338378, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[11][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[11][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[11][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[11][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[11][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[11][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[11][playerid], 4);

	PTD_iPhone[12][playerid] = CreatePlayerTextDraw(playerid, 565.599304, 348.338378, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[12][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[12][playerid], 19.000009, 23.644432);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[12][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[12][playerid], -256);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[12][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[12][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[12][playerid], 4);

	PTD_iPhone[13][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 255.526031, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[13][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[13][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[13][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[13][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[13][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[13][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[13][playerid], 4);

	PTD_iPhone[14][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 255.526031, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[14][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[14][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[14][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[14][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[14][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[14][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[14][playerid], 4);

	PTD_iPhone[15][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 255.526031, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[15][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[15][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[15][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[15][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[15][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[15][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[15][playerid], 4);

	PTD_iPhone[16][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 285.289642, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[16][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[16][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[16][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[16][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[16][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[16][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[16][playerid], 4);

	PTD_iPhone[17][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 285.289642, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[17][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[17][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[17][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[17][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[17][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[17][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[17][playerid], 4);

	PTD_iPhone[18][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 285.289642, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[18][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[18][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[18][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[18][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[18][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[18][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[18][playerid], 4);

	PTD_iPhone[19][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 315.053253, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[19][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[19][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[19][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[19][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[19][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[19][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[19][playerid], 4);

	PTD_iPhone[20][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 315.053253, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[20][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[20][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[20][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[20][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[20][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[20][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[20][playerid], 4);

	PTD_iPhone[21][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 315.053253, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[21][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[21][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[21][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[21][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[21][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[21][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[21][playerid], 4);

	PTD_iPhone[22][playerid] = CreatePlayerTextDraw(playerid, 517.000122, 349.182861, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[22][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[22][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[22][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[22][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[22][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[22][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[22][playerid], 4);

	PTD_iPhone[23][playerid] = CreatePlayerTextDraw(playerid, 541.266174, 349.182861, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[23][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[23][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[23][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[23][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[23][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[23][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[23][playerid], 4);

	PTD_iPhone[24][playerid] = CreatePlayerTextDraw(playerid, 565.999145, 349.182861, "ld_poke:cd1d");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[24][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[24][playerid], 18.333343, 22.399990);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[24][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[24][playerid], 255);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[24][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[24][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[24][playerid], 4);

	PTD_iPhone[25][playerid] = CreatePlayerTextDraw(playerid, 518.700134, 257.085144, "ld_grav:timer");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[25][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[25][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[25][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[25][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[25][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[25][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[25][playerid], 4);

	PTD_iPhone[26][playerid] = CreatePlayerTextDraw(playerid, 543.000000, 258.140777, "hud:radar_gym");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[26][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[26][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[26][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[26][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[26][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[26][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[26][playerid], 4);

	PTD_iPhone[27][playerid] = CreatePlayerTextDraw(playerid, 567.699951, 257.611114, "hud:radar_enemyattack");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[27][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[27][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[27][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[27][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[27][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[27][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[27][playerid], 4);

	PTD_iPhone[28][playerid] = CreatePlayerTextDraw(playerid, 518.500183, 287.118560, "hud:radar_fire");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[28][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[28][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[28][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[28][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[28][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[28][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[28][playerid], 4);

	PTD_iPhone[29][playerid] = CreatePlayerTextDraw(playerid, 542.966796, 287.288879, "hud:radar_modgarage");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[29][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[29][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[29][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[29][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[29][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[29][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[29][playerid], 4);

	PTD_iPhone[30][playerid] = CreatePlayerTextDraw(playerid, 567.633361, 287.359222, "hud:arrow");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[30][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[30][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[30][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[30][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[30][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[30][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[30][playerid], 4);

	PTD_iPhone[31][playerid] = CreatePlayerTextDraw(playerid, 518.900207, 316.781402, "hud:radar_flag");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[31][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[31][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[31][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[31][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[31][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[31][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[31][playerid], 4);

	PTD_iPhone[32][playerid] = CreatePlayerTextDraw(playerid, 542.866943, 317.151763, "hud:radar_datedisco");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[32][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[32][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[32][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[32][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[32][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[32][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[32][playerid], 4);

	PTD_iPhone[33][playerid] = CreatePlayerTextDraw(playerid, 567.500305, 317.007293, "hud:radar_light");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[33][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[33][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[33][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[33][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[33][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[33][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[33][playerid], 4);

	PTD_iPhone[34][playerid] = CreatePlayerTextDraw(playerid, 518.566955, 351.092498, "hud:radar_propertyg");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[34][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[34][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[34][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[34][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[34][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[34][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[34][playerid], 4);

	PTD_iPhone[35][playerid] = CreatePlayerTextDraw(playerid, 543.100280, 351.103698, "hud:radar_locosyndicate");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[35][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[35][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[35][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[35][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[35][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[35][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[35][playerid], 4);

	PTD_iPhone[36][playerid] = CreatePlayerTextDraw(playerid, 567.566833, 351.147979, "hud:radar_propertyr");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone[36][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone[36][playerid], 14.999999, 17.422224);
	PlayerTextDrawAlignment(playerid, PTD_iPhone[36][playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone[36][playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone[36][playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone[36][playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone[36][playerid], 4);

	PTD_iPhone_Gallery[playerid] = CreatePlayerTextDraw(playerid, 511.266784, 249.677749, "loadsc1:loadsc1");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_Gallery[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, PTD_iPhone_Gallery[playerid], 78.666625, 70.518501);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_Gallery[playerid], 1);
	PlayerTextDrawColor(playerid, PTD_iPhone_Gallery[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_Gallery[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_Gallery[playerid], 0);
	PlayerTextDrawFont(playerid, PTD_iPhone_Gallery[playerid], 4);

	PTD_iPhone_GPS[playerid] = CreatePlayerTextDraw(playerid, 548.666931, 266.481384, "Los Santos");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_GPS[playerid], 0.253666, 1.322074);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_GPS[playerid], 2);
	PlayerTextDrawColor(playerid, PTD_iPhone_GPS[playerid], -5963521);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_GPS[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_GPS[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone_GPS[playerid], 255);
	PlayerTextDrawFont(playerid, PTD_iPhone_GPS[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone_GPS[playerid], 1);

	/*PTD_iPhone_Calculator[playerid] = CreatePlayerTextDraw(playerid, 583.899963, 268.370300, "0");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_Calculator[playerid], 0.267999, 1.599999);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_Calculator[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_iPhone_Calculator[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_Calculator[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_Calculator[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone_Calculator[playerid], 51);
	PlayerTextDrawFont(playerid, PTD_iPhone_Calculator[playerid], 2);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone_Calculator[playerid], 1);*/

	PTD_iPhone_Call[playerid] = CreatePlayerTextDraw(playerid, 586.666870, 264.651885, "_");
	PlayerTextDrawLetterSize(playerid, PTD_iPhone_Call[playerid], 0.333332, 1.239110);
	PlayerTextDrawAlignment(playerid, PTD_iPhone_Call[playerid], 3);
	PlayerTextDrawColor(playerid, PTD_iPhone_Call[playerid], -1);
	PlayerTextDrawSetShadow(playerid, PTD_iPhone_Call[playerid], 0);
	PlayerTextDrawSetOutline(playerid, PTD_iPhone_Call[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, PTD_iPhone_Call[playerid], 51);
	PlayerTextDrawFont(playerid, PTD_iPhone_Call[playerid], 1);
	PlayerTextDrawSetProportional(playerid, PTD_iPhone_Call[playerid], 1);


	PTD_iPhone_Info[playerid][0] = CreatePlayerTextDraw(playerid,523.000000, 256.000000, "");
	PlayerTextDrawBackgroundColor(playerid,PTD_iPhone_Info[playerid][0], 255);
	PlayerTextDrawFont(playerid,PTD_iPhone_Info[playerid][0], 1);
	PlayerTextDrawLetterSize(playerid,PTD_iPhone_Info[playerid][0], 0.230000, 0.999999);
	PlayerTextDrawColor(playerid,PTD_iPhone_Info[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid,PTD_iPhone_Info[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid,PTD_iPhone_Info[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_iPhone_Info[playerid][0], 0);

	PTD_iPhone_Info[playerid][1] = CreatePlayerTextDraw(playerid,523.000000, 297.000000, "");
	PlayerTextDrawBackgroundColor(playerid,PTD_iPhone_Info[playerid][1], 255);
	PlayerTextDrawFont(playerid,PTD_iPhone_Info[playerid][1], 2);
	PlayerTextDrawLetterSize(playerid,PTD_iPhone_Info[playerid][1], 0.250000, 1.399999);
	PlayerTextDrawColor(playerid,PTD_iPhone_Info[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,PTD_iPhone_Info[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid,PTD_iPhone_Info[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid,PTD_iPhone_Info[playerid][1], 0);
	return 1;
}

stock DestroyPlayerIphone(playerid)
{
	loop(0, 37, PHONE) PlayerTextDrawDestroy(playerid, PTD_iPhone[PHONE][playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Gallery[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_GPS[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Call[playerid]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Info[playerid][0]);
	PlayerTextDrawDestroy(playerid, PTD_iPhone_Info[playerid][1]);
	return 1;
}


stock SendRadioMessage(member, color, string[], id)
{
	if(member == 1)
	{

		for(new i = 0; i < MAX_PLAYERS; i++)
		{

			if(PlayerInfo[i][Duty] == 1 && i != id)
			{

				if(EstadoRadio[i] == 1)
				{

					SendClientMessage(i, color, string);
				}
			}
		}
	}
	else
	{

		for(new i = 0; i < MAX_PLAYERS; i++)
		{

			if(IsPlayerConnected(i))
			{

				if(PlayerInfo[i][miembro] == member && EstadoRadio[i] == 1 && i != id)
				{

					{

						SendClientMessage(i, color, string);
					}
				}
			}
		}
	}
}

funcion StopEngine(playerid)
{
        new IDAuto = GetPlayerVehicleID(playerid);
        GetVehicleParamsEx(IDAuto,engine, lights, alarm, doors, bonnet, boot, objective);
        SetVehicleParamsEx(IDAuto,VEHICLE_PARAMS_OFF, lights, alarm, doors, bonnet, boot, objective);//deja el engine y las demas cosas apagadas
        GameTextForPlayer(playerid, "~w~motor ~r~apagado",1000,3);
        new str[128]; format(str, sizeof(str), "* %s apaga el motor del vehículo.", PlayerName(playerid));
        SendPlayersMessage(10.0, playerid, 0xBE9BC1FF, str);
        vEngine[IDAuto] = 0;
        SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
        KillTimer(VirtualTimers[playerid][6]);
        VirtualTimers[playerid][6] = -1;
        return 1;
}

funcion StartEngine(playerid)
{
        if(IsPlayerInAnyVehicle(playerid))
        {
                if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
                {
                        new vehicleid = GetPlayerVehicleID(playerid);
                        vEngine[vehicleid] += 25;
                        SetPlayerProgressBarValue(playerid, EngineVeh[playerid], vEngine[vehicleid]);
                        UpdatePlayerProgressBar(playerid, EngineVeh[playerid]);
                        if(vEngine[vehicleid] >= 100)
                        {
                                GetVehicleParamsEx(vehicleid,engine, lights, alarm, doors, bonnet, boot, objective);
                                SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON, lights, alarm, doors, bonnet, boot, objective);
                                GameTextForPlayer(playerid, "~w~motor ~g~encendido",1000,3);

                                new str[128]; format(str, sizeof(str), "* %s arranca el motor del vehículo.", PlayerName(playerid));
                                SendPlayersMessage(10.0, playerid, 0xBE9BC1FF, str);
                                vEngine[vehicleid] = 0;
                                HidePlayerProgressBar(playerid, EngineVeh[playerid]);
                                SetPlayerProgressBarValue(playerid, EngineVeh[playerid], 0);
                                KillTimer(VirtualTimers[playerid][6]);
                                VirtualTimers[playerid][6] = -1;
                                }
                                if(Esuncamionn1(vehicleid))
		{                       {
                                PlayerTextDrawShow(playerid, ErrorCommand[playerid]);
                                if(CamionCargado[vehicleid] == 0) return PlayerTextDrawSetString(playerid, ErrorCommand[playerid], "Ve a la ~r~zonas de cargas");
                        }
                        }
                }
        }
        return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
        return 1;
}

public OnPlayerUpdate(playerid)
{
        return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
        return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
        return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
        return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
        return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    	switch(dialogid)
    {
        case DIALOG_REGISTER:
        {
            if(response)
            {
                new Query[1500], ip[16];
				GetPlayerIp(playerid, ip, sizeof(ip));
                if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Registro", "Dejaste el campo vacío, por favor\ningrese una contraseña", "Reintentar", "Salir");
				if(strlen(inputtext) <= 2 || strlen(inputtext) >= 15) return ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "Registro", "Ha ocurrido un error:\n\n\tLa contraseña debe ser superior a 2 letras\n\te inferior a 16.\n\nVuele a intentarlo.", "Reintentar", "Salir");

                new pName[24], string2[33];
                GetPlayerName(playerid, pName, 24);
                format(string2, sizeof(string2), "%s", inputtext); PlayerInfo[playerid][passtext] = string2;
                format(Query, sizeof(Query), "INSERT INTO `cuenta` (nombre, pass) VALUES ('%s', '%s')",pName, PlayerInfo[playerid][passtext]);
                mysql_function_query(TuberiasMySQL, Query, true, "OnQueryFinish", "ii", 0, playerid);

                PlayerInfo[playerid][edad] = 21; //SaveValue(playerid, "EDAD", PlayerInfo[playerid][edad]);
                PlayerInfo[playerid][skin] = RandomMen[random(sizeof(RandomMen))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
                SetPVarInt(playerid, "pregistro", true);
				ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, "Registro", "A continuación deberás de introducir un correo\nal que usted tenga acceso. En el caso de que pierda\nla contraseña de su cuenta, será enviada a ese correo.\n\n\tPor lo que se recomienda introducir un correo válido.", "Continuar", "");
            }
            else Kick(playerid);
        }
        case DIALOG_LOGIN:
        {
            if(!response)
            {
                Kick(playerid);
            }
            if(strcmp(PlayerInfo[playerid][passtext], inputtext, true, 128) == 0)
            {
                new pName[24], Query[256];
                GetPlayerName(playerid, pName, 24);
                format(Query, sizeof(Query), "SELECT * FROM `cuenta` WHERE `nombre` = '%s'", pName);
                mysql_function_query(TuberiasMySQL, Query, true, "CargarDatos",  "ii", playerid);
                SetCameraBehindPlayer(playerid);
                TogglePlayerSpectating(playerid, false);
                SendClientMessage(playerid, -1,"puts");
                SpawnPlayer(playerid);
                SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
            }
            else
            {
               ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "Montevideo RolePlay", "Ha ocurrido un error\n\n\tLa contraseña es incorrecta.", "Ingresar", "Salir"); }
            }
 case CONTRATO:
			{
			new string[220];
		    if(!response)
			{

      			format(string, sizeof(string), "* %s rechaza el documento de contrato laboral.", NombreOOC(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
   				Contrato2[playerid] = "Desempleado"; Contrato1[playerid] = 0;
			}
		    if(response){
			    format(string, sizeof(string), "¡Felicidades! Ahora, usted trabaja en la organización '%s'.",Contrato2[playerid]);
		        SendClientMessage(playerid, -1, string);
		        PlayerInfo[playerid][miembro] = Contrato1[playerid];
		        PlayerInfo[playerid][rango] = 1;
		        format(string, sizeof(string), "* %s toma con su diestra el bolígrafo, acto seguido firma el documento de contrato laboral, aceptándolo.", NombreOOC(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
   				Contrato2[playerid] = "Desempleado"; Contrato1[playerid] = 0;
  			}
		}
    case DIALOG_EMAIL:
        {
            if(response)
            {
                if(strfind(inputtext, "@", true) != -1 && strfind(inputtext, ".", true) != -1)
                                {
                if(!EmailAvaliable(inputtext)) return ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, " ", "Este EMAIL ya está en uso\n\nPor favor inténtelo de nuevo con un correo alternativo\n\n\t¡Gracias!", "Continuar", "Salir");
                new str[128];
                format(str, 128, "/eXtremeROL/emails/%s.ini", inputtext);
                new File:femail = fopen(str, io_write);
                new str2[64];
                format(str2, 64, "%s\r\n\r\nSistema de email de Sheedow City", PlayerNameNormal(playerid));
                fwrite(femail, str2);
                fclose(femail);
                SelectTextDraw(playerid, -1);
                loop(0, 10, l) TextDrawShowForPlayer(playerid, TD_ST[l]);
                PlayerTextDrawShow(playerid, PTD_ST[playerid][0]);
                PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  PlayerNameNormal(playerid));
				PlayerTextDrawShow(playerid, PTD_ST[playerid][1]);
				P_register_step[playerid] = 0;
				P_newuser[playerid] = 11;
                TogglePlayerSpectating(playerid, true);

                                }
                                else ShowPlayerDialog(playerid, DIALOG_EMAIL, DIALOG_STYLE_INPUT, " ", "{FFFFFF}El EMAIL introducido no es correcto\n\n{FF0000}Formato:\n\t{FFFFFF}ejemplo@ejemplo.com\n\n\n{FFFFFF}Vuelva a intentarlo", "Continuar", "Salir");
                        }
            else Kick(playerid);
        }
         case DIALOG_GROTTI:
        {
            if(response)
            {
				if(PlayerInfo[playerid][PlayerVehicleKey][0] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
				    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[0][0], VehicleGrottiSpawns[0][1], VehicleGrottiSpawns[0][2], VehicleGrottiSpawns[0][3], 1, 1, 0, playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~a recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
					return 1;
				}
				if(PlayerInfo[playerid][PlayerVehicleKey][1] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
                    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[1][0], VehicleGrottiSpawns[1][1], VehicleGrottiSpawns[1][2], VehicleGrottiSpawns[1][3], 1, 1, 1, playerid);
					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~a recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
				    return 1;
				}
				if(PlayerInfo[playerid][PlayerVehicleKey][2] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
				    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[2][0], VehicleGrottiSpawns[2][1], VehicleGrottiSpawns[2][2], VehicleGrottiSpawns[2][3], 1, 1, 2, playerid);

					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~a recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
				    return 1;
				}
				if(PlayerInfo[playerid][PlayerVehicleKey][3] == -1)
				{
					new modelid = GetVehicleModelGrotti(P_catalogogrotti[playerid]);
					new money = GetVehiclePriceGrotti(P_catalogogrotti[playerid]);
				    CreatePersonalCar(playerid, modelid, VehicleGrottiSpawns[3][0], VehicleGrottiSpawns[3][1], VehicleGrottiSpawns[3][2], VehicleGrottiSpawns[3][3], 1, 1, 3, playerid);

					SetCameraBehindPlayer(playerid);
					SetPlayerPos(playerid, 546.407897, -1309.471191, 1996.575927);
				    TogglePlayerControllable(playerid, true);
					P_catalogogrotti[playerid] = -1;
					ChatLogDisabled[playerid] = false;
					loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
					PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
					InfoMSG(playerid, 10000, "Vehículo comprado, puedes ir al punto ~r~rojo ~w~ recogerlo.");
					PlayerPlaySound(playerid,1058,0.0,0.0,0.0);
					PlayerInfo[playerid][dinerobank] -= money;
					//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
					ShowBankCash(playerid, 2000);
					SetPlayerCheckpoint(playerid, 1751.54309, -2054.41772, 13.52704, 1.0);
					CancelSelectTextDraw(playerid);
				    return 1;
				}
				InfoMSG(playerid, 3000, "No puedes tener más de 4 vehículos.");
				SelectTextDraw(playerid, -1);
            }
            else SelectTextDraw(playerid, -1);
        }
        	case CAMIOND:
		{

			if(!response) { TogglePlayerControllable(playerid, 1); SetPVarInt(playerid, "IsFrozen", 1);}
			{

				switch(listitem)
				{

					case 0:
					{

						new punto = random(3);
						switch (punto)
						{

							case 0:
							{

								SetPVarInt(playerid, "Camionero", 0);
								GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
								ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
								Cargas[playerid] = SetTimerEx("Legal",1000,true,"d",playerid);
							}
							case 1:
							{

							SetPVarInt(playerid, "Camionero", 0);
								GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
								ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
								Cargas[playerid] = SetTimerEx("Legal2",1000,true,"d",playerid);
							}
							case 2:
							{

							SetPVarInt(playerid, "Camionero", 0);
							GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
							ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
							Cargas[playerid] = SetTimerEx("Legal6",1000,true,"d",playerid);
							}
						}
						return 1;
					}
					case 1:
					{

						new punto = random(4);
						switch (punto)
						{

							case 0:
							{

                               SetPVarInt(playerid, "Camionero", 0);
								GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
								ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
								Cargas[playerid] = SetTimerEx("Legal3",1000,true,"d",playerid);
							}
							case 1:
							{

								SetPVarInt(playerid, "Camionero", 0);
								GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
								ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
								Cargas[playerid] = SetTimerEx("Legal4",1000,true,"d",playerid);
							}
							case 2:
							{

							SetPVarInt(playerid, "Camionero", 0);
							GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
							ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
							Cargas[playerid] = SetTimerEx("Legal5",1000,true,"d",playerid);
							}
						}
						return 1;
					}
					case 2:
					{

						new punto = random(2);
						switch (punto)
						{

							case 0:
							{
                           SetPVarInt(playerid, "Camionero", 0);
							GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
							ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
							Cargas[playerid] = SetTimerEx("Ilegal1",1000,true,"d",playerid);
							}
							case 1:
							{
                             SetPVarInt(playerid, "Camionero", 0);
							GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
							ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
							Cargas[playerid] = SetTimerEx("Ilegal2",1000,true,"d",playerid);
							}
						}
						return 1;
					}
					case 3:
					{

						new punto = random(2);
						switch (punto)
						{

							case 0:
							{
                          SetPVarInt(playerid, "Camionero", 0);
							GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
							ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
							Cargas[playerid] = SetTimerEx("Ilegal3",1000,true,"d",playerid);
       }
       case 1:
							{
                            SetPVarInt(playerid, "Camionero", 0);
							GameTextForPlayer(playerid, "~w~Cargando Camion...", 4000, 3);
							ShowPlayerProgressBar(playerid, EngineVeh[playerid]);
							Cargas[playerid] = SetTimerEx("Ilegal4",1000,true,"d",playerid);
							}
						}
						return 1;
					}
				}
			}
		}
        case Renunciar_Taxi:
        {
        if(response)
			{
			new string[120];
			if(PlayerInfo[playerid][job] == 7)
			{
		    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Su renuncia esta echa señor");
		    PlayerInfo[playerid][job] = 0;
            format(string, sizeof(string), "* %s toma con su diestra el bolígrafo, acto seguido firma el documento la renuncia laboral", NombreOOC(playerid));
		    ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				}
		    else if(PlayerInfo[playerid][job] != 0 && PlayerInfo[playerid][vipjob] == 0 && PlayerInfo[playerid][vip] == 1)
			{
        	PlayerInfo[playerid][vipjob] = 0;
  			}
  			}
  			}
        case Unirse_Taxi:
        {
		new string[120];
              if(!response)
			{

      			format(string, sizeof(string), "* %s rechaza el documento de contrato laboral.", NombreOOC(playerid));
   				ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
			}
		    if(response)
			{
			if(PlayerInfo[playerid][job] == 0)
			{
		    SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Felicidades usted trabaja en la empresa de taxi de los santos");
		    PlayerInfo[playerid][job] = 7;
            format(string, sizeof(string), "* %s toma con su diestra el bolígrafo, acto seguido firma el documento de contrato laboral, aceptándolo.", NombreOOC(playerid));
		    ProxDetector(30.0, playerid, string, COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES,COLOR_ACCIONES);
				}
		    else if(PlayerInfo[playerid][job] != 0 && PlayerInfo[playerid][vipjob] == 0 && PlayerInfo[playerid][vip] == 1)
			{
        	PlayerInfo[playerid][vipjob] = 7;
  			}
  			}
   }
     case Dialog_TaxiM:
        {
             if(response)
            {
                switch(listitem)
                {
                case 0://unirme
                {
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Gracias por decirnos tu motivo");
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Tu sueldo minimo sera de $50 por dia");
                VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 0);
                }
                 case 1://unirme
                {
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Gracias por decirnos tu motivo");
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Tu sueldo minimo sera de $50 por dia");
                VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 0);
                }
                 case 2://unirme
                {
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Gracias por decirnos tu motivo");
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Tu sueldo minimo sera de $50 por dia");
                VirtualTimers[playerid][12] = SetTimerEx("FirstConversation2", 3000, false, "id", playerid, 0);
                }
                }
				}
				}
        case Dialog_Taxi:
        {
             if(response)
            {
                switch(listitem)
                {
                case 0://unirme
                {
               	if(PlayerInfo[playerid][job] == 0)
		     	{
                DeleteChatForPlayer(playerid, 32, remove);
                ChatLogDisabled[playerid] = true;
                SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Por fabor dinos tu motivo por cual te unes a nuestra empresa");
                ShowPlayerDialog(playerid, Dialog_TaxiM, DIALOG_STYLE_LIST, "Motivos", "Soy nuevo en la ciudad\nDesmpleado\nMe gusta trabajar de taxista", "Continuar", "Cancelar");
                }
                else if(PlayerInfo[playerid][job] == 7)
		     	{
		     	   SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Usted ya trabaja aqui");
				}
				}
				case 1://informacion
				{
				new string[120];
				format(string, sizeof(string), "Requisitos:\nNinguno, cualquiera puede serlo\n\n");
				format(string, sizeof(string), "%sInformación:\nEste es un trabajo de transporte, en el cual deberás\n",string);
				format(string, sizeof(string), "%stransportar a las personas que soliciten un taxi\n",string);
				format(string, sizeof(string), "%sEste trabajo es totalmente legal.\n",string);
				ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Taxista", string, "Aceptar","");
				}
				case 2://renunciar
				{
				 SendClientMessage(playerid, -1, "{CCCCCC}Empleado dice: {FFFFFF}Esta Seguro que quiere renunciar");
			  ShowPlayerDialog(playerid, Renunciar_Taxi, DIALOG_STYLE_MSGBOX, "Trabajo de taxi", "Deseas renunciar al trabajo de taxi", "Aceptar","Cancelar");
				}
                }
                }
                }
         case DIALOG_BOL:
        {
            if(response)
            {
                switch(listitem)
                {
                    case 10: return MostrarBolsillos(playerid);
                    case 0..9:
                    {
                        new bol = listitem+1;
                        if(BolsilloID[playerid][bol] == 0)
					    {
					        SendClientMessage(playerid, -1, "No tienes nada en ese bolsillo.");
					        MostrarBolsillos(playerid);
					        return 1;
					    }

                        if(BolsilloID[playerid][11] == 0)
					    {
					        BolsilloID[playerid][11] = BolsilloID[playerid][bol];
					        BolsilloID[playerid][bol] = 0;
							MostrarBolsillos(playerid);
							SendClientMessageEx(playerid, -1, "Sacaste tu {FFFF00}%s {FFFFFF}y fue colocado en la mano derecha.", Objetos_Bolsillo[BolsilloID[playerid][11]][iname]);
					    }
					    else if(BolsilloID[playerid][12] == 0)
					    {
					        BolsilloID[playerid][12] = BolsilloID[playerid][bol];
					        BolsilloID[playerid][bol] = 0;
							MostrarBolsillos(playerid);
							SendClientMessageEx(playerid, -1, "Sacaste tu {FFFF00}%s {FFFFFF}y fue colocado en la mano izquierda.", Objetos_Bolsillo[BolsilloID[playerid][12]][iname]);
					    }
					    else
						{
							SendClientMessage(playerid, -1, "Debes de tener alguna mano desocupada.");
							MostrarBolsillos(playerid);
							return 1;
						}
                    }
                    case 11, 12:
                    {
                    	if(BolsilloID[playerid][listitem] == 0)
					    {
					        SendClientMessage(playerid, -1, "No tienes nada en esa mano.");
					        MostrarBolsillos(playerid);
					        return 1;
					    }

					    for(new i = 1; i < 11; i++)
				        {
				            if(BolsilloID[playerid][i] == 0)
				            {
				        		BolsilloID[playerid][i] = BolsilloID[playerid][listitem];
				        		BolsilloID[playerid][listitem] = 0;
								SendClientMessageEx(playerid, -1, "Tu {FFFF00}%s {FFFFFF}fue guardado en el bolsillo {FFFF00}%d.", Objetos_Bolsillo[BolsilloID[playerid][i]][iname], i);

								MostrarBolsillos(playerid);
								return 1;
							}
				        }
				        SendClientMessageEx(playerid, -1, "No tienes ningún bolsillo vacío para guardar tu {FFFF00}%s.", Objetos_Bolsillo[BolsilloID[playerid][listitem]][iname]);
		          		MostrarBolsillos(playerid);
                    }
                }
            }
        }
        case DIALOG_BANCO:
        {
            if(response)
            {
                if(PlayerInfo[playerid][BankA] == 0)
                {
                    switch(listitem)
                    {
						case 0:
						{
						    if(50 > PlayerInfo[playerid][dinero]) return SendClientMessage(playerid, -1, "Necesitas un depósito mínimo de {FFFF00}$50 {FFFFFF}para crearte una cuenta bancaria.");
						    SendClientMessage(playerid, -1, "Acabas de crearte una cuenta bancaria, ya puedes beneficiarte de sus privilegios. {FFFF00}Se han necesitado $50 para un depósito mínimo.");
						    PlayerInfo[playerid][dinero] -= 50;
						    PlayerInfo[playerid][dinerobank] += 50;
						    PlayerInfo[playerid][bankt] = random(99999);
						    SendClientMessageEx(playerid, -1, "Tu número de cuenta es {FFFF00}%d", PlayerInfo[playerid][bankt]);
						    PlayerInfo[playerid][BankA] = 1;
						    ResetPlayerMoney(playerid);
							GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
							//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
							//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
						}
						default: ShowPlayerDialog(playerid, DIALOG_BANCO, DIALOG_STYLE_LIST, "Banco Los Santos", "{FFFFFF}Crear cuenta bancaria\n{CCCCCC}Retirar\n{CCCCCC}Depositar\n{CCCCCC}Transferir", "Continuar", "Cancelar");
                    }
                }
                else
                {
                    switch(listitem)
                    {
                        case 0:
						{
						    new str[128];
							format(str, 128, "Balance actual: $%d\n\t¿Cuánto quiere retirar?\n", PlayerInfo[playerid][dinerobank]);
							ShowPlayerDialog(playerid, DIALOG_RETIRAR2, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", str, "Retirar", "Cancelar");
						}
						case 1:
						{
						    new str[128];
							format(str, 128, "Balance actual: $%d\n\t¿Cuánto quiere depositar?\n", PlayerInfo[playerid][dinerobank]);
							ShowPlayerDialog(playerid, DIALOG_DEPOSIT2, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", str, "Depositar", "Cancelar");
						}
						case 2:
						{
						    new str[128];
							format(str, 128, "Balance actual: $%d\n\tIndique el número de cuenta bancaria\n\tpara transferir el dinero.\n", PlayerInfo[playerid][dinerobank]);
							ShowPlayerDialog(playerid, DIALOG_TRANSFERIR, DIALOG_STYLE_INPUT, "BANCO LS - TRANSFERIR", str, "Siguiente", "Cancelar");
						}
                    }
                }
            }
        }
        case DIALOG_TRANSFERIR:
        {
            if(response)
            {
    			if(sscanf(inputtext, "d", inputtext[0])) return SendClientMessage(playerid, -1, "Error.");
    			if(inputtext[0] == playerid)  return SendClientMessage(playerid, -1, "Error.");

    			foreach(new i : Player)
    			{
    			    if(i != playerid)
    			    {
    			        if(PlayerInfo[playerid][BankA] != 0)
						{
	    			        if(PlayerInfo[i][bankt] == inputtext[0])
	    			        {
	    			            P_transid[playerid] = i;
	    			            new str[128];
								format(str, 128, "Balance actual: $%d\n\tCuanto dinero quiere transferir a:\n\t%s-%d.\n", PlayerInfo[playerid][dinerobank], PlayerName(i), inputtext[0]);
	                            ShowPlayerDialog(playerid, DIALOG_TRANSFERIR+1, DIALOG_STYLE_INPUT, "BANCO LS - TRANSFERIR", str, "Transferir", "Cancelar");
	    			            return 1;
	    			        }
						}
    			    }
    			}
    			SendClientMessage(playerid, -1, "El número de cuenta epecificado no corresponde con ningún jugador.");
            }
        }
        case DIALOG_TRANSFERIR+1:
        {
            if(response)
            {
                if(sscanf(inputtext, "d", inputtext[0]))
				{
					SendClientMessage(playerid, -1, "Cantidad incorrecta.");
					P_transid[playerid] = -1;
					return 1;
				}
				if(!IsPlayerConnected(P_transid[playerid]))
				{
				    SendClientMessage(playerid, -1, "El jugador se ha ido.");
				    P_transid[playerid] = -1;
				}
				if(0 >= inputtext[0])
				{
					SendClientMessage(playerid, -1, "Cantidad incorrecta.");
					P_transid[playerid] = -1;
					return 1;
				}
				if(inputtext[0] > PlayerInfo[playerid][dinerobank])
				{
					SendClientMessage(playerid, -1, "No tienes ese dinero.");
					P_transid[playerid] = -1;
					return 1;
				}
				PlayerInfo[playerid][dinerobank] -= inputtext[0];
                PlayerInfo[P_transid[playerid]][dinerobank] += inputtext[0];
                SendClientMessageEx(playerid, -1, "Has transferido {FFFF00}$%d {FFFFFF}a {FFFF00}%d (%s)", inputtext[0], PlayerInfo[P_transid[playerid]][bankt], PlayerName(P_transid[playerid]));
                SendClientMessageEx(P_transid[playerid], -1, "Has recibido una tranferencia de {FFFF00}$%d {FFFFFF}de {FFFF00}%d (%s)", inputtext[0], PlayerInfo[playerid][bankt], PlayerName(playerid));
                P_transid[playerid] = -1;
            }
            else
            {
                P_transid[playerid] = -1;
                SendClientMessage(playerid, -1, "Operación cancelada.");
            }
		}
        case DIALOG_RETIRAR2:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_RETIRAR2, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				if(money > PlayerInfo[playerid][dinerobank] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_RETIRAR2, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				PlayerInfo[playerid][dinerobank] -= money;
				PlayerInfo[playerid][dinero] += money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
				ShowBankCash(playerid, 2000);
			}
        }
            case DIALOG_RETIRAR:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_RETIRAR, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				if(money > PlayerInfo[playerid][dinerobank] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_RETIRAR, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "Cantidad incorrecta\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
				PlayerInfo[playerid][dinerobank] -= money;
				PlayerInfo[playerid][dinero] += money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				new str[128];
			    format(str, 128, "Balance actual: $%d", PlayerInfo[playerid][dinerobank]);
			    PlayerTextDrawSetString(playerid, PlayerBank[playerid][0], str);

			    TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
			    PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
            }
            else
            {
                TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
            }
        }
        case DIALOG_DEPOSIT:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				if(money > PlayerInfo[playerid][dinero] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				PlayerInfo[playerid][dinerobank] += money;
				PlayerInfo[playerid][dinero] -= money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);

				new str[128];
			    format(str, 128, "Balance actual: $%d", PlayerInfo[playerid][dinerobank]);
			    PlayerTextDrawSetString(playerid, PlayerBank[playerid][0], str);

			    TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
			    PlayerPlaySound(playerid, 45400, 0.0, 0.0, 0.0);
            }
            else
            {
                TextDrawShowForPlayer(playerid, Bank[15]);
			    TextDrawShowForPlayer(playerid, Bank[16]);
			    TextDrawShowForPlayer(playerid, Bank[17]);
			    TextDrawShowForPlayer(playerid, Bank[18]);
			    TextDrawShowForPlayer(playerid, Bank[19]);
            }
        }
        case DIALOG_DEPOSIT2:
        {
            if(response)
            {
				new money;
                if(sscanf(inputtext, "d", money)) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT2, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				if(money > PlayerInfo[playerid][dinero] || money <= 0) return ShowPlayerDialog(playerid, DIALOG_DEPOSIT2, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "Cantidad incorrecta\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
				PlayerInfo[playerid][dinerobank] += money;
				PlayerInfo[playerid][dinero] -= money;
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINEROBANK", PlayerInfo[playerid][dinerobank]);
				ShowBankCash(playerid, 2000);
            }
        }
                  case TRABAJOS:
		{
            new string[800];
			if(response)
			{
				switch(listitem)
				{
						case 0:  // Informacion general
					{


						new mensaje[250];
						mensaje="Hay muchos trabajos disponibles para que te ganes la vida.\nElige el que más te guste y comienza a trabajar.\n\nPara tener dos trabajos a la vez, necesitas cuenta VIP2.\n(Mas información en la web: http://omegazone.sytes.net)";
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre los trabajos", mensaje, "Aceptar","");
						return 1;
					}
					case 1:  // Medico
					{


						format(string, sizeof(string), "Requerimentos:\nNivel 2.");
						format(string, sizeof(string),"%s\nComandos:\n",string);
						format(string, sizeof(string), "%s /reanimar - /subir - /medico (detrás de la ambulancia)\n",string);
						format(string, sizeof(string), "%s\n Informacion:\n",string);
						format(string, sizeof(string), "%s Tu trabajo es curar a los jugadores que llaman al servicio médico, debes ir a su posición y reanimarlos\n",string);
						format(string, sizeof(string), "%s luego llevarlos hasta el hospital y si llegas a tiempo se te dará una recompensa por salvarlo.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Médico", string, "Aceptar","");
						return 1;
					}
					case 2:  // Taxista
					{


						format(string, sizeof(string), "Requisitos:\nNinguno, cualquiera puede serlo\n\n");
						format(string, sizeof(string), "%sInformación:\nEste es un trabajo de transporte, en el cual deberás\n",string);
						format(string, sizeof(string), "%stransportar a las personas que soliciten un taxi\n",string);
						format(string, sizeof(string), "%sEste trabajo es totalmente legal.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Taxista", string, "Aceptar","");
						return 1;
					}
					case 3:  // Guardaespalda
					{


						format(string, sizeof(string),"Comandos:\n");
						format(string, sizeof(string), "%s /cubrir\n",string);
						format(string, sizeof(string), "%s\n Informacion:\n",string);
						format(string, sizeof(string), "%s Este trabajo consiste simplemente en vender a los demás jugadores chalecos de protección.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Guardaespalda", string, "Aceptar","");
						return 1;
					}
					case 4:  // Camionero
					{


						format(string, sizeof(string),"Comandos:\n");
						format(string, sizeof(string), "%s /cargar camion - /abandonar carga\n",string);
						format(string, sizeof(string), "%s\n Información:\n",string);
						format(string, sizeof(string), "%s Tu trabajo es transportar diferentes tipos de cargas por toda la ciudad\n",string);
						format(string, sizeof(string), "%s y por esto serás recompensado con dinero y distintos beneficios.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Camionero", string, "Aceptar","");
						return 1;
					}
					case 5:  // Policia
					{


						format(string, sizeof(string), "{FFFFFF}Para ser policía tienen que llenar un curriculum (( en el foro )).");
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Policía", string, "Aceptar","");
						return 1;
					}
					case 6:  // Armero
					{


						if(PlayerInfo[playerid][job] != 2 && PlayerInfo[playerid][vipjob] != 2)
						{


							format(string, sizeof(string),"Comandos:\n");
							format(string, sizeof(string), "%s/crear - /comprar materiales\n",string);
							format(string, sizeof(string), "%s\n Información:\n",string);
							format(string, sizeof(string), "%s Tu trabajo es el tráfico de armas, tanto la creación como la venta, para crear armas necesitaras\n",string);
							format(string, sizeof(string), "%s materiales los cuales podrás comprar en distintas posiciones de todo San Andreas, o ganarlos\n",string);
							format(string, sizeof(string), "%s en algunos trabajos ilegales..\n",string);
							ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo de Fabricante de armas", string, "Aceptar","");
							return 1;
						}
						else if(PlayerInfo[playerid][job] == 2 || PlayerInfo[playerid][vipjob] == 2)
						{


							new string2[900];
							format(string2, sizeof(string2),"Parar crear armas usa /crear [nombre-de-arma]:\n\n");
							format(string2, sizeof(string2), "%s Listado de armas:\n",string2);
							format(string2, sizeof(string2), "%s Pistola 9mm (9mm) | Piezas: 10 - Nivel 1\n",string2);
							format(string2, sizeof(string2), "%s Pistola 9mm con silenciador(9mm-silenciada) | Piezas: 12 - Nivel 1\n",string2);
							format(string2, sizeof(string2), "%s Escopeta | Piezas: 20 - Nivel 2\n",string2);
							format(string2, sizeof(string2), "%s Desert Eagle (desert-eagle) | Piezas: 36 - Nivel 3\n",string2);
							format(string2, sizeof(string2), "%s MP5 | Piezas: 58 - Nivel 4\n",string2);
							format(string2, sizeof(string2), "%s AK-47 | Piezas: 82 - Nivel 5\n",string2);
							format(string2, sizeof(string2), "%s M4 | Piezas: 96 - Nivel 5\n",string2);
							format(string2, sizeof(string2), "%s Rifle | Piezas: 52 - Nivel 6\n",string2);
							format(string2, sizeof(string2), "%s Escopeta de combate (escopeta-de-combate) | Piezas: 136 - Nivel 7\n",string2);
							format(string2, sizeof(string2), "%s Granada | Piezas: 156 - Nivel 8\n",string2);
							format(string2, sizeof(string2), "%s \nPara vender armas usa /vender [nombre-del-arma] [id/nombre] [precio]",string2);
							ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo de Fabricante de armas", string2, "Aceptar","");
							return 1;
						}
					}
					case 7:  // Mecanico
					{


						format(string, sizeof(string), "Requisitos:\n3 horas de juego\n\n");
						format(string, sizeof(string), "%sInformación:\nEn este trabajo únicamente debes arreglar el motor de los vehículos\n",string);
						format(string, sizeof(string), "%ses necesario tener repuestos para hacer esto (los cuales se compran en el galpón del trabajo)\n",string);
						format(string, sizeof(string), "%sEste trabajo es totalmente legal.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Mecánico", string, "Aceptar","");
						return 1;
					}
					case 8:  // Cosechador
					{


						format(string, sizeof(string), "Requisitos:\nNinguno, cualquiera puede serlo\n\n");
						format(string, sizeof(string), "%sInformacion:\nEste trabajo consiste en cosechar para una granja\n",string);
						format(string, sizeof(string), "%sSolo debes subirte en una cosechadora y empieza a cosechar para la granja\n",string);
						format(string, sizeof(string), "%sPodrás ganar dinero + crack o dinero + pala o tal vez solo dinero, varia.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Cosechador", string, "Aceptar","");
						return 1;
					}
					case 9:  // Basurero
					{


						format(string, sizeof(string), "El trabajo de basurero no requiere nivel mínimo, solo tener 3 horas de juego.\n\n");
						format(string, sizeof(string), "%sInformacion:\nEste trabajo consiste recolectar basura por toda la ciudad\n",string);
						format(string, sizeof(string), "%sSolo debes subirte en un camión de basura con un compañero\n",string);
						format(string, sizeof(string), "%sRecolectar la basura con tu compañero, luego entregar el camión y tendrás tu paga.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Basurero", string, "Aceptar","");
						return 1;
					}
					case 10:  // Transportista
					{


						format(string, sizeof(string), "Requisitos:\nNivel 3 de camionero.\n\n");
						format(string, sizeof(string), "%sInformacion:\nEste trabajo consiste en abastecer las grandes y pequeñas empresas de toda la ciudad, con distintos tipos de materiales necesarios\n",string);
						format(string, sizeof(string), "%sEn este trabajo puedes utilizar tu propio camión (DFT-30)\n",string);
						format(string, sizeof(string), "%sPara comenzar a trabajar sólo debes tener tu teléfono encendido y te llamaran solicitando tus servicios.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Transportista", string, "Aceptar","");
						return 1;
					}
					case 11:  // Ladron
					{


						format(string, sizeof(string), "Requisitos:.\nNecesitas ser nivel 5 o VIP para forzar una cerradura\nNecesitar ser nivel 2 o VIP para robar objetos\n");
						format(string, sizeof(string), "%sInformación:\nEste trabajo consiste robar y vender objetos\n",string);
						format(string, sizeof(string), "%sEn las diferentes propiedades de robo que hay en las ciudades\n",string);
						format(string, sizeof(string), "%sEste trabajo es ilegal y puedes ir a la cárcel por esto.\n",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Ladrón", string, "Aceptar","");
						return 1;
					}
					case 12:  // Minero
					{
						format(string, sizeof(string), "{FFFFFF}El trabajo de minero se consigue en una oficina ubicada en Bone Country, Las Venturas.\n");
						format(string, sizeof(string), "%sA medida que aumentes de nivel, podrás trabajar en diferentes rocas (más cercanas) ganando así más dinero.",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Minero", string, "Aceptar","");
						return 1;
					}
					case 13:  // Pescador
					{
						new string2[900];
						format(string2, sizeof(string2),"{FFFFFF}El trabajo de pescador se consigue en {009BE4}Ocean Docks{FFFFFF}, puedes encontrarlo fácilmente en el GPS.\n\"",string);
						ShowPlayerDialog(playerid, INFOJOB, DIALOG_STYLE_MSGBOX, "Ayuda sobre el trabajo Pescador", string2, "Aceptar","");
						}
 			}
 			  return 1;
        }
        }
     case Dialog_Comandos:
	{
		if(response)
		{
			   switch(listitem)
				{
				    case 0:
					{
		  	ShowPlayerDefaultDialog1(playerid);//chat
 			}
 			 case 1:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//general
 			}
    	    case 2:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//lider
 			}
		    case 3:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//trabajo
 			}
            case 4:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//telefono
 			}
		    case 5:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//casa
 			}
	        case 6:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//coche
 			}
           case 7:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//premium
 			}
		    case 8:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//matrimonio
 			}
			 case 9:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//arma
 			}
    	   case 10:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//familia
 			}
           case 11:
		    {
		  	Mostrarfaccionmenu(playerid);//faccion
 			}
 			case 12:
		    {
		  	ShowPlayerDefaultDialog7(playerid);//pesca
 			}
 			}
 			  return 1;
        }
        }
        case DIALOG_ESPETOS:
        {
            if(response)
            {
                new Float:ivida;
                GetPlayerHealth(playerid, ivida);
                switch(listitem)
                {
                    case 0:
                    {
                                                if(GoodMoney(playerid, 5))
                                                {
                                                        SetPlayerHealth(playerid, ivida + 0.5);
                                                        GivePlayerMoney(playerid, -5);
                                                        SendClientMessage(playerid, -1, "Dependiente dice: Gracias por su compra, ¡vuelva pronto!");
                                                }
                                                else SendClientMessage(playerid, -1, "No tienes dinero suficiente para comprarlo");
                    }
                    case 1:
                    {
                                                if(GoodMoney(playerid, 7))
                                                {
                                                        SetPlayerHealth(playerid, ivida + 1.0);
                                                        GivePlayerMoney(playerid, -7);
                                                        SendClientMessage(playerid, -1, "Dependiente dice: Gracias por su compra, ¡vuelva pronto!");
                                                }
                                                else SendClientMessage(playerid, -1, "No tienes dinero suficiente para comprarlo");
                    }
                    case 2:
                    {
                                                if(GoodMoney(playerid, 7))
                                                {
                                                        SetPlayerHealth(playerid, ivida + 0.8);
                                                        GivePlayerMoney(playerid, -7);
                                                        SendClientMessage(playerid, -1, "Dependiente dice: Gracias por su compra, ¡vuelva pronto!");
                                                }
                                                else SendClientMessage(playerid, -1, "No tienes dinero suficiente para comprarlo");
                    }
                    case 3:
                    {
                                                if(GoodMoney(playerid, 10))
                                                {
                                                        SetPlayerHealth(playerid, ivida + 1.5);
                                                        GivePlayerMoney(playerid, -10);
                                                        SendClientMessage(playerid, -1, "Dependiente dice: Gracias por su compra, ¡vuelva pronto!");
                                                }
                                                else SendClientMessage(playerid, -1, "No tienes dinero suficiente para comprarlo");
                    }
                }
            }
        }
        case DIALOG_DUDAS:
        {
            if(response)
            {
                new str[128];
                format(str, 128, "%s", DudeMsg[playerid]);
                        new tiempo_ms = 1 * 60000;
                                DudeTime[playerid] = GetTickCount() + tiempo_ms;
                                EnviarDuda(playerid, str);
            }
        }
        }
        return 1;
}


public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{

if(playertextid == LTPolice4[playerid]){ new string[180];
format(string,sizeof(string),"{FFFFFF}Ingrese la ID del nuevo sospechoso\n\nEJ: 3");
ShowPlayerDialog(playerid, LTPoliceNS, DIALOG_STYLE_INPUT, "{FFFFFF}Ingresar", string , "Ingresar", "Cancelar"); HideLTPolice(playerid);}

if(playertextid == LTPolice3[playerid])
{
new string[180];
SendClientMessage(playerid, -1, "> Sospechosos más buscados <");
for(new i=0; i < MAX_PLAYERS; i++)
{
if(PlayerInfo[i][Cargos] == 1){                HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> {0000FF}[Búsqueda]:{FFFFFF} 1", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Cargos] == 2){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> {0000FF}[Búsqueda]:{FFFFFF} 2", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Cargos] == 3){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> {0000FF}[Búsqueda]:{FFFFFF} 3", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Cargos] == 4){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> {0000FF}[Búsqueda]:{FFFFFF} 4", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Cargos] == 5){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> {0000FF}[Búsqueda]:{FFFFFF} 5", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Cargos] == 6){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> {0000FF}[Búsqueda]:{FFFFFF} 6", PlayerName(i)); Message(playerid, 0x0000FF, string);}
}}

if(playertextid == LTPolice5[playerid])
{
for(new i=0; i < MAX_PLAYERS; i++)
{
new string[180];
if(PlayerInfo[i][Duty] == 1){         HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <>",  PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
else if(PlayerInfo[i][Duty] == 1){    HideLTPolice(playerid); format(string, sizeof(string), "  {0000FF}[Nombre]:{FFFFFF} %s <> ", PlayerName(i)); Message(playerid, 0x0000FF, string);}
}}
    if(playertextid == Conceptos[5][playerid])
    {
                new step = GetPVarInt(playerid, "newuser");
        if(step == 18)
        {
            StopAudioStreamForPlayer(playerid);
            RemovePlayerAttachedObject(playerid, 0);
               SpawnPlayer(playerid);
            SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
            SetPlayerPos(playerid,1509.156860, -1739.629028, 13.546875);
            for(new i = 0; i < sizeof(Conceptos); i++) PlayerTextDrawHide(playerid, Conceptos[i][playerid]);
	        CancelSelectTextDraw(playerid);
		    SetCameraBehindPlayer(playerid);
			PlayerInfo[playerid][dinero] = 1000;
			ResetPlayerMoney(playerid);
			GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
			SendClientMessage(playerid, -1, "Ya estás preparado para comenzar a jugar en {008C00}New Clan");
            SendClientMessage(playerid, -1, "Para ayudarte a rolear, imagina las cosas que harías tu ante las situaciones reales");
			SendClientMessage(playerid, -1, "Usa el comando {FFFF00}/ayuda {FFFFFF} para mostrar un menú de ayuda.");
			SendClientMessage(playerid, -1, "{58ACFA}¡Importante! {FFFFFF}No desperdicies el dinero que te hemos dado, usa el comando {58ACFA}/empezar {FFFFFF}si quieres empezar bien.");
            DeletePVar(playerid, "newuser");
            TogglePlayerSpectating(playerid, false);
            loop(1, 4, l) TextDrawHideForPlayer(playerid, TD_ST[l]);
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][Conexion] = 1;
            PlayerInfo[playerid][Registrado] = 0;
            SpawnPlayer(playerid);
            SetPlayerFacingAngle(playerid, 180);
            SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
            SetPlayerPos(playerid,1715.2516, -1910.1731, 13.3746);
            return 1;
        }
        if(step == 9) ShowConceptPage(playerid, 2); //PG
        else if(step == 10) ShowConceptPage(playerid, 3); //MG
        else if(step == 11) ShowConceptPage(playerid, 4); //RK
        else if(step == 12) ShowConceptPage(playerid, 5); //BH
        else if(step == 13) ShowConceptPage(playerid, 6); //CJ
        else if(step == 14) ShowConceptPage(playerid, 7); //OOC
        else if(step == 15) ShowConceptPage(playerid, 8); //IC
        else if(step == 16) ShowConceptPage(playerid, 9); //IHQ
        else if(step == 17) ShowConceptPage(playerid, 10); //ZZ
    }
    if(playertextid == Conceptos[4][playerid])
    {
        new step = GetPVarInt(playerid, "newuser");
                if(step == 9) return 1;
        if(step == 10) ShowConceptPage(playerid, 1); //DM
        else if(step == 11) ShowConceptPage(playerid, 2); //PG
        else if(step == 12) ShowConceptPage(playerid, 3); //MG
        else if(step == 13) ShowConceptPage(playerid, 4); //RK
        else if(step == 14) ShowConceptPage(playerid, 5); //BH
        else if(step == 15) ShowConceptPage(playerid, 6); //CJ
        else if(step == 16) ShowConceptPage(playerid, 7); //OOC
        else if(step == 17) ShowConceptPage(playerid, 8); //IC
        else if(step == 18) ShowConceptPage(playerid, 9); //IHQ
    }
    return 1;
}


funcion TogglePlayerControllableFunc(playerid, bool:controllable)
{
        return (controllable) ? (TogglePlayerControllable(playerid, true)) : (TogglePlayerControllable(playerid, false));
}

funcion KickPlayer(playerid) return Kick(playerid);
funcion BanPlayer(playerid) return Ban(playerid);

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{

 if(P_catalogogrotti2[playerid] == 1)
	    {
	        KillTimer(VirtualTimers[playerid][16]);
	        SetCameraBehindPlayer(playerid);
	        TogglePlayerControllable(playerid, true);
			P_catalogogrotti2[playerid] = -1;
			P_catalogogrotti[playerid] = -1;
			ChatLogDisabled[playerid] = false;
			loop(0, 9, i) TextDrawHideForPlayer(playerid, TD_GrottiCatalogo[i]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][1]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][2]);
			PlayerTextDrawHide(playerid, PTD_GrottiCatalogo[playerid][3]);
			CancelSelectTextDraw(playerid);
	    }
		if(P_circularmenu_active[playerid] == 1)
		{
		    loop(0, 24, a) TextDrawHideForPlayer(playerid, CircularMenu[a]);
		    CancelSelectTextDraw(playerid);
		   	P_circularmenu_active[playerid] = -1;
		   	ShowBankCash(playerid, -1);
		}
			if(LaptoMenu[playerid] == 1)
		{
		    HideLTPolice(playerid);
		    CancelSelectTextDraw(playerid);
		   	LaptoMenu[playerid] = -1;
		}
  	if(P_bank_state[playerid] == 1)
		{
		    loop(0, 20, l) TextDrawHideForPlayer(playerid, Bank[l]);
      		PlayerTextDrawHide(playerid, PlayerBank[playerid][0]);
        	PlayerTextDrawHide(playerid, PlayerBank[playerid][1]);
		    P_bank_state[playerid] = -1;
			KillTimer(VirtualTimers[playerid][17]);
			ChatLogDisabled[playerid] = false;
			ShowBankCash(playerid, 2000);
		}
if(clickedid == TD_Ropa[2]) // <<
    {
        if(P_catalogobinco[playerid] != -1)
        {
	        PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogobinco[playerid] == 1) P_catalogobinco[playerid] = (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleBinco)-1) : (sizeof(ClotheMaleBinco)-1));
	        else P_catalogobinco[playerid] -= 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0])));
	        return 1;
		}
		if(P_catalogozip[playerid] != -1)
		{
		    PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogozip[playerid] == 1) P_catalogozip[playerid] = (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleZip)-1) : (sizeof(ClotheMaleZip)-1));
	        else P_catalogozip[playerid] -= 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0])));
		}
    }
    if(clickedid == TD_Ropa[3]) // $$
    {
        if(P_catalogobinco[playerid] != -1)
		{
	        if( (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])) > PlayerInfo[playerid][dinero])
			{
				InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
			}
			else
			{
			    CancelSelectTextDraw(playerid);
	            PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
			    PlayerInfo[playerid][dinero] -= (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1]));
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			    PlayerInfo[playerid][skin] = (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0]));
			    //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
			    SetPlayerVirtualWorld(playerid, 0);
	            SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				P_catalogobinco[playerid] = -1;
				ChatLogDisabled[playerid] = false;
				loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_Ropa[i]);
				PlayerTextDrawHide(playerid, PTD_Ropa[playerid]);
				ToysInfo[playerid][pToy][0] = 0; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				ToysInfo[playerid][pToy][1] = 0; //SaveValue(playerid, "PTOY1", ToysInfo[playerid][pToy][1]);
				ToysInfo[playerid][pToy][2] = 0; //SaveValue(playerid, "PTOY2", ToysInfo[playerid][pToy][2]);
			}
			}
			return 1;
		}
     	if(P_catalogozip[playerid] != -1)
		{
		    if( (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])) > PlayerInfo[playerid][dinero])
			{
				InfoMSG(playerid, 3000, "No tienes suficiente dinero. (bolsillo)");
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
			}
			else
			{
			    CancelSelectTextDraw(playerid);
	            PlayerPlaySound(playerid,1149,0.0,0.0,0.0);
			    PlayerInfo[playerid][dinero] -= (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1]));
				ResetPlayerMoney(playerid);
				GivePlayerMoney(playerid, PlayerInfo[playerid][dinero]);
				//SaveValue(playerid, "DINERO", PlayerInfo[playerid][dinero]);
			    PlayerInfo[playerid][skin] = (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0]));
			    //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
			    SetPlayerVirtualWorld(playerid, 0);
	            SetCameraBehindPlayer(playerid);
				TogglePlayerControllable(playerid, true);
				P_catalogobinco[playerid] = -1;
				ChatLogDisabled[playerid] = false;
				loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_Ropa[i]);
				PlayerTextDrawHide(playerid, PTD_Ropa[playerid]);
				ToysInfo[playerid][pToy][0] = 0; //SaveValue(playerid, "PTOY0", ToysInfo[playerid][pToy][0]);
				ToysInfo[playerid][pToy][1] = 0; //SaveValue(playerid, "PTOY1", ToysInfo[playerid][pToy][1]);
				ToysInfo[playerid][pToy][2] = 0; //SaveValue(playerid, "PTOY2", ToysInfo[playerid][pToy][2]);
			}
			return 1;
		}
		if(clickedid == TD_Ropa[4]) // >>
    {
        if(P_catalogobinco[playerid] != -1)
		{
	        PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogobinco[playerid] == (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleBinco)-1) : (sizeof(ClotheMaleBinco)-1))) P_catalogobinco[playerid] = 1;
	        else P_catalogobinco[playerid] += 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][1]) : (ClotheMaleBinco[P_catalogobinco[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleBinco[P_catalogobinco[playerid]][0]) : (ClotheMaleBinco[P_catalogobinco[playerid]][0])));
	        return 1;
		}
        if(P_catalogozip[playerid] != -1)
		{
		    PlayerPlaySound(playerid,1054,0.0,0.0,0.0);
	        if(P_catalogozip[playerid] == (PlayerInfo[playerid][sexo] ? (sizeof(ClotheFemaleZip)-1) : (sizeof(ClotheMaleZip)-1))) P_catalogozip[playerid] = 1;
	        else P_catalogozip[playerid] += 1;
	        new str[24];
			format(str, 24, "$%d", (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][1]) : (ClotheMaleZip[P_catalogozip[playerid]][1])));
			PlayerTextDrawSetString(playerid, PTD_Ropa[playerid], str);
	        SetPlayerSkin(playerid, (PlayerInfo[playerid][sexo] ? (ClotheFemaleZip[P_catalogozip[playerid]][0]) : (ClotheMaleZip[P_catalogozip[playerid]][0])));
		}
    }
    	if(P_catalogobinco[playerid] >= 1 || P_catalogozip[playerid] >= 1)
		{
			SetPlayerVirtualWorld(playerid, 0);
            SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, true);
			P_catalogobinco[playerid] = -1;
			P_catalogozip[playerid] = -1;
			ChatLogDisabled[playerid] = false;
			loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_Ropa[i]);
			PlayerTextDrawHide(playerid, PTD_Ropa[playerid]);
			SetPlayerSkin(playerid, PlayerInfo[playerid][skin]);
			ColocarToys(playerid);
		}
 if(clickedid == Bank[16]) // Retirar
    {
  		TextDrawHideForPlayer(playerid, Bank[15]);
	    TextDrawHideForPlayer(playerid, Bank[16]);
	    TextDrawHideForPlayer(playerid, Bank[17]);
	    TextDrawHideForPlayer(playerid, Bank[18]);
	    TextDrawHideForPlayer(playerid, Bank[19]);
    	ShowPlayerDialog(playerid, DIALOG_RETIRAR, DIALOG_STYLE_INPUT, "BANCO LS - RETIRAR", "\n\t¿Cuánto quiere retirar?\n", "Retirar", "Cancelar");
    	return 1;
    }
    if(clickedid == Bank[17]) // Depositar
    {
		TextDrawHideForPlayer(playerid, Bank[15]);
	    TextDrawHideForPlayer(playerid, Bank[16]);
	    TextDrawHideForPlayer(playerid, Bank[17]);
	    TextDrawHideForPlayer(playerid, Bank[18]);
	    TextDrawHideForPlayer(playerid, Bank[19]);
        ShowPlayerDialog(playerid, DIALOG_DEPOSIT, DIALOG_STYLE_INPUT, "BANCO LS - DEPOSITAR", "\n\t¿Cuánto quiere depositar?\n", "Depositar", "Cancelar");
        return 1;
    }
    if(clickedid == Bank[18]) // Salir
    {
        loop(0, 20, l) TextDrawHideForPlayer(playerid, Bank[l]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][0]);
        PlayerTextDrawHide(playerid, PlayerBank[playerid][1]);
    	P_bank_state[playerid] = -1;
    	CancelSelectTextDraw(playerid);
    	ChatLogDisabled[playerid] = false;
    	ShowBankCash(playerid, 2000);
    	return 1;
    }
 if(clickedid == TD_GrottiCatalogo[7]) // >>>
    {
        ShowPlayerDialog( playerid, -1, DIALOG_STYLE_MSGBOX, "_", "_", "_", "");
        switch(P_catalogogrotti[playerid])
        {
            case 0:
            {
                InterpolateCameraPos(playerid, 521.6366, -1307.1511, 1999.2629, 529.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 521.6366, -1296.1511, 1996.7765, 529.1366, -1296.6511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Turismo");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$350.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 576.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 562.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 1;

            }
            case 1:
            {
                InterpolateCameraPos(playerid, 529.1366, -1307.1511, 1999.2629, 536.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 529.1366, -1296.6511, 1996.7765, 536.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Banshee");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$190.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 555.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 2;
			
            }
            case 2:
            {
                InterpolateCameraPos(playerid, 536.6366, -1307.1511, 1999.2629, 544.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 536.6366, -1297.1511, 1996.7765, 544.1366, -1298.1511, 1997.2629, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Infernus");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$450.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 580.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 3;
                
            }
            case 3:
            {
                InterpolateCameraPos(playerid, 544.1366, -1307.1511, 1999.2629, 551.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 544.1366, -1298.1511, 1997.2629, 551.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Bullet");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$260.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 4;
            }
            case 4:
            {
                InterpolateCameraPos(playerid, 551.6366, -1307.1511, 1999.2629, 559.1479, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 551.6366, -1297.1511, 1996.7765, 559.1479, -1296.5100, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Cheetah");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$420.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 5;
            }
            case 5:
            {
                InterpolateCameraPos(playerid, 559.1479, -1307.1511, 1999.2629, 566.6479, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 559.1479, -1296.5100, 1996.7765, 566.6479, -1296.0100, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Phoenix");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$80.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 540.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 535.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 6;
            }
        }
        return 1;
    }
	if(clickedid == TD_GrottiCatalogo[8]) // <<<
	{
	    ShowPlayerDialog( playerid, -1, DIALOG_STYLE_MSGBOX, "_", "_", "_", "");
 		switch(P_catalogogrotti[playerid])
        {
            case 1:
            {
                InterpolateCameraPos(playerid, 529.1366, -1307.1511, 1999.2629, 521.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 529.1366, -1296.6511, 1996.7765, 521.6366, -1296.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Supergt");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$300.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 572.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 568.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 0;
            }
            case 2:
            {
                InterpolateCameraPos(playerid, 536.6366, -1307.1511, 1999.2629, 529.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 536.6366, -1297.1511, 1996.7765, 529.1366, -1296.6511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Turismo");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$350.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 576.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 562.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 1;
            }
            case 3:
            {
                InterpolateCameraPos(playerid, 544.1366, -1307.1511, 1999.2629, 536.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 544.1366, -1298.1511, 1997.2629, 536.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Banshee");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$190.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 555.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 2;
            }
            case 4:
            {
                InterpolateCameraPos(playerid, 551.6366, -1307.1511, 1999.2629, 544.1366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 551.6366, -1297.1511, 1996.7765, 544.1366, -1298.1511, 1997.2629, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Infernus");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$450.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 580.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 3;
            }
            case 5:
            {
                InterpolateCameraPos(playerid, 559.1479, -1307.1511, 1999.2629, 551.6366, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 559.1479, -1296.5100, 1996.7765, 551.6366, -1297.1511, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Bullet");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$260.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 565.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 4;
            }
            case 6:
            {
                InterpolateCameraPos(playerid, 566.6479, -1307.1511, 1999.2629, 559.1479, -1307.1511, 1999.2629, 1000);
				InterpolateCameraLookAt(playerid, 566.6479, -1296.0100, 1996.7765, 559.1479, -1296.5100, 1996.7765, 1000);
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][0], "Cheetah");
                PlayerTextDrawSetString(playerid, PTD_GrottiCatalogo[playerid][1], "$420.000");
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][2], 575.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][2]);
                PlayerTextDrawTextSize(playerid, PTD_GrottiCatalogo[playerid][3], 570.0, 0.000000);
                PlayerTextDrawShow(playerid, PTD_GrottiCatalogo[playerid][3]);
                P_catalogogrotti[playerid] = 5;
            }
        }
		return 1;
	}
	if(clickedid == TD_GrottiCatalogo[6])
	{
	    switch(P_catalogogrotti[playerid])
	    {
	        case 0:
	        {
			    if(300000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
                ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Super GT", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $300.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 1:
	        {
			    if(350000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Turismo", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $350.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 2:
	        {
			    if(190000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Banshee", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $190.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 3:
	        {
			    if(450000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Infernus", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $450.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 4:
	        {
			    if(260000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Bullet", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $260.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 5:
	        {
			    if(420000 > PlayerInfo[playerid][dinerobank])
				{
					InfoMSG(playerid, 3000, "No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Cheetah", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $420.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
			case 6:
	        {
			    if(80000 > PlayerInfo[playerid][dinerobank])
				{
           InfoMSG(playerid, 3000,"No tienes suficiente dinero. (banco)");
					PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
					return 1;
				}
				ShowPlayerDialog(playerid, DIALOG_GROTTI, DIALOG_STYLE_MSGBOX, "Phoenix", "Puedes comprar este vehículo.\n\n\t¿Quieres adquirir este vehiculo por $80.000?\n\nGrotti SL.", "Comprar", "Cancelar");
			}
		}
	}
        /*
		SUPERGT      		230.0 					26.0 --- $300mil
		TURISMO      		240.0 					30.0 --- $350mil
		BANSHEE      		200.0 					33.0 --- $190mil
		INFERNUS     		240.0 					30.0 --- $450mil
		BULLET       		230.0 					30.0 --- $260mil
		CHEETAH      		230.0 					30.0 --- $420mil
		PHOENIX      		200.0 					26.0 --- $80mil
	*/
 if(clickedid == TD_ST[5]) // IZQ 2
    {
        PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
    	switch(P_register_step[playerid])
		{
		    case 0: //Nombre
		    {
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "edad");
		        new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  str);
				P_register_step[playerid] = 2;
				return 1;
		    }
		    case 1: //Género
		    {
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "nombre");
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  PlayerNameNormal(playerid));
				P_register_step[playerid] = 0;
				return 1;
		    }
		    case 2: //Edad
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  simbolos("género"));
		        if(PlayerInfo[playerid][sexo] == 0) PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "masculino");
		        else PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "femenino");
				P_register_step[playerid] = 1;
				return 1;
		    }
		}
        return 1;
    }
    if(clickedid == TD_ST[6]) // IZQ 1
    {
        switch(P_register_step[playerid])
		{
		    case 0: return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    case 1:
			{
				if(PlayerInfo[playerid][sexo] == 1)
				{
				    PlayerInfo[playerid][skin] = RandomMen[random(sizeof(RandomMen))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 0; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "masculino");
				    PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
				    SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
				}
				else
				{
				    PlayerInfo[playerid][skin] = RandomWoman[random(sizeof(RandomWoman))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 1; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "femenino");
				    PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
				    SetSpawnInfo(playerid, NO_TEAM, PlayerInfo[playerid][skin], 1172.856201, -1323.368774, 15.399730, 0, 0, 0, 0, 0, 0, 0);
				}
			}
			case 2:
			{
			    if(PlayerInfo[playerid][edad] == 21) return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			  	PlayerInfo[playerid][edad]--; //SaveValue(playerid, "EDAD", PlayerInfo[playerid][edad]);
				new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], str);
				PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
			}
		}
        return 1;
    }
    if(clickedid == TD_ST[7]) // DER 1
    {
		switch(P_register_step[playerid])
		{
		    case 0: return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
		    case 1:
		    {
		        if(PlayerInfo[playerid][sexo] == 1)
				{
				    PlayerInfo[playerid][skin] = RandomMen[random(sizeof(RandomMen))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 0; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "masculino");
				    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
				}
				else
				{
				    PlayerInfo[playerid][skin] = RandomWoman[random(sizeof(RandomWoman))]; //SaveValue(playerid, "SKIN", PlayerInfo[playerid][skin]);
				    PlayerInfo[playerid][sexo] = 1; //SaveValue(playerid, "SEXO", PlayerInfo[playerid][sexo]);
				    PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], "femenino");
				    PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
				}
		    }
		    case 2:
		    {
		        if(PlayerInfo[playerid][edad] == 40) return PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
				PlayerInfo[playerid][edad]++;
				//SaveValue(playerid, "EDAD", PlayerInfo[playerid][edad]);
				new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
				PlayerTextDrawSetString(playerid, PTD_ST[playerid][1], str);
				PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
				return 1;
		    }
		}
        return 1;
    }
    if(clickedid == TD_ST[8]) // DER 2
    {
        PlayerPlaySound(playerid,1053,0.0,0.0,0.0);
    	switch(P_register_step[playerid])
		{
		    case 0: //Nombre
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  simbolos("género"));
		        if(PlayerInfo[playerid][sexo] == 0) PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "masculino");
		        else PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  "femenino");
				P_register_step[playerid] = 1;
				return 1;
		    }
		    case 1: //Género
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "edad");
		        new str[5];
				format(str, 5, "%d", PlayerInfo[playerid][edad]);
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  str);
				P_register_step[playerid] = 2;
				return 1;
		    }
		    case 2: //Edad
		    {
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][0],  "nombre");
		        PlayerTextDrawSetString(playerid, PTD_ST[playerid][1],  PlayerNameNormal(playerid));
				P_register_step[playerid] = 0;
				return 1;
		    }
		}
        return 1;
    }
    if(clickedid == TD_ST[9])
    {
        /*
        CancelSelectTextDraw(playerid);
	    new str[500];
        format(str, 500, "\n\tNombre: %s\n\tEdad: %d\n\tGénero: %d\n\tCorreo: %s\n\n{00CCFF}¿Son correctos?", PlayerNameNormal(playerid), PlayerInfo[playerid][edad], PlayerInfo[playerid][sexo], PlayerInfo[playerid][email]);
        ShowPlayerDialog(playerid, DIALOG_CONFIRME, DIALOG_STYLE_MSGBOX, "Estos son tus datos", str, "Sí", "No");
        */
        loop(0, 6, pd) TextDrawShowForPlayer(playerid, TD_PLAYERDATA[pd]);
		new string[145];
		format(string, 145, "%s~n~~n~%d~n~~n~%s~n~~n~_", PlayerName(playerid), PlayerInfo[playerid][edad], PlayerInfo[playerid][sexo] == 0 ? ("Masculino"):("Femenino"));
        PlayerTextDrawSetString(playerid, PTD_PD[playerid], string);
        PlayerTextDrawShow(playerid, PTD_PD[playerid]);
        loop(4, 10, id) TextDrawHideForPlayer(playerid, TD_ST[id]);
        PlayerTextDrawHide(playerid, PTD_ST[playerid][0]);
        PlayerTextDrawHide(playerid, PTD_ST[playerid][1]);
        return 1;
    }

    if(clickedid == TD_PLAYERDATA[3])
    {
        PlayerTextDrawHide(playerid, PTD_PD[playerid]);
        loop(0, 6, i) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[i]);
       	PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OP");
        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OnPlayer~n~Quiere decir En el personaje~n~lo cual significa que es cuando se rolea~n~Ejemplo: \"Buenos días, señor\" ~n~~n~Los canales OP son: /s /g /me /do"));
        for(new i = 0; i < 15; i++) SendClientMessage(playerid, -1, " ");
        for(new i = 0; i < sizeof(Conceptos); i++) PlayerTextDrawShow(playerid, Conceptos[i][playerid]);
        SetPVarInt(playerid, "newuser", 9);
        SelectTextDraw(playerid, 0x33AA33AA);
        return 1;
    }

    if(clickedid == TD_PLAYERDATA[2])
    {
    	loop(0, 6, pd) TextDrawHideForPlayer(playerid, TD_PLAYERDATA[pd]);
        PlayerTextDrawHide(playerid, PTD_PD[playerid]);
        loop(4, 10, id) TextDrawShowForPlayer(playerid, TD_ST[id]);
        PlayerTextDrawShow(playerid, PTD_ST[playerid][0]);
        PlayerTextDrawShow(playerid, PTD_ST[playerid][1]);
    }
    if(GetPVarInt(playerid, "newuser") == 1)
        {
                if(clickedid == Text:INVALID_TEXT_DRAW) SelectTextDraw(playerid, 0x33AA33AA); //ESC
            if(clickedid == StartDraw[4])
            {
                        if(PlayerInfo[playerid][sexo] == 0)
                        {
                            PlayerInfo[playerid][sexo] = 1;
                            SetPlayerSkin(playerid, 192);
                            PlayerTextDrawSetString(playerid, PlayerStartDraw[0][playerid], "MUJER");
                        }
                        else if(PlayerInfo[playerid][sexo] == 1)
                        {
                            PlayerInfo[playerid][sexo] = 0;
                            SetPlayerSkin(playerid, 60);
                            PlayerTextDrawSetString(playerid, PlayerStartDraw[0][playerid], "HOMBRE");
                        }
            }
            if(clickedid == StartDraw[5])
            {
                        if(PlayerInfo[playerid][sexo] == 0)
                        {
                            PlayerInfo[playerid][sexo] = 1;
                            SetPlayerSkin(playerid, 192);
                            PlayerTextDrawSetString(playerid, PlayerStartDraw[0][playerid], "MUJER");
                        }
                        else if(PlayerInfo[playerid][sexo] == 1)
                        {
                            PlayerInfo[playerid][sexo] = 0;
                            SetPlayerSkin(playerid, 60);
                            PlayerTextDrawSetString(playerid, PlayerStartDraw[0][playerid], "HOMBRE");
                        }
            }
            if(clickedid == StartDraw[7])
            {
                        if(PlayerInfo[playerid][edad] == 18) return 1;
                        PlayerInfo[playerid][edad] --;
                        new str[3];
                        format(str, 3, "%d", PlayerInfo[playerid][edad]);
                        PlayerTextDrawSetString(playerid, PlayerStartDraw[1][playerid], str);
            }
            if(clickedid == StartDraw[8])
            {
                        if(PlayerInfo[playerid][edad] == 45) return 1;
                        PlayerInfo[playerid][edad] ++;
                        new str[3];
                        format(str, 3, "%d", PlayerInfo[playerid][edad]);
                        PlayerTextDrawSetString(playerid, PlayerStartDraw[1][playerid], str);
            }
            if(clickedid == StartDraw[10])
            {
                        if(PlayerInfo[playerid][origen] == 0)
                        {
                                PlayerTextDrawSetString(playerid, PlayerStartDraw[2][playerid], "AMERICA");
                                PlayerInfo[playerid][origen] = 2;
                        }
                        else if(PlayerInfo[playerid][origen] == 1)
                        {
                                PlayerTextDrawSetString(playerid, PlayerStartDraw[2][playerid], "EUROPA");
                                PlayerInfo[playerid][origen] = 0;
                        }
                        else if(PlayerInfo[playerid][origen] == 2)
                        {
                                PlayerTextDrawSetString(playerid, PlayerStartDraw[2][playerid], "ASIA");
                                PlayerInfo[playerid][origen] = 1;
                        }
            }
            if(clickedid == StartDraw[11])
            {
                        if(PlayerInfo[playerid][origen] == 0)
                        {
                                PlayerTextDrawSetString(playerid, PlayerStartDraw[2][playerid], "ASIA");
                                PlayerInfo[playerid][origen] = 1;
                        }
                        else if(PlayerInfo[playerid][origen] == 1)
                        {
                                PlayerTextDrawSetString(playerid, PlayerStartDraw[2][playerid], "AMERICA");
                                PlayerInfo[playerid][origen] = 2;
                        }
                        else if(PlayerInfo[playerid][origen] == 2)
                        {
                                PlayerTextDrawSetString(playerid, PlayerStartDraw[2][playerid], "EUROPA");
                                PlayerInfo[playerid][origen] = 0;
                        }
            }
            if(clickedid == StartDraw[12])
            {
                    TextDrawHideForPlayer(playerid, StartDraw[0]);
                        TextDrawHideForPlayer(playerid, StartDraw[1]);
                        TextDrawHideForPlayer(playerid, StartDraw[2]);
                        TextDrawHideForPlayer(playerid, StartDraw[3]);
                        TextDrawHideForPlayer(playerid, StartDraw[4]);
                        TextDrawHideForPlayer(playerid, StartDraw[5]);
                        TextDrawHideForPlayer(playerid, StartDraw[6]);
                        TextDrawHideForPlayer(playerid, StartDraw[7]);
                        TextDrawHideForPlayer(playerid, StartDraw[8]);
                        TextDrawHideForPlayer(playerid, StartDraw[9]);
                        TextDrawHideForPlayer(playerid, StartDraw[10]);
                        TextDrawHideForPlayer(playerid, StartDraw[11]);
                        TextDrawHideForPlayer(playerid, StartDraw[12]);

                        PlayerTextDrawHide(playerid, PlayerStartDraw[0][playerid]);
                        PlayerTextDrawHide(playerid, PlayerStartDraw[1][playerid]);
                        PlayerTextDrawHide(playerid, PlayerStartDraw[2][playerid]);

                TogglePlayerControllable(playerid,0);
                ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
                        ApplyAnimation(playerid, "ped", "SEAT_down", 4.000000, 0, 0, 0, 1, 0);
                        CancelSelectTextDraw(playerid);
                        SetPVarInt(playerid, "newuser", 2);
                        SendClientMessage(playerid, -1, "{008C00}[Altavoz]{FFFFFF} Señores pasajeros, en breve aterizaremos en el aereopuerto de Los Santos");
            SendClientMessage(playerid, -1, "por favor sigan con el cinturón de seguridad hasta previo aviso, Gracias.");
            VirtualTimers[playerid][4] = SetTimerEx("AirportForPlayer", 10000, false, "id", playerid);
            }
            return 1;
        }
        	if(iPhoneStatus[playerid] == 3)
        {
            if(iPhoneCallStatus[playerid] == 0)
            {
	            iPhoneCallStatus[playerid] = 0;
	      		PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
	      		called[playerid] = "";
		        iPhoneStatus[playerid] = 2;
		        HideIphoneMenu(playerid);
		        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
		        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
			}
        }
          if(clickedid == TD_iPhone_Call[1])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "1");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[2])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "2");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[3])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "3");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[4])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "4");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[5])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "5");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[6])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "6");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[7])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "7");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[8])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "8");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[9])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "9");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[10])
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
	    strcat(called[playerid], "0");
	    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], called[playerid]);
	    return 1;
	}
	if(clickedid == TD_iPhone_Call[11]) //Call
	{
	    CancelSelectTextDraw(playerid);
     	loop(0, sizeof(TD_iPhone_Call), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone_Call[PHONE]);
     	TextDrawShowForPlayer(playerid, TD_iPhone_CallYesNo[0]);
		TextDrawShowForPlayer(playerid, TD_iPhone_CallYesNo[1]);
     	iPhoneCallStatus[playerid] = 1;
     	new c;
		new ph = strval(called[playerid]);
		if(PlayerInfo[playerid][movil] == 0)
	    {
	        if(ph == 333)
	        {
	            PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
	            iPhoneCallStatus[playerid] = 5;
	            PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][0], "Estableciendo~n~llamada...");
			    PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][1], "MyPhone");
			    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][0]);
			    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][1]);
			    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
			    VirtualTimers[playerid][20] = SetTimerEx("ActivarIPHONE", 3000, 0, "i", playerid);
	            return 1;
	        }
	        PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
	        iPhoneCallStatus[playerid] = 0;
      	//	PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
      		called[playerid] = "";
	        iPhoneStatus[playerid] = 2;
	        HideIphoneMenu(playerid);
	        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
			SendClientMessage(playerid, -1, "Necesitas activar tu tarjeta para empezar a usarla, llama al {00CCFF}333 {FFFFFF}para activarla.");
			return 1;
	    }
  if(ph == 911)
	        {
	           	iPhoneCallStatus[playerid] = 0;
		    iPhoneStatus[playerid] = 0;
	        loop(0, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(playerid, TD_iPhone[PHONE]);
		    loop(0, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(playerid, PTD_iPhone[PPHONE][playerid]);
		    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
	     	TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[0]);
			TextDrawHideForPlayer(playerid, TD_iPhone_CallYesNo[1]);
	        PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][0]);
			PlayerTextDrawHide(playerid, PTD_iPhone_Info[playerid][1]);
		    PlayerTextDrawSetString(playerid, PTD_iPhone_Call[playerid], "_");
		    called[playerid] = "";
		    callto[playerid] = 0;
		    iPhone_CC[0][playerid] = 0;
			iPhone_CC[1][playerid] = 0;
			iPhone_CC[2][playerid] = 0;
			    SendClientMessage(playerid, IC1, "[OPERADORA] Departamentos de Los Angeles, ¿en qué puedo ayudarle?");
		        SendClientMessage(playerid, -1, "Opciones: Policia - Emergencias");
	            LlamadaMovil[playerid] = 911;
		    return 1;
		}
		foreach(new i : Player)
		{
            if(playerid != i)
    		{
				if(PlayerInfo[i][movil] == ph)
				{
			        if(iPhoneCallStatus[i] > 0)
			        {
			            PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
               			iPhoneCallStatus[playerid] = 0;
			      		//PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
			      		called[playerid] = "";
				        iPhoneStatus[playerid] = 2;
				        HideIphoneMenu(playerid);
				        PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][1], "_");
				        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
				        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
						SendClientMessage(playerid, -1, "El número al que has llamado está ocupado.");
						return 1;
			        }
			        if(iPhoneStatus[i] == 3) HideIphoneMenu(i);

				    iPhoneCallStatus[playerid] = 4;
				    iPhoneCallStatus[i] = 2;

				    callto[playerid] = i;
				    callto[i] = playerid;

				    c = 1;
				    PlayerPlaySound(i, 20600, 0.0, 0.0, 0.0);
				    PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][0], "Estableciendo~n~llamada...");
				    new Rate[24];

				    format(Rate, 24, "%d", PlayerInfo[i][movil]);
				    PlayerTextDrawSetString(playerid, PTD_iPhone_Info[playerid][1], Rate);
				    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][0]);
				    PlayerTextDrawShow(playerid, PTD_iPhone_Info[playerid][1]);
				    PlayerTextDrawHide(playerid, PTD_iPhone_Call[playerid]);
				    TextDrawShowForPlayer(i, TD_iPhone_CallYesNo[0]);
				    TextDrawShowForPlayer(i, TD_iPhone_CallYesNo[1]);

				    TextDrawHideForPlayer(i, TD_iPhone[25]);
				    loop(0, 19, PHONE) TextDrawShowForPlayer(i, TD_iPhone[PHONE]);

				    loop(19, sizeof(TD_iPhone), PHONE) TextDrawHideForPlayer(i, TD_iPhone[PHONE]);
					loop(1, sizeof(PTD_iPhone), PPHONE) PlayerTextDrawHide(i, PTD_iPhone[PPHONE][i]);

				    TextDrawShowForPlayer(i, TD_iPhone[22]);
				    TextDrawShowForPlayer(i, TD_iPhone[23]);
				    TextDrawShowForPlayer(i, TD_iPhone[24]);

				    PlayerTextDrawSetString(i, PTD_iPhone_Info[i][0], "Llamada~n~entrante...");


				    format(Rate, 24, "%d", PlayerInfo[playerid][movil]);
				    PlayerTextDrawSetString(i, PTD_iPhone_Info[i][1], Rate);
				    PlayerTextDrawShow(i, PTD_iPhone_Info[i][0]);
				    PlayerTextDrawShow(i, PTD_iPhone_Info[i][1]);
                    PlayerTextDrawSetString(i, PTD_iPhone[0][i], "Llamar");
			        PlayerTextDrawShow(i, PTD_iPhone[0][i]);
			        PlayerPlaySound(playerid, 3600, 0.0, 0.0, 0.0);
					break;
				}
			}
		}
		if(c == 0)
		{
		    iPhoneCallStatus[playerid] = 0;
      		PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
      		called[playerid] = "";
	        iPhoneStatus[playerid] = 2;
	        HideIphoneMenu(playerid);
	        TextDrawShowForPlayer(playerid, TD_iPhone[25]);
	        loop(1, 37, PPHONE) PlayerTextDrawShow(playerid, PTD_iPhone[PPHONE][playerid]);
	        PlayerPlaySound(playerid,1085,0.0,0.0,0.0);
			SendClientMessage(playerid, -1, "El número marcado no existe o esta fuera de cobertura.");
		}
	}
	if(clickedid == TD_iPhone_Call[12]) //Delete
	{
	    PlayerPlaySound(playerid, 17803, 0.0, 0.0, 0.0);
        new size = strlen(called[playerid]);
		if(size == 1) strdel(called[playerid],0,1),PlayerTextDrawSetString(playerid,PTD_iPhone_Call[playerid],"_");
		else strdel(called[playerid],size-1,size), PlayerTextDrawSetString(playerid,PTD_iPhone_Call[playerid],called[playerid]);
		return 1;
	}
        else if(GetPVarInt(playerid, "newuser") == 4)
        {
                if(clickedid == Text:INVALID_TEXT_DRAW) SelectTextDraw(playerid, 0x33AA33AA); //ESC
                if(clickedid == WelcomeTD[3])
                {
                        SetPlayerCameraPos(playerid, 1688.2356, -2324.4011, -3.1503);
                        SetPlayerCameraLookAt(playerid, 1687.4637, -2325.0359, -3.0903);
                        PlayAudioStreamForPlayer(playerid, "http://k005.kiwi6.com/hotlink/c4wjcpaedc/theme_song.mp3");
                SelectTextDraw(playerid, 0x33AA33AA);
                TogglePlayerControllable(playerid, true);
                        PlayerTextDrawHide(playerid, DataTD[playerid]);
                        TextDrawHideForPlayer(playerid, WelcomeTD[0]);
                        TextDrawHideForPlayer(playerid, WelcomeTD[1]);
                        TextDrawHideForPlayer(playerid, WelcomeTD[2]);
                        TextDrawHideForPlayer(playerid, WelcomeTD[3]);
                ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
                ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
                SetPVarInt(playerid, "newuser", 5);
            DestroyPickup(StarterPickupID[playerid]);
                        StarterPickupID[playerid] = CreatePickup(0, 1, 1682.913574, -2325.102539, -2.679687, GetPlayerVirtualWorld(playerid));
                //SetPlayerCheckpoint(playerid, 1682.913574, -2325.102539, -2.679687, 0.1);
                }
                return 1;
        }
        else if(GetPVarInt(playerid, "newuser") == 5 || GetPVarInt(playerid, "newuser") == 6 || GetPVarInt(playerid, "newuser") == 7 || GetPVarInt(playerid, "newuser") == 8
        || GetPVarInt(playerid, "newuser") == 9 || GetPVarInt(playerid, "newuser") == 10 || GetPVarInt(playerid, "newuser") == 11 || GetPVarInt(playerid, "newuser") == 12 || GetPVarInt(playerid, "newuser") == 13
        || GetPVarInt(playerid, "newuser") == 14 || GetPVarInt(playerid, "newuser") == 15 || GetPVarInt(playerid, "newuser") == 16 || GetPVarInt(playerid, "newuser") == 17 || GetPVarInt(playerid, "newuser") == 18)
        {
                if(clickedid == Text:INVALID_TEXT_DRAW) SelectTextDraw(playerid, 0x33AA33AA); //ESC
            return 1;
        }
        if(clickedid == ResetPassword)
    {
        new str[64];
        format(str, 64, "%s", PlayerInfo[playerid][email]);
        strdel(str, 3, strlen(str));
        strins(str, "********", 3);
                SendClientMessageEx(playerid, -1, "La contraseña está siendo enviada a su e-mail: %s", str);
                new string[256];
                format(string, 256, "gta-samp.es/rp/resetpassword.php?to=%s&user=%s&password=%s", PlayerInfo[playerid][email], PlayerNameNormal(playerid), PlayerInfo[playerid][passtext]);
                HTTP(playerid, HTTP_POST, string, " ", "ResetPasswordResponse");
        }
        if(clickedid == CerrarCreditos)
    {
        StopAudioStreamForPlayer(playerid);
        StopPlayerObject(playerid, CreditObject[playerid]);
                TextDrawHideForPlayer(playerid, CerrarCreditos);
            SetCameraBehindPlayer(playerid);
                SetPlayerFacingAngle(playerid, 0.0);
                CancelSelectTextDraw(playerid);
                new Float:x, Float:y, Float:z;
                x = 1153.070434;
                y = -2089.879882;
                z = 56.483135;
                SetPlayerObjectPos(playerid, CreditObject[playerid], x, y, z);
        }
        if(clickedid == CircularMenu[15]) //cuenta
        {
         for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[16]) //dni
        {
         for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[17]) //comandos
        {
        ShowPlayerDialog(playerid, Dialog_Comandos, DIALOG_STYLE_LIST, "Comandos" ,"chat\ngeneral\nlider\ntrabajo\ntelefono\ncasa\ncoche\npremium\nmatrimonio\narmas\nfamilia\nfaccion\npesca\nconcesionario", "Seleccionar "," Cancelar ");
        for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[18]) //ajustes
        {
          for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[19]) //info
        {
             for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[20]) //creditos
        {
         for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[21]) //lugares
        {
           for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
        else if(clickedid == CircularMenu[22]) //premios
        {
        for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        new string[250];
        format(string, 250, "Información general\nMédico\nTaxista\nGuardaespaldas\nCamionero\nPolicía\nFabricante de armas\nMecánico\nCosechador (Sin habilidad)\nBasurero (2 jugadores)\nTransportista\nLadrón\nMinero\nPescador\nLocutor de radio");
        ShowPlayerDialog(playerid,TRABAJOS, DIALOG_STYLE_LIST,"Trabajos:",string,"Aceptar","Salir");
        }
        else if(clickedid == CircularMenu[23]) //cerrar
        {

            for(new i = 0; i != 24; i++) TextDrawHideForPlayer(playerid, CircularMenu[i]);
        CancelSelectTextDraw(playerid);
        }
    return 1;
}

funcion AirportForPlayer(playerid)
{
        for(new i = 0; i < 32; i++) SendClientMessage(playerid, -1, " ");
    SendClientMessage(playerid, -1, "* {FF0000}Altavoz:   {FFFFFF}Señores pasajeros, les informamos de que el aterrizaje ha sido un éxito");
    SendClientMessage(playerid, -1, "                  pueden ir abandonando el avión, para pasar a la sala de equipajes");
    SendClientMessage(playerid, -1, " ");
    SendClientMessage(playerid, 0x3BED5FFF, "Ve a la puerta del avión [icono señalado en el mapa].");
    SetCameraBehindPlayer(playerid);
    TogglePlayerControllable(playerid, true);
        ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0);
        ApplyAnimation(playerid, "ped", "SEAT_up", 4.000000, 0, 0, 1, 0, 0);
        SetPlayerCheckpoint(playerid, 2.570822,32.948135,1199.593750, 0.5);
        return 1;
}

funcion FirstConversation(playerid, step)
{
        switch(step)
        {
            case 0: SendClientMessageEx(playerid, 0xC6BBBBFF, "%s dice (TLFN): ¿Hola?", PlayerName(playerid)), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation", 3000, false, "id", playerid, 1);
                case 1: SendClientMessageEx(playerid, 0x3BED5FFF, "Telefóno: Hola %s, te damos la bienvenida, y esperamos que disfrutes mucho.", PlayerName(playerid)), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation", 3000, false, "id", playerid, 2);
                case 2: SendClientMessageEx(playerid, 0xC6BBBBFF, "%s dice (TLFN): Gracias señor.", PlayerName(playerid)), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation", 3000, false, "id", playerid, 3);
                case 3: SendClientMessage(playerid, 0x3BED5FFF, "Telefóno: Aquí te dejamos algunos conceptos para que inicies en Sheedow City 2013."), VirtualTimers[playerid][12] = SetTimerEx("FirstConversation", 3000, false, "id", playerid, 4);
                case 4:
                {
                        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
                        RemovePlayerAttachedObject(playerid, 1);
                        SetPVarInt(playerid, "newuser", 9);
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OP");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OnPlayer~n~Quiere decir En el personaje~n~lo cual significa que es cuando se rolea~n~Ejemplo: \"Buenos días, señor\" ~n~~n~Los canales OP son: /s /g /me /do"));
                for(new i = 0; i < 15; i++) SendClientMessage(playerid, -1, " ");
                for(new i = 0; i < sizeof(Conceptos); i++) PlayerTextDrawShow(playerid, Conceptos[i][playerid]);
                SelectTextDraw(playerid, 0x33AA33AA);
                }
        }
        return 1;
}

funcion ClosePrisonDoor(doorid)
{
        switch(doorid)
        {
            case 0: MoveDynamicObject(PrisonDoors[0], 288.65009, 1411.56982, 11.88040, 2.5);
            case 1: MoveDynamicObject(PrisonDoors[1], 246.15010, 1411.56982, 11.88040, 2.5);
                case 2: MoveDynamicObject(PrisonDoors[2], 204.33009, 1411.56982, 11.88040, 2.5);
                case 3: MoveDynamicObject(PoliceDoor[1], 1589.34912, -1638.28577, 14.27757, 1.5, 0.00000, 0.00000, -90.00000);
                case 4: MoveDynamicObject(PoliceDoor[0], 1544.69873, -1630.80969, 13.10678-0.1, 0.03, 0.00000, 90.00000, 90.00000);
        }
        return 1;
}

funcion HospitalFinish(playerid)
{
    TogglePlayerControllable(playerid, true);
    SetCameraBehindPlayer(playerid);
    SendClientMessage(playerid, -1, "La recuperación fue un éxito, ten cuidado para la proxima.");
        return 1;
}

stock UserPath(playerid)
{
    new string[128], playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    format(string, sizeof(string), PATH, playername);
    return string;
}

stock IsPlayerNear(playerid, toplayerid, Float:distance)
{
        new Float:p[3];
        GetPlayerPos(toplayerid, p[0], p[1], p[2]);
        if(IsPlayerInRangeOfPoint(playerid, distance, p[0], p[1], p[2]))
        {
                return true;
        }
        else
        {
            return false;
        }
}

stock udb_hash(buf[]) /*Credits to Dracoblue*/
{
    new length=strlen(buf);
    new s1 = 1;
    new s2 = 0;
    new n;
    for (n=0; n<length; n++)
    {
       s1 = (s1 + buf[n]) % 65521;
       s2 = (s2 + s1)     % 65521;
    }
    return (s2 << 16) + s1;
}



stock IsValidName(name[])
{
        for(new c = 0; c < strlen(name); c++)
        {
            switch(name[c])
            {
                case 'A' .. 'Z', 'a' .. 'z', '_': continue;
                default: return false;
            }
        }
        return true;
}

stock PlayerName(playerid)
{
    new name[24];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
    new N[24];
    strmid(N, name, 0, strlen(name), 24);
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if (N [i] == '_') N[i] = ' ';
    }
    return N;
}

stock PlayerNameNormal(playerid)
{
    new name[24];
    GetPlayerName(playerid, name, MAX_PLAYER_NAME);
    return name;
}

SendPlayersMessage(Float:distancia, playerid, color, text[])
{
    new Float:pidx, Float:pidy, Float:pidz;
    new Float:ptox, Float:ptoy, Float:ptoz;
    new vwa = GetPlayerVirtualWorld(playerid);
    GetPlayerPos(playerid, pidx, pidy, pidz);
    for(new i = 0; i < GetMaxPlayers(); i++)
    {
        if(IsPlayerConnected(i))
        {
            new vwb = GetPlayerVirtualWorld(i);
            GetPlayerPos(i, ptox, ptoy, ptoz);
            if(vwb == vwa && floatcmp(distancia, floatabs(floatsub(pidx, ptox))) == 1 && floatcmp(distancia, floatabs(floatsub(pidy, ptoy))) == 1 && floatcmp(distancia, floatabs(floatsub(pidz, ptoz))) == 1) SendClientMessage(i, color, text);
        }
    }
    return 1;
}

stock SendClientMessageEx(playerid, colour, const fmat[],  va_args<>)
{
        new str[256];
        va_format(str, sizeof (str), fmat, va_start<3>);
        return (playerid != -1) ? SendClientMessage(playerid, colour, str) : SendClientMessageToAll(colour, str);
}

stock GetOriginalCity(playerid)
{
        new str[32];
        switch(PlayerInfo[playerid][origen])
        {
            case 0: str = "Europa";
            case 1: str = "Asia";
            case 2: str = "America";
        }
        return str;
}


stock simbolos(string[])
{
    new
        szFixed[1024],
        iPos,
        iLen;

    for (iLen = strlen(string); iPos < iLen; iPos ++)
    switch (string[iPos])
    {
        case 'à':   szFixed[iPos] = 151;
        case 'á':   szFixed[iPos] = 152;
        case 'â':   szFixed[iPos] = 153;
        case 'ä':   szFixed[iPos] = 154;
        case 'À':   szFixed[iPos] = 128;
        case 'Á':   szFixed[iPos] = 129;
        case 'Â':   szFixed[iPos] = 130;
        case 'Ä':   szFixed[iPos] = 131;
        case 'è':   szFixed[iPos] = 157;
        case 'é':   szFixed[iPos] = 158;
        case 'ê':   szFixed[iPos] = 159;
        case 'ë':   szFixed[iPos] = 160;
        case 'È':   szFixed[iPos] = 134;
        case 'É':   szFixed[iPos] = 135;
        case 'Ê':   szFixed[iPos] = 136;
        case 'Ë':   szFixed[iPos] = 137;
        case 'ì':   szFixed[iPos] = 161;
        case 'í':   szFixed[iPos] = 162;
        case 'î':   szFixed[iPos] = 163;
        case 'ï':   szFixed[iPos] = 164;
        case 'Ì':   szFixed[iPos] = 138;
        case 'Í':   szFixed[iPos] = 139;
        case 'Î':   szFixed[iPos] = 140;
        case 'Ï':   szFixed[iPos] = 141;
        case 'ò':   szFixed[iPos] = 165;
        case 'ó':   szFixed[iPos] = 166;
        case 'ô':   szFixed[iPos] = 167;
        case 'ö':   szFixed[iPos] = 168;
        case 'Ò':   szFixed[iPos] = 142;
        case 'Ó':   szFixed[iPos] = 143;
        case 'Ô':   szFixed[iPos] = 144;
        case 'Ö':   szFixed[iPos] = 145;
        case 'ù':   szFixed[iPos] = 169;
        case 'ú':   szFixed[iPos] = 170;
        case 'û':   szFixed[iPos] = 171;
        case 'ü':   szFixed[iPos] = 172;
        case 'Ù':   szFixed[iPos] = 146;
        case 'Ú':   szFixed[iPos] = 147;
        case 'Û':   szFixed[iPos] = 148;
        case 'Ü':   szFixed[iPos] = 149;
        case 'ñ':   szFixed[iPos] = 174;
        case 'Ñ':   szFixed[iPos] = 173;
        case '¡':   szFixed[iPos] = 64;
        case '¿':   szFixed[iPos] = 175;
        case '`':   szFixed[iPos] = 177;
        case '&':   szFixed[iPos] = 38;
        default:    szFixed[iPos] = string[iPos];
    }
    return szFixed;
}

stock ShowConceptPage(playerid, page)
{
        switch(page)
        {
            case 1:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OP");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OnPlayer~n~Quiere decir En el personaje~n~lo cual significa que es cuando se rolea~n~Ejemplo: \"Buenos días, señor\" ~n~~n~Los canales OP son: /s /g /me /do"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "1/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 2:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - OTP");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("OutPlayer~n~Quiere decir Fuera del personaje~n~lo cual significa que es cuando se habla de~n~la vida real~n~Ejemplo: \"Ayer llovió en mi ciudad\" ~n~~n~Los canales OTP son: /b"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "2/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 3:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - CC");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("ConfundirCanales~n~Esto pasa muy a menudo en los servidores~n~de rol pero es algo que hay que corregir~n~~n~Esto es confundir OP con OTP~n~Ejemplo de CC en OP: \"Está lloviendo\"~n~Cuando en realidad no llueve en el juego"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "3/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 4:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - DM/ASR");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("DM y ASR~n~En un servidor de rol, no puedes ir~n~matando personas (DM)~n~ni tampoco agrediéndolas (ASR) sin~n~ninguna razón"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "4/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 5:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - VM");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("Vengarse tras la muerte~n~Si alguien te mata (DM) con razón~n~después no puedes ir a vengarte~n~ya que al morir pierdes la memoria"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "5/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 6:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - RV");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("Robar vehículo~n~No puedes robar un vehículo sin rolearlo~n~~n~¡Si intentas robarlo sin rol, quedarás~n~congelado por 15 segundos!"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "6/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 7:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - PG");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("PowerGaming~n~Es hacer cosas que no se pueden ~n~hacer en la vida real.~n~EJ: te apuntan con un arma y sales~n~corriendo, sería PG~n~Nunca puedes hacer PG en el servidor~n~iSerás sancionado si lo haces!"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "7/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 8:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - AB");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("Abusar de un bug~n~Un bug es un error del juego~n~Si encuentras uno, reportalo pero no~n~abuses de él."));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "8/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 9:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - CHEATER");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("CHEATER~n~Por supuesto no use nunca ningún HACK~n~Nuestro sistema de protección le expulsara~n~del servidor para siempre (ban)"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "9/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
            case 10:
            {
                        PlayerTextDrawSetString(playerid, Conceptos[2][playerid], "Conceptos de ROL - FIN");
                        PlayerTextDrawSetString(playerid, Conceptos[3][playerid], simbolos("FIN~n~Final de la guía~n~ahora estás preparado para empezar.~n~Para escribir usa la tecla 'T'~n~~n~~n~iDiviértete!"));
                PlayerTextDrawSetString(playerid, Conceptos[6][playerid], "10/10");
                SetPVarInt(playerid, "newuser", page+8);
            }
        }
        return 1;
}

stock RemoveBuildings(playerid)
{
//job camionero
RemoveBuildingForPlayer(playerid, 3744, 2165.2969, -2317.5000, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3744, 2193.2578, -2286.2891, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 5305, 2198.8516, -2213.9219, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3747, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2165.2969, -2317.5000, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3578, 2165.0703, -2288.9688, 13.2578, 0.25);
RemoveBuildingForPlayer(playerid, 3574, 2193.2578, -2286.2891, 14.8125, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2204.6328, -2274.4141, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2212.0938, -2267.0703, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2219.4219, -2259.5234, 14.8828, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2226.9688, -2252.1406, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 3569, 2234.3906, -2244.8281, 14.9375, 0.25);
RemoveBuildingForPlayer(playerid, 5244, 2198.8516, -2213.9219, 14.8828, 0.25);

        //Ayunta alineado:
        RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
        RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
        RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
        RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
        RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
        RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
        RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
        RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
        RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
        RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
        RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
        RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
        RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
        RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
        RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
        RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
        RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
        RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
        RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
        RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
        RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
        RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
        RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
        RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
        RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
        // 24-7 (unity)
        RemoveBuildingForPlayer(playerid, 700, 1801.8828, -1817.3047, 13.3516, 0.25);
        //RemoveBuildingForPlayer(playerid, 1268, 1841.3359, -1836.4609, 18.5625, 0.25);
        RemoveBuildingForPlayer(playerid, 1226, 1825.9141, -1836.1875, 16.3203, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1834.3125, -1879.5547, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1839.5859, -1879.5547, 13.6797, 0.25);
//      RemoveBuildingForPlayer(playerid, 1259, 1841.3359, -1836.4609, 18.5625, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1844.8672, -1879.5547, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1850.1406, -1879.5547, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1855.4141, -1879.5547, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1879.9922, -1879.8906, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1885.2578, -1879.8984, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1864.1797, -1879.6641, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1869.4609, -1879.6641, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1874.7344, -1879.6641, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1890.5234, -1879.6641, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 1869.0547, -1876.6328, 11.5391, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1904.3750, -1879.7344, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1909.6563, -1879.7344, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1914.9297, -1879.7344, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1920.1953, -1879.9531, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1413, 1925.4609, -1879.9609, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1930.7188, -1879.7344, 13.6797, 0.25);
        RemoveBuildingForPlayer(playerid, 4983, 1961.0313, -1871.4063, 23.7734, 0.25);


        RemoveBuildingForPlayer(playerid, 17886, 2264.0391, -1789.2578, 20.7734, 0.25);
        RemoveBuildingForPlayer(playerid, 17887, 2343.6094, -1784.5078, 20.3125, 0.25);
        RemoveBuildingForPlayer(playerid, 17518, 2361.9375, -1699.9375, 15.9219, 0.25);

        //Playa de sville
        RemoveBuildingForPlayer(playerid, 620, 564.7813, -1777.8984, 4.2422, 0.25);
        RemoveBuildingForPlayer(playerid, 1368, 519.1797, -1765.5625, 14.1172, 0.25);
                //Ayunta by Otacon
        RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, -1.25);
        RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, -1.25);
        RemoveBuildingForPlayer(playerid, 4045, 1479.3359, -1802.2891, 12.5469, -1.25);
        RemoveBuildingForPlayer(playerid, 3997, 1479.3359, -1802.2891, 12.5469, -1.25);
        RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, -1.25);
        RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, -1.25);
            //plaza ayunta by otacon
        RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, -1.25);
        RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, -1.25);
        RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, -1.25);
        RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, -1.25);

    //-----removed building from los santos mall
    RemoveBuildingForPlayer(playerid, 6130, 1117.5859, -1490.0078, 32.7188, -1.25);
    RemoveBuildingForPlayer(playerid, 6255, 1117.5859, -1490.0078, 32.7188, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1128.7344, -1518.4922, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1144.3984, -1512.7891, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1152.3828, -1502.5391, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1467.4688, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1467.4688, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1456.4375, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1456.4375, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1445.1016, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1445.1016, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1139.9219, -1434.0703, 15.2109, -1.25);
    RemoveBuildingForPlayer(playerid, 792, 1118.0156, -1434.0703, 15.2109, -1.25);

    //prsioón
    RemoveBuildingForPlayer(playerid, 3682, 247.9297, 1461.8594, 33.4141, 0.25);
        RemoveBuildingForPlayer(playerid, 3682, 192.2734, 1456.1250, 33.4141, 0.25);
        RemoveBuildingForPlayer(playerid, 3682, 199.7578, 1397.8828, 33.4141, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1356.9922, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1356.9922, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1392.1563, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1392.1563, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 166.7891, 1426.9141, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1426.9141, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3288, 221.5703, 1374.9688, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 212.0781, 1426.0313, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 218.2578, 1467.5391, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1435.1953, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1410.5391, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1385.8906, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3291, 246.5625, 1361.2422, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 190.9141, 1371.7734, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 183.7422, 1444.8672, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 222.5078, 1444.6953, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 221.1797, 1390.2969, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3288, 223.1797, 1421.1875, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 133.7422, 1459.6406, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 207.5391, 1371.2422, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3424, 220.6484, 1355.1875, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3424, 221.7031, 1404.5078, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3424, 210.4141, 1444.8438, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3424, 262.5078, 1465.2031, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3259, 220.6484, 1355.1875, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1356.9922, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1356.9922, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 190.9141, 1371.7734, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1392.1563, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1392.1563, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 207.5391, 1371.2422, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 10.1172, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1392.1563, 16.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 205.6484, 1394.1328, 23.7813, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1390.5703, 19.1484, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1387.8516, 27.4922, 0.25);
        RemoveBuildingForPlayer(playerid, 3673, 199.7578, 1397.8828, 33.4141, 0.25);
        RemoveBuildingForPlayer(playerid, 3257, 221.5703, 1374.9688, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 221.1797, 1390.2969, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 203.9531, 1409.9141, 16.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3674, 199.3828, 1407.1172, 35.8984, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 204.6406, 1409.8516, 11.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1404.2344, 18.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 206.5078, 1400.6563, 22.4688, 0.25);
        RemoveBuildingForPlayer(playerid, 3259, 221.7031, 1404.5078, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 207.3594, 1409.0000, 19.7578, 0.25);
        RemoveBuildingForPlayer(playerid, 3257, 223.1797, 1421.1875, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 212.0781, 1426.0313, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 166.7891, 1426.9141, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1426.9141, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1361.2422, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1385.8906, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1410.5391, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 183.7422, 1444.8672, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3259, 210.4141, 1444.8438, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 222.5078, 1444.6953, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 16086, 232.2891, 1434.4844, 13.5000, 0.25);
        RemoveBuildingForPlayer(playerid, 3673, 192.2734, 1456.1250, 33.4141, 0.25);
        RemoveBuildingForPlayer(playerid, 3674, 183.0391, 1455.7500, 35.8984, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 133.7422, 1459.6406, 17.0938, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 10.1172, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 198.0000, 1462.0156, 16.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 196.0234, 1462.0156, 23.7813, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 180.2422, 1460.3203, 16.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 180.3047, 1461.0078, 11.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 218.2578, 1467.5391, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 199.5859, 1463.7266, 19.1484, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 181.1563, 1463.7266, 19.7578, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 185.9219, 1462.8750, 18.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 202.3047, 1462.8750, 27.4922, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 189.5000, 1462.8750, 22.4688, 0.25);
        RemoveBuildingForPlayer(playerid, 3255, 246.5625, 1435.1953, 9.6875, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1451.8281, 27.4922, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 23.7813, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1454.5469, 19.1484, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1456.1328, 16.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 253.8203, 1458.1094, 10.1172, 0.25);
        RemoveBuildingForPlayer(playerid, 3259, 262.5078, 1465.2031, 9.5859, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1468.2109, 18.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 3673, 247.9297, 1461.8594, 33.4141, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 254.6797, 1464.6328, 22.4688, 0.25);
        RemoveBuildingForPlayer(playerid, 3674, 247.5547, 1471.0938, 35.8984, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 255.5313, 1472.9766, 19.7578, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 252.8125, 1473.8281, 11.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 252.1250, 1473.8906, 16.2969, 0.25);
        RemoveBuildingForPlayer(playerid, 16089, 342.1250, 1431.0938, 5.2734, 0.25);
        RemoveBuildingForPlayer(playerid, 16090, 315.7734, 1431.0938, 5.2734, 0.25);
        RemoveBuildingForPlayer(playerid, 16091, 289.7422, 1431.0938, 5.2734, 0.25);
        RemoveBuildingForPlayer(playerid, 16087, 358.6797, 1430.4531, 11.6172, 0.25);
        RemoveBuildingForPlayer(playerid, 16088, 368.4297, 1431.0938, 5.2734, 0.25);
        RemoveBuildingForPlayer(playerid, 16092, 394.1563, 1431.0938, 5.2734, 0.25);

        //mecanico taller
        RemoveBuildingForPlayer(playerid, 1215, 1195.3594, -1820.2734, 13.1406, 0.25);
        RemoveBuildingForPlayer(playerid, 3244, 2632.3906, -2073.6406, 12.7578, 0.25);
        RemoveBuildingForPlayer(playerid, 3244, 2535.0938, -2131.8750, 12.9922, 0.25);
        RemoveBuildingForPlayer(playerid, 3244, 2532.0313, -2074.6250, 12.9922, 0.25);
        RemoveBuildingForPlayer(playerid, 3682, 2673.0859, -2114.9063, 36.5469, 0.25);
        RemoveBuildingForPlayer(playerid, 3683, 2684.7656, -2088.0469, 20.1172, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 2484.4141, -2141.0078, 12.1875, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 2496.0625, -2141.0078, 12.1875, 0.25);
        RemoveBuildingForPlayer(playerid, 3289, 2679.2344, -2106.9766, 12.5391, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 2503.1250, -2073.3750, 12.4297, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 2515.4219, -2073.3750, 12.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 2647.1016, -2073.3750, 12.4453, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 2658.7188, -2073.3750, 12.4453, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 2671.5000, -2073.3750, 12.4453, 0.25);
        RemoveBuildingForPlayer(playerid, 3288, 2432.7266, -2133.0234, 12.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 3686, 2448.1328, -2075.6328, 16.0469, 0.25);
        RemoveBuildingForPlayer(playerid, 3745, 2475.1016, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3745, 2482.0234, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3745, 2489.1016, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3745, 2496.0938, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3290, 2452.9609, -2129.0156, 25.2734, 0.25);
        RemoveBuildingForPlayer(playerid, 3756, 2484.2344, -2118.5547, 17.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 3755, 2484.2344, -2118.5547, 17.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 3779, 2631.9141, -2098.5781, 20.0078, 0.25);
        RemoveBuildingForPlayer(playerid, 3779, 2653.9375, -2092.3359, 20.0078, 0.25);
        RemoveBuildingForPlayer(playerid, 3257, 2432.7266, -2133.0234, 12.4531, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 2484.4141, -2141.0078, 12.1875, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 2496.0625, -2141.0078, 12.1875, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 2452.9609, -2129.0156, 25.2734, 0.25);
        RemoveBuildingForPlayer(playerid, 3567, 2446.8281, -2075.8438, 13.2578, 0.25);
        RemoveBuildingForPlayer(playerid, 3567, 2438.3594, -2075.8438, 13.2578, 0.25);
        RemoveBuildingForPlayer(playerid, 3627, 2448.1328, -2075.6328, 16.0469, 0.25);
        RemoveBuildingForPlayer(playerid, 3643, 2489.1016, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3643, 2482.0234, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3643, 2475.1016, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3643, 2496.0938, -2073.4766, 17.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 2515.4219, -2073.3750, 12.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 2503.1250, -2073.3750, 12.4297, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2663.0547, -2121.6563, 30.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2665.7734, -2122.5078, 22.2813, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2667.3594, -2120.7969, 19.4297, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2669.3359, -2120.7969, 26.9141, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2669.3359, -2120.7969, 13.2500, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2679.4375, -2121.6563, 21.4297, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2675.8594, -2121.6563, 25.6016, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2684.2031, -2122.5078, 22.8906, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2685.0547, -2119.7891, 14.5391, 0.25);
        RemoveBuildingForPlayer(playerid, 3675, 2685.1172, -2119.1016, 19.4297, 0.25);
        RemoveBuildingForPlayer(playerid, 3637, 2631.9141, -2098.5781, 20.0078, 0.25);
        RemoveBuildingForPlayer(playerid, 3637, 2653.9375, -2092.3359, 20.0078, 0.25);
        RemoveBuildingForPlayer(playerid, 3673, 2673.0859, -2114.9063, 36.5469, 0.25);
        RemoveBuildingForPlayer(playerid, 3258, 2679.2344, -2106.9766, 12.5391, 0.25);
        RemoveBuildingForPlayer(playerid, 3674, 2682.3203, -2114.5313, 39.0313, 0.25);
        RemoveBuildingForPlayer(playerid, 3636, 2684.7656, -2088.0469, 20.1172, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 2647.1016, -2073.3750, 12.4453, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 2658.7188, -2073.3750, 12.4453, 0.25);
        RemoveBuildingForPlayer(playerid, 3256, 2671.5000, -2073.3750, 12.4453, 0.25);
        //RemoveBuildingForPlayer(playerid, 1311, 2234.7500, -1737.4766, 16.5547, 0.25);
        RemoveBuildingForPlayer(playerid, 1307, 2263.5234, -1742.1953, 12.7500, 0.25);
        RemoveBuildingForPlayer(playerid, 1307, 2295.7031, -1742.1953, 12.7500, 0.25);
        RemoveBuildingForPlayer(playerid, 1307, 2331.2656, -1742.4141, 12.7500, 0.25);
        RemoveBuildingForPlayer(playerid, 1307, 2364.2500, -1742.1172, 12.7500, 0.25);
        RemoveBuildingForPlayer(playerid, 1307, 2403.2891, -1741.7422, 12.7500, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2367.6016, -1706.2891, 11.2891, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2375.0625, -1715.7969, 11.2891, 0.25);
        RemoveBuildingForPlayer(playerid, 641, 2379.1484, -1715.4219, 10.0313, 0.25);
        RemoveBuildingForPlayer(playerid, 17876, 2393.0625, -1677.5234, 20.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1190.3047, -1389.8047, 15.5000, 0.25);

        //  Gasolinera (al lado de alhambra)
        RemoveBuildingForPlayer(playerid, 4983, 1961.0313, -1871.4063, 23.7734, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 1952.0313, -1801.0156, 11.7188, 0.25);
        RemoveBuildingForPlayer(playerid, 1524, 1910.1641, -1779.6641, 18.7500, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 1831.4688, -1798.2031, 12.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 1867.7188, -1798.2031, 12.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 1904.0703, -1797.5313, 12.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1917.3203, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1912.0547, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1906.7734, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1927.8516, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1922.5859, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1938.3906, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1933.1250, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 5681, 1921.4844, -1778.9141, 18.5781, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1821.1250, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1815.8594, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1810.5938, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1805.3281, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 1949.8750, -1798.2031, 12.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1948.9844, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1943.6875, -1797.4219, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1800.0625, 13.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1226, 1955.6641, -1793.0938, 16.3906, 0.25);

        // Pizzería (LS)
        RemoveBuildingForPlayer(playerid, 1226, 2085.7500, -1809.7031, 16.4063, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 2091.1641, -1826.8359, 12.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 712, 2100.8125, -1764.3750, 21.3906, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2105.0859, -1765.6094, 10.8047, 0.25);
                //Parking subterraneo 01.
        RemoveBuildingForPlayer(playerid, 4135, 1723.5625, -1788.5547, 6.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 3982, 1723.5625, -1788.5547, 6.8125, 0.25);
        //Estación de autobuses
        RemoveBuildingForPlayer(playerid, 5207, 2167.0391, -1925.2031, 15.8281, 0.25);
        RemoveBuildingForPlayer(playerid, 5208, 2115.0000, -1921.5234, 15.3906, 0.25);
        RemoveBuildingForPlayer(playerid, 3744, 2159.8281, -1930.6328, 15.0781, 0.25);
        RemoveBuildingForPlayer(playerid, 3770, 2197.9766, -1970.5625, 14.0000, 0.25);
        RemoveBuildingForPlayer(playerid, 3626, 2197.9766, -1970.5625, 14.0000, 0.25);
        RemoveBuildingForPlayer(playerid, 3567, 2142.9141, -1947.4219, 13.2656, 0.25);
        RemoveBuildingForPlayer(playerid, 1226, 2118.2891, -1939.3984, 16.3906, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2114.5547, -1928.1875, 5.0313, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2113.3984, -1925.0391, 10.8047, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2115.6719, -1922.7656, 10.8047, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2123.3594, -1928.0703, 6.8438, 0.25);
        RemoveBuildingForPlayer(playerid, 3574, 2159.8281, -1930.6328, 15.0781, 0.25);
        RemoveBuildingForPlayer(playerid, 5181, 2167.0391, -1925.2031, 15.8281, 0.25);
        RemoveBuildingForPlayer(playerid, 5182, 2115.0000, -1921.5234, 15.3906, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2122.6563, -1916.7891, 10.8047, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2116.9297, -1916.0781, 10.8047, 0.25);
        RemoveBuildingForPlayer(playerid, 5231, 2085.2813, -1909.7109, 23.0000, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2121.5078, -1909.5313, 10.8047, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2084.5313, -1905.4922, 15.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2092.9141, -1891.3750, 15.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1226, 2101.2578, -1900.1797, 16.3906, 0.25);
        RemoveBuildingForPlayer(playerid, 620, 2110.2734, -1906.5859, 5.0313, 0.25);
        RemoveBuildingForPlayer(playerid, 1308, 2175.7734, -1910.5781, 12.7031, 0.25);
        RemoveBuildingForPlayer(playerid, 1226, 2134.6016, -1900.4063, 16.3906, 0.25);
        RemoveBuildingForPlayer(playerid, 1307, 2139.1641, -1904.2734, 12.7656, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2207.4297, -1897.1172, 15.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2229.9688, -1891.3750, 15.8125, 0.25);
        //Unity station
        RemoveBuildingForPlayer(playerid, 5033, 1745.2031, -1882.8516, 26.1406, 0.25);
        RemoveBuildingForPlayer(playerid, 5055, 1745.2031, -1882.8516, 26.1406, 0.25);
        RemoveBuildingForPlayer(playerid, 955, 1729.7891, -1943.0469, 12.9453, 0.25);
        RemoveBuildingForPlayer(playerid, 4853, 1736.9766, -1960.6563, 15.0547, 0.25);
        RemoveBuildingForPlayer(playerid, 963, 1747.0391, -1942.6641, 13.6094, 0.25);
        RemoveBuildingForPlayer(playerid, 962, 1757.1484, -1942.6563, 13.6094, 0.25);
        RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
        RemoveBuildingForPlayer(playerid, 5083, 1748.8438, -1883.0313, 14.1875, 0.25);
        RemoveBuildingForPlayer(playerid, 1226, 1806.4297, -1901.8281, 16.3750, 0.25);

        //pasos de peatones madafacka
        RemoveBuildingForPlayer(playerid, 1283, 1174.1016, -1835.5000, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1411.2188, -1872.9297, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1405.1563, -1871.6016, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1373.4609, -1872.2266, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1388.3906, -1855.6719, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1427.3047, -1890.2891, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1442.9375, -1871.4219, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1518.8047, -1873.3828, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1530.8828, -1883.2344, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1553.9844, -1873.0703, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1539.9297, -1871.6406, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1585.6797, -1871.6719, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1688.9141, -1826.5078, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1690.0938, -1796.8516, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1702.9141, -1813.1094, 15.6250, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1948.2344, -1931.6641, 15.5078, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1975.6953, -1933.0781, 15.5078, 0.25);
        RemoveBuildingForPlayer(playerid, 1283, 1962.1953, -1919.2266, 15.5547, 0.25);
        RemoveBuildingForPlayer(playerid, 5084, 1898.3984, -1913.4063, 20.8203, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2084.5313, -1905.4922, 15.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2092.9141, -1891.3750, 15.8125, 0.25);
        RemoveBuildingForPlayer(playerid, 1315, 2078.6328, -1883.3281, 15.8125, 0.25);
        //valla
        RemoveBuildingForPlayer(playerid, 4230, 1597.9063, -1699.7500, 30.2109, 0.25);
        return 1;
}

funcion UnJail(playerid)
{
        SetPlayerInterior(playerid, 0);
    SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
    PlayerInfo[playerid][jailminutes] = 0;
        PlayerInfo[playerid][carcel] = false;
    SendClientMessage(playerid, 0xAFAFAFFF, "Ya has cumplido tu condena, estás en libertad de nuevo.");
        return 1;
}

funcion UpdateServer()
{
        if(ServerTime == 23) ServerTime = -1;
        ServerTime ++;
        SetWorldTime(ServerTime);
        return 1;
}

funcion ResetPasswordResponse(index, response_code, data[])
{
    if(response_code == 200)
    {
        SendClientMessage(index, -1, "{00FF00}La contraseña fue enviada a su email. Revise su correo eléctronico (si no aparece, busque en Correo no deseado)");
                CancelSelectTextDraw(index);
                ShowPlayerDialog(index, -1, 0, " ", " ", " ", " ");
                TextDrawHideForPlayer(index, ResetPassword);
                VirtualTimers[index][0] = SetTimerEx("KickPlayer", 500, false, "i", index);
        }
    else
    {
        SendClientMessage(index, -1, "{FF0000}La contraseña no pudo ser enviada por algún motivo, contacte con la Admnistración si el problema persiste.");
    }
    return 1;
}

stock EmailAvaliable(femail[])
{
        new str[128];
        format(str, 128, "/SheedowData/emails/%s.ini", femail);
        if(fexist(str))
        {
            return false;
        }
        else
        {
            return true;
        }
}

stock GoodMoney(playerid, money)
{
        if(GetPlayerMoney(playerid) >= money)
        {
            return true;
        }
        else
        {
            return false;
        }
}

stock SetPlayerMoney(playerid, money) {
        ResetPlayerMoney(playerid);
        return GivePlayerMoney(playerid, money);
}

stock MensajeAtencion(playerid, text[]) {
        new s[256]; format(s, sizeof(s), "{FF0000}[ATENCIÓN]{FFFFFF} %s", text);
        return SendClientMessage(playerid, -1, s);
}


stock MensajeError(playerid, text[]) {
        new s[256]; format(s, sizeof(s), "{FF0000}[ERROR]{FFFFFF} %s", text);
        return SendClientMessage(playerid, -1, s);
}

funcion TimerClear(playerid) return ClearAnimations(playerid,1);
funcion TimerFall(playerid) {
        ApplyAnimation(playerid,"KNIFE","knife_hit_3",4.1,0,1,1,0,0,1);
        TogglePlayerControllable(playerid, false);
        VirtualTimers[playerid][13] = SetTimerEx("Descongelar", 3000, 0, "i", playerid);
        return 1;
}

funcion ShowLTPolice(playerid)
{
SelectTextDraw(playerid,0x33AA33AA);
PlayerTextDrawShow(playerid,LTPolice0[playerid]); PlayerTextDrawShow(playerid,LTPolice1[playerid]);
PlayerTextDrawShow(playerid,LTPolice2[playerid]);PlayerTextDrawShow(playerid,LTPolice3[playerid]);
PlayerTextDrawShow(playerid,LTPolice4[playerid]);PlayerTextDrawShow(playerid,LTPolice5[playerid]);
PlayerTextDrawShow(playerid,LTPolice7[playerid]);
return 1;
}

funcion HideLTPolice(playerid)
{
CancelSelectTextDraw(playerid);
PlayerTextDrawHide(playerid,LTPolice0[playerid]);PlayerTextDrawHide(playerid,LTPolice1[playerid]);
PlayerTextDrawHide(playerid,LTPolice2[playerid]);PlayerTextDrawHide(playerid,LTPolice3[playerid]);
PlayerTextDrawHide(playerid,LTPolice4[playerid]);PlayerTextDrawHide(playerid,LTPolice5[playerid]);
PlayerTextDrawHide(playerid,LTPolice7[playerid]);
return 1;
}

forward Descongelar(playerid);
funcion Descongelar(playerid) {
    Tased[playerid] = 0;
        TogglePlayerControllable(playerid, true);
        return 1;
}
funcion GetClosestPlayer(p1)
{
    new x,Float:dis,Float:dis2,player;
    player = -1;
    dis = 99999.99;
    for (x=0;x<GetMaxPlayers();x++)
    {
        if(IsPlayerConnected(x))
        {
            if(x != p1)
            {
                dis2 = GetDistanceBetweenPlayers(x,p1);
                if(dis2 < dis && dis2 != -1.00)
                {
                    dis = dis2;
                    player = x;
                }
            }
        }
    }
    return player;
}

funcion Float:GetDistanceBetweenPlayers(p1,p2)
{
    new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
    if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
    {
        return -1.00;
    }
    GetPlayerPos(p1,x1,y1,z1);
    GetPlayerPos(p2,x2,y2,z2);
    return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

funcion OnVehicleCreate(vehicleid, modelid, Float:spawn_x, Float:spawn_y, Float:spawn_z, Float:anglev, color1, color2, respawn_delay)
{
        KeyCarCode[vehicleid] = codecarkey;
        codecarkey++;
        return 1;
}

stock GetKeyCarCode(vehicleid)
{
        return KeyCarCode[vehicleid];
}

stock IsKeyCarCodeCorect(playerid, vehicleid)
{
        if(GetKeyCarCode(vehicleid) == PlayerInfo[playerid][KeyCar1] || GetKeyCarCode(vehicleid) == PlayerInfo[playerid][KeyCar2] || GetKeyCarCode(vehicleid) == PlayerInfo[playerid][KeyCar3])
        {
            return true;
        }
        else
        {
            return false;
        }
}

stock Esuncamionn1(vehicleid)
{
        if(vehicleid >= Camionn1ST && vehicleid <= Camionn1END)
        {
            return true;
        }
        else
        {
                return false;
        }
}
stock IsPoliceCar(vehicleid)
{
        if(vehicleid >= VehiclePoliceST && vehicleid <= VehiclePoliceEND)
        {
            return true;
        }
        else
        {
                return false;
        }
}

stock IsBusCar(vehicleid)
{
        if(vehicleid >= VehicleBusST && vehicleid <= VehicleBusEND)
        {
            return true;
        }
        else
        {
                return false;
        }
}

stock IsAFamilyCar(vehicleid)
{
        if(vehicleid >= VehiclePoliceST && vehicleid <= VehiclePoliceEND)
        {
            return FACCION_PLC;
        }
        else if(vehicleid >= VehicleBusST && vehicleid <= VehicleBusEND)
        {
            return EMPLEO_BUS;
        }
        else
        {
                return false;
        }
}

stock IsPlayerMoving(playerid)
{
    new Float:Velocity[3];
        GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
        if(Velocity[0] != 0.0 && Velocity[1] != 0.0)
        {
            return true;
        }
        else
        {
            return false;
        }
}

stock EnviarDuda(playerid, msg[])
{
        new str[145];
        format(str, 145, "{0000FF}[Canal de dudas]{FFFFFF} %s(%d): %s", PlayerName(playerid), playerid, msg);
        for(new i = 0; i != GetMaxPlayers(); i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[playerid][DudeChannel] == 1)
                {
                                SendClientMessage(i, 0x3366CCFF, str);
                        }
                }
        }
        return 1;
}

stock RemovePlayerFromVehicleEx(playerid)
{
        if(IsPlayerInAnyVehicle(playerid))
        {
                RemovePlayerFromVehicle(playerid);
                VirtualTimers[playerid][15] = SetTimerEx("ComprobarVehiculo", 500, false, "i", playerid);
        }
        return 1;
}

forward ComprobarVehiculo(playerid);
funcion ComprobarVehiculo(playerid)
{
    if(IsPlayerInAnyVehicle(playerid))
        {
            new Float:pp[3];
                GetPlayerPos(playerid, pp[0], pp[1], pp[2]);
                SetPlayerPos(playerid, pp[0], pp[1], pp[2]+1.5);
        }
        return 1;
}

// New Clan Role Play 2013.
/* Cosas por hacer
podes unirte todos los jobs
testetar que ande bien los jobs
por ahora terminar eso*/

